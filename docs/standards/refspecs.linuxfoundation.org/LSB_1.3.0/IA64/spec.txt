Linux Standard Base Specification for the ItaniumTM Architecture 1.3

Copyright © 2002 Free Standards Group

Permission is granted to copy, distribute and/or modify this document under the
terms of the GNU Free Documentation License, Version 1.1; with no Invariant
Sections, with no Front-Cover Texts, and with no Back-Cover Texts. A copy of
the license is included in the section entitled "GNU Free Documentation
License".

Portions of the text were taken from other copyrighted documents in accordance
with the respective licenses of those documents.

Linux is a trademark of Linus Torvalds.

UNIX a registered trademark of the Open Group in the United States and other
countries.

LSB is a trademark of the Free Standards Group in the USA and other countries.

Intel386 and Itanium are trademarks of Intel Corporation.

OpenGL is a registered trademark of Silicon Graphics, Inc.

-------------------------------------------------------------------------------

Table of Contents
I. Introduction
   
    1. Introduction
       
        Introduction
        Purpose
        Related Standards
        Relevant Libraries
        How to Use this Standard
        Definitions
        Terminology
       
II. Low Level System Information
   
    2. Machine Interface
       
        Processor Architecture
        Data Representation
       
    3. Function Calling Sequence
       
        CPU Registers
        Floating Point Registers
        Stack Frame
        Arguments
        Return Values
       
    4. Operating System Interface
       
        Processor Execution Mode
        Exception Interface
        Signal Delivery
       
    5. Process Initialization
       
        Special Registers
        Process Stack (on entry)
        Auxiliary Vector
        Environment
       
    6. Coding Examples
       
        Code Model Overview/Architecture Constraints
        Position-Independent Function Prologue
        Data Objects
        Function Calls
        Branching
       
    7. C Stack Frame
       
        Variable Argument List
        Dynamic Allocation of Stack Space
       
    8. Debug Information
   
III. Object Format
   
    9. ELF Header
       
        Machine Information
       
    10. Sections
       
        Special Sections
        Linux Special Sections
        Section Types
        Section Attribute Flags
        Special Section Types
       
    11. Symbol Table
    12. Relocation
       
        Relocation Types
       
IV. Program Loading and Dynamic Linking
   
    13. Program Header
       
        Types
        Flags
       
    14. Program Loading
    15. Dynamic Linking
       
        Program Interpreter/Dynamic Linker
        Dynamic Section
        Global Offset Table
        Shared Object Dependencies
        Function Addresses
        Procedure Linkage Table
        Initialization and Termination Functions
       
V. Base Libraries
   
    16. Libraries
       
        Interfaces for libc
        Data Definitions for libc
        Interfaces for libm
        Data Definitions for libm
        Interfaces for libpthread
        Data Definitions for libpthread
        Interfaces for libdl
        Data Definitions for libdl
        Interfaces for libcrypt
        Data Definitions for libcrypt
       
VI. Package Format and Installation
   
    17. Software Installation
       
        Package Architecture Considerations
       
A. Alphabetical Listing of Interfaces
B. GNU Free Documentation License
   
    PREAMBLE
    APPLICABILITY AND DEFINITIONS
    VERBATIM COPYING
    COPYING IN QUANTITY
    MODIFICATIONS
    COMBINING DOCUMENTS
    COLLECTIONS OF DOCUMENTS
    AGGREGATION WITH INDEPENDENT WORKS
    TRANSLATION
    TERMINATION
    FUTURE REVISIONS OF THIS LICENSE
    How to use this License for your documents
   
C. Build Environment
   
    Introduction
    Build Environment
       
        Pre-Defined Preprocessor Symbols
        Pre-Defined Preprocessor Assertions
        Compiler Pragmas
       
    ILP32 ABI
    Synchronization Primitives
    Thread-Local Storage
   
List of Tables
1-1. Related Standards
1-2. Standard Library Names
2-1. Scalar Types
9-1. Additional Processor-Specific Flags
10-1. ELF Special Sections
10-2. Additional Special Sections
16-1. libc Definition
16-2. libc - RPC Function Interfaces
16-3. libc - System Calls Function Interfaces
16-4. libc - System Calls Deprecated Function Interfaces
16-5. libc - Standard I/O Function Interfaces
16-6. libc - Standard I/O Deprecated Function Interfaces
16-7. libc - Standard I/O Data Interfaces
16-8. libc - Signal Handling Function Interfaces
16-9. libc - Signal Handling Data Interfaces
16-10. libc - Localization Functions Function Interfaces
16-11. libc - Localization Functions Deprecated Function Interfaces
16-12. libc - Localization Functions Data Interfaces
16-13. libc - Socket Interface Function Interfaces
16-14. libc - Wide Characters Function Interfaces
16-15. libc - String Functions Function Interfaces
16-16. libc - IPC Functions Function Interfaces
16-17. libc - Regular Expressions Function Interfaces
16-18. libc - Regular Expressions Data Interfaces
16-19. libc - Character Type Functions Function Interfaces
16-20. libc - Character Type Functions Data Interfaces
16-21. libc - Time Manipulation Function Interfaces
16-22. libc - Time Manipulation Data Interfaces
16-23. libc - Terminal Interface Functions Function Interfaces
16-24. libc - System Database Interface Function Interfaces
16-25. libc - System Database Interface Deprecated Function Interfaces
16-26. libc - Language Support Function Interfaces
16-27. libc - Large File Support Function Interfaces
16-28. libc - Large File Support Deprecated Function Interfaces
16-29. libc - Standard Library Function Interfaces
16-30. libc - Standard Library Data Interfaces
16-31. libm Definition
16-32. libm - Math Function Interfaces
16-33. libm - Math Data Interfaces
16-34. libpthread Definition
16-35. libpthread - Posix Threads Function Interfaces
16-36. libdl Definition
16-37. libcrypt Definition
C-1. Pre-Defined Preprocessor Symbols
C-2. Intrinsic Functions

List of Figures
2-1. Structure Smaller Than A Word
2-2. No Padding
2-3. Internal and Tail Padding
2-4. Bit-Field Ranges

I. Introduction

Table of Contents
1. Introduction

-------------------------------------------------------------------------------

Chapter 1. Introduction

Introduction

This is version 1.3 of the Linux Standard Base Specification for the ItaniumTM
Architecture. An implementation of this version of the specification may not
claim to be an implementation of the Linux Standard Base unless it has
successfully completed the compliance process as defined by the Free Standards
Group.

-------------------------------------------------------------------------------

Purpose

The Linux Standard Base (LSB) defines a system interface for compiled
applications and a minimal environment for support of installation scripts. Its
purpose is to enable a uniform industry standard environment for high-volume
applications conforming to the LSB.

The LSB defines a binary interface for application programs that are compiled
and packaged for LSB-conforming implementations on many different hardware
architectures. Since a binary specification must include information specific
to the computer processor architecture for which it is intended, it is not
possible for a single document to specify the interface for all possible
LSB-conforming implementations. Therefore, the LSB is a family of
specifications, rather than a single one.

The LSB is composed of two basic parts: A common part of the specification
describes those parts of the interface that remain constant across all hardware
implementations of the LSB, and an architecture-specific part of the
specification describes the parts of the specification that are specific to a
particular processor architecture. Together, the generic LSB and the
architecture-specific supplement for a single hardware architecture provide a
complete interface specification for compiled application programs on systems
that share a common hardware architecture.

This document is the architecture-specific supplement. It must be used in
conjunction with the generic LSB. This document provides architecture-specific
information that supplements the generic LSB as well as additional information
that is not found in the generic LSB.

This document should be used in conjunction with the documents it references.
This document enumerates the system components it includes, but descriptions of
those components may be included entirely or partly in this document, partly in
other documents, or entirely in other reference documents. For example, the
section that describes system service routines includes a list of the system
routines supported in this interface, formal declarations of the data
structures they use that are visible to applications, and a pointer to the
underlying referenced specification for information about the syntax and
semantics of each call. Only those routines not described in standards
referenced by this document, or extensions to those standards, are described in
the detail. Information referenced in this way is as much a part of this
document as is the information explicitly included here.

-------------------------------------------------------------------------------

Related Standards

The specifications listed below are referenced in whole or in part by the Linux
Standard Base. Such references may be normative or non-normative; a reference
to specification shall only be considered normative if it is explicitly cited
as such. The LSB may make normative references to a portion of these
specifications (that is, to define a specific function or group of functions);
in such cases, only the explicitly referenced portion of the specification is
to be considered normative.

Table 1-1. Related Standards

+-----------------------------------------------------------------------------+
|System V Application Binary Interface - DRAFT -|http://www.caldera.com/      |
|22 June 2000                                   |developers/gabi/2000-07-17/  |
|                                               |contents.html                |
|-----------------------------------------------+-----------------------------|
|DWARF Debugging Information Format, Revision   |                             |
|2.0.0 (July 27, 1993)                          |                             |
|-----------------------------------------------+-----------------------------|
|Filesystem Hierarchy Standard (FHS) 2.2        |http://www.pathname.com/fhs/ |
|-----------------------------------------------+-----------------------------|
|IEEE Standard for Binary Floating-Point        |http://www.ieee.org/         |
|Arithmetic                                     |                             |
|-----------------------------------------------+-----------------------------|
|System V Application Binary Interface, Edition |http://www.caldera.com/      |
|4.1                                            |developers/devspecs/         |
|                                               |gabi41.pdf                   |
|-----------------------------------------------+-----------------------------|
|Intel® Itanium TM Processor-specific           |http://developer.intel.com/  |
|Application Binary Interface                   |design/itanium/downloads/    |
|                                               |245370.htm                   |
|-----------------------------------------------+-----------------------------|
|Itanium TM Software Conventions & Runtime      |http://developer.intel.com/  |
|Architecture Guide                             |design/itanium/downloads/    |
|                                               |24535803s.htm                |
|-----------------------------------------------+-----------------------------|
|Itanium TM Architecture Software Developer's   |http://developer.intel.com/  |
|Manual Volume 1: Application Architecture      |design/itanium/downloads/    |
|                                               |24531703s.htm                |
|-----------------------------------------------+-----------------------------|
|Itanium TM Architecture Software Developer's   |http://developer.intel.com/  |
|Manual Volume 2: System Architecture           |design/itanium/downloads/    |
|                                               |24531803s.htm                |
|-----------------------------------------------+-----------------------------|
|Itanium TM Architecture Software Developer's   |http://developer.intel.com/  |
|Manual Volume 3: Instruction Set Reference     |design/itanium/downloads/    |
|                                               |24531903s.htm                |
|-----------------------------------------------+-----------------------------|
|IA-64 Processor Reference: Intel® Itanium TM   |http://developer.intel.com/  |
|Processor Reference Manual for Software        |design/itanium/downloads/    |
|Development                                    |24532003s.htm                |
|-----------------------------------------------+-----------------------------|
|ISO/IEC 9899: 1990, Programming Languages --C  |                             |
|-----------------------------------------------+-----------------------------|
|ISO/IEC 9899: 1999, Programming Languages --C  |                             |
|-----------------------------------------------+-----------------------------|
|ISO/IEC 14882: 1998(E) Programming languages   |                             |
|--C++                                          |                             |
|-----------------------------------------------+-----------------------------|
|Linux Assigned Names And Numbers Authority     |http://www.lanana.org/       |
|-----------------------------------------------+-----------------------------|
|Large File Support                             |http://www.UNIX-systems.org/ |
|                                               |version2/whatsnew/           |
|                                               |lfs20mar.html                |
|-----------------------------------------------+-----------------------------|
|LI18NUX 2000 Globalization Specification,      |http://www.li18nux.org/docs/ |
|Version 1.0 with Amendment 4                   |html/LI18NUX-2000-amd4.htm   |
|-----------------------------------------------+-----------------------------|
|Linux Standard Base                            |http://www.linuxbase.org/spec|
|                                               |/                            |
|-----------------------------------------------+-----------------------------|
|OpenGL® Application Binary Interface for Linux |http://oss.sgi.com/projects/ |
|                                               |ogl-sample/ABI/              |
|-----------------------------------------------+-----------------------------|
|OSF-RFC 86.0                                   |http://www.opengroup.org/tech|
|                                               |/rfc/mirror-rfc/rfc86.0.txt  |
|-----------------------------------------------+-----------------------------|
|IEEE Std POSIX 1003.2-1992 (ISO/IEC            |http://www.ieee.org/         |
|9945-2:1993)                                   |                             |
|-----------------------------------------------+-----------------------------|
|POSIX 1003.1c                                  |http://www.ieee.org/         |
|-----------------------------------------------+-----------------------------|
|RFC 1952: GZIP file format specification       |http://www.ietf.org/rfc/     |
|version 4.3                                    |rfc1952.txt                  |
|-----------------------------------------------+-----------------------------|
|RFC 2440: OpenPGP Message Format               |                             |
|-----------------------------------------------+-----------------------------|
|CAE Specification, May 1996, X/Open Curses,    |http://www.opengroup.org/    |
|Issue 4, Version 2 (ISBN: 1-85912-171-3, C610),|publications/catalog/un.htm  |
|plus Corrigendum U018                          |                             |
|-----------------------------------------------+-----------------------------|
|CAE Specification, January 1997, System        |http://www.opengroup.org/    |
|Interface Definitions (XBD),Issue 5 (ISBN:     |publications/catalog/un.htm  |
|1-85912-186-1, C605)                           |                             |
|-----------------------------------------------+-----------------------------|
|CAE Specification, January 1997, Commands and  |http://www.opengroup.org/    |
|Utilities (XCU), Issue 5 (ISBN: 1-85912-191-8, |publications/catalog/un.htm  |
|C604)                                          |                             |
|-----------------------------------------------+-----------------------------|
|CAE Specification, February 1997, Networking   |http://www.opengroup.org/    |
|Services (XNS), Issue 5(ISBN: 1-85912-165-9,   |                             |
|C523)                                          |                             |
|-----------------------------------------------+-----------------------------|
|CAE Specification, January 1997, System        |http://www.opengroup.org/    |
|Interfaces and Headers (XSH),Issue 5 (ISBN:    |publications/catalog/un.htm  |
|1-85912-181-0, C606)                           |                             |
|-----------------------------------------------+-----------------------------|
|The Single UNIX® Specification(SUS) Version 1  |http://www.opengroup.org/    |
|(UNIX 95) System Interfaces & Headers          |publications/catalog/un.htm  |
|-----------------------------------------------+-----------------------------|
|The Single UNIX® Specification(SUS) Version 3  |http://www.unix.org/version3/|
|-----------------------------------------------+-----------------------------|
|System V Interface Definition, Issue 3 (ISBN   |                             |
|0201566524)                                    |                             |
|-----------------------------------------------+-----------------------------|
|System V Interface Definition,Fourth Edition   |                             |
|-----------------------------------------------+-----------------------------|
|Double Buffer Extension Library                |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|X Display Power Management Signaling (DPMS)    |http://www.x.org/            |
|Extension, Library Specification               |                             |
|-----------------------------------------------+-----------------------------|
|X Record Extension Library                     |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|Security Extension Specification, Version 7.1  |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|X Nonrectangular Window Shape Extension Library|http://www.x.org/            |
|Version 1.0                                    |                             |
|-----------------------------------------------+-----------------------------|
|MIT-SHM--The MIT Shared Memory Extension       |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|X Synchronization Extension Library            |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|XTEST Extension Library                        |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|X11R6.4 X Inter-Client Exchange (ICE) Protocol |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|X11R6.4 X11 Input Extension Library            |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|X11R6.4 Xlib - C library                       |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|X/Open Portability Guide, Issue 4              |http://www.opengroup.org/    |
|-----------------------------------------------+-----------------------------|
|X11R6.4 X Session Management Library           |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|X11R6.4 X Toolkit Intrinsics                   |http://www.x.org/            |
|-----------------------------------------------+-----------------------------|
|zlib 1.1.3 Manual                              |http://www.gzip.org/zlib/    |
+-----------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Relevant Libraries

The libraries listed here shall be available on a Linux Standard Base system.
This list is an addition to the list in the general specification.

Table 1-2. Standard Library Names

+--------------------------------+
|Library   |Runtime Name         |
|----------+---------------------|
|libm      |libm.so.6.1          |
|----------+---------------------|
|libdl     |libdl.so.2           |
|----------+---------------------|
|libcrypt  |libcrypt.so.1        |
|----------+---------------------|
|libc      |libc.so.6.1          |
|----------+---------------------|
|libpthread|libpthread.so.0      |
|----------+---------------------|
|proginterp|/lib/ld-lsb-ia64.so.1|
+--------------------------------+

These libraries will be in an implementation-dependent directory which the
dynamic linker will search by default.

-------------------------------------------------------------------------------

How to Use this Standard

The complete LSB specification is composed of a generic LSB specification and
this supplemental processor-specific specification. These two documents
constitute a specification that should be used in conjunction with the
publicly-available standards documents it references. The LSB enumerates the
system components it includes, but descriptions of those components may be
included entirely in the LSB, partly in the LSB and partly in other documents,
or entirely in other reference documents.

-------------------------------------------------------------------------------

Definitions

gLSB
   
    The common part of the LSB Specification that describes those parts of the
    interface that remain constant across all hardware implementations of the
    LSB.
   
archLSB
   
    The architectural part of the LSB Specification which describes the
    specific parts of the interface that are platform specific. The archLSB is
    complementary to the gLSB.
   
LSB Implementation Conformance
   
    An implementation satisfying the following requirements:
   
     1. The implementation shall implement fully the architecture described in
        the hardware manual for the target processor architecture.
       
     2. The implementation shall be capable of executing compiled applications
        having the format and using the system interfaces described in this
        document.
       
     3. The implementation shall provide libraries containing the interfaces
        specified by this document, and shall provide a dynamic linking
        mechanism that allows these interfaces to be attached to applications
        at runtime. All the interfaces shall behave as specified in this
        document.
       
     4. The map of virtual memory provided by the implementation shall conform
        to the requirements of this document.
       
     5. The implementation's low-level behavior with respect to function call
        linkage, system traps, signals, and other such activities shall conform
        to the formats described in this document.
       
     6. The implementation shall provide all of the mandatory interfaces in
        their entirety.
       
     7. The implementation may provide one or more of the optional interfaces.
        Each optional interface that is provided shall be provided in its
        entirety. The product documentation shall state which optional
        interfaces are provided.
       
     8. The implementation shall provide all files and utilities specified as
        part of this document in the format defined here and in other
        referenced documents. All commands and utilities shall behave as
        required by this document. The implementation shall also provide all
        mandatory components of an application's runtime environment that are
        included or referenced in this document.
       
     9. The implementation, when provided with standard data formats and values
        at a named interface, shall provide the behavior defined for those
        values and data formats at that interface. However, a conforming
        implementation may consist of components which are separately packaged
        and/or sold. For example, a vendor of a conforming implementation might
        sell the hardware, operating system, and windowing system as separately
        packaged items.
       
    10. The implementation may provide additional interfaces with different
        names. It may also provide additional behavior corresponding to data
        values outside the standard ranges, for standard named interfaces.
       
LSB Application Conformance
   
    An application with the following characteristics:
   
     1. Its executable files are either shell scripts or object files in the
        format defined for the Object File Format system interface.
       
     2. Its object files participate in dynamic linking as defined in the
        Program Loading and Linking System interface.
       
     3. It employs only the instructions, traps, and other low-level facilities
        defined in the Low-Level System interface as being for use by
        applications.
       
     4. If it requires any optional interface defined in this document in order
        to be installed or to execute successfully, the requirement for that
        optional interface is stated in the application's documentation.
       
     5. It does not use any interface or data format that is not required to be
        provided by a conforming implementation, unless:
       
          o If such an interface or data format is supplied by another
            application through direct invocation of that application during
            execution, that application is in turn an LSB conforming
            application.
           
          o The use of that interface or data format, as well as its source, is
            identified in the documentation of the application.
           
     6. It must not use any values for a named interface that are reserved for
        vendor extensions.
       
    A strictly conforming application does not require or use any interface,
    facility, or implementation-defined extension that is not defined in this
    document in order to be installed or to execute successfully.
   
Rationale
   
    An LSB conforming application is expected to have no dependencies on any
    vendor extensions to this document. The most common such extensions are
    additional function entry points and additional libraries other than the
    ones defined in this document. If an application requires such extensions,
    it is not portable, since other LSB conforming implementations may not
    provide those extensions.
   
    An LSB conforming application is required to use system services on the
    implementation on which it is running, rather than importing system
    routines from some other implementation. Thus, it must link dynamically to
    any routines in the implementation that perform system traps to kernel
    services.
   
    It is to be expected that some applications may be companion applications
    to other applications. For example, a query application may be a companion
    to a database application; a preprocessor may be an adjunct to one or more
    compilers; a data reformatter may convert data from one document manager to
    another. In such cases, the application may or may not be LSB conforming,
    regardless of whether the other application on which it is dependent is LSB
    conforming. If such an application merely uses data produced by another
    application, the application's compliance is independent of the other
    application's compliance. If such an application actually invokes another
    application during execution (as, for example, a third-party math library),
    the invoking application is LSB conforming only if it also constitutes a
    LSB conforming application in combination with the invoked application.
   
Shell Script
   
    A file that is read by an interpreter (e.g., awk). The first line of the
    shell script includes a reference to its interpreter binary.
   
-------------------------------------------------------------------------------

Terminology

can
   
    Describes a permissible optional feature or behavior available to the user
    or application. The feature or behavior is mandatory for an implementation
    that conforms to this document. An application can rely on the existence of
    the feature or behavior.
   
implementation-defined
   
    Describes a value or behavior that is not defined by this document but is
    selected by an implementor. The value or behavior may vary among
    implementations that conform to this document. An application should not
    rely on the existence of the value or behavior. An application that relies
    on such a value or behavior cannot be assured to be portable across
    conforming implementations. The implementor shall document such a value or
    behavior so that it can be used correctly by an application.
   
may
   
    Describes a feature or behavior that is optional for an implementation that
    conforms to this document. An application should not rely on the existence
    of the feature or behavior. An application that relies on such a feature or
    behavior cannot be assured to be portable across conforming
    implementations.
   
    To avoid ambiguity, the opposite of may is expressed as need not, instead
    of may not.
   
must
   
    Describes a feature or behavior that is mandatory for an application or
    user. An implementation that conforms to this document shall support this
    feature or behavior.
   
shall
   
    Describes a feature or behavior that is mandatory for an implementation
    that conforms to this document. An application can rely on the existence of
    the feature or behavior.
   
should
   
    For an implementation that conforms to this document, describes a feature
    or behavior that is recommended but not mandatory. An application should
    not rely on the existence of the feature or behavior. An application that
    relies on such a feature or behavior cannot be assured to be portable
    across conforming implementations.
   
    For an application, describes a feature or behavior that is recommended
    programming practice for optimum portability.
   
undefined
   
    Describes the nature of a value or behavior not defined by this document
    which results from use of an invalid program construct or invalid data
    input. The value or behavior may vary among implementations that conform to
    this document. An application should not rely on the existence or validity
    of the value or behavior. An application that relies on any particular
    value or behavior cannot be assured to be portable across conforming
    implementations.
   
unspecified
   
    Describes the nature of a value or behavior not specified by this document
    which results from use of a valid program construct or valid data input.
    The value or behavior may vary among implementations that conform to this
    document. An application should not rely on the existence or validity of
    the value or behavior. An application that relies on any particular value
    or behavior cannot be assured to be portable across conforming
    implementations.
   
will
   
    Same meaning as shall; shall is the preferred term.
   
II. Low Level System Information

Table of Contents
2. Machine Interface
3. Function Calling Sequence
4. Operating System Interface
5. Process Initialization
6. Coding Examples
7. C Stack Frame
8. Debug Information

-------------------------------------------------------------------------------

Chapter 2. Machine Interface

Processor Architecture

The ItaniumTM Architecture is specified by the following documents

  * Itanium TM Architecture Software Developer's Manual Volume 1: Application
    Architecture
   
  * Itanium TM Architecture Software Developer's Manual Volume 2: System
    Architecture
   
  * Itanium TM Architecture Software Developer's Manual Volume 3: Instruction
    Set Reference
   
  * IA-64 Processor Reference: Intel® Itanium TM Processor Reference Manual for
    Software Development
   
  * Itanium TM Software Conventions & Runtime Architecture Guide
   
  * Intel® Itanium TM Processor-specific Application Binary Interface
   
Only the features of the ItaniumTM processor instruction set may be assumed to
be present. An application is responsible for determining if any additional
instruction set features are available before using those additional features.
If a feature is not present, then the application may not use it.

There are some features of the ItaniumTM processor architecture that need not
be supported by a conforming implementation. These are described in this
chapter. A conforming application shall not rely on these features.

Applications conforming to this specification must provide feedback to the user
if a feature that is required for correct execution of the application is not
present. Applications conforming to this specification should attempt to
execute in a diminished capacity if a required feature is not present.

This specfication does not provide any performance guarantees of a conforming
system. A system conforming to this specification may be implemented in either
hardware or software.

This specification describes only LP64 (i.e. 32-bit integers, 64-bit longs and
pointers) based implementations. Implementations may also provide ILP32 (32-bit
integers, longs, and pointers), but conforming applications shall not rely on
support for ILP32. See section 1.2 of the Intel® Itanium TM Processor-specific
Application Binary Interface for further information.

-------------------------------------------------------------------------------

Data Representation

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 4.

Within this specification, the term byte refers to an 8-bit object, the term
halfword refers to a 16-bit object, the term word refers to a 32-bit object,
the term doubleword refers to a 64-bit object, and the term quadword refers to
a 128-bit object. Although the ItaniumTM architecture also supports 120-bit
addressable objects, this specification does not require LSB-conforming
implementations to provide support for these objects.

-------------------------------------------------------------------------------

Byte Ordering

LSB-conforming applications shall use little-endian byte ordering.
LSB-conforming implementations may support big-endian applications.

-------------------------------------------------------------------------------

Fundamental Types

Table 2-1 describes how fundemental C language data types shall be represented:

Table 2-1. Scalar Types

+--------------------------------------------------------------------------+
|Type          |C                  |sizeof|Alignment (bytes)|Notes         |
|--------------+-------------------+------+-----------------+--------------|
|              |char               |      |                 |              |
|              |-------------------|      |                 |              |
|              |signed char        |1     |1                |              |
|              |-------------------|      |                 |              |
|              |unsigned char      |      |                 |              |
|              |-------------------+------+-----------------+--------------|
|              |short              |      |                 |              |
|              |-------------------|      |                 |              |
|              |signed short       |2     |2                |              |
|              |-------------------|      |                 |              |
|              |unsigned short     |      |                 |              |
|              |-------------------+------+-----------------+--------------|
|              |int                |      |                 |              |
|              |-------------------|      |                 |              |
|Integral      |signed int         |4     |4                |              |
|              |-------------------|      |                 |              |
|              |unsigned int       |      |                 |              |
|              |-------------------+------+-----------------+--------------|
|              |long               |      |                 |              |
|              |-------------------|      |                 |              |
|              |signed long        |8     |8                |              |
|              |-------------------|      |                 |              |
|              |unsigned long      |      |                 |              |
|              |-------------------+------+-----------------+--------------|
|              |long long          |      |                 |              |
|              |-------------------|      |                 |              |
|              |signed long long   |8     |8                |See Note Below|
|              |-------------------|      |                 |              |
|              |unsigned long long |      |                 |              |
|--------------+-------------------+------+-----------------+--------------|
|Pointer       |any-type *         |      |                 |              |
|              |-------------------|8     |8                |              |
|              |any-type (*)()     |      |                 |              |
|--------------+-------------------+------+-----------------+--------------|
|              |float              |4     |4                |              |
|              |-------------------+------+-----------------+--------------|
|Floating-Point|double             |8     |8                |              |
|              |-------------------+------+-----------------+--------------|
|              |long double        |16    |16               |              |
+--------------------------------------------------------------------------+

    Note: Support for the long long data type is dependent on support for
    ISO9899:1999 C language. This standard is not required for LSB-conformance,
    but this data type is important when developing applications for the
    ItaniumTM architecture. The GNU Compiler Collection (gcc) includes support
    for long long of ISO9899:1999.
   
A null pointer (for all types) shall have the value zero.

-------------------------------------------------------------------------------

Aggregates and Unions

Aggregates (structures and arrays) and unions assume the alignment of their
most strictly aligned component. The size of any object, including aggregates
and unions, shall always be a multiple of the object's alignment. An array uses
the same alignment as its elements. Structure and union objects may require
padding to meet size and element constraints. The contents of such padding is
undefined.

  * An entire structure or union object shall be aligned on the same boundary
    as its most strictly aligned member.
   
  * Each member shall be assigned to the lowest available offset with the
    appropriate alignment. This may require internal padding, depending on the
    previous member.
   
  * A structure's size shall be increased, if necessary, to make it a multiple
    of the alignment. This may require tail padding, depending on the last
    member.
   
A conforming application shall not read padding.

Figure 2-1. Structure Smaller Than A Word

+--------------------------------------------------------------------+
|    struct {                                                        |
|        char c;                                                     |
|    }                                                               |
|                                                                    |
|--------------------------------------------------------------------|
|                     Byte aligned, sizeof is 1                      |
+--------------------------------------------------------------------+
+----------------------------+
|       Offset|    Byte 0    |
|-------------+--------------|
|            0|     c^0      |
+----------------------------+

Figure 2-2. No Padding

+--------------------------------------------------------------------+
|    struct {                                                        |
|        char  c;                                                    |
|        char  d;                                                    |
|        short s;                                                    |
|        int   i;                                                    |
|        long  l;                                                    |
|    }                                                               |
|                                                                    |
|--------------------------------------------------------------------|
|                  Doubleword Aligned, sizeof is 16                  |
+--------------------------------------------------------------------+
+-----------------------------------------------------------------------------+
|       Offset|   Byte 3    |   Byte 2    |   Byte 1    |   Byte 0    | | | | |
|-------------+---------------------------+-------------+-------------+-+-+-+-|
|            0|            s^2            |     d^1     |     c^0     | | | | |
|-------------+-------------------------------------------------------+-+-+-+-|
|            4|                          i^0                          | | | | |
|-------------+-------------------------------------------------------+-+-+-+-|
|            8|                                                       | | | | |
|-------------|                          l^0                          |-------|
|           12|                                                       |       |
+-----------------------------------------------------------------------------+

Figure 2-3. Internal and Tail Padding

+--------------------------------------------------------------------+
|    struct {                                                        |
|        char  c;                                                    |
|        long  l;                                                    |
|        int   i;                                                    |
|        short s;                                                    |
|    }                                                               |
|                                                                    |
|--------------------------------------------------------------------|
|                  Doubleword Aligned, sizeof is 24                  |
+--------------------------------------------------------------------+
+-----------------------------------------------------------------------------+
|       Offset|   Byte 3    |   Byte 2    |   Byte 1    |   Byte 0    | | | | |
|-------------+-----------------------------------------+-------------+-+-+-+-|
|            0|                  pad^1                  |     c^0     | | | | |
|-------------+-------------------------------------------------------+-+-+-+-|
|            4|                         pad^1                         | | | | |
|-------------+-------------------------------------------------------+-+-+-+-|
|            8|                                                       | | | | |
|-------------|                          l^0                          |-------|
|           12|                                                       |       |
|-------------+-------------------------------------------------------+-------|
|           16|                          i^0                          | | | | |
|-------------+-------------------------------------------------------+-+-+-+-|
|           20|           pad^2           |            s^0            | | | | |
+-----------------------------------------------------------------------------+

-------------------------------------------------------------------------------

Bit Fields

C struct and union definitions may have bit-fields, which define integral
objects with a specified number of bits.

Bit fields that are declared with neither signed nor unsigned specifier shall
always be treated as unsigned. Bit fields obey the same size and alignment
rules as other structure and union members, with the following additional
properties:

  * Bit-fields are allocated from right to left (least to most significant).
   
  * A bit-field must entirely reside in a storage unit for its appropriate
    type. A bit field shall never cross its unit boundary.
   
  * Bit-fields may share a storage unit with other struct/union members,
    including members that are not bit fields. Such other struct/union members
    shall occupy different parts of the storage unit.
   
  * The type of unnamed bit-fields shall not affect the alignment of a
    structure or union, although individual bit-field member offsets shall obey
    the alignment constraints.
   
Figure 2-4. Bit-Field Ranges

+------------------------------------------------------------------------------+
|   Bit-field Type   |      Width w       |               Range                |
|--------------------+--------------------+------------------------------------|
|signed char         |                    |-2^w-1 to 2^w-1-1                   |
|char                |1 to 8              |0 to 2^w-1                          |
|unsigned char       |                    |0 to 2^w-1                          |
|                    |                    |                                    |
|--------------------+--------------------+------------------------------------|
|signed short        |                    |-2^w-1 to 2^w-1-1                   |
|short               |1 to 16             |0 to 2^w-1                          |
|unsigned short      |                    |0 to 2^w-1                          |
|                    |                    |                                    |
|--------------------+--------------------+------------------------------------|
|signed int          |                    |-2^w-1 to 2^w-1-1                   |
|int                 |1 to 32             |0 to 2^w-1                          |
|unsigned int        |                    |0 to 2^w-1                          |
|                    |                    |                                    |
|--------------------+--------------------+------------------------------------|
|signed long         |                    |-2^w-1 to 2^w-1-1                   |
|long                |1 to 64             |0 to 2^w-1                          |
|unsigned long       |                    |0 to 2^w-1                          |
|                    |                    |                                    |
+------------------------------------------------------------------------------+

-------------------------------------------------------------------------------

Chapter 3. Function Calling Sequence

LSB-conforming applications shall use the procedure linkage and function
calling sequence as defined in Chapter 8.4 of the Itanium TM Software
Conventions & Runtime Architecture Guide.

-------------------------------------------------------------------------------

CPU Registers

The CPU general and other registers are as defined in the Itanium TM
Architecture Software Developer's Manual Volume 1: Application Architecture
Section 3.1.

-------------------------------------------------------------------------------

Floating Point Registers

The floating point registers are as defined in the Itanium TM Architecture
Software Developer's Manual Volume 1: Application Architecture Section 3.1.

-------------------------------------------------------------------------------

Stack Frame

The stackframe layout is as described in the Itanium TM Software Conventions &
Runtime Architecture Guide Chapter 8.4.

-------------------------------------------------------------------------------

Arguments

The procedure argument passing mechanism is as described in the Itanium TM
Software Conventions & Runtime Architecture Guide Chapter 8.5.

-------------------------------------------------------------------------------

Integral/Pointer

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 8.5.

-------------------------------------------------------------------------------

Floating Point

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 8.5.

-------------------------------------------------------------------------------

Struct and Union Point

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 8.5.

-------------------------------------------------------------------------------

Variable Arguments

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 8.5.4.

-------------------------------------------------------------------------------

Return Values

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 8.6.

-------------------------------------------------------------------------------

Void

Functions that return no value (void functions) are not required to put any
particular value in any general register.

-------------------------------------------------------------------------------

Integral/Pointer

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 8.6.

-------------------------------------------------------------------------------

Floating Point

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 8.6.

-------------------------------------------------------------------------------

Struct and Union

See Itanium TM Software Conventions & Runtime Architecture Guide Chapter 8.6
(aggregate return values). Depending on the size (including any padding),
aggregate data types may be passed in one or more general registers, or in
memory.

-------------------------------------------------------------------------------

Chapter 4. Operating System Interface

LSB-conforming applications shall use the Operating System Interfaces as
defined in Chapter 3 of the Intel® Itanium TM Processor-specific Application
Binary Interface.

-------------------------------------------------------------------------------

Processor Execution Mode

Applications must assume that they will execute in the least privileged user
mode (i.e. level 3). Other privilege levels are reserved for the Operating
System.

-------------------------------------------------------------------------------

Exception Interface

See Intel® Itanium TM Processor-specific Application Binary Interface, section
3.3.1.

-------------------------------------------------------------------------------

Hardware Exception Types

See Intel® Itanium TM Processor-specific Application Binary Interface, section
3.3.1.

-------------------------------------------------------------------------------

Software Trap Types

See Intel® Itanium TM Processor-specific Application Binary Interface, section
3.3.1.

-------------------------------------------------------------------------------

Debugging Support

See Intel® Itanium TM Processor-specific Application Binary Interface, section
3.3.4.

-------------------------------------------------------------------------------

Process Startup

See Intel® Itanium TM Processor-specific Application Binary Interface, section
3.3.5.

-------------------------------------------------------------------------------

Signal Delivery

See Intel® Itanium TM Processor-specific Application Binary Interface, section
3.3.2.

-------------------------------------------------------------------------------

Signal Handler Interface

See Intel® Itanium TM Processor-specific Application Binary Interface, section
3.3.3.

-------------------------------------------------------------------------------

Chapter 5. Process Initialization

LSB-conforming applications shall use the Process Startup as defined in Section
3.3.5 of the Intel® Itanium TM Processor-specific Application Binary Interface.

-------------------------------------------------------------------------------

Special Registers

Intel® Itanium TM Processor-specific Application Binary Interface, section
3.3.5, defines required register initializations for process startup.

-------------------------------------------------------------------------------

Process Stack (on entry)

As defined in Intel® Itanium TM Processor-specific Application Binary Interface
, section 3.3.5, the return pointer register (rp) shall contain a valid return
address, such that if the application program returns from the main entry
routine, the implementation shall cause the application to exit normally, using
the returned value as the exit status. Further, the unwind information for this
"bottom of stack" routine in the implementation shall provide a mechanism for
recognizing the bottom of the stack during a stack unwind.

-------------------------------------------------------------------------------

Auxiliary Vector

The auxiliary vector conveys information from the operating system to the
application. Only the terminating null auxiliary vector entry is required, but
if any other entries are present, they shall be interpreted as follows. This
vector is an array of the following structures.

typedef struct
{
  long int a_type;              /* Entry type */
  union
    {
      long int a_val;           /* Integer value */
      void *a_ptr;              /* Pointer value */
      void (*a_fcn) (void);     /* Function pointer value */
    } a_un;
} auxv_t;

The application shall interpret the a_un value according to the a_type. Other
auxiliary vector types are reserved.

The a_type field shall contain one of the following values:

AT_NULL
   
    The last entry in the array has type AT_NULL. The value in a_un is
    undefined.
   
AT_IGNORE
   
    The value in a_un is undefined, and should be ignored.
   
AT_EXECFD
   
    File descriptor of program
   
AT_PHDR
   
    Program headers for program
   
AT_PHENT
   
    Size of program header entry
   
AT_PHNUM
   
    Number of program headers
   
AT_PAGESZ
   
    System page size
   
AT_BASE
   
    Base address of interpreter
   
AT_FLAGS
   
    Flags
   
AT_ENTRY
   
    Entry point of program
   
AT_NOTELF
   
    Program is not ELF
   
AT_UID
   
    Real uid
   
AT_EUID
   
    Effective uid
   
AT_GID
   
    Real gid
   
AT_EGID
   
    Effective gid
   
AT_CLKTCK
   
    Frequency of times()
   
AT_PLATFORM
   
    String identifying platform.
   
AT_HWCAP
   
    Machine dependent hints about processor capabilities.
   
AT_FPUCW
   
    Used FPU control word
   
AT_DCACHEBSIZE
   
    Data cache block size
   
AT_ICACHEBSIZE
   
    Instruction cache block size
   
AT_UCACHEBSIZE
   
    Unified cache block size
   
    Note: The auxiliary vector is intended for passing information from the
    operating system to a program interpreter, such as /lib/ld-lsb-ia64.so.1.
   
-------------------------------------------------------------------------------

Environment

Although a pointer to the environment vector should be available as a third
argument to the main entry point, conforming applications should use getenv to
access the environment. (See The Single UNIX® Specification(SUS) Version 1
(UNIX 95) System Interfaces & Headers, Section exec).

-------------------------------------------------------------------------------

Chapter 6. Coding Examples

LSB-conforming applications may implement fundamental operations using the
Coding Examples as shown below.

Sample code sequences and coding conventions can be found in Itanium TM
Software Conventions & Runtime Architecture Guide, Chapter 9.

-------------------------------------------------------------------------------

Code Model Overview/Architecture Constraints

As defined in Intel® Itanium TM Processor-specific Application Binary Interface
, relocatable files, executable files, and shared object files that are
supplied as part of an application must use Position Independent Code, as
described in Itanium TM Software Conventions & Runtime Architecture Guide,
Chapter 12.

-------------------------------------------------------------------------------

Position-Independent Function Prologue

See Itanium TM Software Conventions & Runtime Architecture Guide, Chapter 8.4.

-------------------------------------------------------------------------------

Data Objects

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.3.4, and Itanium TM Software Conventions & Runtime Architecture Guide,
Chapter 12.3.

-------------------------------------------------------------------------------

Absolute Load & Store

Conforming applications shall not use absolute addressing.

-------------------------------------------------------------------------------

Position Relative Load & Store

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.3.4.

-------------------------------------------------------------------------------

Function Calls

See Itanium TM Software Conventions & Runtime Architecture Guide, Chapter 8.4.

Four types of procedure call are defined in Itanium TM Software Conventions &
Runtime Architecture Guide, Chapter 8.3. Although special calling conventions
are permitted, provided that the compiler and runtime library agree on these
conventions, none are defined for this standard. Consequently, no application
shall depend on a type of procedure call other than Direct Calls, Direct
Dynamically Linked Calls, or Indirect Calls, as defined in Itanium TM Software
Conventions & Runtime Architecture Guide, Chapter 8.3.

-------------------------------------------------------------------------------

Absolute Direct Function Call

Conforming applications shall not use absolute addressing.

-------------------------------------------------------------------------------

Absolute Indirect Function Call

Conforming applications shall not use absolute addressing.

-------------------------------------------------------------------------------

Position-Independent Direct Function Call

See Itanium TM Software Conventions & Runtime Architecture Guide, Chapter
8.4.1.

-------------------------------------------------------------------------------

Position-Independent Indirect Function Call

See Itanium TM Software Conventions & Runtime Architecture Guide, Chapter
8.4.2.

-------------------------------------------------------------------------------

Branching

Branching is described in IA-64 Processor Reference: Intel® Itanium TM
Processor Reference Manual for Software Development, Chapter 4.5.

-------------------------------------------------------------------------------

Branch Instruction

See IA-64 Processor Reference: Intel® Itanium TM Processor Reference Manual for
Software Development, Chapter 4.5.

-------------------------------------------------------------------------------

Absolute switch() code

Conforming applications shall not use absolute addressing.

-------------------------------------------------------------------------------

Position-Independent switch() code

Where there are several possible targets for a branch, the compiler may use a
number of different code generation strategies. See Itanium TM Software
Conventions & Runtime Architecture Guide, Chapter 9.1.7.

-------------------------------------------------------------------------------

Chapter 7. C Stack Frame

Variable Argument List

See Itanium TM Software Conventions & Runtime Architecture Guide, Chapter
8.5.2, and 8.5.4.

-------------------------------------------------------------------------------

Dynamic Allocation of Stack Space

The C library alloca function should be used to dynamically allocate stack
space.

-------------------------------------------------------------------------------

Chapter 8. Debug Information

The LSB does not currently specify the format of Debug information.

III. Object Format

LSB-conforming implementations shall support an object file , called Executable
and Linking Format (ELF) as defined by the System V Application Binary
Interface, Edition 4.1, Intel® Itanium TM Processor-specific Application Binary
Interface and as supplemented by the Linux Standard Base Specification and this
document.

Table of Contents
9. ELF Header
10. Sections
11. Symbol Table
12. Relocation

-------------------------------------------------------------------------------

Chapter 9. ELF Header

Machine Information

LSB-conforming applications shall use the Machine Information as defined in 
Intel® Itanium TM Processor-specific Application Binary Interface, Chapter 4.
Implementations shall support the LP64 model. It is unspecified whether or not
the ILP32 model shall also be supported.

-------------------------------------------------------------------------------

File Class

For LP64 relocatable objects, the file class value in e_ident[EI_CLASS] may be
either ELFCLASS32 or ELFCLASS64, and a conforming linker must be able to
process either or both classes.

-------------------------------------------------------------------------------

Data Encoding

Implementations shall support 2's complement, little endian data encoding. The
data encoding value in e_ident[EI_DATA] shall contain the value ELFDATA2LSB.

-------------------------------------------------------------------------------

OS Identification

The OS Identification field e_ident[EI_OSABI] shall contain the value
ELFOSABI_LINUX.

-------------------------------------------------------------------------------

Processor Identification

The processor identification value held in e_machine shall contain the value
EM_IA_64.

-------------------------------------------------------------------------------

Processor Specific Flags

The flags field e_flags shall be as described in Intel® Itanium TM
Processor-specific Application Binary Interface, Chapter 4.1.1.6.

The following additional processor-specific flags are defined:

Table 9-1. Additional Processor-Specific Flags

+------------------------------------------+
|             Name              |  Value   |
|-------------------------------+----------|
|EF_IA_64_LINUX_EXECUTABLE_STACK|0x00000001|
+------------------------------------------+

EF_IA_64_LINUX_EXECUTABLE_STACK
   
    The stack and heap sections are executable. If this flag is not set, code
    can not be executed from the stack or heap.
   
-------------------------------------------------------------------------------

Chapter 10. Sections

The ItaniumTM architecture defines two processor-specific section types, as
described in Intel® Itanium TM Processor-specific Application Binary Interface,
Chapter 4.

-------------------------------------------------------------------------------

Special Sections

The following sections are defined in the Intel® Itanium TM Processor-specific
Application Binary Interface.

Table 10-1. ELF Special Sections

+-----------------------------------------------------------------------+
|       Name       |      Type      |            Attributes             |
|------------------+----------------+-----------------------------------|
|.got              |SHT_PROGBITS    |SHF_ALLOC+SHF_WRITE+SHF_IA_64_SHORT|
|------------------+----------------+-----------------------------------|
|.IA_64.archext    |SHT_IA_64_EXT   |0                                  |
|------------------+----------------+-----------------------------------|
|.IA_64.pltoff     |SHT_PROGBITS    |SHF_ALLOC+SHF_WRITE+SHF_IA_64_SHORT|
|------------------+----------------+-----------------------------------|
|.IA_64.unwind     |SHT_IA_64_UNWIND|SHF_ALLOC+SHF_LINK_ORDER           |
|------------------+----------------+-----------------------------------|
|.IA_64.unwind_info|SHT_PROGBITS    |SHF_ALLOC                          |
|------------------+----------------+-----------------------------------|
|.plt              |SHT_PROGBITS    |SHF_ALLOC+SHF_EXECINSTR            |
|------------------+----------------+-----------------------------------|
|.sbss             |SHT_NOBITS      |SHF_ALLOC+SHF_WRITE+SHF_IA_64_SHORT|
|------------------+----------------+-----------------------------------|
|.sdata            |SHT_PROGBITS    |SHF_ALLOC+SHF_WRITE+SHF_IA_64_SHORT|
|------------------+----------------+-----------------------------------|
|.sdata1           |SHT_PROGBITS    |SHF_ALLOC+SHF_WRITE+SHF_IA_64_SHORT|
+-----------------------------------------------------------------------+

.got
   
    This section holds the Global Offset Table. See `Coding Examples' in
    Chapter 3, `Special Sections' in Chapter 4, and `Global Offset Table' in
    Chapter 5 of the processor supplement for more information.
   
.IA_64.archext
   
    This section holds product-specific extension bits. The link editor will
    perform a logical "or" of the extension bits of each object when creating
    an executable so that it creates only a single .IA_64.archext section in
    the executable.
   
.IA_64.pltoff
   
    This section holds local function descriptor entries.
   
.IA_64.unwind
   
    This section holds the unwind function table. The contents are described in
    the Intel (r) Itanium (tm) Processor Specific ABI.
   
.IA_64.unwind_info
   
    This section holds stack unwind and and exception handling information. The
    exception handling information is programming language specific, and is
    unspecified.
   
.plt
   
    This section holds the Procedure Linkage Table.
   
.sbss
   
    This section holds uninitialized data that contribute to the program''s
    memory image. Data objects contained in this section are recommended to be
    eight bytes or less in size. The system initializes the data with zeroes
    when the program begins to run. The section occupies no file space, as
    indicated by the section type SHT_NOBITS. The .sbss section is placed so it
    may be accessed using short direct addressing (22 bit offset from gp).
   
.sdata
   
    This section and the .sdata1 section hold initialized data that contribute
    to the program''s memory image. Data objects contained in this section are
    recommended to be eight bytes or less in size. The .sdata and .sdata1
    sections are placed so they may be accessed using short direct addressing
    (22 bit offset from gp).
   
.sdata1
   
    See .sdata.
   
 

-------------------------------------------------------------------------------

Linux Special Sections

The following Linux IA-64 specific sections are defined here.

Table 10-2. Additional Special Sections

+--------------------------------------+
|       Name       |  Type  |Attributes|
|------------------+--------+----------|
|.rela.dyn         |SHT_RELA|SHF_ALLOC |
|------------------+--------+----------|
|.rela.IA_64.pltoff|SHT_RELA|SHF_ALLOC |
+--------------------------------------+

.rela.dyn
   
    This section holds relocation information, as described in `Relocation'.
    These relocations are applied to the .dyn section.
   
.rela.IA_64.pltoff
   
    This section holds relocation information, as described in `Relocation'.
    These relocations are applied to the .IA_64.pltoff section.
   
 

-------------------------------------------------------------------------------

Section Types

Section Types are described in the Intel® Itanium TM Processor-specific
Application Binary Interface, Chapter 4.2. LSB conforming implementations are
not required to use any sections in the range from SHT_IA_64_LOPSREG to
SHT_IA_64_HIPSREG. Additionally, LSB conforming implementations are not
required to support the SHT_IA_64_PRIORITY_INIT section, beyond the gABI
requirements for the handling of unrecognized section types, linking them into
a contiguous section in the object file created by the static linker.

-------------------------------------------------------------------------------

Section Attribute Flags

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
4.2.2.

-------------------------------------------------------------------------------

Special Section Types

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
4.2.3.

-------------------------------------------------------------------------------

Chapter 11. Symbol Table

If an executable file contains a reference to a function defined in one of its
associated shared objects, the symbol table section for that file shall contain
an entry for that symbol. The st_shndx member of that symbol table entry
contains SHN_UNDEF. This signals to the dynamic linker that the symbol
definition for that function is not contained in the executable file itself. If
that symbol has been allocated a procedure linkage table entry in the
executable file, and the st_value member for that symbol table entry is
non-zero, the value shall contain the virtual address of the first instruction
of that procedure linkage table entry. Otherwise, the st_value member contains
zero. This procedure linkage table entry address is used by the dynamic linker
in resolving references to the address of the function.

   
    Note: Need to add something here about st_info and st_other ...
   
-------------------------------------------------------------------------------

Chapter 12. Relocation

LSB-conforming applications shall use Relocations as defined in Intel® Itanium
TM Processor-specific Application Binary Interface, Chapter 4.3.

-------------------------------------------------------------------------------

Relocation Types

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
4.3.

IV. Program Loading and Dynamic Linking

LSB-conforming implementations shall support the object file information and
system actions that create running programs as specified in the System V
Application Binary Interface, Edition 4.1, Intel® Itanium TM Processor-specific
Application Binary Interface and as supplemented by the Linux Standard Base
Specification and this document.

Table of Contents
13. Program Header
14. Program Loading
15. Dynamic Linking

-------------------------------------------------------------------------------

Chapter 13. Program Header

The program header shall be as defined in the Intel® Itanium TM
Processor-specific Application Binary Interface, Chapter 5.

-------------------------------------------------------------------------------

Types

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.1.

-------------------------------------------------------------------------------

Flags

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.1.

-------------------------------------------------------------------------------

Chapter 14. Program Loading

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.2.

-------------------------------------------------------------------------------

Chapter 15. Dynamic Linking

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.3.

-------------------------------------------------------------------------------

Program Interpreter/Dynamic Linker

The LSB specifies the Program Interpreter to be /lib/ld-lsb-ia64.so.1.

-------------------------------------------------------------------------------

Dynamic Section

The following dynamic entries are defined in the Intel® Itanium TM
Processor-specific Application Binary Interface, Chapter 5.3.2.

DT_PLTGOT
   
    This entry's d_ptr member gives the address of the first byte in the
    procedure linkage table
   
 

-------------------------------------------------------------------------------

Global Offset Table

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.3.4.

-------------------------------------------------------------------------------

Shared Object Dependencies

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.3.3.

-------------------------------------------------------------------------------

Function Addresses

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.3.5.

-------------------------------------------------------------------------------

Procedure Linkage Table

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.3.6.

-------------------------------------------------------------------------------

Initialization and Termination Functions

See Intel® Itanium TM Processor-specific Application Binary Interface, Chapter
5.3.7.

V. Base Libraries

Table of Contents
16. Libraries

-------------------------------------------------------------------------------

Chapter 16. Libraries

An LSB-conforming implementation shall support base libraries which provide
interfaces for accessing the operating system, processor and other hardware in
the system.

Only those interfaces that are unique to the ItaniumTM platform are defined
here. This section should be used in conjunction with the corresponding section
in the Linux Standard Base Specification.

An LSB conforming implementation need not define an Unwind library interface as
required by the Intel® Itanium TM Processor-specific Application Binary
Interface. If such an interface is provided, it shall conform to the
specification in the Intel® Itanium TM Processor-specific Application Binary
Interface. A conforming application shall not depend on this interface.

-------------------------------------------------------------------------------

Interfaces for libc

Table 16-1. libc Definition

+---------------------+
|Library:|libc        |
|--------+------------|
|SONAME: |libc.so.6.1 |
+---------------------+

The behavior of the interfaces in this library is specified by the following
standards.

ISO/IEC 9899: 1999, Programming Languages --C[1]                               
Large File Support[2]                                                          
Linux Standard Base[3]                                                         
IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996][4]                                 
CAE Specification, February 1997, Networking Services (XNS), Issue 5(ISBN:     
1-85912-165-9, C523)[5]                                                        
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5   
(ISBN: 1-85912-181-0, C606)[6]                                                 
The Single UNIX® Specification(SUS) Version 3[7]                               
System V Interface Definition, Issue 3 (ISBN 0201566524)[8]                    
System V Interface Definition,Fourth Edition[9]                                

-------------------------------------------------------------------------------

RPC

Table 16-2. libc - RPC Function Interfaces

+-----------------------------------------------------------------------------------+
|authnone_create   |svc_getreqset     |xdr_bytes  |xdr_opaque_auth   |xdr_union     |
|(GLIBC_2.2)[9]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |(GLIBC_2.2)[8]|
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|clnt_create       |svcerr_auth       |xdr_callhdr|xdr_pointer       |xdr_vector    |
|(GLIBC_2.2)[9]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |(GLIBC_2.2)[8]|
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|clnt_pcreateerror |svcerr_decode     |xdr_callmsg|xdr_reference     |xdr_void      |
|(GLIBC_2.2)[9]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |(GLIBC_2.2)[8]|
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|clnt_perrno       |svcerr_noproc     |xdr_char   |xdr_rejected_reply|xdr_wrapstring|
|(GLIBC_2.2)[9]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |(GLIBC_2.2)[8]|
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|clnt_perror       |svcerr_noprog     |xdr_double |xdr_replymsg      |xdrmem_create |
|(GLIBC_2.2)[9]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |(GLIBC_2.2)[8]|
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|clnt_spcreateerror|svcerr_progvers   |xdr_enum   |xdr_short         |xdrrec_create |
|(GLIBC_2.2)[9]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |(GLIBC_2.2)[8]|
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|clnt_sperrno      |svcerr_systemerr  |xdr_float  |xdr_string        |xdrrec_eof    |
|(GLIBC_2.2)[9]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |(GLIBC_2.2)[8]|
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|clnt_sperror      |svcerr_weakauth   |xdr_free   |xdr_u_char        |              |
|(GLIBC_2.2)[9]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |              |
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|getdomainname     |xdr_accepted_reply|xdr_int    |xdr_u_int         |              |
|(GLIBC_2.2)[3]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[3]    |              |
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|key_decryptsession|xdr_array         |xdr_long   |xdr_u_long        |              |
|(GLIBC_2.2)[8]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |              |
|                  |                  |[8]        |                  |              |
|------------------+------------------+-----------+------------------+--------------|
|setdomainname     |xdr_bool          |xdr_opaque |xdr_u_short       |              |
|(GLIBC_2.2)[3]    |(GLIBC_2.2)[8]    |(GLIBC_2.2)|(GLIBC_2.2)[8]    |              |
|                  |                  |[8]        |                  |              |
+-----------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

System Calls

Table 16-3. libc - System Calls Function Interfaces

+-----------------------------------------------------------------------------+
|__fxstat    |fchown       |initgroups   |read(GLIBC_2.2)[6]    |setrlimit64  |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[3]         |[6]          |[3]          |                      |[2]          |
|------------+-------------+-------------+----------------------+-------------|
|__getpgid   |fcntl        |ioctl        |readdir(GLIBC_2.2)[6] |setsid       |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[3]         |[3]          |[3]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|__lxstat    |fdatasync    |kill         |readdir_r(GLIBC_2.2)  |setuid       |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |[6]                   |(GLIBC_2.2)  |
|[3]         |[6]          |[3]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|__xmknod    |flock        |killpg       |readlink(GLIBC_2.2)[6]|sleep        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[3]         |[3]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|__xstat     |fork         |lchown       |readv(GLIBC_2.2)[6]   |statfs       |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[3]         |[6]          |[6]          |                      |[3]          |
|------------+-------------+-------------+----------------------+-------------|
|access      |fstatfs      |link         |rename(GLIBC_2.2)[6]  |statvfs      |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[3]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|acct        |fstatvfs     |lockf        |rmdir(GLIBC_2.2)[6]   |stime        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[3]         |[6]          |[6]          |                      |[3]          |
|------------+-------------+-------------+----------------------+-------------|
|alarm       |fsync        |lseek        |sbrk(GLIBC_2.2)[6]    |symlink      |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|brk         |ftime        |mkdir        |sched_get_priority_max|sync         |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[6]        |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|chdir       |ftruncate    |mkfifo       |sched_get_priority_min|sysconf      |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[6]        |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|chmod       |getcontext   |mlock        |sched_getparam        |time         |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[6]        |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|chown       |getegid      |mlockall     |sched_getscheduler    |times        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[6]        |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|chroot      |geteuid      |mmap         |sched_rr_get_interval |truncate     |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[6]        |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|clock       |getgid       |mprotect     |sched_setparam        |ulimit       |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[6]        |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|close       |getgroups    |msync        |sched_setscheduler    |umask        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[6]        |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|closedir    |getitimer    |munlock      |sched_yield(GLIBC_2.2)|uname        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |[6]                   |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|creat       |getloadavg   |munlockall   |select(GLIBC_2.2)[5]  |unlink       |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[3]          |[6]          |                      |[3]          |
|------------+-------------+-------------+----------------------+-------------|
|dup         |getpagesize  |munmap       |setcontext(GLIBC_2.2) |utime        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |[6]                   |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|dup2        |getpgid      |nanosleep    |setegid(GLIBC_2.2)[3] |utimes       |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|execl       |getpgrp      |nice         |seteuid(GLIBC_2.2)[3] |vfork        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[6]          |[3]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|execle      |getpid       |open         |setgid(GLIBC_2.2)[6]  |wait         |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|execlp      |getppid      |opendir      |setitimer(GLIBC_2.2)  |wait3        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |[6]                   |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[3]          |
|------------+-------------+-------------+----------------------+-------------|
|execv       |getpriority  |pathconf     |setpgid(GLIBC_2.2)[6] |wait4        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[3]          |
|------------+-------------+-------------+----------------------+-------------|
|execve      |getrlimit    |pause        |setpgrp(GLIBC_2.2)[6] |waitid       |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[3]          |
|------------+-------------+-------------+----------------------+-------------|
|execvp      |getrusage    |pipe         |setpriority(GLIBC_2.2)|waitpid      |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |[6]                   |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[3]          |
|------------+-------------+-------------+----------------------+-------------|
|exit        |getsid       |poll         |setregid(GLIBC_2.2)[6]|write        |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|fchdir      |getuid       |pread        |setreuid(GLIBC_2.2)[6]|writev       |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |                      |(GLIBC_2.2)  |
|[6]         |[6]          |[6]          |                      |[6]          |
|------------+-------------+-------------+----------------------+-------------|
|fchmod      |getwd        |pwrite       |setrlimit(GLIBC_2.2)  |             |
|(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |[6]                   |             |
|[6]         |[6]          |[6]          |                      |             |
+-----------------------------------------------------------------------------+

Table 16-4. libc - System Calls Deprecated Function Interfaces

+---------------------------------------------------------------------+
|fstatfs(GLIBC_2.2)[3] |statfs(GLIBC_2.2)[3]|waitid(GLIBC_2.2)[3] | | |
+---------------------------------------------------------------------+
-------------------------------------------------------------------------------

Standard I/O

Table 16-5. libc - Standard I/O Function Interfaces

+-----------------------------------------------------------------------------+
|_IO_feof       |fgetc          |fseeko          |putc(GLIBC_2.2) |snprintf   |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |[6]             |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|_IO_getc       |fgetpos        |fsetpos         |putc_unlocked   |sprintf    |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|_IO_putc       |fgets          |ftell(GLIBC_2.2)|putchar         |sscanf     |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6] |[6]             |(GLIBC_2.2)[6]  |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|_IO_puts       |fgetwc_unlocked|ftello          |putchar_unlocked|telldir    |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|alphasort      |fileno         |fwrite          |puts(GLIBC_2.2) |tempnam    |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |[6]             |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|asprintf       |flockfile      |getc(GLIBC_2.2) |putw(GLIBC_2.2) |ungetc     |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6] |[6]             |[6]             |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|clearerr       |fopen          |getc_unlocked   |remove          |vasprintf  |
|(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)|
|               |               |                |                |[3]        |
|---------------+---------------+----------------+----------------+-----------|
|ctermid        |fprintf        |getchar         |rewind          |vdprintf   |
|(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)|
|               |               |                |                |[3]        |
|---------------+---------------+----------------+----------------+-----------|
|fclose         |fputc          |getchar_unlocked|rewinddir       |vfprintf   |
|(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|fdopen         |fputs          |gets(GLIBC_2.2) |scanf(GLIBC_2.2)|vprintf    |
|(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |[3]             |[6]             |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|feof(GLIBC_2.2)|fread          |getw(GLIBC_2.2) |seekdir         |vsnprintf  |
|[6]            |(GLIBC_2.2)[6] |[6]             |(GLIBC_2.2)[6]  |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|ferror         |freopen        |pclose          |setbuf          |vsprintf   |
|(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)|
|               |               |                |                |[6]        |
|---------------+---------------+----------------+----------------+-----------|
|fflush         |fscanf         |popen(GLIBC_2.2)|setbuffer       |           |
|(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |[6]             |(GLIBC_2.2)[3]  |           |
|---------------+---------------+----------------+----------------+-----------|
|fflush_unlocked|fseek          |printf          |setvbuf         |           |
|(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |           |
+-----------------------------------------------------------------------------+

Table 16-6. libc - Standard I/O Deprecated Function Interfaces

+--------------------------------+
|alphasort(GLIBC_2.2)[3] | | | | |
+--------------------------------+

Table 16-7. libc - Standard I/O Data Interfaces

+-------------------------------------------------------------------+
|stderr(GLIBC_2.2)[6] |stdin(GLIBC_2.2)[6]|stdout(GLIBC_2.2)[6] | | |
+-------------------------------------------------------------------+
-------------------------------------------------------------------------------

Signal Handling

Table 16-8. libc - Signal Handling Function Interfaces

+-----------------------------------------------------------------------------+
|__libc_current_sigrtmax|sigaddset   |sighold      |sigpause    |sigsuspend   |
|(GLIBC_2.2)[3]         |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2) |(GLIBC_2.2)  |
|                       |[6]         |[6]          |[6]         |[6]          |
|-----------------------+------------+-------------+------------+-------------|
|__libc_current_sigrtmin|sigaltstack |sigignore    |sigpending  |sigtimedwait |
|(GLIBC_2.2)[3]         |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2) |(GLIBC_2.2)  |
|                       |[6]         |[6]          |[6]         |[6]          |
|-----------------------+------------+-------------+------------+-------------|
|__sigsetjmp(GLIBC_2.2) |sigandset   |siginterrupt |sigprocmask |sigwait      |
|[3]                    |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2) |(GLIBC_2.2)  |
|                       |[3]         |[6]          |[6]         |[6]          |
|-----------------------+------------+-------------+------------+-------------|
|__sysv_signal          |sigblock    |sigisemptyset|sigqueue    |sigwaitinfo  |
|(GLIBC_2.2)[3]         |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2) |(GLIBC_2.2)  |
|                       |[3]         |[3]          |[6]         |[6]          |
|-----------------------+------------+-------------+------------+-------------|
|bsd_signal(GLIBC_2.2)  |sigdelset   |sigismember  |sigrelse    |             |
|[6]                    |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2) |             |
|                       |[6]         |[6]          |[6]         |             |
|-----------------------+------------+-------------+------------+-------------|
|psignal(GLIBC_2.2)[3]  |sigemptyset |siglongjmp   |sigreturn   |             |
|                       |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2) |             |
|                       |[6]         |[6]          |[3]         |             |
|-----------------------+------------+-------------+------------+-------------|
|raise(GLIBC_2.2)[6]    |sigfillset  |signal       |sigset      |             |
|                       |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2) |             |
|                       |[6]         |[6]          |[6]         |             |
|-----------------------+------------+-------------+------------+-------------|
|sigaction(GLIBC_2.2)[6]|siggetmask  |sigorset     |sigstack    |             |
|                       |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2) |             |
|                       |[3]         |[3]          |[6]         |             |
+-----------------------------------------------------------------------------+

Table 16-9. libc - Signal Handling Data Interfaces

+-----------------------------------+
|_sys_siglist(GLIBC_2.2)[3] | | | | |
+-----------------------------------+
-------------------------------------------------------------------------------

Localization Functions

Table 16-10. libc - Localization Functions Function Interfaces

+-----------------------------------------------------------------------------+
|__dcgettext(GLIBC_2.2) |catgets     |dgettext    |iconv_close  |nl_langinfo  |
|[3]                    |(GLIBC_2.2) |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |
|                       |[6]         |[3]         |[6]          |[6]          |
|-----------------------+------------+------------+-------------+-------------|
|bind_textdomain_codeset|catopen     |dngettext   |iconv_open   |setlocale    |
|(GLIBC_2.2)[3]         |(GLIBC_2.2) |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |
|                       |[6]         |[3]         |[6]          |[6]          |
|-----------------------+------------+------------+-------------+-------------|
|bindtextdomain         |dcgettext   |gettext     |localeconv   |textdomain   |
|(GLIBC_2.2)[3]         |(GLIBC_2.2) |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)  |
|                       |[3]         |[3]         |[6]          |[3]          |
|-----------------------+------------+------------+-------------+-------------|
|catclose(GLIBC_2.2)[6] |dcngettext  |iconv       |ngettext     |             |
|                       |(GLIBC_2.2) |(GLIBC_2.2) |(GLIBC_2.2)  |             |
|                       |[3]         |[6]         |[3]          |             |
+-----------------------------------------------------------------------------+

Table 16-11. libc - Localization Functions Deprecated Function Interfaces

+----------------------------------+
|__dcgettext(GLIBC_2.2)[3] | | | | |
+----------------------------------+

Table 16-12. libc - Localization Functions Data Interfaces

+-----------------------------------------+
|_nl_msg_cat_cntr(GLIBC_2.2)[3] |  | |  | |
+-----------------------------------------+
-------------------------------------------------------------------------------

Socket Interface

Table 16-13. libc - Socket Interface Function Interfaces

+------------------------------------------------------------------------------+
|__h_errno_location|gethostbyname_r |getsockopt   |send          |socket       |
|(GLIBC_2.2)[3]    |(GLIBC_2.2)[3]  |(GLIBC_2.2)  |(GLIBC_2.2)[5]|(GLIBC_2.2)  |
|                  |                |[5]          |              |[5]          |
|------------------+----------------+-------------+--------------+-------------|
|accept(GLIBC_2.2) |gethostid       |listen       |sendmsg       |socketpair   |
|[5]               |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[5]|(GLIBC_2.2)  |
|                  |                |[5]          |              |[5]          |
|------------------+----------------+-------------+--------------+-------------|
|bind(GLIBC_2.2)[5]|gethostname     |recv         |sendto        |             |
|                  |(GLIBC_2.2)[5]  |(GLIBC_2.2)  |(GLIBC_2.2)[5]|             |
|                  |                |[5]          |              |             |
|------------------+----------------+-------------+--------------+-------------|
|bindresvport      |getpeername     |recvfrom     |setsockopt    |             |
|(GLIBC_2.2)[3]    |(GLIBC_2.2)[5]  |(GLIBC_2.2)  |(GLIBC_2.2)[5]|             |
|                  |                |[5]          |              |             |
|------------------+----------------+-------------+--------------+-------------|
|connect(GLIBC_2.2)|getsockname     |recvmsg      |shutdown      |             |
|[5]               |(GLIBC_2.2)[5]  |(GLIBC_2.2)  |(GLIBC_2.2)[5]|             |
|                  |                |[5]          |              |             |
+------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Wide Characters

Table 16-14. libc - Wide Characters Function Interfaces

+-------------------------------------------------------------------------------+
|__wcstod_internal  |mbsinit       |vwscanf        |wcsnlen       |wcstoumax    |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[1] |(GLIBC_2.2)[3]|(GLIBC_2.2)  |
|                   |              |               |              |[1]          |
|-------------------+--------------+---------------+--------------+-------------|
|__wcstof_internal  |mbsnrtowcs    |wcpcpy         |wcsnrtombs    |wcstouq      |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[3]|(GLIBC_2.2)[3] |(GLIBC_2.2)[3]|(GLIBC_2.2)  |
|                   |              |               |              |[3]          |
|-------------------+--------------+---------------+--------------+-------------|
|__wcstol_internal  |mbsrtowcs     |wcpncpy        |wcspbrk       |wcswcs       |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[3] |(GLIBC_2.2)[1]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|__wcstold_internal |mbstowcs      |wcrtomb        |wcsrchr       |wcswidth     |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[6] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|__wcstoul_internal |mbtowc        |wcscasecmp     |wcsrtombs     |wcsxfrm      |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[3] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|btowc(GLIBC_2.2)[6]|putwc         |wcscat         |wcsspn        |wctob        |
|                   |(GLIBC_2.2)[1]|(GLIBC_2.2)[6] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|fgetwc(GLIBC_2.2)  |putwchar      |wcschr         |wcsstr        |wctomb       |
|[6]                |(GLIBC_2.2)[1]|(GLIBC_2.2)[6] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|fgetws(GLIBC_2.2)  |swprintf      |wcscmp         |wcstod        |wctrans      |
|[1]                |(GLIBC_2.2)[6]|(GLIBC_2.2)[6] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|fputwc(GLIBC_2.2)  |swscanf       |wcscoll        |wcstof        |wctype       |
|[1]                |(GLIBC_2.2)[1]|(GLIBC_2.2)[6] |(GLIBC_2.2)[1]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|fputws(GLIBC_2.2)  |towctrans     |wcscpy         |wcstoimax     |wcwidth      |
|[1]                |(GLIBC_2.2)[6]|(GLIBC_2.2)[6] |(GLIBC_2.2)[1]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|fwide(GLIBC_2.2)[1]|towlower      |wcscspn        |wcstok        |wmemchr      |
|                   |(GLIBC_2.2)[1]|(GLIBC_2.2)[6] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|fwprintf(GLIBC_2.2)|towupper      |wcsdup         |wcstol        |wmemcmp      |
|[6]                |(GLIBC_2.2)[6]|(GLIBC_2.2)[3] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|fwscanf(GLIBC_2.2) |ungetwc       |wcsftime       |wcstold       |wmemcpy      |
|[1]                |(GLIBC_2.2)[1]|(GLIBC_2.2)[1] |(GLIBC_2.2)[1]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|getwc(GLIBC_2.2)[1]|vfwprintf     |wcslen         |wcstoll       |wmemmove     |
|                   |(GLIBC_2.2)[1]|(GLIBC_2.2)[6] |(GLIBC_2.2)[1]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|getwchar(GLIBC_2.2)|vfwscanf      |wcsncasecmp    |wcstombs      |wmemset      |
|[6]                |(GLIBC_2.2)[1]|(GLIBC_2.2)[3] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[6]          |
|-------------------+--------------+---------------+--------------+-------------|
|mblen(GLIBC_2.2)[6]|vswprintf     |wcsncat        |wcstoq        |wprintf      |
|                   |(GLIBC_2.2)[1]|(GLIBC_2.2)[6] |(GLIBC_2.2)[3]|(GLIBC_2.2)  |
|                   |              |               |              |[1]          |
|-------------------+--------------+---------------+--------------+-------------|
|mbrlen(GLIBC_2.2)  |vswscanf      |wcsncmp        |wcstoul       |wscanf       |
|[6]                |(GLIBC_2.2)[1]|(GLIBC_2.2)[6] |(GLIBC_2.2)[6]|(GLIBC_2.2)  |
|                   |              |               |              |[1]          |
|-------------------+--------------+---------------+--------------+-------------|
|mbrtowc(GLIBC_2.2) |vwprintf      |wcsncpy        |wcstoull      |             |
|[6]                |(GLIBC_2.2)[1]|(GLIBC_2.2)[6] |(GLIBC_2.2)[1]|             |
+-------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

String Functions

Table 16-15. libc - String Functions Function Interfaces

+-------------------------------------------------------------------------------+
|__mempcpy          |bzero         |strcasestr    |strncasecmp   |strtoimax     |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[3]|(GLIBC_2.2)[6]|(GLIBC_2.2)[1]|
|-------------------+--------------+--------------+--------------+--------------|
|__rawmemchr        |ffs(GLIBC_2.2)|strcat        |strncat       |strtok        |
|(GLIBC_2.2)[3]     |[6]           |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|
|-------------------+--------------+--------------+--------------+--------------|
|__stpcpy(GLIBC_2.2)|index         |strchr        |strncmp       |strtok_r      |
|[3]                |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[3]|
|-------------------+--------------+--------------+--------------+--------------|
|__strdup(GLIBC_2.2)|memccpy       |strcmp        |strncpy       |strtold       |
|[3]                |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[1]|
|-------------------+--------------+--------------+--------------+--------------|
|__strtod_internal  |memchr        |strcoll       |strndup       |strtoll       |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[3]|(GLIBC_2.2)[1]|
|-------------------+--------------+--------------+--------------+--------------|
|__strtof_internal  |memcmp        |strcpy        |strnlen       |strtoq        |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[3]|(GLIBC_2.2)[3]|
|-------------------+--------------+--------------+--------------+--------------|
|__strtok_r         |memcpy        |strcspn       |strpbrk       |strtoull      |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[1]|
|-------------------+--------------+--------------+--------------+--------------|
|__strtol_internal  |memmove       |strdup        |strptime      |strtoumax     |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[3]|(GLIBC_2.2)[1]|
|-------------------+--------------+--------------+--------------+--------------|
|__strtold_internal |memrchr       |strerror      |strrchr       |strtouq       |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[3]|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[3]|
|-------------------+--------------+--------------+--------------+--------------|
|__strtoll_internal |memset        |strerror_r    |strsep        |strverscmp    |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[3]|(GLIBC_2.2)[3]|(GLIBC_2.2)[3]|
|-------------------+--------------+--------------+--------------+--------------|
|__strtoul_internal |rindex        |strfmon       |strsignal     |strxfrm       |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[3]|(GLIBC_2.2)[6]|
|-------------------+--------------+--------------+--------------+--------------|
|__strtoull_internal|stpcpy        |strfry        |strspn        |swab          |
|(GLIBC_2.2)[3]     |(GLIBC_2.2)[3]|(GLIBC_2.2)[3]|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|
|-------------------+--------------+--------------+--------------+--------------|
|bcmp(GLIBC_2.2)[6] |stpncpy       |strftime      |strstr        |              |
|                   |(GLIBC_2.2)[3]|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|              |
|-------------------+--------------+--------------+--------------+--------------|
|bcopy(GLIBC_2.2)[6]|strcasecmp    |strlen        |strtof        |              |
|                   |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]|(GLIBC_2.2)[1]|              |
+-------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

IPC Functions

Table 16-16. libc - IPC Functions Function Interfaces

+-----------------------------------------------------------------------------+
|ftok(GLIBC_2.2)[6]|msgrcv(GLIBC_2.2) |semget(GLIBC_2.2) |shmctl(GLIBC_2.2) | |
|                  |[6]               |[6]               |[6]               | |
|------------------+------------------+------------------+------------------+-|
|msgctl(GLIBC_2.2) |msgsnd(GLIBC_2.2) |semop(GLIBC_2.2)  |shmdt(GLIBC_2.2)  | |
|[6]               |[6]               |[6]               |[6]               | |
|------------------+------------------+------------------+------------------+-|
|msgget(GLIBC_2.2) |semctl(GLIBC_2.2) |shmat(GLIBC_2.2)  |shmget(GLIBC_2.2) | |
|[6]               |[6]               |[6]               |[6]               | |
+-----------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Regular Expressions

Table 16-17. libc - Regular Expressions Function Interfaces

+-----------------------------------------------------------------------------+
|advance(GLIBC_2.2)|re_exec(GLIBC_2.2)|regerror          |regfree(GLIBC_2.2)| |
|[6]               |[6]               |(GLIBC_2.2)[6]    |[6]               | |
|------------------+------------------+------------------+------------------+-|
|re_comp(GLIBC_2.2)|regcomp(GLIBC_2.2)|regexec(GLIBC_2.2)|step(GLIBC_2.2)[6]| |
|[6]               |[6]               |[6]               |                  | |
+-----------------------------------------------------------------------------+

Table 16-18. libc - Regular Expressions Data Interfaces

+---------------------------------------------------------------+
|loc1(GLIBC_2.2)[6] |loc2(GLIBC_2.2)[6] |locs(GLIBC_2.2)[6] | | |
+---------------------------------------------------------------+
-------------------------------------------------------------------------------

Character Type Functions

Table 16-19. libc - Character Type Functions Function Interfaces

+-----------------------------------------------------------------------------+
|__ctype_get_mb_cur_max|isdigit     |iswalnum     |iswlower      |toascii     |
|(GLIBC_2.2)[3]        |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)[6]|(GLIBC_2.2) |
|                      |[6]         |[6]          |              |[6]         |
|----------------------+------------+-------------+--------------+------------|
|_tolower(GLIBC_2.2)[6]|isgraph     |iswalpha     |iswprint      |tolower     |
|                      |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)[6]|(GLIBC_2.2) |
|                      |[6]         |[6]          |              |[6]         |
|----------------------+------------+-------------+--------------+------------|
|_toupper(GLIBC_2.2)[6]|islower     |iswblank     |iswpunct      |toupper     |
|                      |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)[6]|(GLIBC_2.2) |
|                      |[6]         |[7]          |              |[6]         |
|----------------------+------------+-------------+--------------+------------|
|isalnum(GLIBC_2.2)[6] |isprint     |iswcntrl     |iswspace      |            |
|                      |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)[6]|            |
|                      |[6]         |[6]          |              |            |
|----------------------+------------+-------------+--------------+------------|
|isalpha(GLIBC_2.2)[6] |ispunct     |iswctype     |iswupper      |            |
|                      |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)[6]|            |
|                      |[6]         |[3]          |              |            |
|----------------------+------------+-------------+--------------+------------|
|isascii(GLIBC_2.2)[6] |isspace     |iswdigit     |iswxdigit     |            |
|                      |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)[6]|            |
|                      |[6]         |[6]          |              |            |
|----------------------+------------+-------------+--------------+------------|
|iscntrl(GLIBC_2.2)[6] |isupper     |iswgraph     |isxdigit      |            |
|                      |(GLIBC_2.2) |(GLIBC_2.2)  |(GLIBC_2.2)[6]|            |
|                      |[6]         |[6]          |              |            |
+-----------------------------------------------------------------------------+

Table 16-20. libc - Character Type Functions Data Interfaces

+------------------------------------------------------------------------------+
|__ctype_b(GLIBC_2.2)|__ctype_tolower(GLIBC_2.2)|__ctype_toupper(GLIBC_2.2)| | |
|[3]                 |[3]                       |[3]                       | | |
+------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Time Manipulation

Table 16-21. libc - Time Manipulation Function Interfaces

+-------------------------------------------------------------------------------+
|adjtime        |asctime_r      |difftime       |localtime        |tzset        |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]   |(GLIBC_2.2)  |
|               |               |               |                 |[6]          |
|---------------+---------------+---------------+-----------------+-------------|
|adjtimex       |ctime          |gmtime         |localtime_r      |ualarm       |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6]   |(GLIBC_2.2)  |
|               |               |               |                 |[6]          |
|---------------+---------------+---------------+-----------------+-------------|
|asctime        |ctime_r        |gmtime_r       |mktime(GLIBC_2.2)|             |
|(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |(GLIBC_2.2)[6] |[6]              |             |
+-------------------------------------------------------------------------------+

Table 16-22. libc - Time Manipulation Data Interfaces

+-----------------------------------------------------------------------------+
|__daylight(GLIBC_2.2)[3] |__tzname(GLIBC_2.2)[3] |timezone(GLIBC_2.2)[6] | | |
|-------------------------+-----------------------+-----------------------+-+-|
|__timezone(GLIBC_2.2)[3] |daylight(GLIBC_2.2)[6] |tzname(GLIBC_2.2)[6]   | | |
+-----------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Terminal Interface Functions

Table 16-23. libc - Terminal Interface Functions Function Interfaces

+-------------------------------------------------------------------------------+
|cfgetispeed     |cfsetispeed     |tcdrain      |tcgetattr     |tcsendbreak     |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]  |
|                |                |[6]          |              |                |
|----------------+----------------+-------------+--------------+----------------|
|cfgetospeed     |cfsetospeed     |tcflow       |tcgetpgrp     |tcsetattr       |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]  |
|                |                |[6]          |              |                |
|----------------+----------------+-------------+--------------+----------------|
|cfmakeraw       |cfsetspeed      |tcflush      |tcgetsid      |tcsetpgrp       |
|(GLIBC_2.2)[3]  |(GLIBC_2.2)[3]  |(GLIBC_2.2)  |(GLIBC_2.2)[6]|(GLIBC_2.2)[6]  |
|                |                |[6]          |              |                |
+-------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

System Database Interface

Table 16-24. libc - System Database Interface Function Interfaces

+-----------------------------------------------------------------------------+
|endgrent      |getgrgid         |getpwent       |getutxent    |setprotoent   |
|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]   |(GLIBC_2.2)[6] |(GLIBC_2.2)  |(GLIBC_2.2)[5]|
|              |                 |               |[6]          |              |
|--------------+-----------------+---------------+-------------+--------------|
|endhostent    |getgrgid_r       |getpwnam       |getutxid     |setpwent      |
|(GLIBC_2.2)[5]|(GLIBC_2.2)[6]   |(GLIBC_2.2)[6] |(GLIBC_2.2)  |(GLIBC_2.2)[6]|
|              |                 |               |[6]          |              |
|--------------+-----------------+---------------+-------------+--------------|
|endnetent     |getgrnam         |getpwuid       |getutxline   |setservent    |
|(GLIBC_2.2)[5]|(GLIBC_2.2)[6]   |(GLIBC_2.2)[6] |(GLIBC_2.2)  |(GLIBC_2.2)[5]|
|              |                 |               |[6]          |              |
|--------------+-----------------+---------------+-------------+--------------|
|endprotoent   |gethostbyaddr    |getpwuid_r     |pututxline   |setutent      |
|(GLIBC_2.2)[5]|(GLIBC_2.2)[5]   |(GLIBC_2.2)[6] |(GLIBC_2.2)  |(GLIBC_2.2)[3]|
|              |                 |               |[6]          |              |
|--------------+-----------------+---------------+-------------+--------------|
|endpwent      |gethostbyname    |getservbyname  |setgrent     |setutxent     |
|(GLIBC_2.2)[6]|(GLIBC_2.2)[3]   |(GLIBC_2.2)[3] |(GLIBC_2.2)  |(GLIBC_2.2)[6]|
|              |                 |               |[6]          |              |
|--------------+-----------------+---------------+-------------+--------------|
|endservent    |getnetbyaddr     |getservbyport  |setgroups    |              |
|(GLIBC_2.2)[5]|(GLIBC_2.2)[5]   |(GLIBC_2.2)[5] |(GLIBC_2.2)  |              |
|              |                 |               |[3]          |              |
|--------------+-----------------+---------------+-------------+--------------|
|endutent      |getprotobyname   |getservent     |sethostent   |              |
|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]   |(GLIBC_2.2)[3] |(GLIBC_2.2)  |              |
|              |                 |               |[5]          |              |
|--------------+-----------------+---------------+-------------+--------------|
|endutxent     |getprotobynumber |getutent       |setmntent    |              |
|(GLIBC_2.2)[6]|(GLIBC_2.2)[5]   |(GLIBC_2.2)[3] |(GLIBC_2.2)  |              |
|              |                 |               |[3]          |              |
|--------------+-----------------+---------------+-------------+--------------|
|getgrent      |getprotoent      |getutent_r     |setnetent    |              |
|(GLIBC_2.2)[6]|(GLIBC_2.2)[6]   |(GLIBC_2.2)[3] |(GLIBC_2.2)  |              |
|              |                 |               |[5]          |              |
+-----------------------------------------------------------------------------+

Table 16-25. libc - System Database Interface Deprecated Function Interfaces

+-----------------------------------------------------------------------------+
|endhostent(GLIBC_2.2)[5]|sethostent(GLIBC_2.2)[5]|setmntent(GLIBC_2.2)[3]| | |
+-----------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Language Support

Table 16-26. libc - Language Support Function Interfaces

+------------------------------------------------------------------------------+
|__libc_start_main   |_obstack_begin    |_obstack_newchunk  |obstack_free    | |
|(GLIBC_2.2)[3]      |(GLIBC_2.2)[3]    |(GLIBC_2.2)[3]     |(GLIBC_2.2)[3]  | |
+------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Large File Support

Table 16-27. libc - Large File Support Function Interfaces

+----------------------------------------------------------------------------+
|__fxstat64     |fopen64       |ftello64       |mkstemp64     |readdir64     |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2]|
|---------------+--------------+---------------+--------------+--------------|
|__lxstat64     |freopen64     |ftruncate64    |mmap64        |statvfs64     |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2]|
|---------------+--------------+---------------+--------------+--------------|
|__xstat64      |fseeko64      |ftw64          |nftw64        |tmpfile64     |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2]|
|---------------+--------------+---------------+--------------+--------------|
|alphasort64    |fsetpos64     |getrlimit64    |open64        |truncate64    |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2]|
|---------------+--------------+---------------+--------------+--------------|
|creat64        |fstatfs64     |lockf64        |pread64       |              |
|(GLIBC_2.2)[2] |(GLIBC_2.2)[3]|(GLIBC_2.2)[2] |(GLIBC_2.2)[2]|              |
|---------------+--------------+---------------+--------------+--------------|
|fgetpos64      |fstatvfs64    |lseek64        |pwrite64      |              |
|(GLIBC_2.2)[2] |(GLIBC_2.2)[2]|(GLIBC_2.2)[2] |(GLIBC_2.2)[2]|              |
+----------------------------------------------------------------------------+

Table 16-28. libc - Large File Support Deprecated Function Interfaces

+---------------------------------------------------------+
|alphasort64(GLIBC_2.2)[3] |fstatfs64(GLIBC_2.2)[3] | | | |
+---------------------------------------------------------+
-------------------------------------------------------------------------------

Standard Library

Table 16-29. libc - Standard Library Function Interfaces

+-----------------------------------------------------------------------------+
|_Exit(GLIBC_2.2)|div(GLIBC_2.2)  |globfree64   |longjmp        |srand        |
|[1]             |[6]             |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[3]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__assert_fail   |drand48         |grantpt      |lrand48        |srand48      |
|(GLIBC_2.2)[3]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__cxa_atexit    |ecvt(GLIBC_2.2) |hcreate      |lsearch        |srandom      |
|(GLIBC_2.2)[3]  |[6]             |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__errno_location|erand48         |hdestroy     |makecontext    |strtod       |
|(GLIBC_2.2)[3]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__fpending      |err(GLIBC_2.2)  |hsearch      |malloc         |strtol       |
|(GLIBC_2.2)[3]  |[3]             |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__getpagesize   |error(GLIBC_2.2)|htonl        |memmem         |strtoul      |
|(GLIBC_2.2)[3]  |[3]             |(GLIBC_2.2)  |(GLIBC_2.2)[3] |(GLIBC_2.2)  |
|                |                |[5]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__isinf         |errx(GLIBC_2.2) |htons        |mkstemp        |swapcontext  |
|(GLIBC_2.2)[3]  |[3]             |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[5]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__isinff        |fcvt(GLIBC_2.2) |imaxabs      |mktemp         |syslog       |
|(GLIBC_2.2)[3]  |[6]             |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[1]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__isinfl        |fmtmsg          |imaxdiv      |mrand48        |system       |
|(GLIBC_2.2)[3]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[1]          |               |[3]          |
|----------------+----------------+-------------+---------------+-------------|
|__isnan         |fnmatch         |inet_addr    |nftw(GLIBC_2.2)|tdelete      |
|(GLIBC_2.2)[3]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |[6]            |(GLIBC_2.2)  |
|                |                |[5]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__isnanf        |fpathconf       |inet_aton    |nrand48        |tfind        |
|(GLIBC_2.2)[3]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[5]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__isnanl        |free(GLIBC_2.2) |inet_ntoa    |ntohl          |tmpfile      |
|(GLIBC_2.2)[3]  |[6]             |(GLIBC_2.2)  |(GLIBC_2.2)[5] |(GLIBC_2.2)  |
|                |                |[5]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|__sysconf       |freeaddrinfo    |inet_ntop    |ntohs          |tmpnam       |
|(GLIBC_2.2)[3]  |(GLIBC_2.2)[7]  |(GLIBC_2.2)  |(GLIBC_2.2)[5] |(GLIBC_2.2)  |
|                |                |[7]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|_exit(GLIBC_2.2)|ftrylockfile    |inet_pton    |openlog        |tsearch      |
|[6]             |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[7]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|_longjmp        |ftw(GLIBC_2.2)  |initstate    |perror         |ttyname      |
|(GLIBC_2.2)[6]  |[6]             |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|_setjmp         |funlockfile     |insque       |posix_memalign |ttyname_r    |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[4] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|a64l(GLIBC_2.2) |gai_strerror    |isatty       |ptsname        |twalk        |
|[6]             |(GLIBC_2.2)[7]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|abort(GLIBC_2.2)|gcvt(GLIBC_2.2) |isblank      |putenv         |unlockpt     |
|[6]             |[6]             |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[7]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|abs(GLIBC_2.2)  |getaddrinfo     |isinf        |qsort          |unsetenv     |
|[6]             |(GLIBC_2.2)[7]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[1]          |               |[3]          |
|----------------+----------------+-------------+---------------+-------------|
|atexit          |getcwd          |isinff       |rand(GLIBC_2.2)|usleep       |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |[6]            |(GLIBC_2.2)  |
|                |                |             |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|atof(GLIBC_2.2) |getdate         |isinfl       |rand_r         |verrx        |
|[6]             |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[1]          |               |[3]          |
|----------------+----------------+-------------+---------------+-------------|
|atoi(GLIBC_2.2) |getenv          |isnan        |random         |vfscanf      |
|[6]             |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[1]          |               |[1]          |
|----------------+----------------+-------------+---------------+-------------|
|atol(GLIBC_2.2) |getlogin        |isnanf       |random_r       |vscanf       |
|[6]             |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[3] |(GLIBC_2.2)  |
|                |                |[1]          |               |[1]          |
|----------------+----------------+-------------+---------------+-------------|
|atoll(GLIBC_2.2)|getnameinfo     |isnanl       |realloc        |vsscanf      |
|[1]             |(GLIBC_2.2)[7]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[1]          |               |[1]          |
|----------------+----------------+-------------+---------------+-------------|
|basename        |getopt          |jrand48      |realpath       |vsyslog      |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[3]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[3]          |
|----------------+----------------+-------------+---------------+-------------|
|bsearch         |getopt_long     |l64a         |remque         |warn         |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[3]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[3]          |
|----------------+----------------+-------------+---------------+-------------|
|calloc          |getopt_long_only|labs         |seed48         |warnx        |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[3]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |(GLIBC_2.2)  |
|                |                |[6]          |               |[3]          |
|----------------+----------------+-------------+---------------+-------------|
|closelog        |getsubopt       |lcong48      |setenv         |wordexp      |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[3] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|confstr         |gettimeofday    |ldiv         |sethostid      |wordfree     |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[3] |(GLIBC_2.2)  |
|                |                |[6]          |               |[6]          |
|----------------+----------------+-------------+---------------+-------------|
|cuserid         |glob(GLIBC_2.2) |lfind        |sethostname    |             |
|(GLIBC_2.2)[6]  |[6]             |(GLIBC_2.2)  |(GLIBC_2.2)[3] |             |
|                |                |[6]          |               |             |
|----------------+----------------+-------------+---------------+-------------|
|daemon          |glob64          |llabs        |setlogmask     |             |
|(GLIBC_2.2)[3]  |(GLIBC_2.2)[3]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |             |
|                |                |[1]          |               |             |
|----------------+----------------+-------------+---------------+-------------|
|dirname         |globfree        |lldiv        |setstate       |             |
|(GLIBC_2.2)[6]  |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)[6] |             |
|                |                |[1]          |               |             |
+-----------------------------------------------------------------------------+

Table 16-30. libc - Standard Library Data Interfaces

+------------------------------------------------------------------------------+
|__environ      |_sys_errlist     |getdate_err     |opterr       |optopt       |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[3]   |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |(GLIBC_2.2)  |
|               |                 |                |[3]          |[3]          |
|---------------+-----------------+----------------+-------------+-------------|
|_environ       |environ          |optarg          |optind       |             |
|(GLIBC_2.2)[3] |(GLIBC_2.2)[6]   |(GLIBC_2.2)[6]  |(GLIBC_2.2)  |             |
|               |                 |                |[3]          |             |
+------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Data Definitions for libc

This section contains standard data definitions that describe system data.
These definitions are organized into groups that correspond to system headers.
This convention is used as a convenience for the reader, and does not imply the
existence of these headers, or their content.

ISO C serves as the LSB reference programming language, and data definitions
are specified in ISO C format. The C language is used here as a convenient
notation. Using a C language description of these data objects does not
preclude their use by other programming languages.

-------------------------------------------------------------------------------

errno.h




#define EDEADLOCK       EDEADLK
-------------------------------------------------------------------------------

inttypes.h






typedef long intmax_t;
typedef unsigned long uintmax_t;
typedef unsigned long uintptr_t;
-------------------------------------------------------------------------------

limits.h

#define LONG_MAX        0x7FFFFFFFFFFFFFFFL
#define ULONG_MAX       0xFFFFFFFFFFFFFFFFUL






#define CHAR_MAX        SCHAR_MAX
#define CHAR_MIN        SCHAR_MIN
-------------------------------------------------------------------------------

setjmp.h






typedef long __jmp_buf[70] __attribute__ ((aligned (16)));
-------------------------------------------------------------------------------

signal.h
























struct sigaction
{
  union
  {
    __sighandler_t _sa_handler;
    void (*_sa_sigaction) (int, siginfo_t *, void *);
  }
  __sigaction_handler;
  unsigned long sa_flags;
  sigset_t sa_mask;
}
 ;





struct ia64_fpreg
{
  union
  {
    unsigned long bits[2];
  }
  u;
}
__attribute__ ((aligned (16)));





struct sigcontext
{
  unsigned long sc_flags;
  unsigned long sc_nat;
  stack_t sc_stack;
  unsigned long sc_ip;
  unsigned long sc_cfm;
  unsigned long sc_um;
  unsigned long sc_ar_rsc;
  unsigned long sc_ar_bsp;
  unsigned long sc_ar_rnat;
  unsigned long sc_ar_ccv;
  unsigned long sc_ar_unat;
  unsigned long sc_ar_fpsr;
  unsigned long sc_ar_pfs;
  unsigned long sc_ar_lc;
  unsigned long sc_pr;
  unsigned long sc_br[8];
  unsigned long sc_gr[32];
  struct ia64_fpreg sc_fr[128];
  unsigned long sc_rbs_base;
  unsigned long sc_loadrs;
  unsigned long sc_rsvd[14];
  unsigned long sc_mask;
}
 ;
-------------------------------------------------------------------------------

stddef.h



typedef long ptrdiff_t;
typedef unsigned long size_t;
-------------------------------------------------------------------------------

sys/ioctl.h

#define FIONREAD        0x541B
#define TIOCNOTTY       0x5422
-------------------------------------------------------------------------------

sys/ipc.h



struct ipc_perm
{
  key_t __key;
  uid_t uid;
  gid_t gid;
  uid_t cuid;
  uid_t cgid;
  mode_t mode;
  unsigned short __seq;
  unsigned short __pad1;
  unsigned long __unused1;
  unsigned long __unused2;
}
 ;
-------------------------------------------------------------------------------

sys/mman.h

#define MCL_CURRENT     1
#define MCL_FUTURE      2
-------------------------------------------------------------------------------

sys/msg.h









struct msqid_ds
{
  struct ipc_perm msg_perm;
  time_t msg_stime;
  time_t msg_rtime;
  time_t msg_ctime;
  unsigned long __msg_cbytes;
  unsigned long msg_qnum;
  unsigned long msg_qbytes;
  pid_t msg_lspid;
  pid_t msg_lrpid;
  unsigned long __unused1;
  unsigned long __unused2;
}
 ;
-------------------------------------------------------------------------------

sys/sem.h



struct semid_ds
{
  struct ipc_perm sem_perm;
  time_t sem_otime;
  time_t sem_ctime;
  unsigned long sem_nsems;
  unsigned long __unused1;
  unsigned long __unused2;
}
 ;
-------------------------------------------------------------------------------

sys/shm.h

#define SHMLBA  (1024*1024)








struct shmid_ds
{
  struct ipc_perm shm_perm;
  size_t shm_segsz;
  time_t shm_atime;
  time_t shm_dtime;
  time_t shm_ctime;
  pid_t shm_cpid;
  pid_t shm_lpid;
  unsigned long shm_nattch;
  unsigned long __unused1;
  unsigned long __unused2;
}
 ;
-------------------------------------------------------------------------------

sys/stat.h

#define _STAT_VER       1


struct stat
{
  unsigned long st_dev;
  unsigned long st_ino;
  unsigned long st_nlink;
  unsigned int st_mode;
  unsigned int st_uid;
  unsigned int st_gid;
  unsigned int pad0;
  unsigned long st_rdev;
  unsigned long st_size;
  unsigned long st_atime;
  unsigned long __reserved0;
  unsigned long st_mtime;
  unsigned long __reserved1;
  unsigned long st_ctime;
  unsigned long __reserved2;
  unsigned long st_blksize;
  long st_blocks;
  unsigned long __unused[3];
}
 ;
struct stat64
{
  unsigned long st_dev;
  unsigned long st_ino;
  unsigned long st_nlink;
  unsigned int st_mode;
  unsigned int st_uid;
  unsigned int st_gid;
  unsigned int pad0;
  unsigned long st_rdev;
  unsigned long st_size;
  unsigned long st_atime;
  unsigned long __reserved0;
  unsigned long st_mtime;
  unsigned long __reserved1;
  unsigned long st_ctime;
  unsigned long __reserved2;
  unsigned long st_blksize;
  long st_blocks;
  unsigned long __unused[3];
}
 ;
-------------------------------------------------------------------------------

sys/statvfs.h



struct statvfs
{
  unsigned long f_bsize;
  unsigned long f_frsize;
  fsblkcnt64_t f_blocks;
  fsblkcnt64_t f_bfree;
  fsblkcnt64_t f_bavail;
  fsfilcnt64_t f_files;
  fsfilcnt64_t f_ffree;
  fsfilcnt64_t f_favail;
  unsigned long f_fsid;
  unsigned long f_flag;
  unsigned long f_namemax;
  unsigned int __f_spare[6];
}
 ;
struct statvfs64
{
  unsigned long f_bsize;
  unsigned long f_frsize;
  fsblkcnt64_t f_blocks;
  fsblkcnt64_t f_bfree;
  fsblkcnt64_t f_bavail;
  fsfilcnt64_t f_files;
  fsfilcnt64_t f_ffree;
  fsfilcnt64_t f_favail;
  unsigned long f_fsid;
  unsigned long f_flag;
  unsigned long f_namemax;
  unsigned int __f_spare[6];
}
 ;
-------------------------------------------------------------------------------

sys/types.h



typedef int64_t ssize_t;
-------------------------------------------------------------------------------

termios.h

#define OLCUC   0000002
#define ONLCR   0000004
#define XCASE   0000004
#define NLDLY   0000400
#define CR1     0001000
#define IUCLC   0001000
#define CR2     0002000
#define CR3     0003000
#define CRDLY   0003000
#define TAB1    0004000
#define TAB2    0010000
#define TAB3    0014000
#define TABDLY  0014000
#define BS1     0020000
#define BSDLY   0020000
#define VT1     0040000
#define VTDLY   0040000
#define FF1     0100000
#define FFDLY   0100000









#define VSUSP   10
#define VEOL    11
#define VREPRINT        12
#define VDISCARD        13
#define VWERASE 14
#define VEOL2   16
#define VMIN    6
#define VSWTC   7
#define VSTART  8
#define VSTOP   9



#define IXON    0002000
#define IXOFF   0010000






#define CS6     0000020
#define CS7     0000040
#define CS8     0000060
#define CSIZE   0000060
#define CSTOPB  0000100
#define CREAD   0000200
#define PARENB  0000400
#define PARODD  0001000
#define HUPCL   0002000
#define CLOCAL  0004000
#define VTIME   5



#define ISIG    0000001
#define ICANON  0000002
#define ECHOE   0000020
#define ECHOK   0000040
#define ECHONL  0000100
#define NOFLSH  0000200
#define TOSTOP  0000400
#define ECHOCTL 0001000
#define ECHOPRT 0002000
#define ECHOKE  0004000
#define FLUSHO  0010000
#define PENDIN  0040000
#define IEXTEN  0100000
-------------------------------------------------------------------------------

ucontext.h

#define _SC_GR0_OFFSET  (((char *) & ((struct sigcontext *) 0)->sc_gr[0]) - (char *) 0)


























typedef struct sigcontext mcontext_t;


typedef struct ucontext
{
  union
  {
    mcontext_t _mc;
    struct
    {
      unsigned long _pad[_SC_GR0_OFFSET / 8];
      struct ucontext *_link;
    }
    _uc;
  }
  _u;
}
ucontext_t;
-------------------------------------------------------------------------------

unistd.h



typedef long intptr_t;
-------------------------------------------------------------------------------

Interfaces for libm

Table 16-31. libm Definition

+---------------------+
|Library:|libm        |
|--------+------------|
|SONAME: |libm.so.6.1 |
+---------------------+

The behavior of the interfaces in this library is specified by the following
standards.

ISO/IEC 9899: 1999, Programming Languages --C[10]                              
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5   
(ISBN: 1-85912-181-0, C606)[11]                                                

-------------------------------------------------------------------------------

Math

Table 16-32. libm - Math Function Interfaces

+------------------------------------------------------------------------------+
|acos         |cexp          |expf(GLIBC_2.2)  |jnf(GLIBC_2.2) |remquof        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |[10]           |(GLIBC_2.2)[10]|
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|acosf        |cexpf         |expl(GLIBC_2.2)  |jnl(GLIBC_2.2) |remquol        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |[10]           |(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|acosh        |cexpl         |expm1(GLIBC_2.2) |ldexp          |rint(GLIBC_2.2)|
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |(GLIBC_2.2)[11]|[11]           |
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|acoshf       |cimag         |fabs(GLIBC_2.2)  |ldexpf         |rintf          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|acoshl       |cimagf        |fabsf(GLIBC_2.2) |ldexpl         |rintl          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|acosl        |cimagl        |fabsl(GLIBC_2.2) |lgamma         |round          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[11]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|asin         |clog          |fdim(GLIBC_2.2)  |lgamma_r       |roundf         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|asinf        |clog10        |fdimf(GLIBC_2.2) |lgammaf        |roundl         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|asinh        |clog10f       |fdiml(GLIBC_2.2) |lgammaf_r      |scalb          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[11]|
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|asinhf       |clog10l       |feclearexcept    |lgammal        |scalbf         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|asinhl       |clogf         |fegetenv         |lgammal_r      |scalbl         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|asinl        |clogl         |fegetexceptflag  |llrint         |scalbln        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atan         |conj          |fegetround       |llrintf        |scalblnf       |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atan2        |conjf         |feholdexcept     |llrintl        |scalblnl       |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atan2f       |conjl         |feraiseexcept    |llround        |scalbn         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atan2l       |copysign      |fesetenv         |llroundf       |scalbnf        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atanf        |copysignf     |fesetexceptflag  |llroundl       |scalbnl        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atanh        |copysignl     |fesetround       |log(GLIBC_2.2) |significand    |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |[11]           |(GLIBC_2.2)[10]|
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atanhf       |cos(GLIBC_2.2)|fetestexcept     |log10          |significandf   |
|(GLIBC_2.2)  |[11]          |(GLIBC_2.2)[10]  |(GLIBC_2.2)[11]|(GLIBC_2.2)[10]|
|[10]         |              |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atanhl       |cosf          |feupdateenv      |log10f         |significandl   |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|atanl        |cosh          |finite(GLIBC_2.2)|log10l         |sin(GLIBC_2.2) |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |(GLIBC_2.2)[10]|[11]           |
|[10]         |[11]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cabs         |coshf         |finitef          |log1p          |sincos         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |(GLIBC_2.2)[11]|(GLIBC_2.2)[10]|
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cabsf        |coshl         |finitel          |logb(GLIBC_2.2)|sincosf        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |(GLIBC_2.2)[10]  |[11]           |(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cabsl        |cosl          |floor(GLIBC_2.2) |logf(GLIBC_2.2)|sincosl        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |[10]           |(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cacos        |cpow          |floorf(GLIBC_2.2)|logl(GLIBC_2.2)|sinf(GLIBC_2.2)|
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |[10]           |[10]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cacosf       |cpowf         |floorl(GLIBC_2.2)|lrint          |sinh(GLIBC_2.2)|
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[11]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cacosh       |cpowl         |fma(GLIBC_2.2)   |lrintf         |sinhf          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cacoshf      |cproj         |fmaf(GLIBC_2.2)  |lrintl         |sinhl          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cacoshl      |cprojf        |fmal(GLIBC_2.2)  |lround         |sinl(GLIBC_2.2)|
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[10]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cacosl       |cprojl        |fmax(GLIBC_2.2)  |lroundf        |sqrt(GLIBC_2.2)|
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[11]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|carg         |creal         |fmaxf(GLIBC_2.2) |lroundl        |sqrtf          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cargf        |crealf        |fmaxl(GLIBC_2.2) |matherr        |sqrtl          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cargl        |creall        |fmin(GLIBC_2.2)  |modf(GLIBC_2.2)|tan(GLIBC_2.2) |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |[11]           |[11]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|casin        |csin          |fminf(GLIBC_2.2) |modff          |tanf(GLIBC_2.2)|
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[10]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|casinf       |csinf         |fminl(GLIBC_2.2) |modfl          |tanh(GLIBC_2.2)|
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[11]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|casinh       |csinh         |fmod(GLIBC_2.2)  |nan(GLIBC_2.2) |tanhf          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |[10]           |(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|casinhf      |csinhf        |fmodf(GLIBC_2.2) |nanf(GLIBC_2.2)|tanhl          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |[10]           |(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|casinhl      |csinhl        |fmodl(GLIBC_2.2) |nanl(GLIBC_2.2)|tanl(GLIBC_2.2)|
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |[10]           |[10]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|casinl       |csinl         |frexp(GLIBC_2.2) |nearbyint      |tgamma         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|catan        |csqrt         |frexpf(GLIBC_2.2)|nearbyintf     |tgammaf        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|catanf       |csqrtf        |frexpl(GLIBC_2.2)|nearbyintl     |tgammal        |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|catanh       |csqrtl        |gamma(GLIBC_2.2) |nextafter      |trunc          |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |(GLIBC_2.2)[11]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|catanhf      |ctan          |gammaf(GLIBC_2.2)|nextafterf     |truncf         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|catanhl      |ctanf         |gammal(GLIBC_2.2)|nextafterl     |truncl         |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|(GLIBC_2.2)[10]|
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|catanl       |ctanh         |hypot(GLIBC_2.2) |nexttoward     |y0(GLIBC_2.2)  |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |(GLIBC_2.2)[10]|[11]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cbrt         |ctanhf        |hypotf(GLIBC_2.2)|nexttowardf    |y0f(GLIBC_2.2) |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[10]           |
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cbrtf        |ctanhl        |hypotl(GLIBC_2.2)|nexttowardl    |y0l(GLIBC_2.2) |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[10]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|cbrtl        |ctanl         |ilogb(GLIBC_2.2) |pow(GLIBC_2.2) |y1(GLIBC_2.2)  |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[11]             |[10]           |[11]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ccos         |dremf         |ilogbf(GLIBC_2.2)|pow10          |y1f(GLIBC_2.2) |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[10]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ccosf        |dreml         |ilogbl(GLIBC_2.2)|pow10f         |y1l(GLIBC_2.2) |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|[10]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ccosh        |erf(GLIBC_2.2)|j0(GLIBC_2.2)[11]|pow10l         |yn(GLIBC_2.2)  |
|(GLIBC_2.2)  |[11]          |                 |(GLIBC_2.2)[10]|[11]           |
|[10]         |              |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ccoshf       |erfc          |j0f(GLIBC_2.2)   |powf(GLIBC_2.2)|ynf(GLIBC_2.2) |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |[10]           |[10]           |
|[10]         |[11]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ccoshl       |erfcf         |j0l(GLIBC_2.2)   |powl(GLIBC_2.2)|ynl(GLIBC_2.2) |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |[10]           |[10]           |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ccosl        |erfcl         |j1(GLIBC_2.2)[11]|remainder      |               |
|(GLIBC_2.2)  |(GLIBC_2.2)   |                 |(GLIBC_2.2)[11]|               |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ceil         |erff          |j1f(GLIBC_2.2)   |remainderf     |               |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|               |
|[11]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ceilf        |erfl          |j1l(GLIBC_2.2)   |remainderl     |               |
|(GLIBC_2.2)  |(GLIBC_2.2)   |[10]             |(GLIBC_2.2)[10]|               |
|[10]         |[10]          |                 |               |               |
|-------------+--------------+-----------------+---------------+---------------|
|ceill        |exp(GLIBC_2.2)|jn(GLIBC_2.2)[11]|remquo         |               |
|(GLIBC_2.2)  |[11]          |                 |(GLIBC_2.2)[10]|               |
|[10]         |              |                 |               |               |
+------------------------------------------------------------------------------+

Table 16-33. libm - Math Data Interfaces

+-------------------------------+
|signgam(GLIBC_2.2)[11] | | | | |
+-------------------------------+
-------------------------------------------------------------------------------

Data Definitions for libm

This section contains standard data definitions that describe system data.
These definitions are organized into groups that correspond to system headers.
This convention is used as a convenience for the reader, and does not imply the
existence of these headers, or their content.

ISO C serves as the LSB reference programming language, and data definitions
are specified in ISO C format. The C language is used here as a convenient
notation. Using a C language description of these data objects does not
preclude their use by other programming languages.

-------------------------------------------------------------------------------

Interfaces for libpthread

Table 16-34. libpthread Definition

+-------------------------+
|Library:|libpthread      |
|--------+----------------|
|SONAME: |libpthread.so.0 |
+-------------------------+

The behavior of the interfaces in this library is specified by the following
standards.

Linux Standard Base[12]                                                        
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5   
(ISBN: 1-85912-181-0, C606)[13]                                                

-------------------------------------------------------------------------------

Posix Threads

Table 16-35. libpthread - Posix Threads Function Interfaces

+----------------------------------------------------------------------------------------------------------------------------------------+
|pthread_attr_destroy        |pthread_attr_setstackaddr|pthread_getspecific         |pthread_once(GLIBC_2.2)[13]  |pthread_setcanceltype |
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |                             |(GLIBC_2.2)[13]       |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_getdetachstate |pthread_attr_setstacksize|pthread_join(GLIBC_2.2)[13] |pthread_rwlock_destroy       |pthread_setconcurrency|
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |                            |(GLIBC_2.2)[13]              |(GLIBC_2.2)[13]       |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_getguardsize   |pthread_cancel(GLIBC_2.2)|pthread_key_create          |pthread_rwlock_init          |pthread_setschedparam |
|(GLIBC_2.2)[13]             |[13]                     |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |(GLIBC_2.2)[13]       |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_getinheritsched|pthread_cond_broadcast   |pthread_key_delete          |pthread_rwlock_rdlock        |pthread_setspecific   |
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |(GLIBC_2.2)[13]       |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_getschedparam  |pthread_cond_destroy     |pthread_kill(GLIBC_2.2)[13] |pthread_rwlock_timedrdlock   |pthread_sigmask       |
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |                            |(GLIBC_2.2)[13]              |(GLIBC_2.2)[13]       |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_getschedpolicy |pthread_cond_init        |pthread_mutex_destroy       |pthread_rwlock_timedwrlock   |pthread_testcancel    |
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |(GLIBC_2.2)[13]       |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_getscope       |pthread_cond_signal      |pthread_mutex_init          |pthread_rwlock_tryrdlock     |sem_close(GLIBC_2.2)  |
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |[13]                  |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_getstackaddr   |pthread_cond_timedwait   |pthread_mutex_lock          |pthread_rwlock_trywrlock     |sem_destroy(GLIBC_2.2)|
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |[13]                  |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_getstacksize   |pthread_cond_wait        |pthread_mutex_trylock       |pthread_rwlock_unlock        |sem_getvalue          |
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |(GLIBC_2.2)[13]       |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_init(GLIBC_2.2)|pthread_condattr_destroy |pthread_mutex_unlock        |pthread_rwlock_wrlock        |sem_init(GLIBC_2.2)   |
|[13]                        |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |[13]                  |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_setdetachstate |pthread_condattr_init    |pthread_mutexattr_destroy   |pthread_rwlockattr_destroy   |sem_open(GLIBC_2.2)   |
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |[13]                  |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_setguardsize   |pthread_create(GLIBC_2.2)|pthread_mutexattr_getpshared|pthread_rwlockattr_getpshared|sem_post(GLIBC_2.2)   |
|(GLIBC_2.2)[13]             |[13]                     |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |[13]                  |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_setinheritsched|pthread_detach(GLIBC_2.2)|pthread_mutexattr_gettype   |pthread_rwlockattr_init      |sem_timedwait         |
|(GLIBC_2.2)[13]             |[13]                     |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |(GLIBC_2.2)[12]       |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_setschedparam  |pthread_equal(GLIBC_2.2) |pthread_mutexattr_init      |pthread_rwlockattr_setpshared|sem_trywait(GLIBC_2.2)|
|(GLIBC_2.2)[13]             |[13]                     |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |[13]                  |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_setschedpolicy |pthread_exit(GLIBC_2.2)  |pthread_mutexattr_setpshared|pthread_self(GLIBC_2.2)[13]  |sem_unlink(GLIBC_2.2) |
|(GLIBC_2.2)[13]             |[13]                     |(GLIBC_2.2)[13]             |                             |[13]                  |
|----------------------------+-------------------------+----------------------------+-----------------------------+----------------------|
|pthread_attr_setscope       |pthread_getschedparam    |pthread_mutexattr_settype   |pthread_setcancelstate       |sem_wait(GLIBC_2.2)   |
|(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]          |(GLIBC_2.2)[13]             |(GLIBC_2.2)[13]              |[13]                  |
+----------------------------------------------------------------------------------------------------------------------------------------+
-------------------------------------------------------------------------------

Data Definitions for libpthread

This section contains standard data definitions that describe system data.
These definitions are organized into groups that correspond to system headers.
This convention is used as a convenience for the reader, and does not imply the
existence of these headers, or their content.

ISO C serves as the LSB reference programming language, and data definitions
are specified in ISO C format. The C language is used here as a convenient
notation. Using a C language description of these data objects does not
preclude their use by other programming languages.

-------------------------------------------------------------------------------

Interfaces for libdl

Table 16-36. libdl Definition

+--------------------+
|Library:|libdl      |
|--------+-----------|
|SONAME: |libdl.so.2 |
+--------------------+

-------------------------------------------------------------------------------

Dynamic Loader

-------------------------------------------------------------------------------

Data Definitions for libdl

This section contains standard data definitions that describe system data.
These definitions are organized into groups that correspond to system headers.
This convention is used as a convenience for the reader, and does not imply the
existence of these headers, or their content.

ISO C serves as the LSB reference programming language, and data definitions
are specified in ISO C format. The C language is used here as a convenient
notation. Using a C language description of these data objects does not
preclude their use by other programming languages.

-------------------------------------------------------------------------------

Interfaces for libcrypt

Table 16-37. libcrypt Definition

+-----------------------+
|Library:|libcrypt      |
|--------+--------------|
|SONAME: |libcrypt.so.1 |
+-----------------------+

-------------------------------------------------------------------------------

Encryption

-------------------------------------------------------------------------------

Data Definitions for libcrypt

This section contains standard data definitions that describe system data.
These definitions are organized into groups that correspond to system headers.
This convention is used as a convenience for the reader, and does not imply the
existence of these headers, or their content.

ISO C serves as the LSB reference programming language, and data definitions
are specified in ISO C format. The C language is used here as a convenient
notation. Using a C language description of these data objects does not
preclude their use by other programming languages.

VI. Package Format and Installation

Table of Contents
17. Software Installation

-------------------------------------------------------------------------------

Chapter 17. Software Installation

-------------------------------------------------------------------------------

Package Architecture Considerations

All packages must specify an architecture of IA64. A LSB runtime environment
must accept an architecture of IA64 even if the native architecture is
different.

The archnum value in the Lead Section shall be 0x0009.

-------------------------------------------------------------------------------

Appendix A. Alphabetical Listing of Interfaces

-------------------------------------------------------------------------------

Appendix B. GNU Free Documentation License

Version 1.1, March 2000

    Copyright (C) 2000 Free Software Foundation, Inc. 59 Temple Place, Suite
    330, Boston, MA 02111-1307 USA Everyone is permitted to copy and distribute
    verbatim copies of this license document, but changing it is not allowed.
   
-------------------------------------------------------------------------------

PREAMBLE

The purpose of this License is to make a manual, textbook, or other written
document "free" in the sense of freedom: to assure everyone the effective
freedom to copy and redistribute it, with or without modifying it, either
commercially or noncommercially. Secondarily, this License preserves for the
author and publisher a way to get credit for their work, while not being
considered responsible for modifications made by others.

This License is a kind of "copyleft", which means that derivative works of the
document must themselves be free in the same sense. It complements the GNU
General Public License, which is a copyleft license designed for free software.

We have designed this License in order to use it for manuals for free software,
because free software needs free documentation: a free program should come with
manuals providing the same freedoms that the software does. But this License is
not limited to software manuals; it can be used for any textual work,
regardless of subject matter or whether it is published as a printed book. We
recommend this License principally for works whose purpose is instruction or
reference.

-------------------------------------------------------------------------------

APPLICABILITY AND DEFINITIONS

This License applies to any manual or other work that contains a notice placed
by the copyright holder saying it can be distributed under the terms of this
License. The "Document", below, refers to any such manual or work. Any member
of the public is a licensee, and is addressed as "you".

A "Modified Version" of the Document means any work containing the Document or
a portion of it, either copied verbatim, or with modifications and/or
translated into another language.

A "Secondary Section" is a named appendix or a front-matter section of the
Document that deals exclusively with the relationship of the publishers or
authors of the Document to the Document's overall subject (or to related
matters) and contains nothing that could fall directly within that overall
subject. (For example, if the Document is in part a textbook of mathematics, a
Secondary Section may not explain any mathematics.) The relationship could be a
matter of historical connection with the subject or with related matters, or of
legal, commercial, philosophical, ethical or political position regarding them.

The "Invariant Sections" are certain Secondary Sections whose titles are
designated, as being those of Invariant Sections, in the notice that says that
the Document is released under this License.

The "Cover Texts" are certain short passages of text that are listed, as
Front-Cover Texts or Back-Cover Texts, in the notice that says that the
Document is released under this License.

A "Transparent" copy of the Document means a machine-readable copy, represented
in a format whose specification is available to the general public, whose
contents can be viewed and edited directly and straightforwardly with generic
text editors or (for images composed of pixels) generic paint programs or (for
drawings) some widely available drawing editor, and that is suitable for input
to text formatters or for automatic translation to a variety of formats
suitable for input to text formatters. A copy made in an otherwise Transparent
file format whose markup has been designed to thwart or discourage subsequent
modification by readers is not Transparent. A copy that is not "Transparent" is
called "Opaque".

Examples of suitable formats for Transparent copies include plain ASCII without
markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly
available DTD, and standard-conforming simple HTML designed for human
modification. Opaque formats include PostScript, PDF, proprietary formats that
can be read and edited only by proprietary word processors, SGML or XML for
which the DTD and/or processing tools are not generally available, and the
machine-generated HTML produced by some word processors for output purposes
only.

The "Title Page" means, for a printed book, the title page itself, plus such
following pages as are needed to hold, legibly, the material this License
requires to appear in the title page. For works in formats which do not have
any title page as such, "Title Page" means the text near the most prominent
appearance of the work's title, preceding the beginning of the body of the
text.

-------------------------------------------------------------------------------

VERBATIM COPYING

You may copy and distribute the Document in any medium, either commercially or
noncommercially, provided that this License, the copyright notices, and the
license notice saying this License applies to the Document are reproduced in
all copies, and that you add no other conditions whatsoever to those of this
License. You may not use technical measures to obstruct or control the reading
or further copying of the copies you make or distribute. However, you may
accept compensation in exchange for copies. If you distribute a large enough
number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and you may
publicly display copies.

-------------------------------------------------------------------------------

COPYING IN QUANTITY

If you publish printed copies of the Document numbering more than 100, and the
Document's license notice requires Cover Texts, you must enclose the copies in
covers that carry, clearly and legibly, all these Cover Texts: Front-Cover
Texts on the front cover, and Back-Cover Texts on the back cover. Both covers
must also clearly and legibly identify you as the publisher of these copies.
The front cover must present the full title with all words of the title equally
prominent and visible. You may add other material on the covers in addition.
Copying with changes limited to the covers, as long as they preserve the title
of the Document and satisfy these conditions, can be treated as verbatim
copying in other respects.

If the required texts for either cover are too voluminous to fit legibly, you
should put the first ones listed (as many as fit reasonably) on the actual
cover, and continue the rest onto adjacent pages.

If you publish or distribute Opaque copies of the Document numbering more than
100, you must either include a machine-readable Transparent copy along with
each Opaque copy, or state in or with each Opaque copy a publicly-accessible
computer-network location containing a complete Transparent copy of the
Document, free of added material, which the general network-using public has
access to download anonymously at no charge using public-standard network
protocols. If you use the latter option, you must take reasonably prudent
steps, when you begin distribution of Opaque copies in quantity, to ensure that
this Transparent copy will remain thus accessible at the stated location until
at least one year after the last time you distribute an Opaque copy (directly
or through your agents or retailers) of that edition to the public.

It is requested, but not required, that you contact the authors of the Document
well before redistributing any large number of copies, to give them a chance to
provide you with an updated version of the Document.

-------------------------------------------------------------------------------

MODIFICATIONS

You may copy and distribute a Modified Version of the Document under the
conditions of sections 2 and 3 above, provided that you release the Modified
Version under precisely this License, with the Modified Version filling the
role of the Document, thus licensing distribution and modification of the
Modified Version to whoever possesses a copy of it. In addition, you must do
these things in the Modified Version:

 A. Use in the Title Page (and on the covers, if any) a title distinct from
    that of the Document, and from those of previous versions (which should, if
    there were any, be listed in the History section of the Document). You may
    use the same title as a previous version if the original publisher of that
    version gives permission.
   
 B. List on the Title Page, as authors, one or more persons or entities
    responsible for authorship of the modifications in the Modified Version,
    together with at least five of the principal authors of the Document (all
    of its principal authors, if it has less than five).
   
 C. State on the Title page the name of the publisher of the Modified Version,
    as the publisher.
   
 D. Preserve all the copyright notices of the Document.
   
 E. Add an appropriate copyright notice for your modifications adjacent to the
    other copyright notices.
   
 F. Include, immediately after the copyright notices, a license notice giving
    the public permission to use the Modified Version under the terms of this
    License, in the form shown in the Addendum below.
   
 G. Preserve in that license notice the full lists of Invariant Sections and
    required Cover Texts given in the Document's license notice.
   
 H. Include an unaltered copy of this License.
   
 I. Preserve the section entitled "History", and its title, and add to it an
    item stating at least the title, year, new authors, and publisher of the
    Modified Version as given on the Title Page. If there is no section
    entitled "History" in the Document, create one stating the title, year,
    authors, and publisher of the Document as given on its Title Page, then add
    an item describing the Modified Version as stated in the previous sentence.
   
 J. Preserve the network location, if any, given in the Document for public
    access to a Transparent copy of the Document, and likewise the network
    locations given in the Document for previous versions it was based on.
    These may be placed in the "History" section. You may omit a network
    location for a work that was published at least four years before the
    Document itself, or if the original publisher of the version it refers to
    gives permission.
   
 K. In any section entitled "Acknowledgements" or "Dedications", preserve the
    section's title, and preserve in the section all the substance and tone of
    each of the contributor acknowledgements and/or dedications given therein.
   
 L. Preserve all the Invariant Sections of the Document, unaltered in their
    text and in their titles. Section numbers or the equivalent are not
    considered part of the section titles.
   
 M. Delete any section entitled "Endorsements". Such a section may not be
    included in the Modified Version.
   
 N. Do not retitle any existing section as "Endorsements" or to conflict in
    title with any Invariant Section.
   
If the Modified Version includes new front-matter sections or appendices that
qualify as Secondary Sections and contain no material copied from the Document,
you may at your option designate some or all of these sections as invariant. To
do this, add their titles to the list of Invariant Sections in the Modified
Version's license notice. These titles must be distinct from any other section
titles.

You may add a section entitled "Endorsements", provided it contains nothing but
endorsements of your Modified Version by various parties--for example,
statements of peer review or that the text has been approved by an organization
as the authoritative definition of a standard.

You may add a passage of up to five words as a Front-Cover Text, and a passage
of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts
in the Modified Version. Only one passage of Front-Cover Text and one of
Back-Cover Text may be added by (or through arrangements made by) any one
entity. If the Document already includes a cover text for the same cover,
previously added by you or by arrangement made by the same entity you are
acting on behalf of, you may not add another; but you may replace the old one,
on explicit permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License give
permission to use their names for publicity for or to assert or imply
endorsement of any Modified Version.

-------------------------------------------------------------------------------

COMBINING DOCUMENTS

You may combine the Document with other documents released under this License,
under the terms defined in section 4 above for modified versions, provided that
you include in the combination all of the Invariant Sections of all of the
original documents, unmodified, and list them all as Invariant Sections of your
combined work in its license notice.

The combined work need only contain one copy of this License, and multiple
identical Invariant Sections may be replaced with a single copy. If there are
multiple Invariant Sections with the same name but different contents, make the
title of each such section unique by adding at the end of it, in parentheses,
the name of the original author or publisher of that section if known, or else
a unique number. Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections entitled "History" in the
various original documents, forming one section entitled "History"; likewise
combine any sections entitled "Acknowledgements", and any sections entitled
"Dedications". You must delete all sections entitled "Endorsements."

-------------------------------------------------------------------------------

COLLECTIONS OF DOCUMENTS

You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this License
in the various documents with a single copy that is included in the collection,
provided that you follow the rules of this License for verbatim copying of each
of the documents in all other respects.

You may extract a single document from such a collection, and distribute it
individually under this License, provided you insert a copy of this License
into the extracted document, and follow this License in all other respects
regarding verbatim copying of that document.

-------------------------------------------------------------------------------

AGGREGATION WITH INDEPENDENT WORKS

A compilation of the Document or its derivatives with other separate and
independent documents or works, in or on a volume of a storage or distribution
medium, does not as a whole count as a Modified Version of the Document,
provided no compilation copyright is claimed for the compilation. Such a
compilation is called an "aggregate", and this License does not apply to the
other self-contained works thus compiled with the Document, on account of their
being thus compiled, if they are not themselves derivative works of the
Document.

If the Cover Text requirement of section 3 is applicable to these copies of the
Document, then if the Document is less than one quarter of the entire
aggregate, the Document's Cover Texts may be placed on covers that surround
only the Document within the aggregate. Otherwise they must appear on covers
around the whole aggregate.

-------------------------------------------------------------------------------

TRANSLATION

Translation is considered a kind of modification, so you may distribute
translations of the Document under the terms of section 4. Replacing Invariant
Sections with translations requires special permission from their copyright
holders, but you may include translations of some or all Invariant Sections in
addition to the original versions of these Invariant Sections. You may include
a translation of this License provided that you also include the original
English version of this License. In case of a disagreement between the
translation and the original English version of this License, the original
English version will prevail.

-------------------------------------------------------------------------------

TERMINATION

You may not copy, modify, sublicense, or distribute the Document except as
expressly provided for under this License. Any other attempt to copy, modify,
sublicense or distribute the Document is void, and will automatically terminate
your rights under this License. However, parties who have received copies, or
rights, from you under this License will not have their licenses terminated so
long as such parties remain in full compliance.

-------------------------------------------------------------------------------

FUTURE REVISIONS OF THIS LICENSE

The Free Software Foundation may publish new, revised versions of the GNU Free
Documentation License from time to time. Such new versions will be similar in
spirit to the present version, but may differ in detail to address new problems
or concerns. See http://www.gnu.org/copyleft/.

Each version of the License is given a distinguishing version number. If the
Document specifies that a particular numbered version of this License "or any
later version" applies to it, you have the option of following the terms and
conditions either of that specified version or of any later version that has
been published (not as a draft) by the Free Software Foundation. If the
Document does not specify a version number of this License, you may choose any
version ever published (not as a draft) by the Free Software Foundation.

-------------------------------------------------------------------------------

How to use this License for your documents

To use this License in a document you have written, include a copy of the
License in the document and put the following copyright and license notices
just after the title page:

    Copyright (c) YEAR YOUR NAME. Permission is granted to copy, distribute and
    /or modify this document under the terms of the GNU Free Documentation
    License, Version 1.1 or any later version published by the Free Software
    Foundation; with the Invariant Sections being LIST THEIR TITLES, with the
    Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST. A
    copy of the license is included in the section entitled "GNU Free
    Documentation License".
   
If you have no Invariant Sections, write "with no Invariant Sections" instead
of saying which ones are invariant. If you have no Front-Cover Texts, write "no
Front-Cover Texts" instead of "Front-Cover Texts being LIST"; likewise for
Back-Cover Texts.

If your document contains nontrivial examples of program code, we recommend
releasing these examples in parallel under your choice of free software
license, such as the GNU General Public License, to permit their use in free
software.

-------------------------------------------------------------------------------

Appendix C. Build Environment

Introduction

This section is informative, and carries no normative requirements on the
ItaniumTM Application Binary Interface. The interfaces described here should be
available in an ItaniumTM LSB Build Environment. An LSB Build Environment is a
platform on which LSB conforming applications can be built from source code.
Platforms providing an LSB Build Environment need not provide an LSB Runtime
Environment.

-------------------------------------------------------------------------------

Build Environment

A conforming LSB Build Environment should provide a compiler capable of
producing objects that conform to this standard.

Such a compiler should provide the following predefined symbols, pre-processor
assertions, and compiler pragmas.

-------------------------------------------------------------------------------

Pre-Defined Preprocessor Symbols

Table C-1. Pre-Defined Preprocessor Symbols

+----------------------------------------------------------------------------------+
|Symbol       |Description                                                         |
|-------------+--------------------------------------------------------------------|
|__ia64       |This symbol should be used when testing for the target architecture |
|             |at compile time. The initial value shall be 1. Further information  |
|             |on the architecture can be determined from the ELF header flags.    |
|-------------+--------------------------------------------------------------------|
|_LP64        |Value is defined as 1. The architecture supports 64 bit longs, long |
|             |longs, and pointers. Integers are 32 bit.                           |
+----------------------------------------------------------------------------------+

    Note: The gcc compiler currently pre-defines the symbol __LP64__, but not
    the symbol _LP64. The gcc team are aware of this deficiency.
   
-------------------------------------------------------------------------------

Pre-Defined Preprocessor Assertions

Preprocessor assertions are deprecated, and conforming applications should not
require any preprocessor assertion support. LSB Conforming Build Environments
are not required to provide any predefined preprocessor assertions.

    Note: The Intel® Itanium TM Processor-specific Application Binary Interface
    requires preprocessor assertion support. However, this feature is
    deprecated in some compilers (most notably gcc), and applications should
    not use it.
   
-------------------------------------------------------------------------------

Compiler Pragmas

The Intel® Itanium TM Processor-specific Application Binary Interface, chapter
7.2.3, defines a number of compiler pragmas specific to the Intel ItaniumTM
compiler. These pragmas are not required to be supported by other compilers.

-------------------------------------------------------------------------------

ILP32 ABI

Support for the IA32/ILP32 ABI is optional. See Intel® Itanium TM
Processor-specific Application Binary Interface Chapter 7.3.

-------------------------------------------------------------------------------

Synchronization Primitives

The synchronization primitives listed below should be available to applications
in the LSB Build Environment for ItaniumTM. These intrinsic functions need not
be provided in any system library, and the compiler may treat these as inline
functions in all cases. See Intel® Itanium TM Processor-specific Application
Binary Interface, Chapter 7.4 for details.

Table C-2. Intrinsic Functions

+-------------------------------------------------------------------------------------------------+
|Symbol                      |Description                                                         |
|----------------------------+--------------------------------------------------------------------|
|__sync_fetch_and_add        |Atomically add a value to a referenced location and return the      |
|                            |previous value                                                      |
|----------------------------+--------------------------------------------------------------------|
|__sync_fetch_and_sub        |Atomically subtract a value from a referenced location and return   |
|                            |the previous value                                                  |
|----------------------------+--------------------------------------------------------------------|
|__sync_fetch_and_or         |Atomically bitwise or a value with a referenced location and return |
|                            |the previous value                                                  |
|----------------------------+--------------------------------------------------------------------|
|__sync_fetch_and_and        |Atomically bitwise and a value with a referenced location and return|
|                            |the previous value                                                  |
|----------------------------+--------------------------------------------------------------------|
|__sync_fetch_and_xor        |Atomically bitwise exclusive or a value with a referenced location  |
|                            |and return the previous value                                       |
|----------------------------+--------------------------------------------------------------------|
|__sync_fetch_and_nand       |Atomically bitwise not-and a value with a referenced location and   |
|                            |return the previous value                                           |
|----------------------------+--------------------------------------------------------------------|
|__sync_add_and_fetch        |Atomically add a value to a referenced location and return the new  |
|                            |value                                                               |
|----------------------------+--------------------------------------------------------------------|
|__sync_sub_and_fetch        |Atomically subtract a value from a referenced location and return   |
|                            |the new value                                                       |
|----------------------------+--------------------------------------------------------------------|
|__sync_or_and_fetch         |Atomically bitwise or a value with a referenced location and return |
|                            |the new value                                                       |
|----------------------------+--------------------------------------------------------------------|
|__sync_and_and_fetch        |Atomically bitwise and a value with a referenced location and return|
|                            |the new value                                                       |
|----------------------------+--------------------------------------------------------------------|
|__sync_xor_and_fetch        |Atomically bitwise exclusive or a value with a referenced location  |
|                            |and return the new value                                            |
|----------------------------+--------------------------------------------------------------------|
|__sync_nand_and_fetch       |Atomically bitwise not-and a value with a referenced location and   |
|                            |return the new value                                                |
|----------------------------+--------------------------------------------------------------------|
|__sync_bool_compare_and_swap|Atomically compare a referenced location with a given value. If     |
|                            |equal, replace the contents of the location with a new value, and   |
|                            |return 1 (true), otherwise return 0 (false).                        |
|----------------------------+--------------------------------------------------------------------|
|__sync_val_compare_and_swap |Atomically compare a referenced location with a given value. If     |
|                            |equal, replace the contents of the location with a new value. Return|
|                            |the resulting value.                                                |
|----------------------------+--------------------------------------------------------------------|
|__sync_synchronize          |A synchronization point.                                            |
|----------------------------+--------------------------------------------------------------------|
|__sync_lock_test_and_set    |Atomically set a referenced location to a value and return the old  |
|                            |value. Acquire a lock on the referenced location.                   |
|----------------------------+--------------------------------------------------------------------|
|__sync_lock_release         |Release a lock acquired previously.                                 |
+-------------------------------------------------------------------------------------------------+
 

-------------------------------------------------------------------------------

Thread-Local Storage

See Intel® Itanium TM Processor-specific Application Binary Interface Chapter
7.4.

Notes

[1]  ISO/IEC 9899: 1999, Programming Languages --C                             
                                                                               
[2]  Large File Support                                                        
                                                                               
[3]  Linux Standard Base                                                       
                                                                               
[4]  IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996]                               
                                                                               
[5]  CAE Specification, February 1997, Networking Services (XNS), Issue 5(ISBN:
     1-85912-165-9, C523)                                                      
                                                                               
[6]  CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue
     5 (ISBN: 1-85912-181-0, C606)                                             
                                                                               
[7]  The Single UNIX® Specification(SUS) Version 3                             
                                                                               
[8]  System V Interface Definition, Issue 3 (ISBN 0201566524)                  
                                                                               
[9]  System V Interface Definition,Fourth Edition                              
                                                                               
[10] ISO/IEC 9899: 1999, Programming Languages --C                             
                                                                               
[11] CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue
     5 (ISBN: 1-85912-181-0, C606)                                             
                                                                               
[12] Linux Standard Base                                                       
                                                                               
[13] CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue
     5 (ISBN: 1-85912-181-0, C606)                                             

