     1	Linux Standard Base Specification 1.0.0
     2	
     3	Copyright © 2000, 2001 by Free Standards Group
     4	
     5	This material may be distributed only subject to the terms and conditions set
     6	forth in the Open Publication License, v1.0 or later (the latest version is
     7	presently available at http://www.opencontent.org/openpub/) and provided that
     8	neither the name of the Free Standards Group, the name of the Linux Standard
     9	Base, nor the names of its contributors may be used to endorse or promote
    10	derived works without specific prior written permission.
    11	
    12	Portions of the text were taken from other copyrighted documents in accordance
    13	with the respective license of those documents.
    14	
    15	-------------------------------------------------------------------------------
    16	
    17	Table of Contents
    18	I. Introduction
    19	
    20	    1. Introduction
    21	
    22	        Introduction
    23	        Purpose
    24	        Related Standards
    25	        Related Implementations
    26	        Relevant Libraries
    27	        How to Use this Standard
    28	        Definitions
    29	        Terminology
    30	
    31	II. Object Format
    32	
    33	    2. Object Files
    34	    3. Sections
    35	
    36	        ELF Section Types
    37	        Linux Section Types
    38	
    39	    4. Special Sections
    40	
    41	        ELF Special Sections
    42	        Linux Special Sections
    43	
    44	    5. Symbol Mapping
    45	
    46	        C Language
    47	        C++ Language
    48	
    49	    6. Symbol Versioning
    50	
    51	        Symbol Version Table
    52	        Version Definitions
    53	        Version Requirements
    54	        Startup Sequence
    55	        Symbol Resolution
    56	
    57	III. Dynamic Linking
    58	
    59	    7. Program Loading and Dynamic Linking
    60	    8. Dynamic Entries
    61	
    62	        ELF Dynamic Entries
    63	        Linux Dynamic Entries
    64	
    65	    9. Program Interpreter
    66	
    67	         
    68	
    69	IV. Base Libraries
    70	
    71	    10. Libraries
    72	
    73	        Interfaces for libc
    74	        Data Definitions for libc
    75	        Interface Definitions for libc
    76	        Interfaces for libm
    77	        Data Definitions for libm
    78	        Interfaces for libpthread
    79	        Data Definitions for libpthread
    80	        Interfaces for libdl
    81	        Data Definitions for libdl
    82	        Interface Definitions for libdl
    83	        Interfaces for libcrypt
    84	        Data Definitions for libcrypt
    85	        Interfaces for librt
    86	        Data Definitions for librt
    87	
    88	V. Utility Libraries
    89	
    90	    11. Libraries
    91	
    92	        Interfaces for libz
    93	        Interfaces for libncurses
    94	        Data Definitions for libncurses
    95	        Interfaces for libutil
    96	        Interface Definitions for libutil
    97	
    98	VI. Graphic Libraries
    99	
   100	    12. Libraries
   101	
   102	        Interfaces for libX11
   103	        Data Definitions for libX11
   104	        Interfaces for libXext
   105	        Data Definitions for libXext
   106	        Interfaces for libSM
   107	        Data Definitions for libSM
   108	        Interfaces for libICE
   109	        Data Definitions for libICE
   110	        Interfaces for libXt
   111	        Interface Definitions for libXt
   112	        Interfaces for libGL
   113	        Data Definitions for libGL
   114	
   115	VII. Package Format and Installation
   116	
   117	    13. Software Installation
   118	
   119	        Package Format
   120	        Package Tools
   121	        Package Naming
   122	        Package Dependencies
   123	
   124	VIII. Commands and Utilities
   125	
   126	    14. Command and Utilities
   127	
   128	        Command and Utilities
   129	        Command Behavior
   130	
   131	IX. Standard Shell
   132	
   133	    15. Standard Shell
   134	
   135	        Introduction
   136	        Standard Shell Exception: pathname of $0
   137	        Standard Shell Exception: sourcing non-executable files
   138	
   139	X. Users & Groups
   140	
   141	    16. Users & Groups
   142	
   143	        User and Group Database
   144	        User & Group Names
   145	        UID Ranges
   146	
   147	XI. File System Hierarchy
   148	
   149	    17. FHS
   150	
   151	        Minimal granted Directory and File permissions
   152	        Recommendations for applications on ownership and permissions
   153	
   154	XII. System Initialization
   155	
   156	    18. System Initialization
   157	
   158	        Cron Jobs
   159	        Run Levels
   160	        Init Script Actions
   161	        Comment conventions for init scripts
   162	        Installation and removal of init.d files
   163	        Facility names
   164	        Script names
   165	        Init script Functions
   166	
   167	A. Alphabetical Listing of Interfaces
   168	
   169	    libX11
   170	    libXt
   171	    libm
   172	    libGL
   173	    libXext
   174	    libICE
   175	    libSM
   176	    libdl
   177	    libcrypt
   178	    libz
   179	    libncurses
   180	    libutil
   181	    libc
   182	    libpthread
   183	    librt
   184	
   185	B. How To Create An LSB Compliant Application
   186	
   187	    Application Binary Interface
   188	    Application Programming Interface
   189	    LSB Compliance
   190	    LSB Setup and Environment
   191	    LSB Compliance Example
   192	    LSB Non-Compliance Example
   193	
   194	List of Tables
   195	1-1. Related Standards
   196	1-2. Related Implementations
   197	1-3. Relevant Libraries
   198	3-1. ELF Section Types
   199	3-2. Linux Section Types
   200	4-1. ELF Special Sections
   201	4-2. Linux Special Sections
   202	8-1. ELF Dynamic Entries
   203	8-2. Linux Dynamic Entries
   204	10-1. libc - System Calls Function Interfaces
   205	10-2. libc - System Calls Data Interfaces
   206	10-3. libc - Standard I/O Function Interfaces
   207	10-4. libc - Standard I/O Data Interfaces
   208	10-5. libc - Signal Handling Function Interfaces
   209	10-6. libc - Signal Handling Data Interfaces
   210	10-7. libc - Standard Library Function Interfaces
   211	10-8. libc - Standard Library Data Interfaces
   212	10-9. libc - Localization Functions Function Interfaces
   213	10-10. libc - Localization Functions Data Interfaces
   214	10-11. libc - Socket Interface Function Interfaces
   215	10-12. libc - Socket Interface Data Interfaces
   216	10-13. libc - Wide Characters Function Interfaces
   217	10-14. libc - String Functions Function Interfaces
   218	10-15. libc - IPC Functions Function Interfaces
   219	10-16. libc - Regular Expressions Function Interfaces
   220	10-17. libc - Regular Expressions Data Interfaces
   221	10-18. libc - Character Type Functions Function Interfaces
   222	10-19. libc - Character Type Functions Data Interfaces
   223	10-20. libc - Time Manipulation Function Interfaces
   224	10-21. libc - Time Manipulation Data Interfaces
   225	10-22. libc - Terminal Interface Functions Function Interfaces
   226	10-23. libc - System Database Interface Function Interfaces
   227	10-24. libc - Language Support Function Interfaces
   228	10-25. libc - Large File Support Function Interfaces
   229	10-26. libm - Math Function Interfaces
   230	10-27. libm - Math Data Interfaces
   231	10-28. libpthread - Posix Threads Function Interfaces
   232	10-29. libdl Definition
   233	10-30. libdl - Dynamic Loader Function Interfaces
   234	10-31. libcrypt Definition
   235	10-32. libcrypt - Encryption Function Interfaces
   236	10-33. librt - Asynchronous I/O Function Interfaces
   237	11-1. libz Definition
   238	11-2. libz - Compression Library Function Interfaces
   239	11-3. libncurses Definition
   240	11-4. libncurses - Curses Function Interfaces
   241	11-5. libncurses - Curses Data Interfaces
   242	11-6. libutil - Utility Functions Function Interfaces
   243	12-1. libX11 Definition
   244	12-2. libX11 - X Windows Interface Function Interfaces
   245	12-3. libXext Definition
   246	12-4. libXext - X Shape Extension Function Interfaces
   247	12-5. libXext - X Display Power Managment Signaling Extension Function
   248	    Interfaces
   249	12-6. libXext - X Shared Memory Extensions Function Interfaces
   250	12-7. libXext - X Security Extension Function Interfaces
   251	12-8. libXext - X Synchronization Extension Function Interfaces
   252	12-9. libXext - X Double Buffer Extension Function Interfaces
   253	12-10. libSM Definition
   254	12-11. libSM - Session Management Functions Function Interfaces
   255	12-12. libICE Definition
   256	12-13. libICE - ICE Functions Function Interfaces
   257	12-14. libXt Definition
   258	12-15. libXt - X Toolkit Function Interfaces
   259	12-16. libXt - X Toolkit Data Interfaces
   260	12-17. libGL Definition
   261	12-18. libGL - GL X interface Function Interfaces
   262	12-19. libGL - OpenGL Function Interfaces
   263	14-1. Commands and Utilities
   264	16-1. Required User & Group Names
   265	16-2. Optional User & Group Names
   266	A-1. libX11 Function Interfaces
   267	A-2. libXt Function Interfaces
   268	A-3. libXt Data Interfaces
   269	A-4. libm Function Interfaces
   270	A-5. libm Data Interfaces
   271	A-6. libGL Function Interfaces
   272	A-7. libXext Function Interfaces
   273	A-8. libICE Function Interfaces
   274	A-9. libSM Function Interfaces
   275	A-10. libdl Function Interfaces
   276	A-11. libcrypt Function Interfaces
   277	A-12. libz Function Interfaces
   278	A-13. libncurses Function Interfaces
   279	A-14. libncurses Data Interfaces
   280	A-15. libutil Function Interfaces
   281	A-16. libc Function Interfaces
   282	A-17. libc Data Interfaces
   283	A-18. libpthread Function Interfaces
   284	A-19. librt Function Interfaces
   285	B-1. ABI: High Level View
   286	B-2. ABI: Component View
   287	
   288	List of Figures
   289	6-1. Version Definition Entries
   290	6-2. Version Definition Auxiliary Entries
   291	6-3. Version Needed Entries
   292	6-4. Version Needed Auxiliary Entries
   293	
   294	I. Introduction
   295	
   296	Table of Contents
   297	1. Introduction
   298	
   299	-------------------------------------------------------------------------------
   300	
   301	Chapter 1. Introduction
   302	
   303	Introduction
   304	
   305	This is version 1.0.0 of the Linux Standard Base Specification. An
   306	implementation of this version of the specification may not claim to be an
   307	implementation of the Linux Standard Base unless it has successfully completed
   308	the compliance proces as defined by the Free Standards Group.
   309	
   310	-------------------------------------------------------------------------------
   311	
   312	Purpose
   313	
   314	The Linux Standard Base (LSB) defines a system interface for compiled
   315	applications and a minimal environment for support of installation scripts. Its
   316	purpose is to enable a uniform industry standard environment for high-volume
   317	applications conforming to the LSB.
   318	
   319	The LSB defines a binary interface for application programs that are compiled
   320	and packaged for LSB-conforming implementations on many different hardware
   321	architectures. Since a binary specification must include information specific
   322	to the computer processor architecture for which it is intended, it is not
   323	possible for a single document to specify the interface for all possible
   324	LSB-conforming implementations. Therefore, the LSB is a family of
   325	specifications, rather than a single one.
   326	
   327	The LSB is composed of two basic parts: A common part of the specification
   328	describes those parts of the interface that remain constant across all hardware
   329	implementations of the LSB, and an architecture-specific part of the
   330	specification describes the parts of the specification that are specific to a
   331	particular processor architecture. Together, the generic LSB and the
   332	architecture-specific supplement for a single hardware architecture provide a
   333	complete interface specification for compiled application programs on systems
   334	that share a common hardware architecture.
   335	
   336	This document is the generic LSB. It must be used in conjunction with an
   337	architecture-specific supplement. Whenever a section of this specification must
   338	be supplemented by architecture-specific information, this document includes a
   339	reference to the architecture supplement. Architecture supplements may also
   340	contain additional information that is not referenced here.
   341	
   342	This document should be used in conjunction with the documents it references.
   343	This document enumerates the system components it includes, but descriptions of
   344	those components may be included entirely or partly in this document, partly in
   345	other documents, or entirely in other reference documents. For example, the
   346	section that describes system service routines includes a list of the system
   347	routines supported in this interface, formal declarations of the data
   348	structures they use that are visible to applications, and a pointer to the
   349	underlying referenced specification for information about the syntax and
   350	semantics of each call. Only those routines not described in standards
   351	referenced by this document, or extensions to those standards, are described in
   352	the detail. Information referenced in this way is as much a part of this
   353	document as is the information explicitly included here.
   354	
   355	-------------------------------------------------------------------------------
   356	
   357	Related Standards
   358	
   359	The specifications listed below are referenced in whole or in part by the Linux
   360	Standard Base. Such references may be normative or non-normative; a reference
   361	to specification shall only be considered normative if it is explicitly cited
   362	as such. The LSB may make normative references to a portion of these
   363	specifications (that is, to define a specific function or group of functions);
   364	in such cases, only the explicitly referenced portion of the specification is
   365	to be considered normative.
   366	
   367	Table 1-1. Related Standards
   368	
   369	+-----------------------------------------------------------------------------+
   370	|ABIUpdate      |System V Application Binary |http://www.sco.com/ |           |
   371	|               |Interface - DRAFT - 22 June |developer/gabi/     |           |
   372	|               |2000                        |2000-07-17/         |           |
   373	|               |                            |contents.html       |           |
   374	|---------------+----------------------------+--------------------+-----------|
   375	|FHS            |Filesystem Hierarchy        |http://             |           |
   376	|               |Standard 2.2                |www.pathname.com/fhs|           |
   377	|---------------+----------------------------+--------------------+-----------|
   378	|FLTPNT         |IEEE Standard for Binary    |http://www.ieee.org |ANSI/IEEE  |
   379	|               |Floating-Point Arithmetic   |                    |Standards  |
   380	|               |                            |                    |745-1985   |
   381	|               |                            |                    |and        |
   382	|               |                            |                    |854-1987   |
   383	|---------------+----------------------------+--------------------+-----------|
   384	|gABI_41        |System VApplication Binary  |http://www.sco.com/ |           |
   385	|               |Interface, Edition 4.1      |developer/devspecs/ |           |
   386	|               |                            |gabi41.pdf          |           |
   387	|---------------+----------------------------+--------------------+-----------|
   388	|IA32-ABI-4     |System V Application Binary |http://www.sco.com/ |           |
   389	|               |Interface - Intel386        |developer/devspecs/ |           |
   390	|               |Architecture Processor      |abi386-4.pdf        |           |
   391	|               |Supplement                  |                    |           |
   392	|---------------+----------------------------+--------------------+-----------|
   393	|IA64conventions|Itanium(R) Software         |http://             |           |
   394	|               |Conventions & Runtime       |developer.intel.com/|           |
   395	|               |Architecture Guide          |design/ia-64/       |           |
   396	|               |                            |downloads/245358.htm|           |
   397	|---------------+----------------------------+--------------------+-----------|
   398	|ISOC90         |ISO/IEC 9899: 1990,         |                    |           |
   399	|               |Programming Languages --C.  |                    |           |
   400	|---------------+----------------------------+--------------------+-----------|
   401	|ISOC99         |ISO/IEC 9899: 1999,         |                    |           |
   402	|               |Programming Languages --C   |                    |           |
   403	|---------------+----------------------------+--------------------+-----------|
   404	|LANANA         |Linux Assigned Names And    |http://             |           |
   405	|               |Numbers Authority           |www.lanana.org/     |           |
   406	|---------------+----------------------------+--------------------+-----------|
   407	|LFS            |Large File Support          |http://             |           |
   408	|               |                            |www.UNIX-systems.org|           |
   409	|               |                            |/version2/whatsnew/ |           |
   410	|               |                            |lfs20mar.html       |           |
   411	|---------------+----------------------------+--------------------+-----------|
   412	|LSB            |Linux Standard Base         |http://             |           |
   413	|               |                            |www.linuxbase.org/  |           |
   414	|               |                            |spec/               |           |
   415	|---------------+----------------------------+--------------------+-----------|
   416	|OGL            |OpenGL® Application Binary  |http://oss.sgi.com/ |           |
   417	|               |Interface for Linux         |projects/ogl-sample/|           |
   418	|               |                            |ABI/                |           |
   419	|---------------+----------------------------+--------------------+-----------|
   420	|POSIX.2        |IEEE Std POSIX 1003.2-1992  |http://www.ieee.org |           |
   421	|               |(ISO/IEC 9945-2:1993)       |                    |           |
   422	|---------------+----------------------------+--------------------+-----------|
   423	|pthreads       |POSIX 1003.1c               |http://www.ieee.org |           |
   424	|---------------+----------------------------+--------------------+-----------|
   425	|SUS-CURSES     |CAE Specification, May 1996,|http://             |           |
   426	|               |X/Open Curses, Issue 4,     |www.opengroup.org   |           |
   427	|               |Version 2 (ISBN:            |                    |           |
   428	|               |1-85912-171-3, C610), plus  |                    |           |
   429	|               |Corrigendum U018            |                    |           |
   430	|---------------+----------------------------+--------------------+-----------|
   431	|SUS-XBD        |CAE Specification, January  |http://             |           |
   432	|               |1997, System Interface      |www.opengroup.org   |           |
   433	|               |Definitions (XBD), Issue 5  |                    |           |
   434	|               |(ISBN: 1-85912-186-1, C605) |                    |           |
   435	|---------------+----------------------------+--------------------+-----------|
   436	|SUS-XCU        |CAE Specification, January  |http://             |           |
   437	|               |1997, Commands and Utilities|www.opengroup.org   |           |
   438	|               |(XCU), Issue 5(ISBN:        |                    |           |
   439	|               |1-85912-191-8, C604)        |                    |           |
   440	|---------------+----------------------------+--------------------+-----------|
   441	|SUS-XNS        |CAE Specification, February |http://             |           |
   442	|               |1997, Networking Services   |www.opengroup.org/  |           |
   443	|               |(XNS), Issue 5 (ISBN:       |                    |           |
   444	|               |1-85912-165-9, C523)        |                    |           |
   445	|---------------+----------------------------+--------------------+-----------|
   446	|SUS-XSH        |CAE Specification, January  |http://             |           |
   447	|               |1997, System Interfaces and |www.opengroup.org/  |           |
   448	|               |Headers (XSH), Issue 5      |                    |           |
   449	|               |(ISBN: 1-85912-181-0, C606) |                    |           |
   450	|---------------+----------------------------+--------------------+-----------|
   451	|SUS-XSH95      |The Single UNIX             |http://             |           |
   452	|               |Specification Version 1     |www.opengroup.org/  |           |
   453	|               |(UNIX 95) System Interfaces |                    |           |
   454	|               |& Headers                   |                    |           |
   455	|---------------+----------------------------+--------------------+-----------|
   456	|SVID.3         |System V Interface          |                    |ISBN       |
   457	|               |Definition, Issue 3         |                    |0201566524 |
   458	|---------------+----------------------------+--------------------+-----------|
   459	|X-dbe          |Double Buffer Extension     |http://www.x.org/   |           |
   460	|               |Library                     |                    |           |
   461	|---------------+----------------------------+--------------------+-----------|
   462	|X-DPMS         |X Display Power Management  |http://www.x.org/   |           |
   463	|               |Signaling (DPMS) Extension, |                    |           |
   464	|               |Library Specification       |                    |           |
   465	|---------------+----------------------------+--------------------+-----------|
   466	|X-Record       |X Record Extension Library  |http://www.x.org/   |           |
   467	|---------------+----------------------------+--------------------+-----------|
   468	|X-security     |Security Extension          |http://www.x.org/   |           |
   469	|               |Specification, Version 7.1  |                    |           |
   470	|---------------+----------------------------+--------------------+-----------|
   471	|X-shape        |X Nonrectangular Window     |http://www.x.org/   |           |
   472	|               |Shape Extension Library     |                    |           |
   473	|               |Version 1.0                 |                    |           |
   474	|---------------+----------------------------+--------------------+-----------|
   475	|X-shm          |MIT-SHM--The MIT Shared     |http://www.x.org/   |           |
   476	|               |Memory Extension            |                    |           |
   477	|---------------+----------------------------+--------------------+-----------|
   478	|X-sync         |X Synchronization Extension |http://www.x.org/   |           |
   479	|               |Library                     |                    |           |
   480	|---------------+----------------------------+--------------------+-----------|
   481	|X-test         |XTEST Extension Library     |http://www.x.org/   |           |
   482	|---------------+----------------------------+--------------------+-----------|
   483	|XICE           |X11R6.4 X Inter-Client      |http://www.x.org    |           |
   484	|               |Exchange (ICE) Protocol     |                    |           |
   485	|---------------+----------------------------+--------------------+-----------|
   486	|XINPUT         |X11R6.4 X11 Input Extension |http://www.x.org    |           |
   487	|               |Library                     |                    |           |
   488	|---------------+----------------------------+--------------------+-----------|
   489	|Xlib           |X11R6.4 Xlib - C library    |http://www.x.org    |           |
   490	|---------------+----------------------------+--------------------+-----------|
   491	|XPG4           |X/Open Portability Guide,   |http://             |           |
   492	|               |Issue 4                     |www.opengroup.org   |           |
   493	|---------------+----------------------------+--------------------+-----------|
   494	|XSM            |X11R6.4 X Session Management|http://www.x.org    |           |
   495	|               |Library                     |                    |           |
   496	|---------------+----------------------------+--------------------+-----------|
   497	|Xt             |X11R.4 X Toolkit Intrinsics |http://www.x.org    |           |
   498	|---------------+----------------------------+--------------------+-----------|
   499	|zlib           |zlib 1.1.3 Manual           |http://www.gzip.org/|See "zlib  |
   500	|               |                            |zlib/               |Manual" on |
   501	|               |                            |                    |that site  |
   502	+-----------------------------------------------------------------------------+
   503	-------------------------------------------------------------------------------
   504	
   505	Related Implementations
   506	
   507	The implementations listed here are referenced in whole or in part by the Linux
   508	Standard Base when no formal specification is available.
   509	
   510	Table 1-2. Related Implementations
   511	
   512	+-----------------------------------------------------------------------------+
   513	|BSD   |BSD 4.4 Lite    |                  |                                  |
   514	|      |version 2       |                  |                                  |
   515	|------+----------------+------------------+----------------------------------|
   516	|Linux |GNU/Linux       |http://www.gnu.org|                                  |
   517	|      |defacto standard|/                 |                                  |
   518	|------+----------------+------------------+----------------------------------|
   519	|RPC & |RFC 1831 & 1832 |http://           |Still need API reference, instead |
   520	|XDR   |                |www.ietf.org      |of protocol reference             |
   521	|------+----------------+------------------+----------------------------------|
   522	|RPM   |RPM Package     |http://           |                                  |
   523	|      |Format V3.0     |www.rpmdp.org/    |                                  |
   524	|      |                |rpmbook/          |                                  |
   525	+-----------------------------------------------------------------------------+
   526	-------------------------------------------------------------------------------
   527	
   528	Relevant Libraries
   529	
   530	The Libraries listed here are available on a Linux Standard Base conforming
   531	system. This list may be supplemented or amended by the architecture specific
   532	specifications.
   533	
   534	Table 1-3. Relevant Libraries
   535	
   536	+---------------------------+
   537	|Library   |Runtime Name    |
   538	|----------+----------------|
   539	|libX11    |libX11.so.6     |
   540	|----------+----------------|
   541	|libXt     |libXt.so.6      |
   542	|----------+----------------|
   543	|libGL     |libGL.so.1      |
   544	|----------+----------------|
   545	|libXext   |libXext.so.6    |
   546	|----------+----------------|
   547	|libICE    |libICE.so.6     |
   548	|----------+----------------|
   549	|libSM     |libSM.so.6      |
   550	|----------+----------------|
   551	|libdl     |libdl.so.2      |
   552	|----------+----------------|
   553	|libcrypt  |libcrypt.so.1   |
   554	|----------+----------------|
   555	|libz      |libz.so.1       |
   556	|----------+----------------|
   557	|libncurses|libncurses.so.5 |
   558	+---------------------------+
   559	
   560	These libraries will be in an implementation-dependent directory which the
   561	dynamic linker will search by default".
   562	
   563	-------------------------------------------------------------------------------
   564	
   565	How to Use this Standard
   566	
   567	The complete LSB specification is composed of this generic LSB specification
   568	and the supplemental processor-specific specification for a particular
   569	processor architecture. These two documents constitute a specification that
   570	should be used in conjunction with the publicly-available standards documents
   571	it references. The LSB enumerates the system components it includes, but
   572	descriptions of those components may be included entirely in the LSB, partly in
   573	the LSB and partly in other documents, or entirely in other reference
   574	documents.
   575	
   576	Programmers who wish to produce binary applications that will run on any
   577	LSB-conforming implementation should refer to the appendix (How To Create An
   578	LSB Compliant Application).
   579	
   580	-------------------------------------------------------------------------------
   581	
   582	Definitions
   583	
   584	LSB
   585	
   586	    This document.
   587	
   588	LSB-Compliant Application
   589	
   590	    An application written to include only the system routines, commands, and
   591	    other resources included in this document, and that has been compiled into
   592	    an executable file that has the formats and characteristics specified for
   593	    such files in this document, and whose behavior complies, installs, and is
   594	    executed in the environment with the rules given in this document.
   595	
   596	LSB-Conforming Implementation
   597	
   598	    An implementation that provides the binary system interface for
   599	    applications described in this document.
   600	
   601	Non-LSB-Compliant Application
   602	
   603	    An application which has been written to include system routines, commands,
   604	    or other resources not included in this document, or which has been
   605	    compiled into a format different from those specified here, or which does
   606	    not behave as specified in this document.
   607	
   608	LSB Implementation Conformance
   609	
   610	    An implementation satisfying the following requirements:
   611	
   612	     1. The implementation shall implement fully the architecture described in
   613	        the hardware manual for the target processor architecture.
   614	
   615	     2. The implementation shall be capable of executing compiled applications
   616	        having the format and using the system interfaces described in this
   617	        document.
   618	
   619	     3. The implementation shall provide libraries containing the interfaces
   620	        specified by this document, and shall provide a dynamic linking
   621	        mechanism that allows these interfaces to be attached to applications
   622	        at runtime. All the interfaces shall behave as specified in the
   623	        normative references and requirements of this document.
   624	
   625	     4. The map of virtual memory provided by the implementation shall conform
   626	        to the requirements of this document.
   627	
   628	     5. The implementation's low-level behavior with respect to function call
   629	        linkage, system traps, signals, and other such activities shall conform
   630	        to the formats described in this document.
   631	
   632	     6. The compilation system shall compile source code into executable files
   633	        having the formats and characteristics specified in this document.
   634	
   635	     7. The implementation shall provide all of the mandatory interfaces, in
   636	        their entirety.
   637	
   638	     8. The implementation may provide one or more of the optional interfaces.
   639	        Each optional interface that is provided shall be provided in its
   640	        entirety. The product documentation shall state which optional
   641	        interfaces are provided.
   642	
   643	     9. The implementation shall provide all files and utilities specified as
   644	        part of this document in the format defined here and in other
   645	        referenced documents. All commands and utilities shall behave as
   646	        required by this document. The implementation shall also provide all
   647	        mandatory components of an application's runtime environment that are
   648	        included or referenced in this document.
   649	
   650	    10. The implementation, when provided with standard data formats and values
   651	        at a named interface, shall provide the behavior defined for those
   652	        values and data formats at that interface. However, a conforming
   653	        implementation may consist of separately-packaged and/or sold
   654	        components. For example, a vendor of a conforming implementation might
   655	        sell the hardware, operating system, and windowing system as separately
   656	        packaged items.
   657	
   658	    11. The implementation may provide additional interfaces with different
   659	        names. It may also provide additional behavior corresponding to data
   660	        values outside the standard ranges, for standard named interfaces.
   661	
   662	LSB Application Conformance
   663	
   664	    An application with the following characteristics:
   665	
   666	     1. Its executable files are either shell scripts or object files in the
   667	        format defined for the Object File Format system interface.
   668	
   669	     2. Its object files participate in dynamic linking as defined in the
   670	        Program Loading and Linking System interface.
   671	
   672	     3. It employs only the instructions, traps, and other low-level facilities
   673	        defined in the Low-Level System interface as being for use by
   674	        applications.
   675	
   676	     4. If it requires any optional interface defined in this document in order
   677	        to be installed or to execute successfully, the requirement for that
   678	        optional interface is stated in the application's documentation.
   679	
   680	     5. It does not use any interface or data format that is not required to be
   681	        provided by a conforming implementation, unless:
   682	
   683	          o If such an interface or data format is supplied by another
   684	            application through direct invocation of that application during
   685	            execution, that application is in turn an LSB-compliant
   686	            application.
   687	
   688	          o The use of that interface or data format, as well as its source, is
   689	            identified in the documentation of the application.
   690	
   691	     6. It must not use any values for a named interface that are reserved for
   692	        vendor extensions.
   693	
   694	    A strictly conforming application does not require or use any interface,
   695	    facility, or implementation-defined extension that is not defined in this
   696	    document in order to be installed or to execute successfully.
   697	
   698	Rationale
   699	
   700	    An LSB-compliant application is expected to have no dependencies on any
   701	    vendor extensions to this document. The most common such extensions are
   702	    additional function entry points and additional libraries other than the
   703	    ones defined in this document. If an application requires such extensions,
   704	    it is not portable, since other LSB-conforming implementations may not
   705	    provide those extensions.
   706	
   707	    An LSB-compliant application is required to use system services on the
   708	    implementation on which it is running, rather than importing system
   709	    routines from some other implementation. Thus, it must link dynamically to
   710	    any routines in the implementation that perform system traps to kernel
   711	    services.
   712	
   713	    It is to be expected that some applications may be companion applications
   714	    to other applications. For example, a query application may be a companion
   715	    to a database application; a preprocessor may be an adjunct to one or more
   716	    compilers; a data reformatter may convert data from one document manager to
   717	    another. In such cases, the application may or may not be LSB-compliant,
   718	    regardless of whether the other application on which it is dependent is
   719	    LSB-compliant. If such an application merely uses data produced by another
   720	    application, the application's compliance is independent of the other
   721	    application's compliance. If such an application actually invokes another
   722	    application during execution (as, for example, a third-party math library),
   723	    the invoking application is LSB-compliant only if it also constitutes a
   724	    LSB-compliant application in combination with the invoked application.
   725	
   726	Shell Script
   727	
   728	    A file that is read by an interpreter (e.g., awk). The first line of the
   729	    shell script includes a reference to its interpreter binary.
   730	
   731	-------------------------------------------------------------------------------
   732	
   733	Terminology
   734	
   735	can
   736	
   737	    Describes a permissible optional feature or behavior available to the user
   738	    or application. The feature or behavior is mandatory for an implementation
   739	    that conforms to this document. An application can rely on the existence of
   740	    the feature or behavior.
   741	
   742	implementation-defined
   743	
   744	    (Same meaning as implementation-dependent.) Describes a value or behavior
   745	    that is not defined by this document but is selected by an implementor. The
   746	    value or behavior may vary among implementations that conform to this
   747	    document. An application should not rely on the existence of the value or
   748	    behavior. An application that relies on such a value or behavior cannot be
   749	    assured to be portable across conforming implementations. The implementor
   750	    shall document such a value or behavior so that it can be used correctly by
   751	    an application.
   752	
   753	may
   754	
   755	    Describes a feature or behavior that is optional for an implementation that
   756	    conforms to this document. An application should not rely on the existence
   757	    of the feature or behavior. An application that relies on such a feature or
   758	    behavior cannot be assured to be portable across conforming
   759	    implementations. To avoid ambiguity, the opposite of may is expressed as
   760	    need not, instead of may not.
   761	
   762	must
   763	
   764	    Describes a feature or behavior that is mandatory for an application or
   765	    user. An implementation that conforms to this document shall support this
   766	    feature or behavior.
   767	
   768	shall
   769	
   770	    Describes a feature or behavior that is mandatory for an implementation
   771	    that conforms to this document. An application can rely on the existence of
   772	    the feature or behavior.
   773	
   774	should
   775	
   776	    For an implementation that conforms to this document, describes a feature
   777	    or behavior that is recommended but not mandatory. An application should
   778	    not rely on the existence of the feature or behavior. An application that
   779	    relies on such a feature or behavior cannot be assured to be portable
   780	    across conforming implementations.
   781	
   782	    For an application, describes a feature or behavior that is recommended
   783	    programming practice for optimum portability.
   784	
   785	undefined
   786	
   787	    Describes the nature of a value or behavior not defined by this document
   788	    which results from use of an invalid program construct or invalid data
   789	    input. The value or behavior may vary among implementations that conform to
   790	    this document. An application should not rely on the existence or validity
   791	    of the value or behavior. An application that relies on any particular
   792	    value or behavior cannot be assured to be portable across conforming
   793	    implementations.
   794	
   795	unspecified
   796	
   797	    Describes the nature of a value or behavior not specified by this document
   798	    which results from use of a valid program construct or valid data input.
   799	    The value or behavior may vary among implementations that conform to this
   800	    document. An application should not rely on the existence or validity of
   801	    the value or behavior. An application that relies on any particular value
   802	    or behavior cannot be assured to be portable across conforming
   803	    implementations.
   804	
   805	will
   806	
   807	    Same meaning as shall; shall is the preferred term.
   808	
   809	II. Object Format
   810	
   811	Table of Contents
   812	2. Object Files
   813	3. Sections
   814	4. Special Sections
   815	5. Symbol Mapping
   816	6. Symbol Versioning
   817	
   818	-------------------------------------------------------------------------------
   819	
   820	Chapter 2. Object Files
   821	
   822	LSB-conforming implementations shall support the object file Executable and
   823	Linking Format (ELF), which is defined by the following documents:
   824	
   825	  * System V Application Binary Interface, Edition 4.1
   826	
   827	  * System V Application Binary Interface - DRAFT - April 29, 1998
   828	
   829	  * this document
   830	
   831	  * an architecture-specific LSB specification
   832	
   833	Conforming implementations may also support other unspecified object file
   834	formats.
   835	
   836	-------------------------------------------------------------------------------
   837	
   838	Chapter 3. Sections
   839	
   840	-------------------------------------------------------------------------------
   841	
   842	ELF Section Types
   843	
   844	The following sections types are defined in the System V Application Binary
   845	Interface, Edition 4.1.
   846	
   847	Table 3-1. ELF Section Types
   848	
   849	+----------------------------------------------+
   850	|SHT_DYNAMIC|SHT_DYNSYM|SHT_HASH    |SHT_HIPROC|
   851	|-----------+----------+------------+----------|
   852	|SHT_HIUSER |SHT_LOPROC|SHT_LOUSER  |SHT_NOBITS|
   853	|-----------+----------+------------+----------|
   854	|SHT_NOTE   |SHT_NULL  |SHT_PROGBITS|SHT_REL   |
   855	|-----------+----------+------------+----------|
   856	|SHT_RELA   |SHT_SHLIB |SHT_STRTAB  |SHT_SYMTAB|
   857	+----------------------------------------------+
   858	
   859	-------------------------------------------------------------------------------
   860	
   861	Linux Section Types
   862	
   863	The following Linux section types are defined here.
   864	
   865	Table 3-2. Linux Section Types
   866	
   867	+----------------------------------------------------------------------------+
   868	|SHT_GNU_verdef |This section contains the symbol versions that are provided.|
   869	|---------------+------------------------------------------------------------|
   870	|SHT_GNU_verneed|This section contains the symbol versions that are required.|
   871	|---------------+------------------------------------------------------------|
   872	|SHT_GNU_versym |This section contains the Symbol Version Table.             |
   873	+----------------------------------------------------------------------------+
   874	
   875	-------------------------------------------------------------------------------
   876	
   877	Chapter 4. Special Sections
   878	
   879	ELF Special Sections
   880	
   881	The following sections are defined in the ELF reference Specification.
   882	
   883	Table 4-1. ELF Special Sections
   884	
   885	+--------------------------------------+
   886	|.bss     |.comment |.data   |.data1   |
   887	|---------+---------+--------+---------|
   888	|.debug   |.dynamic |.dynstr |.dynsym  |
   889	|---------+---------+--------+---------|
   890	|.fini    |.got     |.hash   |.init    |
   891	|---------+---------+--------+---------|
   892	|.interp  |.line    |.note   |.plt     |
   893	|---------+---------+--------+---------|
   894	|.rel.bss |.rel.data|.rel.got|.rel.plt |
   895	|---------+---------+--------+---------|
   896	|.rel.text|.rodata  |.rodata1|.shstrtab|
   897	|---------+---------+--------+---------|
   898	|.strtab  |.symtab  |.text   |         |
   899	+--------------------------------------+
   900	
   901	-------------------------------------------------------------------------------
   902	
   903	Linux Special Sections
   904	
   905	The following Linux specific sections are defined here.
   906	
   907	Table 4-2. Linux Special Sections
   908	
   909	+-----------------------------------------------------------------------------+
   910	|.ctors        |This section contains a list of global constructor function   |
   911	|              |pointers.                                                     |
   912	|--------------+--------------------------------------------------------------|
   913	|.dtors        |This section contains a list of global destructor function    |
   914	|              |pointers.                                                     |
   915	|--------------+--------------------------------------------------------------|
   916	|.eh_frame     |This section contains information necessary for frame         |
   917	|              |unwinding during exception handling. The is the same as for   |
   918	|              |.debug_frame as described by DWARF2.                          |
   919	|--------------+--------------------------------------------------------------|
   920	|.gnu.version  |This section contains the Symbol Version Table.               |
   921	|--------------+--------------------------------------------------------------|
   922	|.gnu.version_d|This section contains the Version Definitions.                |
   923	|--------------+--------------------------------------------------------------|
   924	|.gnu.version_r|This section contains the Version Requirments.                |
   925	|--------------+--------------------------------------------------------------|
   926	|.note.ABI-tag |                                                              |
   927	|--------------+--------------------------------------------------------------|
   928	|.stab         |This section contains debugging information. The contents are |
   929	|              |not specified as part of the LSB.                             |
   930	|--------------+--------------------------------------------------------------|
   931	|.stabstr      |This section contains strings associated with the debugging   |
   932	|              |infomation contained in the .stab section.                    |
   933	+-----------------------------------------------------------------------------+
   934	
   935	-------------------------------------------------------------------------------
   936	
   937	Chapter 5. Symbol Mapping
   938	
   939	This chapter defines how names are mapped from the source symbol to the object
   940	symbol.
   941	
   942	-------------------------------------------------------------------------------
   943	
   944	C Language
   945	
   946	External C symbols have the same names in C and object files' symbol tables.
   947	
   948	-------------------------------------------------------------------------------
   949	
   950	C++ Language
   951	
   952	Because of the immaturity of the C++ ABI (for name mangling, exception
   953	handling, and other such issues), we do not standardize any libraries for C++
   954	in this version of the Linux Standard Base. [1]
   955	
   956	In a future version of this specification, name mangling rules will be
   957	specified so that C++ symbols can be mapped into symbol names in the object
   958	file.
   959	
   960	-------------------------------------------------------------------------------
   961	
   962	Chapter 6. Symbol Versioning
   963	
   964	This chapter describes the Symbol Versioning mechanism. All ELF objects may
   965	provide or depend on versioned symbols. Symbol Versioning is implemented by 3
   966	section types: SHT_GNU_versym, SHT_GNU_verdef, and SHT_GNU_verneed.
   967	
   968	The term "Elfxx" means "Elf32" or "Elf64" depending on the architecture.
   969	
   970	Versions are described by strings. The structures that are used for symbol
   971	versions also contain a member that holds the ELF hashing values of the
   972	strings. This allows for more efficient processing.
   973	
   974	-------------------------------------------------------------------------------
   975	
   976	Symbol Version Table
   977	
   978	The Symbol Version Table is contained in the special section .gnu.version which
   979	has a section type of SHT_GNU_versym. This section has the same number of
   980	entries as the Dynamic Symbol Table.
   981	
   982	This section contains an array of elements of type Elfxx_Half. Each entry
   983	specifies the version defined for or required by the corresponding symbol in
   984	the Dynamic Symbol Table.
   985	
   986	The values in the Symbol Version Table are unique to the object in which they
   987	are located. These values are identifiers that are provided by the the
   988	vna_other member of the Elfxx_Vernaux structure or the vd_ndx member of the
   989	Elfxx_Verdef structure.
   990	
   991	The values 0 and 1 are reserved.
   992	
   993	0
   994	
   995	    The symbol is local, not available outside the object.
   996	
   997	1
   998	
   999	    The symbol is defined in this object and is globally available.
  1000	
  1001	All other values are used to identify version strings located in one of the
  1002	other Symbol Version sections. The value itself is not the version associated
  1003	with the symbol. The string identified by the value defines the version of the
  1004	symbol.
  1005	
  1006	-------------------------------------------------------------------------------
  1007	
  1008	Version Definitions
  1009	
  1010	Symbol definitions are contained in the special section .gnu.version_d which
  1011	has a section type of SHT_GNU_verdef. The number of entries in this section is
  1012	contained in the DT_VERDEFNUM entry of the Dynamic Section. The sh_link member
  1013	of the section header points to the section that contains the strings
  1014	referenced by this section.
  1015	
  1016	Figure 6-1. Version Definition Entries
  1017	
  1018	typedef struct {
  1019	        Elfxx_Half    vd_version;
  1020	        Elfxx_Half    vd_flags;
  1021	        Elfxx_Half    vd_ndx;
  1022	        Elfxx_Half    vd_cnt;
  1023	        Elfxx_Word    vd_hash;
  1024	        Elfxx_Word    vd_aux;
  1025	        Elfxx_Word    vd_next;
  1026	} Elfxx_Verdef;
  1027	
  1028	vd_version
  1029	
  1030	    Version revision. This value is currently set to 1, and will be reset if
  1031	    the versioning implementation is incompatibly altered.
  1032	
  1033	vd_flags
  1034	
  1035	    Version information flag bitmask.
  1036	
  1037	vd_ndx
  1038	
  1039	    Version index numeric value referencing the SHT_GNU_versym section.
  1040	
  1041	vd_cnt
  1042	
  1043	    Number of associated verdaux array entries.
  1044	
  1045	vd_hash
  1046	
  1047	    Version name hash value (ELF hash function).
  1048	
  1049	vd_aux
  1050	
  1051	    Offset to a corresponding entry in the verdaux array, in bytes.
  1052	
  1053	vd_next
  1054	
  1055	    Offset to the next verdef entry, in bytes.
  1056	
  1057	Figure 6-2. Version Definition Auxiliary Entries
  1058	
  1059	typedef struct {
  1060	        Elfxx_Word    vda_name;
  1061	        Elfxx_Word    vda_next;
  1062	} Elfxx_Verdaux;
  1063	
  1064	vda_name
  1065	
  1066	    Offset to the version or dependency name string in the section header, in
  1067	    bytes.
  1068	
  1069	vda_next
  1070	
  1071	    Offset to the next verdaux entry, in bytes.
  1072	
  1073	-------------------------------------------------------------------------------
  1074	
  1075	Version Requirements
  1076	
  1077	Symbol definitions are contained in the special section .gnu.version_r which
  1078	has a section type of SHT_GNU_verneed. The number of entries in this section is
  1079	contained in the DT_VERNEEDNUM entry of the Dynamic Section. The sh_link member
  1080	of the section header points to the section that contains the strings
  1081	referenced by this section.
  1082	
  1083	Figure 6-3. Version Needed Entries
  1084	
  1085	typedef struct {
  1086	        Elfxx_Half    vn_version;
  1087	        Elfxx_Half    vn_cnt;
  1088	        Elfxx_Word    vn_file;
  1089	        Elfxx_Word    vn_aux;
  1090	        Elfxx_Word    vn_next;
  1091	} Elfxx_Verneed;
  1092	
  1093	vn_version
  1094	
  1095	    Version of structure. This value is currently set to 1, and will be reset
  1096	    if the versioning implementation is incompatibly altered.
  1097	
  1098	vn_cnt
  1099	
  1100	    Number of associated verneed array entries.
  1101	
  1102	vn_file
  1103	
  1104	    Offset to the file name string in the section header, in bytes.
  1105	
  1106	vn_aux
  1107	
  1108	    Offset to a corresponding entry in the vernaux array, in bytes.
  1109	
  1110	vn_next
  1111	
  1112	    Offset to the next verneed entry, in bytes.
  1113	
  1114	Figure 6-4. Version Needed Auxiliary Entries
  1115	
  1116	typedef struct {
  1117	        Elfxx_Word    vna_hash;
  1118	        Elfxx_Half    vna_flags;
  1119	        Elfxx_Half    vna_other;
  1120	        Elfxx_Word    vna_name;
  1121	        Elfxx_Word    vna_next;
  1122	} Elfxx_Vernaux;
  1123	
  1124	vna_hash
  1125	
  1126	    Dependency name hash value (ELF hash function).
  1127	
  1128	vna_flags
  1129	
  1130	    Dependency information flag bitmask.
  1131	
  1132	vna_other
  1133	
  1134	    Object file version identifier used in the .gnu.version symbol version
  1135	    array. Bit number 15 controls whether or not the object is hidden; if this
  1136	    bit is set, the object cannot be used and the static linker will ignore the
  1137	    symbol's presence in the object.
  1138	
  1139	vna_name
  1140	
  1141	    Offset to the dependency name string in the section header, in bytes.
  1142	
  1143	vna_next
  1144	
  1145	    Offset to the next vernaux entry, in bytes.
  1146	
  1147	-------------------------------------------------------------------------------
  1148	
  1149	Startup Sequence
  1150	
  1151	When loading a sharable object, version definition data from the loaded object
  1152	is analyzed to assure that it meets the version requirements of the calling
  1153	object. The dynamic loader retrieves the entries in the caller's Elfxx_Verneed
  1154	array and attempts to find matching definition information in the loaded
  1155	Elfxx_Verdef table.
  1156	
  1157	Each object and dependency is tested in turn. If a symbol definition is
  1158	missing, the loader returns an error. A warning is issued instead of a hard
  1159	error when the vna_flags bit for VER_FLG_WEAK is set in the Elfxx_Vernaux
  1160	entry.
  1161	
  1162	When the versions referenced by undefined symbols in the loaded object are
  1163	found, version availability is certified. The test completes without error and
  1164	the object is made available.
  1165	
  1166	-------------------------------------------------------------------------------
  1167	
  1168	Symbol Resolution
  1169	
  1170	When symbol versioning is used in an object, relocations extend the performance
  1171	of definition testing beyond the simple match of symbol name strings: the
  1172	version of the reference must also equal the name of the definition. The same
  1173	index that is used in the symbol table can be referenced in the SHT_GNU_versym
  1174	section, and the value of this index is then used to acquire name data. The
  1175	corresponding requirement string is retrieved from the Elfxx_Verneed array, and
  1176	likewise, the corresponding definition string from the Elfxx_Verdef table.
  1177	
  1178	Bit number 15 of the version symbol controls whether or not the object is
  1179	hidden; if this bit is set, the object cannot be used and the static linker
  1180	will ignore the symbol's presence in the object.
  1181	
  1182	Results differ in the interaction of objects that variously use symbol
  1183	versioning.
  1184	
  1185	  * The object with the reference and the object with the definitions may both
  1186	    use versioning. All described matching is processed in this case. A fatal
  1187	    error is triggered when no matching definition can be found in the object
  1188	    whose name is the one referenced by the vn_name element in the
  1189	    Elfxx_Verneed entry.
  1190	
  1191	  * The object with the reference may not use versioning, while the object with
  1192	    the definitions does. In this instance, only the definition with index
  1193	    numbers 1 and 2 will be used in the reference match, the same identified by
  1194	    the static linker as the base definition. In infrequent cases where the
  1195	    static linker was not used, as in calls to dlopen(), a version that does
  1196	    not have the base definition index is acceptable as long as it is the only
  1197	    version for which the symbol is defined.
  1198	
  1199	  * The object with the reference may use versioning, but the object with the
  1200	    definitions specifies none. A matching symbol is accepted in this case. A
  1201	    fatal error is triggered in the unlikely event that a corruption in the
  1202	    required symbols list obscured an outdated object file and caused a match
  1203	    on the object filename in the Elfxx_Verneed entry.
  1204	
  1205	  * Finally, both the object with the reference and the object with the
  1206	    definitions may not use versioning. The behavior in this instance defaults
  1207	    to pre-existing symbol rules.
  1208	
  1209	III. Dynamic Linking
  1210	
  1211	Table of Contents
  1212	7. Program Loading and Dynamic Linking
  1213	8. Dynamic Entries
  1214	9. Program Interpreter
  1215	
  1216	-------------------------------------------------------------------------------
  1217	
  1218	Chapter 7. Program Loading and Dynamic Linking
  1219	
  1220	LSB-conforming implementations shall support the object file information and
  1221	system actions that create running programs as specified in the System V
  1222	Application Binary Interface, Edition 4.1 and the System V Application Binary
  1223	Interface - DRAFT - April 29, 1998 and as supplemented by this document and an
  1224	architecture specific LSB specification.
  1225	
  1226	Any shared object that is loaded must contain sufficient DT_NEEDED records to
  1227	satisfy the symbols on the shared library.
  1228	
  1229	-------------------------------------------------------------------------------
  1230	
  1231	Chapter 8. Dynamic Entries
  1232	
  1233	-------------------------------------------------------------------------------
  1234	
  1235	ELF Dynamic Entries
  1236	
  1237	The following dynamic entries are defined in the System V Application Binary
  1238	Interface, Edition 4.1.
  1239	
  1240	Table 8-1. ELF Dynamic Entries
  1241	
  1242	+----------------------------------------------+
  1243	|DT_BIND_NOW|DT_DEBUG  |DT_FINI    |DT_HASH    |
  1244	|-----------+----------+-----------+-----------|
  1245	|DT_HIPROC  |DT_INIT   |DT_JMPREL  |DT_LOPROC  |
  1246	|-----------+----------+-----------+-----------|
  1247	|DT_NEEDED  |DT_NULL   |DT_PLTREL  |DT_PLTRELSZ|
  1248	|-----------+----------+-----------+-----------|
  1249	|DT_REL     |DT_RELA   |DT_RELAENT |DT_RELASZ  |
  1250	|-----------+----------+-----------+-----------|
  1251	|DT_RELENT  |DT_RELSZ  |DT_RPATH   |DT_SONAME  |
  1252	|-----------+----------+-----------+-----------|
  1253	|DT_STRSZ   |DT_STRTAB |DT_SYMBOLIC|DT_SYMENT  |
  1254	|-----------+----------+-----------+-----------|
  1255	|DT_SYMTAB  |DT_TEXTREL|           |           |
  1256	+----------------------------------------------+
  1257	
  1258	-------------------------------------------------------------------------------
  1259	
  1260	Linux Dynamic Entries
  1261	
  1262	The following dynamic entries are defined here.
  1263	
  1264	Table 8-2. Linux Dynamic Entries
  1265	
  1266	+-------------------------------------------------------------------------+
  1267	|DT_ADDRRNGLO   |                                                         |
  1268	|---------------+---------------------------------------------------------|
  1269	|DT_AUXILIARY   |Shared object to load before self                        |
  1270	|---------------+---------------------------------------------------------|
  1271	|DT_FILTER      |Shared object to get values from                         |
  1272	|---------------+---------------------------------------------------------|
  1273	|DT_FINI_ARRAY  |Array with addresses of fini fct                         |
  1274	|---------------+---------------------------------------------------------|
  1275	|DT_FINI_ARRAYSZ|Size in bytes of DT_FINI_ARRAY                           |
  1276	|---------------+---------------------------------------------------------|
  1277	|DT_FLAGS_1     |State flags, see DF_1_* below                            |
  1278	|---------------+---------------------------------------------------------|
  1279	|DT_HIOS        |End of OS-specific                                       |
  1280	|---------------+---------------------------------------------------------|
  1281	|DT_INIT_ARRAY  |Array with addresses of init fct                         |
  1282	|---------------+---------------------------------------------------------|
  1283	|DT_INIT_ARRAYSZ|Size in bytes of DT_INIT_ARRAY                           |
  1284	|---------------+---------------------------------------------------------|
  1285	|DT_LOOS        |Start of OS-specific                                     |
  1286	|---------------+---------------------------------------------------------|
  1287	|DT_NUM         |Number used                                              |
  1288	|---------------+---------------------------------------------------------|
  1289	|DT_POSFLAG_1   |Flags for DT_* entries, effecting he following DT_* entry|
  1290	|---------------+---------------------------------------------------------|
  1291	|DT_SYMINENT    |Entry size of syminfo                                    |
  1292	|---------------+---------------------------------------------------------|
  1293	|DT_SYMINFO     |syminfo table                                            |
  1294	|---------------+---------------------------------------------------------|
  1295	|DT_SYMINSZ     |Size of syminfo table (in bytes)                         |
  1296	|---------------+---------------------------------------------------------|
  1297	|DT_VALRNGHI    |                                                         |
  1298	|---------------+---------------------------------------------------------|
  1299	|DT_VALRNGLO    |                                                         |
  1300	|---------------+---------------------------------------------------------|
  1301	|DT_VERDEF      |Address of version definition table                      |
  1302	|---------------+---------------------------------------------------------|
  1303	|DT_VERDEFNUM   |Number of version definitions                            |
  1304	|---------------+---------------------------------------------------------|
  1305	|DT_VERNEED     |Address of table with needed versions                    |
  1306	|---------------+---------------------------------------------------------|
  1307	|DT_VERNEEDNUM  |Number of needed versions                                |
  1308	|---------------+---------------------------------------------------------|
  1309	|DT_VERSYM      |GNU Symbol versioning                                    |
  1310	+-------------------------------------------------------------------------+
  1311	
  1312	-------------------------------------------------------------------------------
  1313	
  1314	Chapter 9. Program Interpreter
  1315	
  1316	-------------------------------------------------------------------------------
  1317	
  1318	The Program Interpreter is specified in the appropriate architecture specific
  1319	LSB specification.
  1320	
  1321	IV. Base Libraries
  1322	
  1323	Table of Contents
  1324	10. Libraries
  1325	
  1326	-------------------------------------------------------------------------------
  1327	
  1328	Chapter 10. Libraries
  1329	
  1330	An LSB-conforming implementation shall support some base libraries which
  1331	provide interfaces for accessing the operating system, processor and other
  1332	hardware in the system.[2]
  1333	
  1334	-------------------------------------------------------------------------------
  1335	
  1336	Interfaces for libc
  1337	
  1338	The behaviour of the interfaces in this library is specified by the following
  1339	Standards.
  1340	
  1341	ISO/IEC 9899: 1999, Programming Languages --C[3]
  1342	Large File Support[4]
  1343	Linux Standard Base[5]
  1344	IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996][6]
  1345	CAE Specification, February 1997, Networking Services (XNS), Issue 5 (ISBN:
  1346	1-85912-165-9, C523)[7]
  1347	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
  1348	(ISBN: 1-85912-181-0, C606)[8]
  1349	
  1350	-------------------------------------------------------------------------------
  1351	
  1352	System Calls
  1353	
  1354	Table 10-1. libc - System Calls Function Interfaces
  1355	
  1356	+-----------------------------------------------------------------------------+
  1357	|__fxstat    |fchown        |getwd        |putmsg(GLIBC_2.0)[8]  |setrlimit   |
  1358	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1359	|[5]         |              |[8]          |                      |[8]         |
  1360	|------------+--------------+-------------+----------------------+------------|
  1361	|__getpgid   |fcntl         |initgroups   |pwrite(GLIBC_2.0)[8]  |setsid      |
  1362	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1363	|[5]         |              |[5]          |                      |[8]         |
  1364	|------------+--------------+-------------+----------------------+------------|
  1365	|__lxstat    |fdatasync     |ioctl        |read(GLIBC_2.0)[8]    |setuid      |
  1366	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1367	|[5]         |              |[8]          |                      |[8]         |
  1368	|------------+--------------+-------------+----------------------+------------|
  1369	|__xmknod    |fdetach       |kill         |readdir(GLIBC_2.0)[8] |sleep       |
  1370	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1371	|[5]         |              |[8]          |                      |[8]         |
  1372	|------------+--------------+-------------+----------------------+------------|
  1373	|__xstat     |flock         |killpg       |readlink(GLIBC_2.0)[8]|statfs      |
  1374	|(GLIBC_2.0) |(GLIBC_2.0)[5]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1375	|[5]         |              |[8]          |                      |[5]         |
  1376	|------------+--------------+-------------+----------------------+------------|
  1377	|access      |fork          |lchown       |readv(GLIBC_2.0)[8]   |statvfs     |
  1378	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1379	|[8]         |              |[8]          |                      |[8]         |
  1380	|------------+--------------+-------------+----------------------+------------|
  1381	|acct        |fstatfs       |link         |rename(GLIBC_2.0)[8]  |stime       |
  1382	|(GLIBC_2.0) |(GLIBC_2.0)[5]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1383	|[5]         |              |[8]          |                      |[5]         |
  1384	|------------+--------------+-------------+----------------------+------------|
  1385	|alarm       |fsync         |lockf        |rmdir(GLIBC_2.0)[8]   |symlink     |
  1386	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1387	|[8]         |              |[8]          |                      |[8]         |
  1388	|------------+--------------+-------------+----------------------+------------|
  1389	|brk         |ftime         |lseek        |sbrk(GLIBC_2.0)[8]    |sync        |
  1390	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1391	|[8]         |              |[8]          |                      |[8]         |
  1392	|------------+--------------+-------------+----------------------+------------|
  1393	|chdir       |ftruncate     |mkdir        |sched_get_priority_max|sysconf     |
  1394	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |(GLIBC_2.0)[8]        |(GLIBC_2.0) |
  1395	|[8]         |              |[8]          |                      |[8]         |
  1396	|------------+--------------+-------------+----------------------+------------|
  1397	|chmod       |getcontext    |mkfifo       |sched_get_priority_min|time        |
  1398	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |(GLIBC_2.0)[8]        |(GLIBC_2.0) |
  1399	|[8]         |              |[5]          |                      |[8]         |
  1400	|------------+--------------+-------------+----------------------+------------|
  1401	|chown       |getegid       |mlock        |sched_getparam        |times       |
  1402	|(GLIBC_2.1) |(GLIBC_2.1)[8]|(GLIBC_2.1)  |(GLIBC_2.1)[8]        |(GLIBC_2.1) |
  1403	|[8]         |              |[8]          |                      |[8]         |
  1404	|------------+--------------+-------------+----------------------+------------|
  1405	|chroot      |geteuid       |mlockall     |sched_getscheduler    |truncate    |
  1406	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |(GLIBC_2.0)[8]        |(GLIBC_2.0) |
  1407	|[8]         |              |[8]          |                      |[8]         |
  1408	|------------+--------------+-------------+----------------------+------------|
  1409	|clock       |getgid        |mmap         |sched_rr_get_interval |ulimit      |
  1410	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |(GLIBC_2.0)[8]        |(GLIBC_2.0) |
  1411	|[8]         |              |[8]          |                      |[8]         |
  1412	|------------+--------------+-------------+----------------------+------------|
  1413	|close       |getgroups     |mprotect     |sched_setparam        |umask       |
  1414	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |(GLIBC_2.0)[8]        |(GLIBC_2.0) |
  1415	|[8]         |              |[8]          |                      |[8]         |
  1416	|------------+--------------+-------------+----------------------+------------|
  1417	|closedir    |getitimer     |msync        |sched_setscheduler    |uname       |
  1418	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |(GLIBC_2.0)[8]        |(GLIBC_2.0) |
  1419	|[8]         |              |[8]          |                      |[8]         |
  1420	|------------+--------------+-------------+----------------------+------------|
  1421	|creat       |getloadavg    |munlock      |sched_yield(GLIBC_2.0)|unlink      |
  1422	|(GLIBC_2.0) |(GLIBC_2.0)[5]|(GLIBC_2.0)  |[8]                   |(GLIBC_2.0) |
  1423	|[8]         |              |[8]          |                      |[8]         |
  1424	|------------+--------------+-------------+----------------------+------------|
  1425	|dup         |getmsg        |munlockall   |select(GLIBC_2.0)[7]  |utime       |
  1426	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1427	|[8]         |              |[8]          |                      |[8]         |
  1428	|------------+--------------+-------------+----------------------+------------|
  1429	|dup2        |getpagesize   |munmap       |setcontext(GLIBC_2.0) |utimes      |
  1430	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |[8]                   |(GLIBC_2.0) |
  1431	|[8]         |              |[8]          |                      |[8]         |
  1432	|------------+--------------+-------------+----------------------+------------|
  1433	|execl       |getpgid       |nanosleep    |setegid(GLIBC_2.0)[5] |vfork       |
  1434	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1435	|[8]         |              |[8]          |                      |[8]         |
  1436	|------------+--------------+-------------+----------------------+------------|
  1437	|execle      |getpgrp       |nice         |seteuid(GLIBC_2.0)[5] |wait        |
  1438	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1439	|[8]         |              |[8]          |                      |[8]         |
  1440	|------------+--------------+-------------+----------------------+------------|
  1441	|execlp      |getpid        |open         |setgid(GLIBC_2.0)[8]  |wait3       |
  1442	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1443	|[8]         |              |[8]          |                      |[8]         |
  1444	|------------+--------------+-------------+----------------------+------------|
  1445	|execv       |getppid       |opendir      |setitimer(GLIBC_2.0)  |wait4       |
  1446	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |[8]                   |(GLIBC_2.0) |
  1447	|[8]         |              |[8]          |                      |[5]         |
  1448	|------------+--------------+-------------+----------------------+------------|
  1449	|execve      |getpriority   |pathconf     |setpgid(GLIBC_2.0)[8] |waitid      |
  1450	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1451	|[8]         |              |[8]          |                      |[8]         |
  1452	|------------+--------------+-------------+----------------------+------------|
  1453	|execvp      |getrlimit     |pause        |setpgrp(GLIBC_2.0)[8] |waitpid     |
  1454	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1455	|[8]         |              |[8]          |                      |[8]         |
  1456	|------------+--------------+-------------+----------------------+------------|
  1457	|exit        |getrusage     |pipe         |setpriority(GLIBC_2.0)|write       |
  1458	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |[8]                   |(GLIBC_2.0) |
  1459	|[8]         |              |[8]          |                      |[8]         |
  1460	|------------+--------------+-------------+----------------------+------------|
  1461	|fchdir      |getsid        |poll         |setregid(GLIBC_2.0)[8]|writev      |
  1462	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |(GLIBC_2.0) |
  1463	|[8]         |              |[8]          |                      |[8]         |
  1464	|------------+--------------+-------------+----------------------+------------|
  1465	|fchmod      |getuid        |pread        |setreuid(GLIBC_2.0)[8]|            |
  1466	|(GLIBC_2.0) |(GLIBC_2.0)[8]|(GLIBC_2.0)  |                      |            |
  1467	|[8]         |              |[8]          |                      |            |
  1468	+-----------------------------------------------------------------------------+
  1469	-------------------------------------------------------------------------------
  1470	
  1471	Data Symbols
  1472	
  1473	Table 10-2. libc - System Calls Data Interfaces
  1474	
  1475	+-----------------+
  1476	|errno[8] | | | | |
  1477	+-----------------+
  1478	-------------------------------------------------------------------------------
  1479	
  1480	Standard I/O
  1481	
  1482	Table 10-3. libc - Standard I/O Function Interfaces
  1483	
  1484	+------------------------------------------------------------------------------+
  1485	|_IO_feof        |fgetpos      |fstatvfs        |putc_unlocked   |sprintf      |
  1486	|(GLIBC_2.0)[5]  |(GLIBC_2.0)  |(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |
  1487	|                |[8]          |                |                |[8]          |
  1488	|----------------+-------------+----------------+----------------+-------------|
  1489	|_IO_getc        |fgets        |ftell(GLIBC_2.0)|putchar         |sscanf       |
  1490	|(GLIBC_2.0)[5]  |(GLIBC_2.0)  |[8]             |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |
  1491	|                |[8]          |                |                |[8]          |
  1492	|----------------+-------------+----------------+----------------+-------------|
  1493	|_IO_putc        |fileno       |ftello          |putchar_unlocked|telldir      |
  1494	|(GLIBC_2.0)[5]  |(GLIBC_2.0)  |(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |
  1495	|                |[8]          |                |                |[8]          |
  1496	|----------------+-------------+----------------+----------------+-------------|
  1497	|_IO_puts        |flockfile    |fwrite          |puts(GLIBC_2.0) |tempnam      |
  1498	|(GLIBC_2.0)[5]  |(GLIBC_2.0)  |(GLIBC_2.0)[8]  |[8]             |(GLIBC_2.0)  |
  1499	|                |[8]          |                |                |[8]          |
  1500	|----------------+-------------+----------------+----------------+-------------|
  1501	|alphasort       |fopen        |getc(GLIBC_2.0) |putw(GLIBC_2.0) |ungetc       |
  1502	|(GLIBC_2.0)[5]  |(GLIBC_2.0)  |[8]             |[8]             |(GLIBC_2.0)  |
  1503	|                |[8]          |                |                |[8]          |
  1504	|----------------+-------------+----------------+----------------+-------------|
  1505	|clearerr        |fprintf      |getc_unlocked   |remove          |vasprintf    |
  1506	|(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |
  1507	|                |[8]          |                |                |[5]          |
  1508	|----------------+-------------+----------------+----------------+-------------|
  1509	|ctermid         |fputc        |getchar         |rewind          |vdprintf     |
  1510	|(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |
  1511	|                |[8]          |                |                |[5]          |
  1512	|----------------+-------------+----------------+----------------+-------------|
  1513	|fclose          |fputs        |getchar_unlocked|rewinddir       |vfprintf     |
  1514	|(GLIBC_2.1)[8]  |(GLIBC_2.1)  |(GLIBC_2.1)[8]  |(GLIBC_2.1)[8]  |(GLIBC_2.1)  |
  1515	|                |[8]          |                |                |[8]          |
  1516	|----------------+-------------+----------------+----------------+-------------|
  1517	|fdopen          |fread        |gets(GLIBC_2.1) |scanf(GLIBC_2.1)|vprintf      |
  1518	|(GLIBC_2.1)[8]  |(GLIBC_2.1)  |[8]             |[8]             |(GLIBC_2.1)  |
  1519	|                |[8]          |                |                |[8]          |
  1520	|----------------+-------------+----------------+----------------+-------------|
  1521	|feof(GLIBC_2.0) |freopen      |getw(GLIBC_2.0) |seekdir         |vsnprintf    |
  1522	|[8]             |(GLIBC_2.0)  |[8]             |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |
  1523	|                |[8]          |                |                |[8]          |
  1524	|----------------+-------------+----------------+----------------+-------------|
  1525	|ferror          |fscanf       |pclose          |setbuf          |vsprintf     |
  1526	|(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |
  1527	|                |[8]          |                |                |[8]          |
  1528	|----------------+-------------+----------------+----------------+-------------|
  1529	|fflush          |fseek        |popen(GLIBC_2.0)|setbuffer       |wprintf      |
  1530	|(GLIBC_2.0)[8]  |(GLIBC_2.0)  |[8]             |(GLIBC_2.0)[5]  |(GLIBC_2.0)  |
  1531	|                |[8]          |                |                |[3]          |
  1532	|----------------+-------------+----------------+----------------+-------------|
  1533	|fflush_unlocked |fseeko       |printf          |setvbuf         |wscanf       |
  1534	|(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |
  1535	|                |[8]          |                |                |[3]          |
  1536	|----------------+-------------+----------------+----------------+-------------|
  1537	|fgetc(GLIBC_2.0)|fsetpos      |putc(GLIBC_2.0) |snprintf        |             |
  1538	|[8]             |(GLIBC_2.0)  |[8]             |(GLIBC_2.0)[8]  |             |
  1539	|                |[8]          |                |                |             |
  1540	+------------------------------------------------------------------------------+
  1541	-------------------------------------------------------------------------------
  1542	
  1543	Data Symbols
  1544	
  1545	Table 10-4. libc - Standard I/O Data Interfaces
  1546	
  1547	+---------------------------------------------------+
  1548	|_IO_2_1_stderr_[5]|_IO_2_1_stdout_[5]|stdin[8] | | |
  1549	|------------------+------------------+---------+-+-|
  1550	|_IO_2_1_stdin_[5] |stderr[8]         |stdout[8]| | |
  1551	+---------------------------------------------------+
  1552	-------------------------------------------------------------------------------
  1553	
  1554	Signal Handling
  1555	
  1556	Table 10-5. libc - Signal Handling Function Interfaces
  1557	
  1558	+-----------------------------------------------------------------------------+
  1559	|__libc_current_sigrtmax|sigaction   |siggetmask   |sigorset    |sigstack     |
  1560	|(GLIBC_2.1)[5]         |(GLIBC_2.1) |(GLIBC_2.1)  |(GLIBC_2.1) |(GLIBC_2.1)  |
  1561	|                       |[8]         |[5]          |[5]         |[8]          |
  1562	|-----------------------+------------+-------------+------------+-------------|
  1563	|__libc_current_sigrtmin|sigaddset   |sighold      |sigpause    |sigsuspend   |
  1564	|(GLIBC_2.1)[5]         |(GLIBC_2.1) |(GLIBC_2.1)  |(GLIBC_2.1) |(GLIBC_2.1)  |
  1565	|                       |[8]         |[8]          |[8]         |[8]          |
  1566	|-----------------------+------------+-------------+------------+-------------|
  1567	|__sigpause(GLIBC_2.0)  |sigaltstack |sigignore    |sigpending  |sigtimedwait |
  1568	|[5]                    |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0) |(GLIBC_2.0)  |
  1569	|                       |[8]         |[8]          |[8]         |[8]          |
  1570	|-----------------------+------------+-------------+------------+-------------|
  1571	|__sigsetjmp(GLIBC_2.0) |sigandset   |siginterrupt |sigprocmask |sigwait      |
  1572	|[5]                    |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0) |(GLIBC_2.0)  |
  1573	|                       |[5]         |[8]          |[8]         |[8]          |
  1574	|-----------------------+------------+-------------+------------+-------------|
  1575	|__sysv_signal          |sigblock    |sigisemptyset|sigqueue    |sigwaitinfo  |
  1576	|(GLIBC_2.0)[5]         |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0) |(GLIBC_2.0)  |
  1577	|                       |[5]         |[5]          |[8]         |[8]          |
  1578	|-----------------------+------------+-------------+------------+-------------|
  1579	|bsd_signal(GLIBC_2.0)  |sigdelset   |sigismember  |sigrelse    |             |
  1580	|[8]                    |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0) |             |
  1581	|                       |[8]         |[8]          |[8]         |             |
  1582	|-----------------------+------------+-------------+------------+-------------|
  1583	|psignal(GLIBC_2.0)[5]  |sigemptyset |siglongjmp   |sigreturn   |             |
  1584	|                       |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0) |             |
  1585	|                       |[8]         |[8]          |[5]         |             |
  1586	|-----------------------+------------+-------------+------------+-------------|
  1587	|raise(GLIBC_2.0)[8]    |sigfillset  |signal       |sigset      |             |
  1588	|                       |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0) |             |
  1589	|                       |[8]         |[8]          |[8]         |             |
  1590	+-----------------------------------------------------------------------------+
  1591	-------------------------------------------------------------------------------
  1592	
  1593	Data Symbols
  1594	
  1595	Table 10-6. libc - Signal Handling Data Interfaces
  1596	
  1597	+------------------------+
  1598	|_sys_siglist[5] | | | | |
  1599	+------------------------+
  1600	-------------------------------------------------------------------------------
  1601	
  1602	Standard Library
  1603	
  1604	Table 10-7. libc - Standard Library Function Interfaces
  1605	
  1606	+-----------------------------------------------------------------------------+
  1607	|_Exit           |div(GLIBC_2.1.1)|globfree     |llabs        |sethostname    |
  1608	|(GLIBC_2.1.1)[3]|[8]             |(GLIBC_2.1.1)|(GLIBC_2.1.1)|(GLIBC_2.1.1)  |
  1609	|                |                |[8]          |[3]          |[5]            |
  1610	|----------------+----------------+-------------+-------------+---------------|
  1611	|__assert_fail   |drand48         |globfree64   |lldiv        |setstate       |
  1612	|(GLIBC_2.0)[5]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1613	|                |                |[5]          |[3]          |               |
  1614	|----------------+----------------+-------------+-------------+---------------|
  1615	|__bzero         |ecvt(GLIBC_2.0) |grantpt      |longjmp      |srand          |
  1616	|(GLIBC_2.0)[5]  |[8]             |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1617	|                |                |[8]          |[8]          |               |
  1618	|----------------+----------------+-------------+-------------+---------------|
  1619	|__cxa_atexit    |erand48         |hcreate      |lrand48      |srand48        |
  1620	|(GLIBC_2.1.3)[5]|(GLIBC_2.1.3)[8]|(GLIBC_2.1.3)|(GLIBC_2.1.3)|(GLIBC_2.1.3)  |
  1621	|                |                |[8]          |[8]          |[8]            |
  1622	|----------------+----------------+-------------+-------------+---------------|
  1623	|__errno_location|err(GLIBC_2.0)  |hdestroy     |lsearch      |srandom        |
  1624	|(GLIBC_2.0)[5]  |[5]             |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1625	|                |                |[8]          |[8]          |               |
  1626	|----------------+----------------+-------------+-------------+---------------|
  1627	|__fpending      |error(GLIBC_2.2)|hsearch      |makecontext  |strtod         |
  1628	|(GLIBC_2.2)[5]  |[5]             |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[8] |
  1629	|                |                |[8]          |[8]          |               |
  1630	|----------------+----------------+-------------+-------------+---------------|
  1631	|__secure_getenv |errx(GLIBC_2.0) |htonl        |malloc       |strtol         |
  1632	|(GLIBC_2.0)[5]  |[5]             |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1633	|                |                |[7]          |[8]          |               |
  1634	|----------------+----------------+-------------+-------------+---------------|
  1635	|__sysconf       |fcvt(GLIBC_2.2) |htons        |memmem       |strtoul        |
  1636	|(GLIBC_2.2)[5]  |[8]             |(GLIBC_2.2)  |(GLIBC_2.2)  |(GLIBC_2.2)[8] |
  1637	|                |                |[7]          |[5]          |               |
  1638	|----------------+----------------+-------------+-------------+---------------|
  1639	|_exit(GLIBC_2.0)|fmtmsg          |imaxabs      |mkstemp      |swapcontext    |
  1640	|[8]             |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1641	|                |                |[3]          |[8]          |               |
  1642	|----------------+----------------+-------------+-------------+---------------|
  1643	|_longjmp        |fnmatch         |imaxdiv      |mktemp       |syslog         |
  1644	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1645	|                |                |[3]          |[8]          |               |
  1646	|----------------+----------------+-------------+-------------+---------------|
  1647	|_setjmp         |fpathconf       |inet_addr    |mrand48      |system         |
  1648	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1649	|                |                |[7]          |[8]          |               |
  1650	|----------------+----------------+-------------+-------------+---------------|
  1651	|a64l(GLIBC_2.0) |free(GLIBC_2.0) |inet_aton    |nftw         |textdomain     |
  1652	|[8]             |[8]             |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[5] |
  1653	|                |                |[7]          |[8]          |               |
  1654	|----------------+----------------+-------------+-------------+---------------|
  1655	|abort(GLIBC_2.0)|ftrylockfile    |inet_ntoa    |nrand48      |tfind          |
  1656	|[8]             |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1657	|                |                |[7]          |[8]          |               |
  1658	|----------------+----------------+-------------+-------------+---------------|
  1659	|abs(GLIBC_2.0)  |ftw(GLIBC_2.0)  |initstate    |ntohl        |tmpfile        |
  1660	|[8]             |[8]             |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1661	|                |                |[8]          |[7]          |               |
  1662	|----------------+----------------+-------------+-------------+---------------|
  1663	|atexit          |funlockfile     |insque       |ntohs        |tmpnam         |
  1664	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1665	|                |                |[8]          |[7]          |               |
  1666	|----------------+----------------+-------------+-------------+---------------|
  1667	|atof(GLIBC_2.0) |gcvt(GLIBC_2.0) |isatty       |openlog      |tsearch        |
  1668	|[8]             |[8]             |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1669	|                |                |[8]          |[8]          |               |
  1670	|----------------+----------------+-------------+-------------+---------------|
  1671	|atoi(GLIBC_2.0) |getcwd          |isblank      |perror       |ttyname        |
  1672	|[8]             |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1673	|                |                |[3]          |[8]          |               |
  1674	|----------------+----------------+-------------+-------------+---------------|
  1675	|atol(GLIBC_2.0) |getdate         |isinf        |ptsname      |ttyname_r      |
  1676	|[8]             |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1677	|                |                |[3]          |[8]          |               |
  1678	|----------------+----------------+-------------+-------------+---------------|
  1679	|basename        |getenv          |isinfl       |putenv       |twalk          |
  1680	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1681	|                |                |[3]          |[8]          |               |
  1682	|----------------+----------------+-------------+-------------+---------------|
  1683	|bindtextdomain  |getlogin        |isnan        |qsort        |unlockpt       |
  1684	|(GLIBC_2.0)[5]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1685	|                |                |[3]          |[8]          |               |
  1686	|----------------+----------------+-------------+-------------+---------------|
  1687	|bsearch         |getopt          |isnanf       |rand         |usleep         |
  1688	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1689	|                |                |[3]          |[8]          |               |
  1690	|----------------+----------------+-------------+-------------+---------------|
  1691	|calloc          |getopt_long     |isnanl       |random       |verrx          |
  1692	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[5]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[5] |
  1693	|                |                |[3]          |[8]          |               |
  1694	|----------------+----------------+-------------+-------------+---------------|
  1695	|closelog        |getopt_long_only|jrand48      |realloc      |warn(GLIBC_2.0)|
  1696	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[5]  |(GLIBC_2.0)  |(GLIBC_2.0)  |[5]            |
  1697	|                |                |[8]          |[8]          |               |
  1698	|----------------+----------------+-------------+-------------+---------------|
  1699	|confstr         |getsubopt       |l64a         |realpath     |warnx          |
  1700	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[5] |
  1701	|                |                |[8]          |[8]          |               |
  1702	|----------------+----------------+-------------+-------------+---------------|
  1703	|cuserid         |gettimeofday    |labs         |remque       |wordexp        |
  1704	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1705	|                |                |[8]          |[8]          |               |
  1706	|----------------+----------------+-------------+-------------+---------------|
  1707	|daemon          |glob(GLIBC_2.0) |ldiv         |seed48       |wordfree       |
  1708	|(GLIBC_2.0)[5]  |[8]             |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8] |
  1709	|                |                |[8]          |[8]          |               |
  1710	|----------------+----------------+-------------+-------------+---------------|
  1711	|dirname         |glob64          |lfind        |sethostid    |               |
  1712	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[5]  |(GLIBC_2.0)  |(GLIBC_2.0)  |               |
  1713	|                |                |[8]          |[5]          |               |
  1714	+-----------------------------------------------------------------------------+
  1715	-------------------------------------------------------------------------------
  1716	
  1717	Data Symbols
  1718	
  1719	Table 10-8. libc - Standard Library Data Interfaces
  1720	
  1721	+---------------------------------------------------------------+
  1722	|__environ[5]|_sys_errlist[5]|getdate_err[8]|opterr[5]|optopt[5]|
  1723	|------------+---------------+--------------+---------+---------|
  1724	|_environ[5] |environ[8]     |optarg[8]     |optind[5]|         |
  1725	+---------------------------------------------------------------+
  1726	-------------------------------------------------------------------------------
  1727	
  1728	Localization Functions
  1729	
  1730	Table 10-9. libc - Localization Functions Function Interfaces
  1731	
  1732	+------------------------------------------------------------------------------+
  1733	|__dcgettext     |catgets      |dcgettext     |iconv          |nl_langinfo     |
  1734	|(GLIBC_2.0)[5]  |(GLIBC_2.0)  |(GLIBC_2.0)[5]|(GLIBC_2.0)[8] |(GLIBC_2.0)[8]  |
  1735	|                |[8]          |              |               |                |
  1736	|----------------+-------------+--------------+---------------+----------------|
  1737	|catclose        |catopen      |gettext       |localeconv     |setlocale       |
  1738	|(GLIBC_2.0)[8]  |(GLIBC_2.0)  |(GLIBC_2.0)[5]|(GLIBC_2.0)[8] |(GLIBC_2.0)[8]  |
  1739	|                |[8]          |              |               |                |
  1740	+------------------------------------------------------------------------------+
  1741	-------------------------------------------------------------------------------
  1742	
  1743	Data Symbols
  1744	
  1745	Table 10-10. libc - Localization Functions Data Interfaces
  1746	
  1747	+----------------------------+
  1748	|_nl_msg_cat_cntr[5] | | | | |
  1749	+----------------------------+
  1750	-------------------------------------------------------------------------------
  1751	
  1752	Socket Interface
  1753	
  1754	Table 10-11. libc - Socket Interface Function Interfaces
  1755	
  1756	+----------------------------------------------------------------------------+
  1757	|_h_errno        |gethostid      |listen       |sendmsg       |socketpair    |
  1758	|(GLIBC_2.0)[8]  |(GLIBC_2.0)[8] |(GLIBC_2.0)  |(GLIBC_2.0)[7]|(GLIBC_2.0)[7]|
  1759	|                |               |[7]          |              |              |
  1760	|----------------+---------------+-------------+--------------+--------------|
  1761	|accept          |gethostname    |recv         |sendto        |              |
  1762	|(GLIBC_2.0)[7]  |(GLIBC_2.0)[7] |(GLIBC_2.0)  |(GLIBC_2.0)[7]|              |
  1763	|                |               |[7]          |              |              |
  1764	|----------------+---------------+-------------+--------------+--------------|
  1765	|bind(GLIBC_2.0) |getpeername    |recvfrom     |setsockopt    |              |
  1766	|[7]             |(GLIBC_2.0)[7] |(GLIBC_2.0)  |(GLIBC_2.0)[7]|              |
  1767	|                |               |[7]          |              |              |
  1768	|----------------+---------------+-------------+--------------+--------------|
  1769	|bindresvport    |getsockname    |recvmsg      |shutdown      |              |
  1770	|(GLIBC_2.0)[5]  |(GLIBC_2.0)[7] |(GLIBC_2.0)  |(GLIBC_2.0)[7]|              |
  1771	|                |               |[7]          |              |              |
  1772	|----------------+---------------+-------------+--------------+--------------|
  1773	|connect         |getsockopt     |send         |socket        |              |
  1774	|(GLIBC_2.0)[7]  |(GLIBC_2.0)[7] |(GLIBC_2.0)  |(GLIBC_2.0)[7]|              |
  1775	|                |               |[7]          |              |              |
  1776	+----------------------------------------------------------------------------+
  1777	-------------------------------------------------------------------------------
  1778	
  1779	Data Symbols
  1780	
  1781	Table 10-12. libc - Socket Interface Data Interfaces
  1782	
  1783	+-------------------+
  1784	|h_errno[7] | | | | |
  1785	+-------------------+
  1786	-------------------------------------------------------------------------------
  1787	
  1788	Wide Characters
  1789	
  1790	Table 10-13. libc - Wide Characters Function Interfaces
  1791	
  1792	+------------------------------------------------------------------------------+
  1793	|__mbrlen(GLIBC_2.0)|mbrlen        |vwscanf       |wcsnlen       |wcstoumax    |
  1794	|[5]                |(GLIBC_2.0)[8]|(GLIBC_2.0)[3]|(GLIBC_2.0)[5]|(GLIBC_2.0)  |
  1795	|                   |              |              |              |[3]          |
  1796	|-------------------+--------------+--------------+--------------+-------------|
  1797	|__wcstod_internal  |mbrtowc       |wcpcpy        |wcsnrtombs    |wcstouq      |
  1798	|(GLIBC_2.0)[5]     |(GLIBC_2.0)[8]|(GLIBC_2.0)[5]|(GLIBC_2.0)[5]|(GLIBC_2.0)  |
  1799	|                   |              |              |              |[5]          |
  1800	|-------------------+--------------+--------------+--------------+-------------|
  1801	|__wcstof_internal  |mbsinit       |wcpncpy       |wcspbrk       |wcswcs       |
  1802	|(GLIBC_2.0)[5]     |(GLIBC_2.0)[8]|(GLIBC_2.0)[5]|(GLIBC_2.0)[3]|(GLIBC_2.0)  |
  1803	|                   |              |              |              |[8]          |
  1804	|-------------------+--------------+--------------+--------------+-------------|
  1805	|__wcstol_internal  |mbsnrtowcs    |wcrtomb       |wcsrchr       |wcswidth     |
  1806	|(GLIBC_2.0)[5]     |(GLIBC_2.0)[5]|(GLIBC_2.0)[8]|(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1807	|                   |              |              |              |[8]          |
  1808	|-------------------+--------------+--------------+--------------+-------------|
  1809	|__wcstold_internal |mbsrtowcs     |wcscasecmp    |wcsrtombs     |wcsxfrm      |
  1810	|(GLIBC_2.0)[5]     |(GLIBC_2.0)[8]|(GLIBC_2.0)[5]|(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1811	|                   |              |              |              |[8]          |
  1812	|-------------------+--------------+--------------+--------------+-------------|
  1813	|__wcstoll_internal |mbstowcs      |wcscat        |wcsspn        |wctob        |
  1814	|(GLIBC_2.0)[5]     |(GLIBC_2.0)[8]|(GLIBC_2.0)[8]|(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1815	|                   |              |              |              |[8]          |
  1816	|-------------------+--------------+--------------+--------------+-------------|
  1817	|__wcstoul_internal |mbtowc        |wcschr        |wcsstr        |wctomb       |
  1818	|(GLIBC_2.0)[5]     |(GLIBC_2.0)[8]|(GLIBC_2.0)[8]|(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1819	|                   |              |              |              |[8]          |
  1820	|-------------------+--------------+--------------+--------------+-------------|
  1821	|__wcstoull_internal|putwc         |wcscmp        |wcstod        |wctrans      |
  1822	|(GLIBC_2.0)[5]     |(GLIBC_2.0)[3]|(GLIBC_2.0)[8]|(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1823	|                   |              |              |              |[8]          |
  1824	|-------------------+--------------+--------------+--------------+-------------|
  1825	|btowc(GLIBC_2.0)[8]|putwchar      |wcscoll       |wcstof        |wctype       |
  1826	|                   |(GLIBC_2.0)[3]|(GLIBC_2.0)[8]|(GLIBC_2.0)[3]|(GLIBC_2.0)  |
  1827	|                   |              |              |              |[8]          |
  1828	|-------------------+--------------+--------------+--------------+-------------|
  1829	|fgetws(GLIBC_2.2)  |swprintf      |wcscpy        |wcstoimax     |wcwidth      |
  1830	|[3]                |(GLIBC_2.2)[8]|(GLIBC_2.2)[8]|(GLIBC_2.2)[3]|(GLIBC_2.2)  |
  1831	|                   |              |              |              |[8]          |
  1832	|-------------------+--------------+--------------+--------------+-------------|
  1833	|fputwc(GLIBC_2.2)  |swscanf       |wcscspn       |wcstok        |wmemchr      |
  1834	|[3]                |(GLIBC_2.2)[3]|(GLIBC_2.2)[8]|(GLIBC_2.2)[8]|(GLIBC_2.2)  |
  1835	|                   |              |              |              |[8]          |
  1836	|-------------------+--------------+--------------+--------------+-------------|
  1837	|fputws(GLIBC_2.2)  |towctrans     |wcsdup        |wcstol        |wmemcmp      |
  1838	|[3]                |(GLIBC_2.2)[8]|(GLIBC_2.2)[5]|(GLIBC_2.2)[8]|(GLIBC_2.2)  |
  1839	|                   |              |              |              |[8]          |
  1840	|-------------------+--------------+--------------+--------------+-------------|
  1841	|fwide(GLIBC_2.2)[3]|towlower      |wcsftime      |wcstold       |wmemcpy      |
  1842	|                   |(GLIBC_2.2)[3]|(GLIBC_2.2)[3]|(GLIBC_2.2)[3]|(GLIBC_2.2)  |
  1843	|                   |              |              |              |[8]          |
  1844	|-------------------+--------------+--------------+--------------+-------------|
  1845	|fwprintf(GLIBC_2.2)|towupper      |wcslen        |wcstoll       |wmemmove     |
  1846	|[3]                |(GLIBC_2.2)[8]|(GLIBC_2.2)[8]|(GLIBC_2.2)[3]|(GLIBC_2.2)  |
  1847	|                   |              |              |              |[8]          |
  1848	|-------------------+--------------+--------------+--------------+-------------|
  1849	|fwscanf(GLIBC_2.2) |ungetwc       |wcsncasecmp   |wcstombs      |wmemset      |
  1850	|[3]                |(GLIBC_2.2)[3]|(GLIBC_2.2)[5]|(GLIBC_2.2)[8]|(GLIBC_2.2)  |
  1851	|                   |              |              |              |[8]          |
  1852	|-------------------+--------------+--------------+--------------+-------------|
  1853	|iconv_close        |vfwprintf     |wcsncat       |wcstoq        |             |
  1854	|(GLIBC_2.1)[8]     |(GLIBC_2.1)[3]|(GLIBC_2.1)[8]|(GLIBC_2.1)[5]|             |
  1855	|-------------------+--------------+--------------+--------------+-------------|
  1856	|iconv_open         |vswscanf      |wcsncmp       |wcstoul       |             |
  1857	|(GLIBC_2.1)[8]     |(GLIBC_2.1)[3]|(GLIBC_2.1)[8]|(GLIBC_2.1)[8]|             |
  1858	|-------------------+--------------+--------------+--------------+-------------|
  1859	|mblen(GLIBC_2.0)[8]|vwprintf      |wcsncpy       |wcstoull      |             |
  1860	|                   |(GLIBC_2.0)[3]|(GLIBC_2.0)[8]|(GLIBC_2.0)[3]|             |
  1861	+------------------------------------------------------------------------------+
  1862	-------------------------------------------------------------------------------
  1863	
  1864	String Functions
  1865	
  1866	Table 10-14. libc - String Functions Function Interfaces
  1867	
  1868	+----------------------------------------------------------------------------+
  1869	|__mempcpy          |bzero        |strcasestr   |strncasecmp   |strtoimax    |
  1870	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1871	|                   |[8]          |[5]          |              |[3]          |
  1872	|-------------------+-------------+-------------+--------------+-------------|
  1873	|__rawmemchr        |ffs          |strcat       |strncat       |strtok       |
  1874	|(GLIBC_2.1)[5]     |(GLIBC_2.1)  |(GLIBC_2.1)  |(GLIBC_2.1)[8]|(GLIBC_2.1)  |
  1875	|                   |[8]          |[8]          |              |[8]          |
  1876	|-------------------+-------------+-------------+--------------+-------------|
  1877	|__stpcpy(GLIBC_2.0)|index        |strchr       |strncmp       |strtok_r     |
  1878	|[5]                |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1879	|                   |[8]          |[8]          |              |[5]          |
  1880	|-------------------+-------------+-------------+--------------+-------------|
  1881	|__strdup(GLIBC_2.0)|memccpy      |strcmp       |strncpy       |strtold      |
  1882	|[5]                |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1883	|                   |[8]          |[8]          |              |[3]          |
  1884	|-------------------+-------------+-------------+--------------+-------------|
  1885	|__strtod_internal  |memchr       |strcoll      |strndup       |strtoll      |
  1886	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[5]|(GLIBC_2.0)  |
  1887	|                   |[8]          |[8]          |              |[3]          |
  1888	|-------------------+-------------+-------------+--------------+-------------|
  1889	|__strtof_internal  |memcmp       |strcpy       |strnlen       |strtoq       |
  1890	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[5]|(GLIBC_2.0)  |
  1891	|                   |[8]          |[8]          |              |[5]          |
  1892	|-------------------+-------------+-------------+--------------+-------------|
  1893	|__strtok_r         |memcpy       |strcspn      |strpbrk       |strtoull     |
  1894	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1895	|                   |[8]          |[8]          |              |[3]          |
  1896	|-------------------+-------------+-------------+--------------+-------------|
  1897	|__strtol_internal  |memmove      |strdup       |strptime      |strtoumax    |
  1898	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1899	|                   |[8]          |[8]          |              |[3]          |
  1900	|-------------------+-------------+-------------+--------------+-------------|
  1901	|__strtold_internal |memrchr      |strerror     |strrchr       |strtouq      |
  1902	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1903	|                   |[5]          |[8]          |              |[5]          |
  1904	|-------------------+-------------+-------------+--------------+-------------|
  1905	|__strtoll_internal |memset       |strerror_r   |strsep        |strverscmp   |
  1906	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[5]|(GLIBC_2.0)  |
  1907	|                   |[8]          |[5]          |              |[5]          |
  1908	|-------------------+-------------+-------------+--------------+-------------|
  1909	|__strtoul_internal |rindex       |strfmon      |strsignal     |strxfrm      |
  1910	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[5]|(GLIBC_2.0)  |
  1911	|                   |[8]          |[8]          |              |[8]          |
  1912	|-------------------+-------------+-------------+--------------+-------------|
  1913	|__strtoull_internal|stpcpy       |strfry       |strspn        |swab         |
  1914	|(GLIBC_2.0)[5]     |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)  |
  1915	|                   |[5]          |[5]          |              |[8]          |
  1916	|-------------------+-------------+-------------+--------------+-------------|
  1917	|bcmp(GLIBC_2.0)[8] |stpncpy      |strftime     |strstr        |             |
  1918	|                   |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[8]|             |
  1919	|                   |[5]          |[8]          |              |             |
  1920	|-------------------+-------------+-------------+--------------+-------------|
  1921	|bcopy(GLIBC_2.0)[8]|strcasecmp   |strlen       |strtof        |             |
  1922	|                   |(GLIBC_2.0)  |(GLIBC_2.0)  |(GLIBC_2.0)[3]|             |
  1923	|                   |[8]          |[8]          |              |             |
  1924	+----------------------------------------------------------------------------+
  1925	-------------------------------------------------------------------------------
  1926	
  1927	IPC Functions
  1928	
  1929	Table 10-15. libc - IPC Functions Function Interfaces
  1930	
  1931	+-----------------------------------------------------------------------------+
  1932	|ftok(GLIBC_2.0)[8]|msgrcv(GLIBC_2.0) |semget(GLIBC_2.0) |shmctl(GLIBC_2.0) | |
  1933	|                  |[8]               |[8]               |[8]               | |
  1934	|------------------+------------------+------------------+------------------+-|
  1935	|msgctl(GLIBC_2.0) |msgsnd(GLIBC_2.0) |semop(GLIBC_2.0)  |shmdt(GLIBC_2.0)  | |
  1936	|[8]               |[8]               |[8]               |[8]               | |
  1937	|------------------+------------------+------------------+------------------+-|
  1938	|msgget(GLIBC_2.0) |semctl(GLIBC_2.0) |shmat(GLIBC_2.0)  |shmget(GLIBC_2.0) | |
  1939	|[8]               |[8]               |[8]               |[8]               | |
  1940	+-----------------------------------------------------------------------------+
  1941	-------------------------------------------------------------------------------
  1942	
  1943	Regular Expressions
  1944	
  1945	Table 10-16. libc - Regular Expressions Function Interfaces
  1946	
  1947	+-----------------------------------------------------------------------------+
  1948	|advance(GLIBC_2.0)|re_exec(GLIBC_2.0)|regerror          |regfree(GLIBC_2.0)| |
  1949	|[8]               |[8]               |(GLIBC_2.0)[8]    |[8]               | |
  1950	|------------------+------------------+------------------+------------------+-|
  1951	|re_comp(GLIBC_2.0)|regcomp(GLIBC_2.0)|regexec(GLIBC_2.0)|step(GLIBC_2.0)[8]| |
  1952	|[8]               |[8]               |[8]               |                  | |
  1953	+-----------------------------------------------------------------------------+
  1954	-------------------------------------------------------------------------------
  1955	
  1956	Data Symbols
  1957	
  1958	Table 10-17. libc - Regular Expressions Data Interfaces
  1959	
  1960	+---------------------------+
  1961	|loc1[8]|loc2[8]|locs[8]| | |
  1962	+---------------------------+
  1963	-------------------------------------------------------------------------------
  1964	
  1965	Character Type Functions
  1966	
  1967	Table 10-18. libc - Character Type Functions Function Interfaces
  1968	
  1969	+-----------------------------------------------------------------------------+
  1970	|__ctype_get_mb_cur_max|isdigit     |iswalnum     |iswlower      |toascii     |
  1971	|(GLIBC_2.0)[5]        |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0) |
  1972	|                      |[8]         |[8]          |              |[8]         |
  1973	|----------------------+------------+-------------+--------------+------------|
  1974	|_tolower(GLIBC_2.0)[8]|isgraph     |iswalpha     |iswprint      |tolower     |
  1975	|                      |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0) |
  1976	|                      |[8]         |[8]          |              |[8]         |
  1977	|----------------------+------------+-------------+--------------+------------|
  1978	|_toupper(GLIBC_2.0)[8]|islower     |iswblank     |iswpunct      |toupper     |
  1979	|                      |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0) |
  1980	|                      |[8]         |[5]          |              |[8]         |
  1981	|----------------------+------------+-------------+--------------+------------|
  1982	|isalnum(GLIBC_2.0)[8] |isprint     |iswcntrl     |iswspace      |            |
  1983	|                      |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0)[8]|            |
  1984	|                      |[8]         |[8]          |              |            |
  1985	|----------------------+------------+-------------+--------------+------------|
  1986	|isalpha(GLIBC_2.0)[8] |ispunct     |iswctype     |iswupper      |            |
  1987	|                      |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0)[8]|            |
  1988	|                      |[8]         |[5]          |              |            |
  1989	|----------------------+------------+-------------+--------------+------------|
  1990	|isascii(GLIBC_2.0)[8] |isspace     |iswdigit     |iswxdigit     |            |
  1991	|                      |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0)[8]|            |
  1992	|                      |[8]         |[8]          |              |            |
  1993	|----------------------+------------+-------------+--------------+------------|
  1994	|iscntrl(GLIBC_2.0)[8] |isupper     |iswgraph     |isxdigit      |            |
  1995	|                      |(GLIBC_2.0) |(GLIBC_2.0)  |(GLIBC_2.0)[8]|            |
  1996	|                      |[8]         |[8]          |              |            |
  1997	+-----------------------------------------------------------------------------+
  1998	-------------------------------------------------------------------------------
  1999	
  2000	Data Symbols
  2001	
  2002	Table 10-19. libc - Character Type Functions Data Interfaces
  2003	
  2004	+------------------------------------------------------+
  2005	|__ctype_b[5]|__ctype_tolower[5]|__ctype_toupper[5]| | |
  2006	+------------------------------------------------------+
  2007	-------------------------------------------------------------------------------
  2008	
  2009	Time Manipulation
  2010	
  2011	Table 10-20. libc - Time Manipulation Function Interfaces
  2012	
  2013	+-----------------------------------------------------------------------------+
  2014	|adjtime(GLIBC_2.0)|ctime(GLIBC_2.0)  |gmtime(GLIBC_2.0)  |tzname(GLIBC_2.0)| |
  2015	|[5]               |[8]               |[8]                |[8]              | |
  2016	|------------------+------------------+-------------------+-----------------+-|
  2017	|adjtimex          |daylight          |localtime          |tzset(GLIBC_2.0) | |
  2018	|(GLIBC_2.0)[5]    |(GLIBC_2.0)[8]    |(GLIBC_2.0)[8]     |[8]              | |
  2019	|------------------+------------------+-------------------+-----------------+-|
  2020	|asctime(GLIBC_2.0)|difftime          |mktime(GLIBC_2.0)  |ualarm(GLIBC_2.0)| |
  2021	|[8]               |(GLIBC_2.0)[8]    |[8]                |[8]              | |
  2022	+-----------------------------------------------------------------------------+
  2023	-------------------------------------------------------------------------------
  2024	
  2025	Data Symbols
  2026	
  2027	Table 10-21. libc - Time Manipulation Data Interfaces
  2028	
  2029	+--------------------+
  2030	|timezone[8] | | | | |
  2031	+--------------------+
  2032	-------------------------------------------------------------------------------
  2033	
  2034	Terminal Interface Functions
  2035	
  2036	Table 10-22. libc - Terminal Interface Functions Function Interfaces
  2037	
  2038	+----------------------------------------------------------------------------+
  2039	|cfgetispeed    |cfsetispeed    |tcdrain      |tcgetattr     |tcsendbreak    |
  2040	|(GLIBC_2.0)[8] |(GLIBC_2.0)[8] |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)[8] |
  2041	|               |               |[8]          |              |               |
  2042	|---------------+---------------+-------------+--------------+---------------|
  2043	|cfgetospeed    |cfsetospeed    |tcflow       |tcgetpgrp     |tcsetattr      |
  2044	|(GLIBC_2.0)[8] |(GLIBC_2.0)[8] |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)[8] |
  2045	|               |               |[8]          |              |               |
  2046	|---------------+---------------+-------------+--------------+---------------|
  2047	|cfmakeraw      |cfsetspeed     |tcflush      |tcgetsid      |tcsetpgrp      |
  2048	|(GLIBC_2.0)[5] |(GLIBC_2.0)[5] |(GLIBC_2.0)  |(GLIBC_2.0)[8]|(GLIBC_2.0)[8] |
  2049	|               |               |[8]          |              |               |
  2050	+----------------------------------------------------------------------------+
  2051	-------------------------------------------------------------------------------
  2052	
  2053	System Database Interface
  2054	
  2055	Table 10-23. libc - System Database Interface Function Interfaces
  2056	
  2057	+-----------------------------------------------------------------------------+
  2058	|endgrent      |getgrent         |getprotoent    |getutxent    |setnetent     |
  2059	|(GLIBC_2.0)[8]|(GLIBC_2.0)[8]   |(GLIBC_2.0)[5] |(GLIBC_2.0)  |(GLIBC_2.0)[7]|
  2060	|              |                 |               |[8]          |              |
  2061	|--------------+-----------------+---------------+-------------+--------------|
  2062	|endhostent    |getgrgid         |getpwent       |getutxid     |setprotoent   |
  2063	|(GLIBC_2.0)[7]|(GLIBC_2.0)[8]   |(GLIBC_2.0)[8] |(GLIBC_2.0)  |(GLIBC_2.0)[7]|
  2064	|              |                 |               |[8]          |              |
  2065	|--------------+-----------------+---------------+-------------+--------------|
  2066	|endnetent     |getgrnam         |getpwnam       |getutxline   |setpwent      |
  2067	|(GLIBC_2.0)[7]|(GLIBC_2.0)[8]   |(GLIBC_2.0)[8] |(GLIBC_2.0)  |(GLIBC_2.0)[8]|
  2068	|              |                 |               |[8]          |              |
  2069	|--------------+-----------------+---------------+-------------+--------------|
  2070	|endprotoent   |gethostbyaddr    |getpwuid       |pututxline   |setservent    |
  2071	|(GLIBC_2.0)[7]|(GLIBC_2.0)[7]   |(GLIBC_2.0)[8] |(GLIBC_2.0)  |(GLIBC_2.0)[7]|
  2072	|              |                 |               |[8]          |              |
  2073	|--------------+-----------------+---------------+-------------+--------------|
  2074	|endpwent      |gethostbyname    |getservbyname  |setgrent     |setutent      |
  2075	|(GLIBC_2.0)[8]|(GLIBC_2.0)[5]   |(GLIBC_2.0)[5] |(GLIBC_2.0)  |(GLIBC_2.0)[5]|
  2076	|              |                 |               |[8]          |              |
  2077	|--------------+-----------------+---------------+-------------+--------------|
  2078	|endservent    |getnetbyaddr     |getservbyport  |setgroups    |setutxent     |
  2079	|(GLIBC_2.0)[7]|(GLIBC_2.0)[7]   |(GLIBC_2.0)[7] |(GLIBC_2.0)  |(GLIBC_2.0)[8]|
  2080	|              |                 |               |[5]          |              |
  2081	|--------------+-----------------+---------------+-------------+--------------|
  2082	|endutent      |getprotobyname   |getservent     |sethostent   |              |
  2083	|(GLIBC_2.0)[8]|(GLIBC_2.0)[5]   |(GLIBC_2.0)[5] |(GLIBC_2.0)  |              |
  2084	|              |                 |               |[7]          |              |
  2085	|--------------+-----------------+---------------+-------------+--------------|
  2086	|endutxent     |getprotobynumber |getutent       |setmntent    |              |
  2087	|(GLIBC_2.1)[8]|(GLIBC_2.1)[7]   |(GLIBC_2.1)[5] |(GLIBC_2.1)  |              |
  2088	|              |                 |               |[5]          |              |
  2089	+-----------------------------------------------------------------------------+
  2090	-------------------------------------------------------------------------------
  2091	
  2092	Language Support
  2093	
  2094	Table 10-24. libc - Language Support Function Interfaces
  2095	
  2096	+-----------------------------------------------------------------------------+
  2097	|_obstack_begin         |_obstack_newchunk         |obstack_free          | | |
  2098	|(GLIBC_2.0)[5]         |(GLIBC_2.0)[5]            |(GLIBC_2.0)[5]        | | |
  2099	+-----------------------------------------------------------------------------+
  2100	-------------------------------------------------------------------------------
  2101	
  2102	Large File Support
  2103	
  2104	Table 10-25. libc - Large File Support Function Interfaces
  2105	
  2106	+----------------------------------------------------------------------------+
  2107	|__fxstat64     |fopen64       |ftello64       |mkstemp64     |tmpfile64     |
  2108	|(GLIBC_2.2)[5] |(GLIBC_2.2)[4]|(GLIBC_2.2)[4] |(GLIBC_2.2)[4]|(GLIBC_2.2)[4]|
  2109	|---------------+--------------+---------------+--------------+--------------|
  2110	|__lxstat64     |freopen64     |ftruncate64    |mmap64        |truncate64    |
  2111	|(GLIBC_2.2)[5] |(GLIBC_2.2)[4]|(GLIBC_2.2)[4] |(GLIBC_2.2)[4]|(GLIBC_2.2)[4]|
  2112	|---------------+--------------+---------------+--------------+--------------|
  2113	|__xstat64      |fseeko64      |ftw64          |nftw64        |              |
  2114	|(GLIBC_2.2)[5] |(GLIBC_2.2)[4]|(GLIBC_2.2)[4] |(GLIBC_2.2)[4]|              |
  2115	|---------------+--------------+---------------+--------------+--------------|
  2116	|alphasort64    |fsetpos64     |getrlimit64    |open64        |              |
  2117	|(GLIBC_2.1)[5] |(GLIBC_2.1)[4]|(GLIBC_2.1)[4] |(GLIBC_2.1)[4]|              |
  2118	|---------------+--------------+---------------+--------------+--------------|
  2119	|creat64        |fstatfs64     |lockf64        |pwrite64      |              |
  2120	|(GLIBC_2.1)[4] |(GLIBC_2.1)[4]|(GLIBC_2.1)[4] |(GLIBC_2.1)[4]|              |
  2121	|---------------+--------------+---------------+--------------+--------------|
  2122	|fgetpos64      |fstatvfs64    |lseek64        |readdir64     |              |
  2123	|(GLIBC_2.1)[4] |(GLIBC_2.1)[4]|(GLIBC_2.1)[4] |(GLIBC_2.1)[4]|              |
  2124	+----------------------------------------------------------------------------+
  2125	-------------------------------------------------------------------------------
  2126	
  2127	Data Definitions for libc
  2128	
  2129	-------------------------------------------------------------------------------
  2130	
  2131	dirent.h
  2132	
  2133	typedef struct __dirstream DIR;
  2134	-------------------------------------------------------------------------------
  2135	
  2136	ftw.h
  2137	
  2138	typedef int (*__ftw_func_t) (char *__filename, struct stat * __status,
  2139	                             int __flag);
  2140	
  2141	typedef int (*__ftw64_func_t) (char *__filename, struct stat64 * __status,
  2142	                               int __flag);
  2143	
  2144	typedef int (*__nftw_func_t) (char *__filename, struct stat * __status,
  2145	                              int __flag, struct FTW * __info);
  2146	
  2147	typedef int (*__nftw64_func_t) (char *__filename, struct stat64 * __status,
  2148	                                int __flag, struct FTW * __info);
  2149	-------------------------------------------------------------------------------
  2150	
  2151	glob.h
  2152	
  2153	typedef struct
  2154	{
  2155	  __size_t gl_pathc;
  2156	  char **gl_pathv;
  2157	  __size_t gl_offs;
  2158	  int gl_flags;
  2159	  void (*gl_closedir) ();
  2160	  struct dirent64 *(*gl_readdir) ();
  2161	  void *(*gl_opendir) ();
  2162	  int (*gl_lstat) ();
  2163	  int (*gl_stat) ();
  2164	}
  2165	glob_t;
  2166	
  2167	typedef struct
  2168	{
  2169	  __size_t gl_pathc;
  2170	  char **gl_pathv;
  2171	  __size_t gl_offs;
  2172	  int gl_flags;
  2173	  void (*gl_closedir) ();
  2174	  struct dirent64 *(*gl_readdir) ();
  2175	  void *(*gl_opendir) ();
  2176	  int (*gl_lstat) ();
  2177	  int (*gl_stat) ();
  2178	}
  2179	glob64_t;
  2180	-------------------------------------------------------------------------------
  2181	
  2182	grp.h
  2183	
  2184	struct group
  2185	{
  2186	  char *gr_name;
  2187	  char *gr_passwd;
  2188	  __gid_t gr_gid;
  2189	  char **gr_mem;
  2190	}
  2191	 ;
  2192	-------------------------------------------------------------------------------
  2193	
  2194	iconv.h
  2195	
  2196	typedef void *iconv_t;
  2197	-------------------------------------------------------------------------------
  2198	
  2199	inttypes.h
  2200	
  2201	typedef lldiv_t imaxdiv_t;
  2202	
  2203	typedef long long intmax_t;
  2204	
  2205	typedef unsigned long long uintmax_t;
  2206	-------------------------------------------------------------------------------
  2207	
  2208	locale.h
  2209	
  2210	struct lconv
  2211	{
  2212	  char *decimal_point;
  2213	  char *thousands_sep;
  2214	  char *grouping;
  2215	  char *int_curr_symbol;
  2216	  char *currency_symbol;
  2217	  char *mon_decimal_point;
  2218	  char *mon_thousands_sep;
  2219	  char *mon_grouping;
  2220	  char *positive_sign;
  2221	  char *negative_sign;
  2222	  char int_frac_digits;
  2223	  char frac_digits;
  2224	  char p_cs_precedes;
  2225	  char p_sep_by_space;
  2226	  char n_cs_precedes;
  2227	  char n_sep_by_space;
  2228	  char p_sign_posn;
  2229	  char n_sign_posn;
  2230	}
  2231	 ;
  2232	-------------------------------------------------------------------------------
  2233	
  2234	nl_types.h
  2235	
  2236	typedef void *nl_catd;
  2237	
  2238	typedef int nl_item;
  2239	-------------------------------------------------------------------------------
  2240	
  2241	pwd.h
  2242	
  2243	struct passwd
  2244	{
  2245	  char *pw_name;
  2246	  char *pw_passwd;
  2247	  __uid_t pw_uid;
  2248	  __gid_t pw_gid;
  2249	  char *pw_gecos;
  2250	  char *pw_dir;
  2251	  char *pw_shell;
  2252	}
  2253	 ;
  2254	-------------------------------------------------------------------------------
  2255	
  2256	regex.h
  2257	
  2258	typedef unsigned long reg_syntax_t;
  2259	
  2260	typedef struct re_pattern_buffer
  2261	{
  2262	  unsigned char *buffer;
  2263	  unsigned long allocated;
  2264	  unsigned long used;
  2265	  reg_syntax_t syntax;
  2266	  char *fastmap;
  2267	  char *translate;
  2268	  size_t re_nsub;
  2269	  unsigned int can_be_null;
  2270	  unsigned int regs_allocated;
  2271	  unsigned int fastmap_accurate;
  2272	  unsigned int no_sub;
  2273	  unsigned int not_bol;
  2274	  unsigned int not_eol;
  2275	  unsigned int newline_anchor;
  2276	}
  2277	regex_t;
  2278	
  2279	typedef int regoff_t;
  2280	
  2281	typedef struct
  2282	{
  2283	  regoff_t rm_so;
  2284	  regoff_t rm_eo;
  2285	}
  2286	regmatch_t;
  2287	-------------------------------------------------------------------------------
  2288	
  2289	search.h
  2290	
  2291	typedef enum
  2292	{
  2293	  FIND,
  2294	  ENTER
  2295	}
  2296	ACTION;
  2297	
  2298	typedef enum
  2299	{
  2300	  preorder,
  2301	  postorder,
  2302	  endorder,
  2303	  leaf
  2304	}
  2305	VISIT;
  2306	
  2307	typedef struct entry
  2308	{
  2309	  char *key;
  2310	  void *data;
  2311	}
  2312	ENTRY;
  2313	
  2314	typedef void (*__action_fn_t) (void *__nodep, VISIT __value, int __level);
  2315	-------------------------------------------------------------------------------
  2316	
  2317	setjmp.h
  2318	
  2319	typedef int __jmp_buf;
  2320	
  2321	typedef struct __jmp_buf_tag
  2322	{
  2323	  __jmp_buf __jmpbuf;
  2324	  int __mask_was_saved;
  2325	  __sigset_t __saved_mask;
  2326	}
  2327	jmp_buf;
  2328	
  2329	typedef jmp_buf sigjmp_buf;
  2330	-------------------------------------------------------------------------------
  2331	
  2332	signal.h
  2333	
  2334	typedef union sigval
  2335	{
  2336	  int sival_int;
  2337	  void *sival_ptr;
  2338	}
  2339	sigval_t;
  2340	
  2341	typedef void (*__sighandler_t) ();
  2342	
  2343	struct sigevent
  2344	{
  2345	  sigval_t sigev_value;
  2346	  int sigev_signo;
  2347	  int sigev_notify;
  2348	}
  2349	 ;
  2350	
  2351	typedef struct
  2352	{
  2353	  unsigned long __val[1];
  2354	}
  2355	__sigset_t;
  2356	
  2357	typedef __sigset_t sigset_t;
  2358	
  2359	struct sigaction;
  2360	
  2361	typedef struct
  2362	{
  2363	  int si_band;
  2364	  int si_fd;
  2365	  struct _sifields;
  2366	  struct _sigpoll;
  2367	}
  2368	siginfo_t;
  2369	
  2370	struct sigaltstack
  2371	{
  2372	  void *ss_sp;
  2373	  int ss_flags;
  2374	  size_t ss_size;
  2375	}
  2376	 ;
  2377	
  2378	struct sigstack
  2379	{
  2380	  void *ss_sp;
  2381	  int ss_onstack;
  2382	}
  2383	 ;
  2384	-------------------------------------------------------------------------------
  2385	
  2386	stdio.h
  2387	
  2388	typedef struct _IO_FILE FILE;
  2389	
  2390	typedef __off_t fpos_t;
  2391	
  2392	typedef __off64_t fpos64_t;
  2393	-------------------------------------------------------------------------------
  2394	
  2395	stdlib.h
  2396	
  2397	typedef struct
  2398	{
  2399	  long long quot;
  2400	  long long rem;
  2401	}
  2402	lldiv_t;
  2403	
  2404	typedef struct
  2405	{
  2406	  int quot;
  2407	  int rem;
  2408	}
  2409	div_t;
  2410	
  2411	typedef struct
  2412	{
  2413	  long quot;
  2414	  long rem;
  2415	}
  2416	ldiv_t;
  2417	
  2418	typedef int (*__compar_fn_t) ();
  2419	-------------------------------------------------------------------------------
  2420	
  2421	sys/sem.h
  2422	
  2423	struct sembuf
  2424	{
  2425	  short sem_num;
  2426	  short sem_op;
  2427	  short sem_flg;
  2428	}
  2429	 ;
  2430	-------------------------------------------------------------------------------
  2431	
  2432	sys/socket.h
  2433	
  2434	typedef unsigned short sa_family_t;
  2435	
  2436	typedef unsigned int socklen_t;
  2437	
  2438	struct sockaddr
  2439	{
  2440	  sa_family_t sa_family;
  2441	  char sa_data[1];
  2442	}
  2443	 ;
  2444	
  2445	struct msghdr
  2446	{
  2447	  void *msg_name;
  2448	  socklen_t msg_namelen;
  2449	  struct iovec *msg_iov;
  2450	  size_t msg_iovlen;
  2451	  void *msg_control;
  2452	  size_t msg_controllen;
  2453	  int msg_flags;
  2454	}
  2455	 ;
  2456	-------------------------------------------------------------------------------
  2457	
  2458	sys/times.h
  2459	
  2460	struct tms
  2461	{
  2462	  clock_t tms_utime;
  2463	  clock_t tms_stime;
  2464	  clock_t tms_cutime;
  2465	  clock_t tms_cstime;
  2466	}
  2467	 ;
  2468	-------------------------------------------------------------------------------
  2469	
  2470	sys/utsname.h
  2471	
  2472	struct utsname
  2473	{
  2474	  char sysname[1];
  2475	  char nodename[1];
  2476	  char release[1];
  2477	  char version[1];
  2478	  char machine[1];
  2479	  char __domainname[1];
  2480	}
  2481	 ;
  2482	-------------------------------------------------------------------------------
  2483	
  2484	sys/wait.h
  2485	
  2486	typedef enum
  2487	{
  2488	  P_ALL,
  2489	  P_PID,
  2490	  P_PGID
  2491	}
  2492	idtype_t;
  2493	-------------------------------------------------------------------------------
  2494	
  2495	time.h
  2496	
  2497	typedef long __clock_t;
  2498	
  2499	struct timespec
  2500	{
  2501	  long tv_sec;
  2502	  long tv_nsec;
  2503	}
  2504	 ;
  2505	
  2506	struct tm
  2507	{
  2508	  int tm_sec;
  2509	  int tm_min;
  2510	  int tm_hour;
  2511	  int tm_mday;
  2512	  int tm_mon;
  2513	  int tm_year;
  2514	  int tm_wday;
  2515	  int tm_yday;
  2516	  int tm_isdst;
  2517	  long __tm_gmtoff;
  2518	  char *__tm_zone;
  2519	}
  2520	 ;
  2521	
  2522	typedef __clock_t clock_t;
  2523	
  2524	typedef __time_t time_t;
  2525	-------------------------------------------------------------------------------
  2526	
  2527	unistd.h
  2528	
  2529	typedef __ssize_t ssize_t;
  2530	
  2531	typedef __pid_t pid_t;
  2532	
  2533	typedef __off_t off_t;
  2534	-------------------------------------------------------------------------------
  2535	
  2536	utime.h
  2537	
  2538	struct utimbuf
  2539	{
  2540	  __time_t actime;
  2541	  __time_t modtime;
  2542	}
  2543	 ;
  2544	-------------------------------------------------------------------------------
  2545	
  2546	wchar.h
  2547	
  2548	typedef long wchar_t;
  2549	
  2550	typedef unsigned int wint_t;
  2551	
  2552	typedef struct
  2553	{
  2554	  int count;
  2555	  wint_t value;
  2556	}
  2557	mbstate_t;
  2558	-------------------------------------------------------------------------------
  2559	
  2560	wctype.h
  2561	
  2562	typedef unsigned long wctype_t;
  2563	
  2564	typedef __int32_t *wctrans_t;
  2565	-------------------------------------------------------------------------------
  2566	
  2567	wordexp.h
  2568	
  2569	typedef struct
  2570	{
  2571	  int we_wordc;
  2572	  char **we_wordv;
  2573	  int we_offs;
  2574	}
  2575	wordexp_t;
  2576	-------------------------------------------------------------------------------
  2577	
  2578	Interface Definitions for libc
  2579	
  2580	Table of Contents
  2581	acct ?? switch process accounting on or off
  2582	adjtime ?? correct the time to allow synchronization of the system clock
  2583	adjtimex ?? tune kernel clock
  2584	alphasort ?? scan a directory for matching entries
  2585	alphasort64 ?? compare two struct dirents alphabetically
  2586	__assert_fail ?? abort the program after false assertion
  2587	bindtextdomain ?? specify that the DOMAINNAME message catalog will be found in
  2588	    DIRNAME rather than in the system locale data base
  2589	cfmakeraw ?? get and set terminal attributes
  2590	cfsetspeed ?? manipulate the termios structure
  2591	__ctype_b ?? array index for ctype functions
  2592	__ctype_tolower ?? convert uppercase letter to lowercase letter
  2593	__ctype_toupper ?? convert lowercase letter to uppercase letter
  2594	__cxa_atexit ?? register a function to be called by exit or when a shared
  2595	    library is unloaded
  2596	daemon ?? run in the background
  2597	dcgettext ?? look up the MSGID in the DOMAINNAME message catalog for the
  2598	    current CATEGORY locale
  2599	__dcgettext ?? used by dcgettext in the translation to look up the MSGID in the
  2600	    DOMAINNAME message catalog for the current locale
  2601	__divdi3 ?? mathematic operation
  2602	endutent ?? access utmp file entries
  2603	_environ ?? alias for environ - user environment
  2604	__environ ?? alias for environ - user environment
  2605	err ?? display formatted error messages
  2606	__errno_location ?? address of errno variable
  2607	error ?? analyze and disperse compiler error messages
  2608	errx ?? error messages
  2609	flock ?? apply or remove an advisory lock on an open file
  2610	__fpending ?? returns in bytes the amount of output pending on a stream
  2611	fstatfs ?? get file system statistics
  2612	fwprintf ?? formatted wide character output conversion
  2613	gethostbyname ?? get network host entry
  2614	getloadavg ?? get system load averages
  2615	getopt_long ?? parse command line options
  2616	getopt_long_only ?? parse command line options
  2617	__getpgid ?? get the process group id
  2618	getprotobyname ?? get protocol entry
  2619	getprotoent ?? get protocol entry
  2620	getservbyname ?? get service entry
  2621	getservent ?? get service entry
  2622	gettext ?? look up MSGID in the current default message catalog for the current
  2623	    LC_MESSAGES locale
  2624	getutent ?? access utmp file entries
  2625	htons ?? converts host byte order to network byte order
  2626	inet_aton ?? Internet address manipulation routine
  2627	inet_ntoa ?? Internet address manipulation routine
  2628	initgroups ?? initialize the supplementary group access list
  2629	_IO_2_1_stderr_ ?? standard I/O stream
  2630	_IO_2_1_stdin_ ?? standard I/O stream
  2631	_IO_2_1_stdout_ ?? standard I/O stream
  2632	_IO_feof ?? alias for feof
  2633	_IO_getc ?? alias for getc
  2634	_IO_putc ?? alias for putc
  2635	_IO_puts ?? alias for puts
  2636	isblank ?? character classification routine
  2637	isinf ?? test for infinity or not-a-number (NaN)
  2638	iswblank ?? test for whitespace wide character
  2639	iswctype ?? wide character classification
  2640	__libc_start_main ?? initialization routine
  2641	llabs ?? compute the absolute value of an integer
  2642	logwtmp ?? append an entry to the wtmp file
  2643	__lxstat ?? inline wrapper around call to lxstat
  2644	mbsnrtowcs ?? convert a multibyte string to a wide character string
  2645	memmem ?? locate a substring
  2646	__mempcpy ?? copy N bytes of SRC to DEST
  2647	memrchr ?? scan memory for a character
  2648	mkstemp64 ?? Create a unique temporary file (Large File Support)
  2649	_nl_msg_cat_cntr ?? variable defined in loadmsgcat.c which gets incremented
  2650	    every time a new catalog is loaded
  2651	ntohs ?? convert values between host and network byte order
  2652	_obstack_begin ?? initialize an obstack for use
  2653	obstack_free ?? free an object in the obstack
  2654	_obstack_newchunk ?? allocate a new current chunk of memory for the obstack
  2655	opterr ?? external variable used in getopt()
  2656	optind ?? external variable used in getopt()
  2657	optopt ?? external variable used in getopt()
  2658	psignal ?? print signal message
  2659	putwchar ?? write a wide character to standard output
  2660	pwrite64 ?? (Large File Support)
  2661	__rawmemchr ?? scan memory
  2662	sem_timedwait ?? operation on semaphore
  2663	setbuffer ?? stream buffering operation
  2664	setegid ?? set real and / or effective group ID
  2665	setgroups ?? set list of supplementary group IDs
  2666	sethostid ?? set the unique identifier of the current host
  2667	sethostname ?? set host name
  2668	setmntent ?? get file system descriptor file entry
  2669	setutent ?? access utmp file entries
  2670	sigandset ?? build a new signal set by combining the two input sets using
  2671	    logical AND
  2672	sigblock ?? manipulate the signal mask
  2673	siggetmask ?? manipulate the signal mask
  2674	sigisemptyset ?? signal function - check for empty SET
  2675	sigorset ?? build a new signal set by combining the two input sets using
  2676	    logical OR
  2677	sigreturn ?? return from signal handler and cleanup stack frame
  2678	sigsetmask ?? manipulate the signal mask
  2679	sigvec ?? BSD software signal facilities
  2680	statfs ?? get file system statistics
  2681	fstatfs64 ?? Get file system statistics (Large File Support)
  2682	stime ?? set time
  2683	stpcpy ?? copy a string returning a pointer to its end
  2684	__stpcpy ?? copy a string returning a pointer to its end
  2685	stpncpy ?? copy a fixed-size string, returning a pointer to its end
  2686	strcasestr ?? locate a substring - ignores the case of both strings
  2687	strerror_r ?? reentrant version of strerror
  2688	strfry ?? randomize a string
  2689	strndup ?? return a malloc'd copy of at most N bytes of STRING
  2690	strnlen ?? determine the length of a fixed-size string
  2691	strsep ?? extract token from string
  2692	strsignal ?? return string describing signal
  2693	__strtod_internal ?? alias for strtod
  2694	strtok_r ?? extract tokens from strings
  2695	__strtol_internal ?? alias for strtol
  2696	strtoq ?? convert string value to a long or quad_t integer
  2697	strtouq ?? convert a string to an uquad_t
  2698	strverscmp ?? compare S1 and S2 as strings holding name and indices/version
  2699	    numbers
  2700	__sysconf ?? get configuration information at runtime
  2701	system ?? execute a shell command
  2702	_sys_errlist ?? array containing the "C" locale strings used by strerror()
  2703	_sys_siglist ?? array containing the names of the signal names
  2704	textdomain ?? set the current default message catalog to DOMAINNAME
  2705	vasprintf ?? write formatted output to a string dynamically allocated with
  2706	    malloc and store the address of the string in *PTR
  2707	vdprintf ?? write formatted output to a file descriptor
  2708	verrx ?? display formatted error messages
  2709	wait4 ?? wait for process termination, BSD style
  2710	warn ?? formatted error messages
  2711	warnx ?? formatted error messages
  2712	wcpcpy ?? copy a wide character string, returning a pointer to its end
  2713	wcpncpy ?? copy a fixed-size string of wide characters, returning a pointer to
  2714	    its end
  2715	wcscasecmp ?? compare two wide-character strings, ignoring case
  2716	wcsdup ?? duplicate a wide-character string
  2717	wcsncasecmp ?? compare two fixed-size wide-character strings, ignoring case
  2718	wcsnlen ?? determine the length of a fixed-size wide-character string
  2719	wcsnrtombs ?? convert a wide character string to a multi-byte string
  2720	wcstoq ?? convert initial portion of wide string NPTR to long int
  2721	    representation
  2722	wcstouq ?? convert initial portion of wide string NPTR to unsigned long long
  2723	    int representation
  2724	__xmknod ?? make block or character special file
  2725	
  2726	acct
  2727	
  2728	Name
  2729	
  2730	acct -- switch process accounting on or off
  2731	
  2732	Synopsis
  2733	
  2734	#include <dirent.h>
  2735	
  2736	int acct(const char *filename);
  2737	
  2738	Description
  2739	
  2740	When called with the name of an existing file as argument, accounting is turned
  2741	on, records for each terminating process are appended to filename as it
  2742	terminates. An argument of NULL causes accounting to be turned off.
  2743	
  2744	Return Value
  2745	
  2746	On success, zero is returned. On error, -1 is returned, and errno is set
  2747	appropriately.
  2748	
  2749	Errors
  2750	
  2751	ENOSYS
  2752	
  2753	    BSD process accounting has not been enabled when the operating system
  2754	    kernel was compiled. The kernel configuration parameter controlling this
  2755	    feature is CONFIG_BSD_PROCESS_ACCT.
  2756	
  2757	ENOMEM
  2758	
  2759	    Out of memory.
  2760	
  2761	EPERM
  2762	
  2763	    The calling process has no permission to enable process accounting.
  2764	
  2765	EACCES
  2766	
  2767	    The argument filename is not a regular file.
  2768	
  2769	EIO
  2770	
  2771	    Error writing to the file filename.
  2772	
  2773	EUSERS
  2774	
  2775	    There are no more free file structures or we run out of memory.
  2776	
  2777	adjtime
  2778	
  2779	Name
  2780	
  2781	adjtime -- correct the time to allow synchronization of the system clock
  2782	
  2783	Synopsis
  2784	
  2785	#include <time.h>
  2786	
  2787	int adjtime(const struct timeval *delta, struct timeval *olddelta);
  2788	
  2789	Description
  2790	
  2791	Adjtime() makes small adjustments to the system time, as returned by
  2792	gettimeofday(2), advancing or retarding it by the time specified by the timeval
  2793	delta. If delta is negative, the clock is slowed down by incrementing it more
  2794	slowly than normal until the correction is complete. If delta is positive, a
  2795	larger increment than normal is used. The skew used to perform the correction
  2796	is generally a fraction of one percent. Thus, the time is always a
  2797	monotonically increasing function. A time correction from an earlier call to
  2798	adjtime() may not be finished when adjtime() is called again. If olddelta is
  2799	non-nil, the structure pointed to will contain, upon return, the number of
  2800	microseconds still to be corrected from the earlier call.
  2801	
  2802	This call may be used by time servers that synchronize the clocks of computers
  2803	in a local area network. Such time servers would slow down the clocks of some
  2804	machines and speed up the clocks of others to bring them to the average network
  2805	time.
  2806	
  2807	The call adjtime() is restricted to the super-user.
  2808	
  2809	Return Value
  2810	
  2811	On success, zero is returned. On error, -1 is returned, and errno is set
  2812	appropriately.
  2813	
  2814	ERRORS
  2815	
  2816	EFAULT
  2817	
  2818	    An argument points outside the process's allocated address space.
  2819	
  2820	EPERM
  2821	
  2822	    The process's effective user ID is not that of the super-user.
  2823	
  2824	adjtimex
  2825	
  2826	Name
  2827	
  2828	adjtimex -- tune kernel clock
  2829	
  2830	Synopsis
  2831	
  2832	#include <sys/timex.h>
  2833	
  2834	int adjtimex(struct timex *buf);
  2835	
  2836	Description
  2837	
  2838	Linux uses David L. Mills' clock adjustment algorithm (see RFC 1305). The
  2839	system call adjtimex reads and optionally sets adjustment parameters for this
  2840	algorithm. It takes a pointer to a timex structure, updates kernel parameters
  2841	from field values, and returns the same structure with current kernel values.
  2842	This structure is declared as follows:
  2843	
  2844	struct timex {
  2845	
  2846	    int modes; /* mode selector */
  2847	
  2848	    long offset; /* time offset (usec) */
  2849	
  2850	    long freq; /* frequency offset (scaled ppm) */
  2851	
  2852	    long maxerror; /* maximum error (usec) */
  2853	
  2854	    long esterror; /* estimated error (usec) */
  2855	
  2856	    int status; /* clock command/status */
  2857	
  2858	    long constant; /* pll time constant */
  2859	
  2860	    long precision; /* clock precision (usec) (read only) */
  2861	
  2862	    long tolerance; /* clock frequency tolerance (ppm) (read only) */
  2863	
  2864	    struct timeval time; /* current time (read only) */
  2865	
  2866	    long tick; /* usecs between clock ticks */
  2867	
  2868	    };
  2869	
  2870	The modes field determines which parameters, if any, to set. It may contain a
  2871	bitwise-or combination of zero or more of the following bits:
  2872	
  2873	#define ADJ_OFFSET 0x0001 /* time offset */
  2874	
  2875	#define ADJ_FREQUENCY 0x0002 /* frequency offset */
  2876	
  2877	#define ADJ_MAXERROR 0x0004 /* maximum time error */
  2878	
  2879	#define ADJ_ESTERROR 0x0008 /* estimated time error */
  2880	
  2881	#define ADJ_STATUS 0x0010 /* clock status */
  2882	
  2883	#define ADJ_TIMECONST 0x0020 /* pll time constant */
  2884	
  2885	#define ADJ_TICK 0x4000 /* tick value */
  2886	
  2887	#define ADJ_OFFSET_SINGLESHOT 0x8001 /* old-fashioned adjtime */
  2888	
  2889	Ordinary users are restricted to a zero value for mode. Only the superuser may
  2890	set any parameters.
  2891	
  2892	Return Value
  2893	
  2894	On success, adjtimex returns the clock state:
  2895	
  2896	  #define TIME_OK 0 /* clock synchronized */
  2897	
  2898	#define TIME_INS 1 /* insert leap second */
  2899	
  2900	#define TIME_DEL 2 /* delete leap second */
  2901	
  2902	#define TIME_OOP 3 /* leap second in progress */
  2903	
  2904	#define TIME_WAIT 4 /* leap second has occurred */
  2905	
  2906	#define TIME_BAD 5 /* clock not synchronized */
  2907	
  2908	 On error, -1 is returned, and errno is set appropriately.
  2909	
  2910	Errors
  2911	
  2912	EFAULT
  2913	
  2914	    buf does not point to writable memory.
  2915	
  2916	EPERM
  2917	
  2918	    buf.mode is non-zero and the user is not super-user.
  2919	
  2920	EINVAL
  2921	
  2922	    An attempt is made to set buf.offset to a value outside the range -131071
  2923	    to +131071, or to set buf.status to a value other than those listed above,
  2924	    or to set buf.tick to a value outside the range 900000/HZ to 1100000/HZ,
  2925	    where HZ is the system timer interrupt frequency.
  2926	
  2927	alphasort
  2928	
  2929	Name
  2930	
  2931	alphasort -- scan a directory for matching entries
  2932	
  2933	Synopsis
  2934	
  2935	#include <dirent.h>
  2936	
  2937	int alphasort(const struct dirent **a, const struct dirent **b);
  2938	
  2939	Description
  2940	
  2941	The alphasort() function can be used as the comparison function for the scandir
  2942	() function to sort the directory entries into alphabetical order. Its
  2943	parameters are the two directory entries, a and b, to compare.
  2944	
  2945	Return Value
  2946	
  2947	The alphasort() function returns an integer less than, equal to, or greater
  2948	than zero if the first argument is considered to be respectively less than,
  2949	equal to, or greater than the second.
  2950	
  2951	Errors
  2952	
  2953	ENOMEM
  2954	
  2955	    Insufficient memory to complete the operation.
  2956	
  2957	alphasort64
  2958	
  2959	Name
  2960	
  2961	alphasort64 -- compare two struct dirents alphabetically
  2962	
  2963	Synopsis
  2964	
  2965	#include <dirent.h>
  2966	
  2967	int alphasort64(const struct dirent **a, const struct dirent **b);
  2968	
  2969	Description
  2970	
  2971	Function to compare two struct dirents alphabetically. This function is like
  2972	alphasort but it uses the 64bit dirent structure.
  2973	
  2974	__assert_fail
  2975	
  2976	Name
  2977	
  2978	__assert_fail -- abort the program after false assertion
  2979	
  2980	Synopsis
  2981	
  2982	void
  2983	__assert_fail(const char *assertion,
  2984	              const char *file,
  2985	              unsigned int line,
  2986	              const char *function);
  2987	
  2988	Description
  2989	
  2990	This function, when passed a string containing an asserted expression, a
  2991	filename, and a line number, prints a message on the standard error stream such
  2992	as:
  2993	
  2994	
  2995	    a.c:10: foobar: Assertion a == b failed.
  2996	
  2997	It then aborts program execution via a call to abort. The exact form of the
  2998	message is up to the implementation.
  2999	
  3000	If FUNCTION is NULL, then omit information about the function.
  3001	
  3002	FILE, LINE, and ASSERTION must be non-NULL.
  3003	
  3004	__assert_fail is not in the source standard; it is only in the binary standard.
  3005	
  3006	bindtextdomain
  3007	
  3008	Name
  3009	
  3010	bindtextdomain -- specify that the DOMAINNAME message catalog will be found in
  3011	DIRNAME rather than in the system locale data base
  3012	
  3013	Synopsis
  3014	
  3015	#include <unistd.h>
  3016	
  3017	extern char *bindtextdomain(const char *domainname,
  3018	                            const char *dirname);
  3019	
  3020	Description
  3021	
  3022	Specify that the DOMAINNAME message catalog will be found in DIRNAME rather
  3023	than in the system locale data base.
  3024	
  3025	cfmakeraw
  3026	
  3027	Name
  3028	
  3029	cfmakeraw -- get and set terminal attributes
  3030	
  3031	Synopsis
  3032	
  3033	#include <termios.h>
  3034	
  3035	int cfmakeraw(struct termios *termios_p);
  3036	
  3037	Description
  3038	
  3039	cfmakeraw sets the terminal attributes as follows:
  3040	
  3041	    termios_p->c_iflag &= ~(IGNBRK|BRKINT|PARMRK|ISTRIP |INLCR|IGNCR|ICRNL|
  3042	    IXON);
  3043	
  3044	    termios_p->c_oflag &= ~OPOST;
  3045	
  3046	    termios_p->c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);
  3047	
  3048	    termios_p->c_cflag &= ~(CSIZE|PARENB);
  3049	
  3050	    termios_p->c_cflag |= CS8;
  3051	
  3052	termios_p is a pointer to a termios structure. This structure contains the
  3053	following members:
  3054	
  3055	tcflag_t c_iflag; /* input modes */
  3056	
  3057	tcflag_t c_oflag; /* output modes */
  3058	
  3059	tcflag_t c_cflag; /* control modes */
  3060	
  3061	tcflag_t c_lflag; /* local modes */
  3062	
  3063	cc_t c_cc[NCCS]; /* control chars */
  3064	
  3065	Return Value
  3066	
  3067	On success, zero is returned. On failure, -1 is returned, and errno is set
  3068	appropriately.
  3069	
  3070	cfsetspeed
  3071	
  3072	Name
  3073	
  3074	cfsetspeed -- manipulate the termios structure
  3075	
  3076	Synopsis
  3077	
  3078	#include <termios.h>
  3079	
  3080	int cfsetspeed(struct termios *t, speedt speed);
  3081	
  3082	Description
  3083	
  3084	The cfsetspeed function is provided for setting the baud rate values in the
  3085	termios structure. The effects of the function on the terminal as described
  3086	below do not become effective, nor are all errors detected, until the tcsetattr
  3087	function is called. Certain values for baud rates set in the termios structure
  3088	and passed to tcsetattr have special meanings.
  3089	
  3090	Getting and Setting the Baud Rate
  3091	
  3092	The input and output baud rates are found in the termios structure. The
  3093	unsigned integer speed_t is typdef'd in the include file <termios.h>. The value
  3094	of the integer corresponds directly to the baud rate being represented,
  3095	however, the following symbolic values are defined.
  3096	
  3097	#define B0 0
  3098	
  3099	#define B50 50
  3100	
  3101	#define B75 75
  3102	
  3103	#define B110 110
  3104	
  3105	#define B134 134
  3106	
  3107	#define B150 150
  3108	
  3109	#define B200 200
  3110	
  3111	#define B300 300
  3112	
  3113	#define B600 600
  3114	
  3115	#define B1200 1200
  3116	
  3117	#define B1800 1800
  3118	
  3119	#define B2400 2400
  3120	
  3121	#define B4800 4800
  3122	
  3123	#define B9600 9600
  3124	
  3125	#define B19200 19200
  3126	
  3127	#define B38400 38400
  3128	
  3129	#ifndef _POSIX_SOURCE
  3130	
  3131	#define EXTA 19200
  3132	
  3133	#define EXTB 38400
  3134	
  3135	#endif /*_POSIX_SOURCE */
  3136	
  3137	The cfsetspeed function sets both the input and output baud rate in the termios
  3138	structure referenced by tp to speed.
  3139	
  3140	Return Value
  3141	
  3142	On success, zero is returned. On error, -1 is returned, and errno is set
  3143	appropriately.
  3144	
  3145	__ctype_b
  3146	
  3147	Name
  3148	
  3149	__ctype_c -- array index for ctype functions
  3150	
  3151	Synopsis
  3152	
  3153	#include <ctype.h>
  3154	
  3155	extern const unsigned short int *ctype_b;
  3156	
  3157	Description
  3158	
  3159	Array index for ctype functions.
  3160	
  3161	__ctype_b is not in the source standard; it is only in the binary standard.
  3162	
  3163	__ctype_tolower
  3164	
  3165	Name
  3166	
  3167	__ctype_tolower -- convert uppercase letter to lowercase letter
  3168	
  3169	Synopsis
  3170	
  3171	#include <ctype.h>
  3172	
  3173	int __ctype_tolower(int c);
  3174	
  3175	Description
  3176	
  3177	The __ctype_tolower() function converts an uppercase letter to the
  3178	corresponding lowercase letter. If the argument is an uppercase letter, the
  3179	__ctype_tolower() function returns the corresponding lowercase letter if there
  3180	is one; otherwise, the argument is returned unchanged.
  3181	
  3182	__ctype_tolower is not in the source standard; it is only in the binary
  3183	standard.
  3184	
  3185	__ctype_toupper
  3186	
  3187	Name
  3188	
  3189	__ctype_toupper -- convert lowercase letter to uppercase letter
  3190	
  3191	Synopsis
  3192	
  3193	#include <ctype.h>
  3194	
  3195	int __ctype_toupper(int c);
  3196	
  3197	Description
  3198	
  3199	The __ctype_toupper() function converts a lowercase letter to the corresponding
  3200	uppercase letter. If the argument is a lowercase letter, the __ctype_toupper()
  3201	function returns the corresponding uppercase letter if there is one; otherwise,
  3202	the argument is returned unchanged.
  3203	
  3204	__ctype_toupper is not in the source standard; it is only in the binary
  3205	standard.
  3206	
  3207	__cxa_atexit
  3208	
  3209	Name
  3210	
  3211	__cxa_atexit -- register a function to be called by exit or when a shared
  3212	library is unloaded
  3213	
  3214	Synopsis
  3215	
  3216	int __cxa_atexit(void (*func) (void *), void *arg, void *d);
  3217	
  3218	Description
  3219	
  3220	Register a function to be called by exit or when a shared library is unloaded.
  3221	This function is only called from code generated by the C++ compiler.
  3222	
  3223	__cxa_atexit() has the same specification as atexit().
  3224	
  3225	__cxa_atexit is not in the source standard; it is only in the binary standard.
  3226	
  3227	daemon
  3228	
  3229	Name
  3230	
  3231	daemon -- run in the background
  3232	
  3233	Synopsis
  3234	
  3235	#include <unistd.h>
  3236	
  3237	int daemon(int nochdir, int noclose);
  3238	
  3239	Description
  3240	
  3241	The daemon() function is for programs wishing to detach themselves from the
  3242	controlling terminal and run in the background as system daemons. Unless the
  3243	argument nochdir is non-zero, daemon() changes the current working directory to
  3244	the root (`/'). Unless the argument noclose is non-zero, daemon() will redirect
  3245	standard input, standard output and standard error to /dev/null.
  3246	
  3247	Errors
  3248	
  3249	On error occurs, -1 is returned, and errno is set to any of the errors
  3250	specified for the library functions fork(2) and setsid(2).
  3251	
  3252	dcgettext
  3253	
  3254	Name
  3255	
  3256	dcgettext -- look up the MSGID in the DOMAINNAME message catalog for the
  3257	current CATEGORY locale
  3258	
  3259	Synopsis
  3260	
  3261	#include <libintl.h>
  3262	
  3263	extern char *dcgettext(const char *domainname,
  3264	                       const char *msgid, int category);
  3265	
  3266	Description
  3267	
  3268	Used to look up the MSGID in the DOMAINNAME message catalog for the current
  3269	CATEGORY locale.
  3270	
  3271	__dcgettext
  3272	
  3273	Name
  3274	
  3275	__dcgettext -- used by dcgettext in the translation to look up the MSGID in the
  3276	DOMAINNAME message catalog for the current locale
  3277	
  3278	Synopsis
  3279	
  3280	#include <libintl.h>
  3281	
  3282	extern char *__dcgettext(const char *domainname,
  3283	                         const char *msgid, int category);
  3284	
  3285	Description
  3286	
  3287	Used by dcgettext in the translation to look up the MSGID in the DOMAINNAME
  3288	message catalog for the current locale. CATEGORY locale.
  3289	
  3290	__dcgettext() has the same specification as dcgettext().
  3291	
  3292	__dcgettext is not in the source standard; it is only in the binary standard.
  3293	
  3294	__divdi3
  3295	
  3296	Name
  3297	
  3298	__divdi3 -- mathematic operation
  3299	
  3300	Synopsis
  3301	
  3302	DItype
  3303	__divdi3(DItype u, DItype v);
  3304	
  3305	Description
  3306	
  3307	__divdi3() divides two DItypes(unsigned ints).
  3308	
  3309	__divdi3 is not in the source standard; it is only in the binary standard.
  3310	
  3311	endutent
  3312	
  3313	Name
  3314	
  3315	endutent -- access utmp file entries
  3316	
  3317	Synopsis
  3318	
  3319	#include <utmp.h>
  3320	
  3321	void endutent(void);
  3322	
  3323	Description
  3324	
  3325	endutent() closes the utmp file. It should be called when the user code is done
  3326	accessing the file with the other functions.
  3327	
  3328	_environ
  3329	
  3330	Name
  3331	
  3332	_environ -- alias for environ - user environment
  3333	
  3334	Synopsis
  3335	
  3336	extern char **_environ;
  3337	
  3338	Description
  3339	
  3340	Alias for environ - user environment.
  3341	
  3342	__environ
  3343	
  3344	Name
  3345	
  3346	__environ -- alias for environ - user environment
  3347	
  3348	Synopsis
  3349	
  3350	extern char **__environ;
  3351	
  3352	Description
  3353	
  3354	Alias for environ - user environment.
  3355	
  3356	__environ has the same specification as environ.
  3357	
  3358	__environ is not in the source standard; it is only in the binary standard.
  3359	
  3360	err
  3361	
  3362	Name
  3363	
  3364	err -- display formatted error messages
  3365	
  3366	Synopsis
  3367	
  3368	#include <err.h>
  3369	
  3370	void err(int eval, const char *fmt, ...);
  3371	
  3372	Description
  3373	
  3374	The err() function displays a formatted error message on the standard error
  3375	output. The last component of the program name, a colon character, and a space
  3376	are output. If the fmt argument is not NULL, the formatted error message, a
  3377	colon character, and a space are output. The error message string affiliated
  3378	with the current value of the global variable errno is output. The output is
  3379	followed by a newline character.
  3380	
  3381	The err() function does not return, but exits with the value of the argument
  3382	eval.
  3383	
  3384	__errno_location
  3385	
  3386	Name
  3387	
  3388	__errno_location -- address of errno variable
  3389	
  3390	Synopsis
  3391	
  3392	int *__errno_location(void);
  3393	
  3394	Description
  3395	
  3396	__errno_location is not in the source standard; it is only in the binary
  3397	standard.
  3398	
  3399	error
  3400	
  3401	Name
  3402	
  3403	error -- analyze and disperse compiler error messages
  3404	
  3405	Synopsis
  3406	
  3407	error [-n] [-s] [-q] [-v] [-t suffixlist] [-I ignorefile] [name]
  3408	
  3409	Description
  3410	
  3411	Error analyzes and optionally disperses the diagnostic error messages produced
  3412	by a number of compilers and language processors to the source file and line
  3413	where the errors occurred. It can replace the painful, traditional methods of
  3414	scribbling abbreviations of errors on paper, and permits error messages and
  3415	source code to be viewed simultaneously without machinations of multiple
  3416	windows in a screen editor.
  3417	
  3418	Options are:
  3419	
  3420	-n
  3421	
  3422	    Do not touch any files; all error messages are sent to the standard output
  3423	
  3424	-q
  3425	
  3426	    The user is queried whether s/he wants to touch the file. A `y' or `n' to
  3427	    the question is necessary to continue. Absence of the -q option implies
  3428	    that all referenced files (except those referring to discarded error
  3429	    messages) are to be touched.
  3430	
  3431	-v
  3432	
  3433	    After all files have been touched, overlay the visual editor vi(1) with it
  3434	    set up to edit all files touched, and positioned in the first touched file
  3435	    at the first error. If vi(1) can't be found, try ex(1) or ed(1) from
  3436	    standard places.
  3437	
  3438	-t
  3439	
  3440	    Take the following argument as a suffix list. Files whose suffixes do not
  3441	    appear in the suffix list are not touched. The suffix list is dot
  3442	    separated, and `*' wildcards work. Thus the suffix list:
  3443	
  3444	    .c.y.foo*.h
  3445	
  3446	    allows error to touch files ending with `.c', `.y', `.foo*' and `.y'.
  3447	
  3448	-s
  3449	
  3450	    Print out statistics regarding the error categorization. Not too useful.
  3451	
  3452	Error looks at the error messages, either from the specified file name or from
  3453	the standard input, and attempts to determine which language processor produced
  3454	each error message, determines the source file and line number to which the
  3455	error message refers, determines if the error message is to be ignored or not,
  3456	and inserts the (possibly slightly modified) error message into the source file
  3457	as a comment on the line preceding to which the line the error message refers.
  3458	Error messages which can't be categorized by language processor or content are
  3459	not inserted into any file, but are sent to the standard output. Error touches
  3460	source files only after all input has been read.
  3461	
  3462	Error is intended to be run with its standard input connected via a pipe to the
  3463	error message source. Some language processors put error messages on their
  3464	standard error file; others put their messages on the standard output. Hence,
  3465	both error sources should be piped together into error. For example, when using
  3466	the csh(1) syntax,
  3467	
  3468	make -s lint | error -q -v
  3469	
  3470	will analyze all the error messages produced by whatever programs make(1) runs
  3471	when making lint.
  3472	
  3473	Error knows about the error messages produced by: make(1), cc(1), cpp(1), ccom
  3474	(1), as(1), ld(1), lint(1), pi(1), pc(1), f77(1), and DEC Western Research
  3475	Modula-2. Error knows a standard for error messages produced by the language
  3476	processors, so is sensitive to changes in these formats. For all languages
  3477	except Pascal, error messages are restricted to be on one line. Some error
  3478	messages refer to more than one line in more than one files; error will
  3479	duplicate the error message and insert it at all of the places referenced.
  3480	
  3481	Error will do one of six things with error messages.
  3482	
  3483	synchronize
  3484	
  3485	    Some language processors produce short errors describing which file it is
  3486	    processing. Error uses these to determine the file name for languages that
  3487	    don't include the file name in each error message. These synchronization
  3488	    messages are consumed entirely by error.
  3489	
  3490	discard
  3491	
  3492	    Error messages from lint(1) that refer to one of the two lint(1) libraries,
  3493	    /usr/libdata/lint/llib-lc and /usr/libdata/lint/llib-port are discarded, to
  3494	    prevent accidently touching these libraries. Again, these error messages
  3495	    are consumed entirely by error.
  3496	
  3497	nullify
  3498	
  3499	    Error messages from lint(1) can be nullified if they refer to a specific
  3500	    function, which is known to generate diagnostics which are not interesting.
  3501	    Nullified error messages are not inserted into the source file, but are
  3502	    written to the standard output. The names of functions to ignore are taken
  3503	    from either the file named .errorrc in the users's home directory, or from
  3504	    the file named by the -I option. If the file does not exist, no error
  3505	    messages are nullified. If the file does exist, there must be one function
  3506	    name per line.
  3507	
  3508	not file specific
  3509	
  3510	    Error messages that can't be intuited are grouped together, and written to
  3511	    the standard output before any files are touched. They will not be inserted
  3512	    into any source file.
  3513	
  3514	file specific
  3515	
  3516	    Error message that refer to a specific file, but to no specific line, are
  3517	    written to the standard output when that file is touched.
  3518	
  3519	true errors
  3520	
  3521	    Error messages that can be intuited are candidates for insertion into the
  3522	    file to which they refer.
  3523	
  3524	Only true error messages are candidates for inserting into the file they refer
  3525	to. Other error messages are consumed entirely by error or are written to the
  3526	standard output. Error inserts the error messages into the source file on the
  3527	line preceding the line the language processor found in error. Each error
  3528	message is turned into a one line comment for the language, and is internally
  3529	flagged with the string `###' at the beginning of the error, and `%%%' at the
  3530	end of the error. This makes pattern searching for errors easier with an
  3531	editor, and allows the messages to be easily removed. In addition, each error
  3532	message contains the source line number for the line the message refers to. A
  3533	reasonably formatted source program can be recompiled with the error messages
  3534	still in it, without having the error messages themselves cause future errors.
  3535	For poorly formatted source programs in free languages, such as C or Pascal, it
  3536	is possible to insert a comment into another comment, which can wreak havoc
  3537	with a future compilation. To avoid this, programs with comments and source on
  3538	the same line should be formatted so that language statements appear before
  3539	comments.
  3540	
  3541	Error catches interrupt and terminate signals, and if in the insertion phase,
  3542	will orderly terminate what it is doing.
  3543	
  3544	Files
  3545	
  3546	~/.errorrc function names to ignore for lint(1) error messages
  3547	
  3548	/dev/tty user's teletype
  3549	
  3550	Bugs
  3551	
  3552	Opens the teletype directly to do user querying.
  3553	
  3554	Source files with links make a new copy of the file with only one link to it.
  3555	
  3556	Changing a language processor's of error messages may cause error to not
  3557	understand the error message.
  3558	
  3559	Error, since it is purely mechanical, will not filter out subsequent er- rors
  3560	caused by floodgating initiated by one syntactically trivial er- ror. Humans
  3561	are still much better at discarding these related errors.
  3562	
  3563	Pascal error messages belong after the lines affected (error puts them before).
  3564	The alignment of the \ marking the point of error is also disturbed by error.
  3565	
  3566	Error was designed for work on CRT's at reasonably high speed. It is less
  3567	pleasant on slow speed terminals, and has never been used on hard- copy
  3568	terminals.
  3569	
  3570	errx
  3571	
  3572	Name
  3573	
  3574	errx --  error messages
  3575	
  3576	Synopsis
  3577	
  3578	#include <err.h>
  3579	
  3580	void errx(int eval, const char *fmt, ...);
  3581	
  3582	Description
  3583	
  3584	The errx() function displays a formatted error message on the standard error
  3585	output. The last component of the program name, a colon character, and a space
  3586	are output. If the fmt argument is not NULL, the formatted error message, a
  3587	colon character, and a space are output. The output is followed by a newline
  3588	character.
  3589	
  3590	The errx() function does not return, but exits with the value of the argument
  3591	eval.
  3592	
  3593	flock
  3594	
  3595	Name
  3596	
  3597	flock -- apply or remove an advisory lock on an open file
  3598	
  3599	Synopsis
  3600	
  3601	int flock(int fd, int operation);
  3602	
  3603	Description
  3604	
  3605	Apply or remove an advisory lock on an open file. The file is specified by fd.
  3606	Valid operations are given below:
  3607	
  3608	LOCK_SH
  3609	
  3610	    Shared lock. More than one process may hold a shared lock for a given file
  3611	    at a given time.
  3612	
  3613	LOCK_EX
  3614	
  3615	    Exclusive lock. Only one process may hold an exclusive lock for a given
  3616	    file at a given time.
  3617	
  3618	LOCK_UN
  3619	
  3620	    Unlock.
  3621	
  3622	LOCK_NB
  3623	
  3624	    Don't block when locking. May be specified (by or'ing) along with one of
  3625	    the other operations.
  3626	
  3627	A single file may not simultaneously have both shared and exclusive locks.
  3628	
  3629	Return Value
  3630	
  3631	On success, zero is returned. On error, -1 is returned, and errno is set
  3632	appropriately.
  3633	
  3634	Errors
  3635	
  3636	EWOULDBLOCK
  3637	
  3638	    The file is locked and the LOCK_NB flag was selected.
  3639	
  3640	__fpending
  3641	
  3642	Name
  3643	
  3644	__fpending -- returns in bytes the amount of output pending on a stream
  3645	
  3646	Synopsis
  3647	
  3648	#include <stdio_ext.h>
  3649	
  3650	size_t __fpending(FILE *stream);
  3651	
  3652	Description
  3653	
  3654	The __fpending function returns the amount of output in bytes pending on a
  3655	stream.
  3656	
  3657	__fpending is not in the source standard; it is only in the binary standard.
  3658	
  3659	fstatfs
  3660	
  3661	Name
  3662	
  3663	fstatfs -- get file system statistics
  3664	
  3665	Synopsis
  3666	
  3667	#include <sys/vfs.h>
  3668	
  3669	int fstatfs(int fd, struct statfs *buf);
  3670	
  3671	Description
  3672	
  3673	fstatfs returns information about a mounted file system. fd is the open file
  3674	descriptor of any file within the mounted filesystem. buf is a pointer to a
  3675	statfs structure defined as follows:
  3676	
  3677	struct statfs {
  3678	
  3679	    long f_type; /* type of filesystem (see below) */
  3680	
  3681	    long f_bsize; /* optimal transfer block size */
  3682	
  3683	    long f_blocks; /* total data blocks in file system */
  3684	
  3685	    long f_bfree; /* free blocks in fs */
  3686	
  3687	    long f_bavail; /* free blocks avail to non-superuser */
  3688	
  3689	    long f_files; /* total file nodes in file system */
  3690	
  3691	    long f_ffree; /* free file nodes in fs */
  3692	
  3693	    fsid_t f_fsid; /* file system id */
  3694	
  3695	    long f_namelen; /* maximum length of filenames */
  3696	
  3697	    long f_spare[6]; /* spare for later */
  3698	
  3699	    };
  3700	
  3701	Fields that are undefined for a particular file system are set to 0.
  3702	
  3703	Return Value
  3704	
  3705	On success, zero is returned. On error, -1 is returned, and errno is set
  3706	appropriately.
  3707	
  3708	Errors
  3709	
  3710	EBADF
  3711	
  3712	    fd is not a valid open file descriptor.
  3713	
  3714	EFAULT
  3715	
  3716	    buf points to an invalid address.
  3717	
  3718	EIO
  3719	
  3720	    An I/O error occurred while reading from or writing to the file system.
  3721	
  3722	ENOSYS
  3723	
  3724	    The filesystem fd is open on does not support statfs.
  3725	
  3726	fwprintf
  3727	
  3728	Name
  3729	
  3730	fwprintf -- formatted wide character output conversion
  3731	
  3732	Synopsis
  3733	
  3734	int fwprintf(FILE* stream, const wchar_t* , ...);
  3735	
  3736	Description
  3737	
  3738	The specification for "fwprintf" is as specified in the SUSv2 but with the
  3739	following differences as listed below.
  3740	
  3741	Wide-character Conversion:
  3742	
  3743	The following wide-character are not specified in GNU:
  3744	
  3745	d,i, o, u, x, X, f, e,E , g,G , c, s, p, n, C, S, %
  3746	
  3747	Errors
  3748	
  3749	The following error types are not specified in GNU:
  3750	
  3751	EILSEQ
  3752	
  3753	EINVAL
  3754	
  3755	ENOMEM
  3756	
  3757	gethostbyname
  3758	
  3759	Name
  3760	
  3761	gethostbyname -- get network host entry
  3762	
  3763	Synopsis
  3764	
  3765	#include <netdb.h>
  3766	extern int h_errno;
  3767	
  3768	struct hostent *gethostbyname(const char *name);
  3769	
  3770	Description
  3771	
  3772	The gethostbyname() function returns a structure of type hostent for the given
  3773	host name. Here name is either a host name, or an IPv4 address in standard dot
  3774	notation, or an IPv6 address in colon (and possibly dot) notation. (See RFC
  3775	1884 for the description of IPv6 addresses.) If name is an IPv4 or IPv6
  3776	address, no lookup is performed and gethostbyname() simply copies name into the
  3777	h_name field and its struct in_addr equivalent into the h_addr_list[0] field of
  3778	the returned hostent structure. If name doesn't end in a dot and the
  3779	environment variable HOSTALIASES is set, the alias file pointed to by
  3780	HOSTALIASES will first be searched for name (see hostname(7) for the file ).
  3781	The current domain and its parents are searched unless name ends in a dot.
  3782	
  3783	The domain name queries carried out by gethostbyname() use a combination of any
  3784	or all of the name server named(8), a broken out line from /etc/hosts, and the
  3785	Network Information Service (NIS or YP), depending upon the contents of the
  3786	order line in /etc/host.conf. (See resolv+(8)). The default action is to query
  3787	named(8), followed by /etc/hosts.
  3788	
  3789	The hostent structure is defined in <netdb.h> as follows:
  3790	
  3791	struct hostent {
  3792	
  3793	    char *h_name; /* official name of host */
  3794	
  3795	    char **h_aliases; /* alias list */
  3796	
  3797	    int h_addrtype; /* host address type */
  3798	
  3799	    int h_length; /* length of address */
  3800	
  3801	    char **h_addr_list; /* list of addresses */
  3802	
  3803	    }
  3804	
  3805	#define h_addr h_addr_list[0] /* for backward compatibility */
  3806	
  3807	Return Value
  3808	
  3809	The gethostbyname()) functions return the hostent structure or a NULL pointer
  3810	if an error occurs. On error, the h_errno variable holds an error number.
  3811	
  3812	Errors
  3813	
  3814	ENOMEM
  3815	
  3816	    Insufficient memory to complete the operation.
  3817	
  3818	getloadavg
  3819	
  3820	Name
  3821	
  3822	getloadavg -- get system load averages
  3823	
  3824	Synopsis
  3825	
  3826	#include <stdlib.h>
  3827	
  3828	int getloadavg(double loadavg[], int nelem);
  3829	
  3830	Description
  3831	
  3832	The getloadavg() function returns the number of processes in the system run
  3833	queue averaged over various periods of time. Up to nelem samples are retrieved
  3834	and assigned to successive elements of loadavg[]. The system imposes a maximum
  3835	of 3 samples, representing averages over the last 1, 5, and 15 minutes,
  3836	respectively.
  3837	
  3838	getopt_long
  3839	
  3840	Name
  3841	
  3842	getopt_long -- parse command line options
  3843	
  3844	Synopsis
  3845	
  3846	#define _GNU_SOURCE
  3847	#include <getopt.h>
  3848	
  3849	int getopt_long(int argc, char * const argv[],
  3850	           const char *optstring,
  3851	           const struct option *longopts, int *longindex);
  3852	
  3853	Description
  3854	
  3855	The getopt_long() function works like getopt() except that it also accepts long
  3856	options, started out by two dashes. Long option names may be abbreviated if the
  3857	abbreviation is unique or is an exact match for some defined option. A long
  3858	option may take a parameter, of the form --arg=param or --arg param.
  3859	
  3860	longopts is a pointer to the first element of an array of struct option
  3861	declared in <getopt.h> as
  3862	
  3863	struct option {
  3864	
  3865	    const char *name;
  3866	
  3867	    int *flag;
  3868	
  3869	    int has_arg;
  3870	
  3871	    int val;
  3872	
  3873	    };
  3874	
  3875	Return Value
  3876	
  3877	The getopt_long() function returns the option character if the option was found
  3878	successfully, : if there was a missing parameter for one of the options, ? for
  3879	an unknown option character, or -1 for the end of the option list.
  3880	
  3881	getopt_long() also returns the option character when a short option is
  3882	recognized. For a long option, they return val if flag is NULL, and 0
  3883	otherwise. Error and -1 returns are the same as for getopt(), plus ? for an
  3884	ambiguous match or an extraneous parameter.
  3885	
  3886	getopt_long_only
  3887	
  3888	Name
  3889	
  3890	getopt_long_only -- parse command line options
  3891	
  3892	Synopsis
  3893	
  3894	#define _GNU_SOURCE
  3895	#include <getopt.h>
  3896	
  3897	int getopt_long_only(int argc, char * const argv[],
  3898	           const char *optstring,
  3899	           const struct option *longopts, int *longindex);
  3900	
  3901	Description
  3902	
  3903	getopt_long_only() is like getopt_long(), but - as well as -- can indicate a
  3904	long option. If an option that starts with - (not --) doesn't match a long
  3905	option, but does match a short option, it is parsed as a short option instead.
  3906	
  3907	Return Value
  3908	
  3909	The function getopt_long_only() returns the option character if the option was
  3910	found successfully, : if there was a missing parameter for one of the options,
  3911	? for an unknown option character, or -1 for the end of the option list.
  3912	getopt_long_only() also returns the option character when a short option is
  3913	recognized. For a long option, they return val if flag is NULL, and 0
  3914	otherwise. Error and -1 returns are the same as for getopt(), plus ? for an
  3915	ambiguous match or an extraneous parameter.
  3916	
  3917	__getpgid
  3918	
  3919	Name
  3920	
  3921	__getpgid -- get the process group id
  3922	
  3923	Synopsis
  3924	
  3925	pid_t __getpgid(pid_t pid);
  3926	
  3927	Description
  3928	
  3929	__getpgid(pid) has the same specification as getpgid(pid).
  3930	
  3931	__getpgid is not in the source standard; it is only in the binary standard.
  3932	
  3933	getprotobyname
  3934	
  3935	Name
  3936	
  3937	getprotobyname -- get protocol entry
  3938	
  3939	Synopsis
  3940	
  3941	struct protoent *getprotobynumber(int proto);
  3942	
  3943	Description
  3944	
  3945	The getprotobyname() function returns a protoent structure for the line from /
  3946	etc/protocols that matches the protocol name name.
  3947	
  3948	The protoent structure is defined in <netdb.h> as follows:
  3949	
  3950	struct protoent {
  3951	
  3952	    char *p_name; /* official protocol name */
  3953	
  3954	    char **p_aliases; /* alias list */
  3955	
  3956	    int p_proto; /* protocol number */
  3957	
  3958	    }
  3959	
  3960	Return Value
  3961	
  3962	The getprotobyname() function returns the protoent structure, or a NULL pointer
  3963	if an error occurs or the end of the file is reached.
  3964	
  3965	Files
  3966	
  3967	/etc/protocols protocol database file
  3968	
  3969	getprotoent
  3970	
  3971	Name
  3972	
  3973	getprotoent -- get protocol entry
  3974	
  3975	Synopsis
  3976	
  3977	struct protoent *getprotoent(void);
  3978	
  3979	Description
  3980	
  3981	The getprotoent() function reads the next line from the file /etc/protocols and
  3982	returns a structure protoent containing the broken out fields from the line.
  3983	The /etc/protocols file is opened if necessary.
  3984	
  3985	The protoent structure is defined in <netdb.h> as follows:
  3986	
  3987	struct protoent {
  3988	
  3989	    char *p_name; /* official protocol name */
  3990	
  3991	    char **p_aliases; /* alias list */
  3992	
  3993	    int p_proto; /* protocol number */
  3994	
  3995	    }
  3996	
  3997	RETURN VALUE
  3998	
  3999	The getprotoent() function returns the protoent structure, or a NULL pointer if
  4000	an error occurs or the end of the file is reached.
  4001	
  4002	FILES
  4003	
  4004	/etc/protocols protocol database file
  4005	
  4006	getservbyname
  4007	
  4008	Name
  4009	
  4010	getservbyname -- get service entry
  4011	
  4012	Synopsis
  4013	
  4014	#include <netdb.h>
  4015	
  4016	struct servent *getservbyname(const char *name, const char *proto);
  4017	
  4018	Description
  4019	
  4020	The getservbyname() function returns a servent structure for the line from /etc
  4021	/services that matches the service name using protocol proto.
  4022	
  4023	The servent structure is defined in <netdb.h> as follows:
  4024	
  4025	struct servent {
  4026	
  4027	    char *s_name; /* official service name */
  4028	
  4029	    char **s_aliases; /* alias list */
  4030	
  4031	    int s_port; /* port number */
  4032	
  4033	    char *s_proto; /* protocol to use */
  4034	
  4035	    }
  4036	
  4037	Return Value
  4038	
  4039	getservbyname() returns the servent structure, or a NULL pointer if an error
  4040	occurs or the end of the file is reached.
  4041	
  4042	FILES
  4043	
  4044	/etc/services services database file
  4045	
  4046	getservent
  4047	
  4048	Name
  4049	
  4050	getservent -- get service entry
  4051	
  4052	Synopsis
  4053	
  4054	#include <netdb.h>
  4055	
  4056	struct servent *getservent(void);
  4057	
  4058	Description
  4059	
  4060	The getservent() function reads the next line from the file /etc/services and
  4061	returns a structure servent containing the broken out fields from the line. The
  4062	/etc/services file is opened if necessary.
  4063	
  4064	The servent structure is defined in <netdb.h> as follows:
  4065	
  4066	struct servent {
  4067	
  4068	    char *s_name; /* official service name */
  4069	
  4070	    char **s_aliases; /* alias list */
  4071	
  4072	    int s_port; /* port number */
  4073	
  4074	    char *s_proto; /* protocol to use */
  4075	
  4076	    }
  4077	
  4078	Return Value
  4079	
  4080	getservent() returns the servent structure, or a NULL pointer if an error
  4081	occurs or the end of the file is reached.
  4082	
  4083	FILES
  4084	
  4085	/etc/services services database file
  4086	
  4087	gettext
  4088	
  4089	Name
  4090	
  4091	gettext -- look up MSGID in the current default message catalog for the current
  4092	LC_MESSAGES locale
  4093	
  4094	Synopsis
  4095	
  4096	#include <libintl.h>
  4097	
  4098	extern char *gettext((const char *msgid));
  4099	
  4100	Description
  4101	
  4102	Used to look up the MSGID in the DOMAINNAME message catalog for the current
  4103	CATEGORY locale. If not found, returns MSGID itself (the default text).
  4104	
  4105	getutent
  4106	
  4107	Name
  4108	
  4109	getutent -- access utmp file entries
  4110	
  4111	Synopsis
  4112	
  4113	#include <utmp.h>
  4114	
  4115	struct utmp *getutent(void);
  4116	
  4117	Description
  4118	
  4119	getutent() reads a line from the current file position in the utmp file. It
  4120	returns a pointer to a structure containing the fields of the line.
  4121	
  4122	Return Value
  4123	
  4124	getutent() returns a pointer to a static struct utmp.
  4125	
  4126	Errors
  4127	
  4128	On error, (struct utmp*)0 will be returned.
  4129	
  4130	Files
  4131	
  4132	/var/run/utmp database of currently logged-in users
  4133	
  4134	/var/log/wtmp database of past user logins
  4135	
  4136	htons
  4137	
  4138	Name
  4139	
  4140	htons -- converts host byte order to network byte order
  4141	
  4142	Synopsis
  4143	
  4144	#include <netinet/in.h>
  4145	
  4146	unsigned short int htons(unsigned short int hostshort);
  4147	
  4148	Description
  4149	
  4150	The htons() function converts the short integer hostshort from host byte order
  4151	to network byte order.
  4152	
  4153	inet_aton
  4154	
  4155	Name
  4156	
  4157	inet_aton -- Internet address manipulation routine
  4158	
  4159	Synopsis
  4160	
  4161	#include <sys/socket.h>
  4162	#include <netinet/in.h>
  4163	#include <arpa/inet.h>
  4164	
  4165	int inet_aton(const char *cp, struct in_addr *inp);
  4166	
  4167	Description
  4168	
  4169	inet_aton() converts the Internet host address cp from the standard
  4170	numbers-and-dots notation into binary data and stores it in the structure that
  4171	inp points to. inet_aton returns nonzero if the address is valid, zero if not.
  4172	
  4173	The structure in_addr is defined in netinet/in.h as:
  4174	
  4175	struct in_addr {
  4176	
  4177	    unsigned long int s_addr;
  4178	
  4179	    }
  4180	
  4181	Note that on the i80x86 the host byte order is Least Significant Byte first,
  4182	whereas the network byte order, as used on the Internet, is Most Significant
  4183	Byte first.
  4184	
  4185	inet_ntoa
  4186	
  4187	Name
  4188	
  4189	inet_ntoa -- Internet address manipulation routine
  4190	
  4191	Synopsis
  4192	
  4193	#include <sys/socket.h>
  4194	#include <netinet/in.h>
  4195	#include <arpa/inet.h>
  4196	
  4197	char *inet_ntoa(struct in_addr in);
  4198	
  4199	Description
  4200	
  4201	The inet_ntoa() function converts the Internet host address in given in network
  4202	byte order to a string in standard numbers-and-dots notation. The string is
  4203	returned in a statically allocated buffer, which subsequent calls will
  4204	overwrite.
  4205	
  4206	The structure in_addr is defined in netinet/in.h as:
  4207	
  4208	struct in_addr {
  4209	
  4210	    unsigned long int s_addr;
  4211	
  4212	    }
  4213	
  4214	Note that on the i80x86 the host byte order is Least Significant Byte first,
  4215	whereas the network byte order, as used on the Internet, is Most Significant
  4216	Byte first.
  4217	
  4218	initgroups
  4219	
  4220	Name
  4221	
  4222	initgroups -- initialize the supplementary group access list
  4223	
  4224	Synopsis
  4225	
  4226	#include <grp.h>
  4227	#include <sys/types.h>
  4228	
  4229	int initgroups(const char *user, gid_t group);
  4230	
  4231	Description
  4232	
  4233	The initgroups() function initializes the group access list by reading the
  4234	group database /etc/group and using all groups of which user is a member. The
  4235	additional group group is also added to the list.
  4236	
  4237	Return Value
  4238	
  4239	On success, zero is returned. On error, -1 is returned, and errno is set
  4240	appropriately.
  4241	
  4242	Errors
  4243	
  4244	EPERM
  4245	
  4246	    The calling process does not have sufficient privileges.
  4247	
  4248	ENOMEM
  4249	
  4250	    Insufficient memory to allocate group information structure.
  4251	
  4252	Files
  4253	
  4254	/etc/group group database file
  4255	
  4256	_IO_2_1_stderr_
  4257	
  4258	Name
  4259	
  4260	_IO_2_1_stderr_ -- standard I/O stream
  4261	
  4262	Synopsis
  4263	
  4264	#include <libio.h>
  4265	
  4266	extern struct _IO_FILE_plus _IO_2_1_stderr_;
  4267	
  4268	Description
  4269	
  4270	_IO_2_1_stderr is an object whose address becomes stderr.
  4271	
  4272	_IO_2_1_stdin_
  4273	
  4274	Name
  4275	
  4276	_IO_2_1_stdin_ -- standard I/O stream
  4277	
  4278	Synopsis
  4279	
  4280	#include <libio.h>
  4281	
  4282	extern struct _IO_FILE_plus _IO_2_1_stdin_;
  4283	
  4284	Description
  4285	
  4286	_IO_2_1_stdin is an object whose address becomes stdin.
  4287	
  4288	_IO_2_1_stdout_
  4289	
  4290	Name
  4291	
  4292	_IO_2_1_stdout_ -- standard I/O stream
  4293	
  4294	Synopsis
  4295	
  4296	#include <libio.h>
  4297	
  4298	extern struct _IO_FILE_plus _IO_2_1_stdout_;
  4299	
  4300	Description
  4301	
  4302	_IO_2_1_stdout is an object whose address becomes stdout.
  4303	
  4304	_IO_feof
  4305	
  4306	Name
  4307	
  4308	_IO_feof -- alias for feof
  4309	
  4310	Synopsis
  4311	
  4312	int _IO_feof(_IO_FILE *__fp);
  4313	
  4314	Description
  4315	
  4316	The function _IO_feof() tests the end-of-file indicator for the stream pointed
  4317	to by __fp, returning non-zero if it is set.
  4318	
  4319	_IO_getc
  4320	
  4321	Name
  4322	
  4323	_IO_getc -- alias for getc
  4324	
  4325	Synopsis
  4326	
  4327	int _IO_getc(_IO_FILE *__fp);
  4328	
  4329	Description
  4330	
  4331	_IO_getc() reads the next character from __fp and returns it as an unsigned
  4332	char cast to an int, or EOF on end of file or error.
  4333	
  4334	_IO_putc
  4335	
  4336	Name
  4337	
  4338	_IO_putc -- alias for putc
  4339	
  4340	Synopsis
  4341	
  4342	int _IO_putc(int __c, _IO_FILE *__fp);
  4343	
  4344	Description
  4345	
  4346	_IO_putc() writes the character __c, cast to an unsigned char, to __fp.
  4347	
  4348	_IO_puts
  4349	
  4350	Name
  4351	
  4352	_IO_puts -- alias for puts
  4353	
  4354	Synopsis
  4355	
  4356	int _IO_puts(const char *__c);
  4357	
  4358	Description
  4359	
  4360	_IO_puts() writes the string __s and a trailing newline to stdout.
  4361	
  4362	isblank
  4363	
  4364	Name
  4365	
  4366	isblank -- character classification routine
  4367	
  4368	Synopsis
  4369	
  4370	#include <ctype.h>
  4371	
  4372	int isblank(int c);
  4373	
  4374	Description
  4375	
  4376	This functions checks whether c, which must have the value of an unsigned char
  4377	or EOF, falls into a certain character class according to the current locale.
  4378	
  4379	isblank() checks for a blank character; that is, a space or a tab. This
  4380	function is a GNU extension.
  4381	
  4382	Return Value
  4383	
  4384	The values returned are nonzero if the character c falls into the tested class,
  4385	and a zero value if not.
  4386	
  4387	Notes
  4388	
  4389	The details of what characters belong into which class depend on the current
  4390	locale. For example, isupper() will not recognize an A - umlaut as an uppercase
  4391	letter in the default C locale.
  4392	
  4393	isinf
  4394	
  4395	Name
  4396	
  4397	isinf -- test for infinity or not-a-number (NaN)
  4398	
  4399	Synopsis
  4400	
  4401	#include <math.h>
  4402	
  4403	int isinf(double value);
  4404	
  4405	Description
  4406	
  4407	The isinf() function returns -1 if value represents negative infinity, 1 if
  4408	value represents positive infinity, and 0 otherwise.
  4409	
  4410	iswblank
  4411	
  4412	Name
  4413	
  4414	iswblank -- test for whitespace wide character
  4415	
  4416	Synopsis
  4417	
  4418	#include <wctype.h>
  4419	
  4420	int iswblank(wint_t wc);
  4421	
  4422	Description
  4423	
  4424	The iswblank function is the wide-character equivalent of the isblank function.
  4425	It tests whether wc is a wide character belonging to the wide character class
  4426	"blank".
  4427	
  4428	The wide character class "blank" is a subclass of the wide character class
  4429	"space".
  4430	
  4431	Being a subclass of the wide character class "space", the wide character class
  4432	"blank" is disjoint from the wide character class "graph" and therefore also
  4433	disjoint from its subclasses "alnum", "alpha", "upper", "lower", "digit",
  4434	"xdigit", "punct".
  4435	
  4436	The wide character class "blank" always contains at least the space character
  4437	and the control character '\t'.
  4438	
  4439	Return Value
  4440	
  4441	The iswblank function returns non-zero if wc is a wide character belonging to
  4442	the wide character class "blank". Otherwise it returns zero.
  4443	
  4444	Notes
  4445	
  4446	The behaviour of iswblank depends on the LC_CTYPE category of the current
  4447	locale.
  4448	
  4449	iswctype
  4450	
  4451	Name
  4452	
  4453	iswctype -- wide character classification
  4454	
  4455	Synopsis
  4456	
  4457	#include <wctype.h>
  4458	
  4459	int iswctype(wint_t wc, wctype_t desc);
  4460	
  4461	Description
  4462	
  4463	If wc is a wide character having the character property designated by desc (or
  4464	in other words: belongs to the character class designated by desc), the
  4465	iswctype function returns non-zero. Otherwise it returns zero. If wc is WEOF,
  4466	zero is returned.
  4467	
  4468	desc must be a character property descriptor returned by the wctype function.
  4469	
  4470	Return Value
  4471	
  4472	iswctype returns non-zero if the wc has the designated property. Otherwise it
  4473	returns 0.
  4474	
  4475	Notes
  4476	
  4477	The behavior of iswctype depends on the LC_CTYPE category of the current
  4478	locale.
  4479	
  4480	__libc_start_main
  4481	
  4482	Name
  4483	
  4484	__libc_start_main -- initialization routine
  4485	
  4486	Synopsis
  4487	
  4488	BP_SYM __libc_start_main (int (*main) (int, char**, char**),
  4489	    int argc, char *__unbounded *__unbounded ubp_av,
  4490	    void (*init) (void), void (*fini) (void),
  4491	    void (*rtld_fini) (void), void (*__unbounded stack_end);
  4492	
  4493	Description
  4494	
  4495	Initialize glibc.
  4496	
  4497	__libc_start_main is not in the source standard; it is only in the binary
  4498	standard.
  4499	
  4500	llabs
  4501	
  4502	Name
  4503	
  4504	llabs -- compute the absolute value of an integer
  4505	
  4506	Synopsis
  4507	
  4508	#include <stdlib.h>
  4509	
  4510	long long int llabs(long long int j);
  4511	
  4512	Description
  4513	
  4514	llabs() computes the absolute value of the argument j of the appropriate
  4515	integer type for the function.
  4516	
  4517	Return Value
  4518	
  4519	Returns the absolute value of the integer argument, of the appropriate integer
  4520	type for the function.
  4521	
  4522	Notes
  4523	
  4524	Trying to take the absolute value of the most negative integer is not defined.
  4525	
  4526	The llabs() function is included in glibc since version 2.0, but is not in
  4527	libc5 or libc4.
  4528	
  4529	For llabs() to be declared, it may be necessary to define _ISOC99_SOURCE or
  4530	_ISOC9X_SOURCE (depending on the version of glibc) before including any
  4531	standard headers.
  4532	
  4533	GCC 3.0 also handles llabs() as builtin.
  4534	
  4535	logwtmp
  4536	
  4537	Name
  4538	
  4539	logwtmp -- append an entry to the wtmp file
  4540	
  4541	Synopsis
  4542	
  4543	#include <utmp.h>
  4544	
  4545	void logwtmp(const char *line, const char *name, const char *host);
  4546	
  4547	Description
  4548	
  4549	logwtmp() constructs an utmp structure using line, name, host, current time and
  4550	current process id. Then it calls updwtmp() to append the structure to the utmp
  4551	file.
  4552	
  4553	Availability
  4554	
  4555	Both functions are available under glibc2, but not under libc5. However,
  4556	logwtmp occurs in the old libbsd.
  4557	
  4558	Files
  4559	
  4560	/var/log/wtmp database of past user logins
  4561	
  4562	__lxstat
  4563	
  4564	Name
  4565	
  4566	__lxstat -- inline wrapper around call to lxstat
  4567	
  4568	Synopsis
  4569	
  4570	#include <ctype.h>
  4571	
  4572	int __lxstat(int version, char *__path, struct stat *__statbuf);
  4573	
  4574	Description
  4575	
  4576	Inline wrapper around call to lxstat.
  4577	
  4578	__lxstat is not in the source standard; it is only in the binary standard.
  4579	
  4580	mbsnrtowcs
  4581	
  4582	Name
  4583	
  4584	mbsnrtowcs -- convert a multibyte string to a wide character string
  4585	
  4586	Synopsis
  4587	
  4588	#include <wchar.h>
  4589	
  4590	size_t mbsnrtowcs(wchar_t *dest, const char **src,
  4591	                  size_t nms, size_t len, mbstate_t *ps);
  4592	
  4593	Description
  4594	
  4595	The mbsnrtowcs function is like the mbsrtowcs function, except that the number
  4596	of bytes to be converted, starting at *src, is limited to nms.
  4597	
  4598	If dest is not a NULL pointer, the mbsnrtowcs function converts at most nms
  4599	bytes from the multibyte string *src to a wide-character string starting at
  4600	dest. At most len wide characters are written to dest. The state *ps is
  4601	updated. The conversion is effectively performed by repeatedly calling mbrtowc
  4602	(dest,*src,n,ps) where n is some positive number, as long as this call
  4603	succeeds, and then incrementing dest by one and *src by the number of bytes
  4604	consumed. The conversion can stop for three reasons:
  4605	
  4606	1. An invalid multibyte sequence has been encountered. In this case *src is
  4607	left pointing to the invalid multibyte sequence, (size_t)(-1) is returned, and
  4608	errno is set to EILSEQ.
  4609	
  4610	2. The nms limit forces a stop, or len non-L'\0' wide characters have been
  4611	stored at dest. In this case *src is left pointing to the next multibyte
  4612	sequence to be converted, and the number of wide characters written to dest is
  4613	returned.
  4614	
  4615	3. The multibyte string has been completely converted, including the
  4616	terminating '\0' (which has the side effect of bringing back *ps to the initial
  4617	state). In this case *src is set to NULL, and the number of wide characters
  4618	written to dest, excluding the terminating L'\0' character, is returned.
  4619	
  4620	If dest is NULL, len is ignored, and the conversion proceeds as above, except
  4621	that the converted wide characters are not written out to memory, and that no
  4622	destination length limit exists.
  4623	
  4624	In both of the above cases, if ps is a NULL pointer, a static anonymous state
  4625	only known to the mbsnrtowcs function is used instead.
  4626	
  4627	The programmer must ensure that there is room for at least len wide characters
  4628	at dest.
  4629	
  4630	Return Value
  4631	
  4632	The mbsnrtowcs function returns the number of wide characters that make up the
  4633	converted part of the wide character string, not including the terminating null
  4634	wide character. If an invalid multibyte sequence was encountered, (size_t)(-1)
  4635	is returned, and errno set to EILSEQ.
  4636	
  4637	Notes
  4638	
  4639	The behavior of mbsnrtowcs depends on the LC_CTYPE category of the current
  4640	locale.
  4641	
  4642	Passing NULL as ps is not multi-thread safe.
  4643	
  4644	memmem
  4645	
  4646	Name
  4647	
  4648	memmem -- locate a substring
  4649	
  4650	Synopsis
  4651	
  4652	#define _GNU_SOURCE
  4653	#include <string.h>
  4654	
  4655	void *memmem(const void *haystack, size_t haystacklen,
  4656	             const void *needle, size_t needlelen);
  4657	
  4658	Description
  4659	
  4660	The memmem() function finds the start of the first occurrence of the substring
  4661	needle of length needlelen in the memory area haystack of length haystacklen.
  4662	
  4663	Return Value
  4664	
  4665	The memmem() function returns a pointer to the beginning of the substring, or
  4666	NULL if the substring is not found.
  4667	
  4668	Notes
  4669	
  4670	This function was broken in Linux libraries up to and including libc 5.0.9;
  4671	there the needle and haystack arguments were interchanged, and a pointer to the
  4672	end of the first occurrence of needle was returned. Since libc 5.0.9 is still
  4673	widely used, this is a dangerous function to use.
  4674	
  4675	Both old and new libc's have the bug that if needle is empty haystack-1
  4676	(instead of haystack) is returned. And glibc 2.0 makes it worse, and returns a
  4677	pointer to the last byte of haystack. This is fixed in glibc 2.1.
  4678	
  4679	__mempcpy
  4680	
  4681	Name
  4682	
  4683	__mempcpy -- copy N bytes of SRC to DEST
  4684	
  4685	Synopsis
  4686	
  4687	#include <string.h>
  4688	
  4689	extern ptr_t __mempcpy(ptr_t restrict dest,
  4690	                       const ptr_t restrict src, size_t n));
  4691	
  4692	Description
  4693	
  4694	Copy N bytes of SRC to DEST, return pointer to bytes after the last written
  4695	byte.
  4696	
  4697	__mempcpy is not in the source standard; it is only in the binary standard.
  4698	
  4699	memrchr
  4700	
  4701	Name
  4702	
  4703	memrchr -- scan memory for a character
  4704	
  4705	Synopsis
  4706	
  4707	#include <string.h>
  4708	
  4709	void *memrchr(const void *s, int c, size_t n);
  4710	
  4711	Description
  4712	
  4713	The memrchr() function returns a pointer to the last occurrence of the
  4714	character "c" in the first "n" characters of string "s".
  4715	
  4716	mkstemp64
  4717	
  4718	Name
  4719	
  4720	mkstemp64 -- Create a unique temporary file (Large File Support)
  4721	
  4722	Synopsis
  4723	
  4724	#include <stdio.h>
  4725	#include <stdlib.h>
  4726	
  4727	int mkstemp64(char *template);
  4728	
  4729	Description
  4730	
  4731	The mkstemp64() function generates a unique temporary file name from template.
  4732	The last six characters of template must be XXXXXX and these are replaced with
  4733	a string that makes the filename unique.
  4734	
  4735	The mkstemp64() function is a 64-bit version of mkstemp.
  4736	
  4737	RETURN VALUE
  4738	
  4739	The mkstemp64() function returns the file descriptor fd of the temporary file
  4740	or -1 on error.
  4741	
  4742	_nl_msg_cat_cntr
  4743	
  4744	Name
  4745	
  4746	_nl_msg_cat_cntr -- variable defined in loadmsgcat.c which gets incremented
  4747	every time a new catalog is loaded
  4748	
  4749	Synopsis
  4750	
  4751	#include <libintl.h>
  4752	
  4753	extern int _nl_msg_cat_cntr;
  4754	
  4755	Description
  4756	
  4757	Used by Message catalogs for internationalization. A variable defined which
  4758	gets incremented every time a new catalog is loaded.
  4759	
  4760	ntohs
  4761	
  4762	Name
  4763	
  4764	ntohs -- convert values between host and network byte order
  4765	
  4766	Synopsis
  4767	
  4768	#include <netinet/in.h>
  4769	
  4770	unsigned short int ntohs(unsigned short int netshort);
  4771	
  4772	Description
  4773	
  4774	The ntohs() function converts the short integer netshort from network byte
  4775	order to host byte order.
  4776	
  4777	_obstack_begin
  4778	
  4779	Name
  4780	
  4781	_obstack_begin -- initialize an obstack for use
  4782	
  4783	Synopsis
  4784	
  4785	#include <obstack.h>
  4786	
  4787	extern int _obstack_begin(struct obstack *, int, int,
  4788	                          void *(*) (long), void (*) (void *));
  4789	
  4790	Description
  4791	
  4792	Initialize an obstack for use.
  4793	
  4794	obstack_free
  4795	
  4796	Name
  4797	
  4798	obstack_free -- free an object in the obstack
  4799	
  4800	Synopsis
  4801	
  4802	#include <obstack.h>
  4803	
  4804	void obstack_free(struct obstack *obstack, void *block);
  4805	
  4806	Description
  4807	
  4808	Free an object in the obstack.
  4809	
  4810	_obstack_newchunk
  4811	
  4812	Name
  4813	
  4814	_obstack_newchunk -- allocate a new current chunk of memory for the obstack
  4815	
  4816	Synopsis
  4817	
  4818	#include <obstack.h>
  4819	
  4820	extern void _obstack_newchunk(struct obstack *, int);
  4821	
  4822	Description
  4823	
  4824	Allocate a new current chunk of memory for the obstack.
  4825	
  4826	opterr
  4827	
  4828	Name
  4829	
  4830	opterr -- external variable used in getopt()
  4831	
  4832	Synopsis
  4833	
  4834	extern int opterr;
  4835	
  4836	Description
  4837	
  4838	opterr is used as a flag to suppress error message generated by getopt(). When
  4839	opterr is set to 0; it suppresses the error message generated by getopt() when
  4840	getopt() does not recognize an option character.
  4841	
  4842	optind
  4843	
  4844	Name
  4845	
  4846	optind -- external variable used in getopt()
  4847	
  4848	Synopsis
  4849	
  4850	extern int optind;
  4851	
  4852	Description
  4853	
  4854	optind holds the current index of the array argr[] which contains the command
  4855	line options being parsed by getopt().
  4856	
  4857	optopt
  4858	
  4859	Name
  4860	
  4861	optopt -- external variable used in getopt()
  4862	
  4863	Synopsis
  4864	
  4865	extern int optopt;
  4866	
  4867	Description
  4868	
  4869	optopt holds the unknown option character when that option character is not
  4870	recognized by getopt()
  4871	
  4872	psignal
  4873	
  4874	Name
  4875	
  4876	psignal -- print signal message
  4877	
  4878	Synopsis
  4879	
  4880	#include <signal.h>
  4881	
  4882	void psignal(int sig, const char *s);
  4883	
  4884	extern const char *const sys_siglist[]
  4885	
  4886	Description
  4887	
  4888	The psignal() function displays a message on stderr consisting of the string s,
  4889	a colon, a space, and a string describing the signal number sig. If sig is
  4890	invalid, the message displayed will indicate an unknown signal.
  4891	
  4892	The array sys_siglist holds the signal description strings indexed by signal
  4893	number.
  4894	
  4895	Return Value
  4896	
  4897	psignal() returns no value.
  4898	
  4899	putwchar
  4900	
  4901	Name
  4902	
  4903	putwchar -- write a wide character to standard output
  4904	
  4905	Synopsis
  4906	
  4907	#include <wchar.h>
  4908	
  4909	wint_t putwchar(wchar_t wc);
  4910	
  4911	Description
  4912	
  4913	The putwchar function is the wide-character equivalent of the putchar function.
  4914	It writes the wide character wc to stdout. If ferror(stdout) becomes true, it
  4915	returns WEOF. If a wide character conversion error occurs, it sets errno to
  4916	EILSEQ and returns WEOF. Otherwise it returns wc.
  4917	
  4918	Return Value
  4919	
  4920	The putwchar function returns wc if no error occurred, or WEOF to indicate an
  4921	error.
  4922	
  4923	Notes
  4924	
  4925	The behavior of putwchar depends on the LC_CTYPE category of the current
  4926	locale.
  4927	
  4928	It is reasonable to expect that putwchar will actually write the multibyte
  4929	sequence corresponding to the wide character wc.
  4930	
  4931	pwrite64
  4932	
  4933	Name
  4934	
  4935	pwrite64 --  (Large File Support)
  4936	
  4937	Synopsis
  4938	
  4939	#include <unistd.h>
  4940	
  4941	ssize_t pwrite64(int fd, const void *buf, size_t nbytes, off64_t offset);
  4942	
  4943	Description
  4944	
  4945	The pwrite64() function writes NBYTES of BUF to FD at given position OFFSET
  4946	without changing the file position.
  4947	
  4948	The pwrite64() function is a 64-bit version of pwrite.
  4949	
  4950	RETURN VALUE
  4951	
  4952	The pwrite64() function returns the number written, or -1.
  4953	
  4954	__rawmemchr
  4955	
  4956	Name
  4957	
  4958	__rawmemchr -- scan memory
  4959	
  4960	Synopsis
  4961	
  4962	#include <string.h>
  4963	
  4964	extern ptr_t __rawmemchr(const ptr_t s, int c);
  4965	
  4966	Description
  4967	
  4968	This is a weak alias to rawmemchr. Search in S for C.
  4969	
  4970	Similar to memchr, but there is no length limit.
  4971	
  4972	__rawmemchr is not in the source standard; it is only in the binary standard.
  4973	
  4974	sem_timedwait
  4975	
  4976	Name
  4977	
  4978	sem_timedwait -- operation on semaphore
  4979	
  4980	Synopsis
  4981	
  4982	#include <semaphore.h>
  4983	int sem_timedwait(sem_t *__restrict __sem,
  4984	                  __const struct timespec *__restrict __abstime);
  4985	
  4986	Description
  4987	
  4988	sem_timedwait() waits for semaphore object SEM being posted. It is a new
  4989	function from IEEE Std. 1003.1-200x that is similar to sem_wait but waits only
  4990	until ABSTIME.
  4991	
  4992	setbuffer
  4993	
  4994	Name
  4995	
  4996	setbuffer -- stream buffering operation
  4997	
  4998	Synopsis
  4999	
  5000	#include <stdio.h>
  5001	
  5002	void setbuffer(FILE *stream, char *buf, size_tsize);
  5003	
  5004	Description
  5005	
  5006	setbuffer is an alias for call to setvbuf. It works the same, except that the
  5007	size of the buffer is up to the caller, rather than being determined by the
  5008	default BUFSIZ.
  5009	
  5010	setegid
  5011	
  5012	Name
  5013	
  5014	setegid -- set real and / or effective group ID
  5015	
  5016	Synopsis
  5017	
  5018	#include <sys/types.h>
  5019	#include <unistd.h>
  5020	
  5021	int setegid(gid_t egid);
  5022	
  5023	Description
  5024	
  5025	setegid sets real and effective group ID's of the current process.
  5026	Un-privileged users may change the real group ID to the effective group ID and
  5027	vice-versa.
  5028	
  5029	Prior to Linux 1.1.38, the saved ID paradigm, when used with setegid was
  5030	broken. Starting at 1.1.38, it is also possible to set the effective group ID
  5031	from the saved group ID.
  5032	
  5033	Only the super-user may make other changes.
  5034	
  5035	Supplying a value of -1 for either the real or effective group ID forces the
  5036	system to leave that ID unchanged.
  5037	
  5038	Currently (libc-4.x.x), setegid(egid) is functionally equivalent to setregid
  5039	(-1, egid).
  5040	
  5041	If the real group ID is changed or the effective group ID is set to a value not
  5042	equal to the previous real group ID, the saved group ID will be set to the new
  5043	effective group ID.
  5044	
  5045	Return Value
  5046	
  5047	On success, zero is returned. On error, -1 is returned, and errno is set
  5048	appropriately.
  5049	
  5050	Errors
  5051	
  5052	EPERM
  5053	
  5054	    The current process is not the super-user and changes other than (i)
  5055	    swapping the effective group ID with the real group ID or (ii) setting one
  5056	    to the value of the other or (iii) setting the effective group ID to the
  5057	    value of the saved group ID was specified.
  5058	
  5059	setgroups
  5060	
  5061	Name
  5062	
  5063	setgroups -- set list of supplementary group IDs
  5064	
  5065	Synopsis
  5066	
  5067	#define __USE_BSD
  5068	#include <grp.h>
  5069	
  5070	int setgroups(size_t size, const gid_t *list);
  5071	
  5072	Description
  5073	
  5074	Sets the supplementary groups for the process. Only the super-user may use this
  5075	function.
  5076	
  5077	RETURN VALUE
  5078	
  5079	On success, zero is returned. On error, -1 is returned, and errno is set
  5080	appropriately.
  5081	
  5082	ERRORS
  5083	
  5084	EFAULT list has an invalid address.
  5085	
  5086	EPERM The user is not the super-user.
  5087	
  5088	EINVA Size is greater than NGROUPS (32 for Linux 2.0.32).
  5089	
  5090	BUGS
  5091	
  5092	The __USE_BSD flag probably shouldn't be required for setgroups.
  5093	
  5094	sethostid
  5095	
  5096	Name
  5097	
  5098	sethostid -- set the unique identifier of the current host
  5099	
  5100	Synopsis
  5101	
  5102	#include <unistd.h>
  5103	
  5104	int sethostid(long int hostid);
  5105	
  5106	Description
  5107	
  5108	Set a unique 32-bit identifier for the current machine. The 32-bit identifier
  5109	is intended to be unique among all UNIX systems in existence. This normally
  5110	resembles the Internet address for the local machine, as returned by
  5111	gethostbyname(3), and thus usually never needs to be set.
  5112	
  5113	The sethostid call is restricted to the superuser.
  5114	
  5115	The hostid argument is stored in the file /etc/hostid.
  5116	
  5117	Return Value
  5118	
  5119	gethostid returns the 32-bit identifier for the current host as set by
  5120	sethostid(2).
  5121	
  5122	Files
  5123	
  5124	/etc/hostid
  5125	
  5126	sethostname
  5127	
  5128	Name
  5129	
  5130	sethostname -- set host name
  5131	
  5132	Synopsis
  5133	
  5134	#include <unistd.h>
  5135	
  5136	int sethostname(const char *name, size_t len);
  5137	
  5138	Description
  5139	
  5140	This function is used to change the host name of the current processor.
  5141	
  5142	Return Value
  5143	
  5144	On success, zero is returned. On error, -1 is returned, and errno is set
  5145	appropriately.
  5146	
  5147	Errors
  5148	
  5149	EINVAL
  5150	
  5151	    len is negative or len is larger than the maximum allowed size.
  5152	
  5153	EPERM
  5154	
  5155	    the caller was not the superuser.
  5156	
  5157	EFAULT
  5158	
  5159	    name is an invalid address.
  5160	
  5161	Notes
  5162	
  5163	SUSv2 guarantees that Host names are limited to 255 bytes.
  5164	
  5165	setmntent
  5166	
  5167	Name
  5168	
  5169	setmntent -- get file system descriptor file entry
  5170	
  5171	Synopsis
  5172	
  5173	#include <stdio.h>
  5174	#include <mntent.h>
  5175	
  5176	FILE *setmntent(const char *filename, const char *type);
  5177	
  5178	Description
  5179	
  5180	This routine is used to access the file system description file /etc/fstab and
  5181	the mounted file system description file /etc/mtab.
  5182	
  5183	The setmntent() function opens the file system description file filep and
  5184	returns a file pointer which can be used by getmntent(). The argument type is
  5185	the type of access required and can take the same values as the mode argument
  5186	of fopen(3).
  5187	
  5188	The mntent structure is defined in <mntent.h> as follows:
  5189	
  5190	struct mntent {
  5191	
  5192	    char *mnt_fsname; /* name of mounted file system */
  5193	
  5194	    char *mnt_dir; /* file system path prefix */
  5195	
  5196	    char *mnt_type; /* mount type (see mntent.h) */
  5197	
  5198	    char *mnt_opts; /* mount options (see mntent.h) */
  5199	
  5200	    int mnt_freq; /* dump frequency in days */
  5201	
  5202	    int mnt_passno; /* pass number on parallel fsck */
  5203	
  5204	    };
  5205	
  5206	Files
  5207	
  5208	/etc/fstab file system description file /etc/mtab mounted file system
  5209	description file
  5210	
  5211	setutent
  5212	
  5213	Name
  5214	
  5215	setutent -- access utmp file entries
  5216	
  5217	Synopsis
  5218	
  5219	#include <utmp.h>
  5220	
  5221	void setutent(void);
  5222	
  5223	Description
  5224	
  5225	setutent() rewinds the file pointer to the beginning of the utmp file. It is
  5226	generally a Good Idea to call it before any of the other functions.
  5227	
  5228	Errors
  5229	
  5230	On error, (struct utmp*)0 will be returned.
  5231	
  5232	Files
  5233	
  5234	/var/run/utmp database of currently logged-in users /var/log/wtmp database of
  5235	past user logins
  5236	
  5237	sigandset
  5238	
  5239	Name
  5240	
  5241	sigandset -- build a new signal set by combining the two input sets using
  5242	logical AND
  5243	
  5244	Synopsis
  5245	
  5246	#include <signal.h>
  5247	
  5248	extern int sigandset(sigset_t *set, const sigset_t *left,
  5249	                     const sigset_t *right);
  5250	
  5251	Description
  5252	
  5253	A signal function that builds a new signal set by combining the two input sets
  5254	using logical AND.
  5255	
  5256	sigblock
  5257	
  5258	Name
  5259	
  5260	sigblock -- manipulate the signal mask
  5261	
  5262	Synopsis
  5263	
  5264	#include <signal.h>
  5265	
  5266	int sigblock(int mask);
  5267	
  5268	Description
  5269	
  5270	This interface is made obsolete by sigprocmask(2).
  5271	
  5272	The sigblock system call adds the signals specified in mask to the set of
  5273	signals currently being blocked from delivery.
  5274	
  5275	Notes
  5276	
  5277	Prototype for this function is only available if _BSD_SOURCE is defined before
  5278	the inclusion of any system.
  5279	
  5280	siggetmask
  5281	
  5282	Name
  5283	
  5284	siggetmask -- manipulate the signal mask
  5285	
  5286	Synopsis
  5287	
  5288	#include <signal.h>
  5289	
  5290	int siggetmask(void);
  5291	
  5292	Description
  5293	
  5294	This interface is made obsolete by sigprocmask(2).
  5295	
  5296	siggetmask returns the current set of masked signals.
  5297	
  5298	Notes
  5299	
  5300	Prototype for this function is only available if _BSD_SOURCE is defined before
  5301	the inclusion of any system header file.
  5302	
  5303	sigisemptyset
  5304	
  5305	Name
  5306	
  5307	sigisemptyset -- signal function - check for empty SET
  5308	
  5309	Synopsis
  5310	
  5311	#include <signal.h>
  5312	
  5313	extern int sigisemptyset(const sigset_t *set);
  5314	
  5315	Description
  5316	
  5317	Signal function - Check for empty SET. Returns non-empty value if SET is not
  5318	empty.
  5319	
  5320	sigorset
  5321	
  5322	Name
  5323	
  5324	sigorset -- build a new signal set by combining the two input sets using
  5325	logical OR
  5326	
  5327	Synopsis
  5328	
  5329	#include <:signal.h>
  5330	
  5331	extern int sigorset((sigset_t *set, const sigset_t *left,
  5332	                     const sigset_t *right));
  5333	
  5334	Description
  5335	
  5336	A signal function that builds a new signal set by combining the two input sets
  5337	using logical OR.
  5338	
  5339	sigreturn
  5340	
  5341	Name
  5342	
  5343	sigreturn -- return from signal handler and cleanup stack frame
  5344	
  5345	Synopsis
  5346	
  5347	int sigreturn(unsigned long __unused);
  5348	
  5349	Description
  5350	
  5351	When the Linux kernel creates the stack frame for a signal handler, a call to
  5352	sigreturn is inserted into the stack frame so that the the signal handler will
  5353	call sigreturn upon return. This inserted call to sigreturn cleans up the stack
  5354	so that the process can restart from where it was interrupted by the signal.
  5355	
  5356	Return Value
  5357	
  5358	sigreturn never returns.
  5359	
  5360	Warning
  5361	
  5362	sigreturn call is used by the kernel to implement signal handlers. It should
  5363	never be called directly. Better yet, the specific use of the __unused argument
  5364	varies depending on the architecture.
  5365	
  5366	Files
  5367	
  5368	/usr/src/linux/arch/i386/kernel/signal.c
  5369	
  5370	/usr/src/linux/arch/alpha/kernel/entry.s
  5371	
  5372	sigsetmask
  5373	
  5374	Name
  5375	
  5376	sigsetmask -- manipulate the signal mask
  5377	
  5378	Synopsis
  5379	
  5380	int sigsetmask(int mask);
  5381	
  5382	Description
  5383	
  5384	This interface is made obsolete by sigprocmask(2).
  5385	
  5386	The sigsetmask system call replaces the set of blocked signals totally with a
  5387	new set specified in mask. Signals are blocked if the corresponding bit in mask
  5388	is a 1.
  5389	
  5390	Return Value
  5391	
  5392	sigsetmask returns the previous set of masked signals.
  5393	
  5394	Notes
  5395	
  5396	Prototype for this function is only available if _BSD_SOURCE is defined before
  5397	the inclusion of any system header file.
  5398	
  5399	sigvec
  5400	
  5401	Name
  5402	
  5403	sigvec -- BSD software signal facilities
  5404	
  5405	Synopsis
  5406	
  5407	#include <bsd/signal.h>
  5408	int sigvec(int sig, struct sigvec *vec, struct sigvec *ovec);
  5409	
  5410	Description
  5411	
  5412	This interface is made obsolete by sigaction(2).
  5413	
  5414	Under Linux sigvec is #define'd to sigaction, and provides at best a rough
  5415	approximation of the BSD sigvec interface.
  5416	
  5417	statfs
  5418	
  5419	Name
  5420	
  5421	statfs -- get file system statistics
  5422	
  5423	Synopsis
  5424	
  5425	#include <sys/vfs.h>
  5426	
  5427	int statfs(const char *path, struct statfs *buf);
  5428	
  5429	Description
  5430	
  5431	statfs returns information about a mounted file system. path is the path name
  5432	of any file within the mounted filesystem.
  5433	
  5434	buf is a pointer to a statfs structure defined as follow:
  5435	
  5436	struct statfs {
  5437	
  5438	    long f_type; /* type of filesystem (see below) */
  5439	
  5440	    long f_bsize; /* optimal transfer block size */
  5441	
  5442	    long f_blocks; /* total data blocks in file system */
  5443	
  5444	    long f_bfree; /* free blocks in fs */
  5445	
  5446	    long f_bavail; /* free blocks avail to non-superuser */
  5447	
  5448	    long f_files; /* total file nodes in file system */
  5449	
  5450	    long f_ffree; /* free file nodes in fs */
  5451	
  5452	    long f_ffree; /* free file nodes in fs */
  5453	
  5454	    fsid_t f_fsid; /* file system id */
  5455	
  5456	    long f_namelen; /* maximum length of filenames */
  5457	
  5458	    long f_spare[6]; /* spare for later */
  5459	
  5460	    };
  5461	
  5462	Fields that are undefined for a particular file system are set to 0.
  5463	
  5464	Return Value
  5465	
  5466	On success, zero is returned. On error, -1 is returned, and errno is set
  5467	appropriately.
  5468	
  5469	Errors
  5470	
  5471	ENOTDIR
  5472	
  5473	    A component of the path prefix of path is not a directory.
  5474	
  5475	ENAMETOOLONG
  5476	
  5477	    path is too long.
  5478	
  5479	ENOENT
  5480	
  5481	    The file referred to by path does not exist.
  5482	
  5483	EACCES
  5484	
  5485	    Search permission is denied for a component of the path prefix of path.
  5486	
  5487	ELOOP
  5488	
  5489	    Too many symbolic links were encountered in translating path.
  5490	
  5491	EFAULT
  5492	
  5493	    Buf or path points to an invalid address.
  5494	
  5495	EIO
  5496	
  5497	    An I/O error occurred while reading from or writing to the file system.
  5498	
  5499	ENOMEM
  5500	
  5501	    Insufficient kernel memory was available.
  5502	
  5503	ENOSYS
  5504	
  5505	    The filesystem path is on does not support statfs.
  5506	
  5507	fstatfs64
  5508	
  5509	Name
  5510	
  5511	fstatfs64 -- Get file system statistics (Large File Support)
  5512	
  5513	Synopsis
  5514	
  5515	#include <errno.h>
  5516	#include <sys/statfs.h>
  5517	
  5518	int fstatfs64(int fd, struct statfs64 *buf);
  5519	
  5520	Description
  5521	
  5522	fstatfs64 returns information about a mounted file system. fd is the open file
  5523	descriptor of any file within the mounted filesystem.
  5524	
  5525	The fstatfs64() function is the 64-bit version of fstatfs().
  5526	
  5527	Return Value
  5528	
  5529	On success, zero is returned. On error, -1 is returned, and errno is set
  5530	appropriately.
  5531	
  5532	stime
  5533	
  5534	Name
  5535	
  5536	stime -- set time
  5537	
  5538	Synopsis
  5539	
  5540	#define _SVID_SOURCE /* glibc2 needs this */
  5541	#include <time.h>
  5542	
  5543	int stime(time_t *t);
  5544	
  5545	Description
  5546	
  5547	stime sets the system's idea of the time and date. Time, pointed to by t, is
  5548	measured in seconds from 00:00:00 GMT January 1, 1970. stime() may only be
  5549	executed by the super user.
  5550	
  5551	Return Value
  5552	
  5553	On success, zero is returned. On error, -1 is returned, and errno is set
  5554	appropriately.
  5555	
  5556	Errors
  5557	
  5558	EPERM
  5559	
  5560	    The caller is not the super-user.
  5561	
  5562	Notes
  5563	
  5564	Under glibc2, <time.h> only provides a prototype when _SVID_SOURCE is defined.
  5565	
  5566	stpcpy
  5567	
  5568	Name
  5569	
  5570	stpcpy -- copy a string returning a pointer to its end
  5571	
  5572	Synopsis
  5573	
  5574	#include <string.h>
  5575	
  5576	char *stpcpy(char *dest, const char *src);
  5577	
  5578	Description
  5579	
  5580	The stpcpy() function copies the string pointed to by src (including the
  5581	terminating \0 character) to the array pointed to by dest. The strings may not
  5582	overlap, and the destination string dest must be large enough to receive the
  5583	copy.
  5584	
  5585	Return Value
  5586	
  5587	stpcpy() returns a pointer to the end of the string dest (that is, the address
  5588	of the terminating null character) rather than the beginning.
  5589	
  5590	Example
  5591	
  5592	For example, this program uses stpcpy to concatenate foo and bar to produce
  5593	foobar, which it then prints.
  5594	
  5595	#include <string.h>
  5596	
  5597	int main (void) { char *to = buffer; to = stpcpy (to, "foo"); to = stpcpy (to,
  5598	"bar"); printf ("%s\n", buffer); }
  5599	
  5600	__stpcpy
  5601	
  5602	Name
  5603	
  5604	__stpcpy -- copy a string returning a pointer to its end
  5605	
  5606	Synopsis
  5607	
  5608	#include <string.h>
  5609	
  5610	char * __stpcpy(char *dest, const char *src);
  5611	
  5612	Description
  5613	
  5614	The __stpcpy() function copies the string pointed to by src (including the
  5615	terminating /0 character) to the array pointed to by dest. The strings may not
  5616	overlap, and the destination string dest must be large enough to receive the
  5617	copy.
  5618	
  5619	Return Value
  5620	
  5621	__stpcpy() returns a pointer to the end of the string dest (that is, the
  5622	address of the terminating null character) rather than the beginning.
  5623	
  5624	__stpcpy() has the same specification as stpcpy().
  5625	
  5626	__stpcpy is not in the source standard; it is only in the binary standard.
  5627	
  5628	stpncpy
  5629	
  5630	Name
  5631	
  5632	stpncpy -- copy a fixed-size string, returning a pointer to its end
  5633	
  5634	Synopsis
  5635	
  5636	#include <string.h>
  5637	
  5638	char *stpncpy (char *dest, const char *src, size_t n);
  5639	
  5640	Description
  5641	
  5642	The stpncpy function copies at most n characters from the string pointed to by
  5643	src, including the terminating '\0' character, to the array pointed to by dest.
  5644	Exactly n characters are written at dest. If the length strlen(src) is smaller
  5645	than n, the remaining characters in the array pointed to by dest are filled
  5646	with '\0' characters. If the length strlen(src) is greater or equal to n, the
  5647	string pointed to by dest will not be '\0' terminated. The strings may not
  5648	overlap. The programmer must ensure that there is room for at least n
  5649	characters at dest.
  5650	
  5651	RETURN VALUE
  5652	
  5653	stpncpy returns a pointer to the terminating null in dest, or, if dest is not
  5654	null-terminated, dest + n.
  5655	
  5656	strcasestr
  5657	
  5658	Name
  5659	
  5660	strcasestr -- locate a substring - ignores the case of both strings
  5661	
  5662	Synopsis
  5663	
  5664	#include <string.h>
  5665	
  5666	char *strcasestr(const char *haystack, const char *needle);
  5667	
  5668	Description
  5669	
  5670	Similar to strstr but this function ignores the case of both strings.
  5671	
  5672	strerror_r
  5673	
  5674	Name
  5675	
  5676	strerror_r -- reentrant version of strerror
  5677	
  5678	Synopsis
  5679	
  5680	#include <string.h>
  5681	
  5682	extern char *strerror_r(int errnum, char *buf, size_t buflen);
  5683	
  5684	Description
  5685	
  5686	Reentrant version of strerror. If a temporary buffer is required, at most
  5687	BUFLEN bytes of BUF will be used.
  5688	
  5689	strfry
  5690	
  5691	Name
  5692	
  5693	strfry -- randomize a string
  5694	
  5695	Synopsis
  5696	
  5697	#include <string.h>
  5698	
  5699	char *strfry(char *string);
  5700	
  5701	Description
  5702	
  5703	The strfry() function randomizes the contents of string by using rand(3) to
  5704	randomly swap characters in the string. The result is an anagram of string.
  5705	
  5706	Return Value
  5707	
  5708	The strfry() functions returns a pointer to the randomized string.
  5709	
  5710	strndup
  5711	
  5712	Name
  5713	
  5714	strndup -- return a malloc'd copy of at most N bytes of STRING
  5715	
  5716	Synopsis
  5717	
  5718	#include <string.h>
  5719	
  5720	extern char *strndup(const char *string, size_t n);
  5721	
  5722	Description
  5723	
  5724	Return a malloc'd copy of at most N bytes of STRING. The resultant string is
  5725	terminated even if no null terminator appears before STRING[N].
  5726	
  5727	strnlen
  5728	
  5729	Name
  5730	
  5731	strnlen -- determine the length of a fixed-size string
  5732	
  5733	Synopsis
  5734	
  5735	#include <string.h>
  5736	
  5737	size_t strnlen(const char *s, size_t maxlen);
  5738	
  5739	Description
  5740	
  5741	The strnlen function returns the number of characters in the string pointed to
  5742	by s, not including the terminating '\0' character, but at most maxlen. In
  5743	doing this, strnlen looks only at the first maxlen characters at s and never
  5744	beyond s+maxlen.
  5745	
  5746	Return Value
  5747	
  5748	The strnlen function returns strlen(s), if that is less than maxlen, or maxlen
  5749	if there is no '\0' character among the first maxlen characters pointed to by
  5750	s.
  5751	
  5752	strsep
  5753	
  5754	Name
  5755	
  5756	strsep -- extract token from string
  5757	
  5758	Synopsis
  5759	
  5760	#include <string.h>
  5761	
  5762	char *strsep(char **stringp, const char *delim);
  5763	
  5764	Description
  5765	
  5766	If *stringp is NULL, the strsep() function returns NULL and does nothing else.
  5767	Otherwise, this function finds the first token in the string *stringp, where
  5768	tokens are delimited by symbols in the string delim. This token is terminated
  5769	with a \0 character (by overwriting the delimiter) and *stringp is updated to
  5770	point past the token. In case no delimiter was found, the token is taken to be
  5771	the entire string *stringp, and *stringp is made NULL.
  5772	
  5773	Return Value
  5774	
  5775	The strsep() function returns a pointer to the token, that is, it returns the
  5776	original value of *stringp.
  5777	
  5778	Notes
  5779	
  5780	The strsep() function was introduced as a replacement for strtok(), since the
  5781	latter cannot handle empty fields. However, strtok() conforms to ANSI-C and
  5782	hence is more portable.
  5783	
  5784	Bugs
  5785	
  5786	This function suffers from the same problems as strtok(). In particular, it
  5787	modifies the original string. Avoid it.
  5788	
  5789	strsignal
  5790	
  5791	Name
  5792	
  5793	strsignal -- return string describing signal
  5794	
  5795	Synopsis
  5796	
  5797	#define _GNU_SOURCE
  5798	#include <string.h>
  5799	
  5800	char *strsignal(int sig);
  5801	
  5802	extern const char * const sys_siglist[];
  5803	
  5804	Description
  5805	
  5806	The strsignal() function returns a string describing the signal number passed
  5807	in the argument sig. The string can only be used until the next call to
  5808	strsignal().
  5809	
  5810	The array sys_siglist holds the signal description strings indexed by signal
  5811	number. The strsignal() function should be used if possible instead of this
  5812	array.
  5813	
  5814	Return Value
  5815	
  5816	The strsignal() function returns the appropriate description string, or an
  5817	unknown signal message if the signal number is invalid. On some systems (but
  5818	not on Linux), a NULL pointer may be returned instead for an invalid signal
  5819	number.
  5820	
  5821	__strtod_internal
  5822	
  5823	Name
  5824	
  5825	__strtod_internal -- alias for strtod
  5826	
  5827	Synopsis
  5828	
  5829	double __strtod_internal(const char *__nptr,
  5830	                         char **__endptr,
  5831	                         int __group);
  5832	
  5833	Description
  5834	
  5835	The __GROUP argument must be 0 or the behavior is undefined.
  5836	
  5837	__strtod_internal(__nptr, __endptr, __group) has the same specification as
  5838	strtod(__nptr, __endptr).
  5839	
  5840	__strtod_internal is not in the source standard; it is only in the binary
  5841	standard.
  5842	
  5843	strtok_r
  5844	
  5845	Name
  5846	
  5847	strtok_r -- extract tokens from strings
  5848	
  5849	Synopsis
  5850	
  5851	#include <string.h>
  5852	
  5853	char *strtok_r(char *s, const char *delim, char **ptrptr);
  5854	
  5855	Description
  5856	
  5857	A token is a nonempty string of characters not occurring in the string delim,
  5858	followed by \0 or by a character occurring in delim.
  5859	
  5860	 The strtok_r() function can be used to parse the string s into tokens. The
  5861	first call to strtok_r() should have s as its first argument. Subsequent calls
  5862	should have the first argument set to NULL. Each call returns a pointer to the
  5863	next token, or NULL when no more tokens are found.
  5864	
  5865	If a token ends with a delimiter, this delimiting character is overwritten with
  5866	a \0 and a pointer to the next character is saved for the next call to strtok_r
  5867	(). The delimiter string delim may be different for each call.
  5868	
  5869	ptrptr is a user allocated char* pointer. It must be the same while parsing the
  5870	same string.
  5871	
  5872	Bugs
  5873	
  5874	Never use this function. If you do, note that:
  5875	
  5876	It modifies its first argument.
  5877	
  5878	The identity of the delimiting character is lost.
  5879	
  5880	This function cannot be used on constant strings.
  5881	
  5882	Return Value
  5883	
  5884	The strtok_r() function returns a pointer to the next token, or NULL if there
  5885	are no more tokens.
  5886	
  5887	__strtol_internal
  5888	
  5889	Name
  5890	
  5891	__strtol_internal -- alias for strtol
  5892	
  5893	Synopsis
  5894	
  5895	long int __strtol_internal(const char *__nptr, char **__endptr,
  5896	                           int __base, int __group);
  5897	
  5898	Description
  5899	
  5900	__GROUP must be 0 or the behavior is undefined.
  5901	
  5902	__strtol_internal(__nptr, __endptr, __base, __group) has the same specification
  5903	as strtol(__nptr, __endptr, __base).
  5904	
  5905	__strtol_internal is not in the source standard; it is only in the binary
  5906	standard.
  5907	
  5908	strtoq
  5909	
  5910	Name
  5911	
  5912	strtoq -- convert string value to a long or quad_t integer
  5913	
  5914	Synopsis
  5915	
  5916	#include <sys/types.h>
  5917	#include <stdlib.h>
  5918	#include <limits.h>
  5919	
  5920	quadt strtoq(const char *nptr, char **endptr, int base);
  5921	
  5922	Description
  5923	
  5924	The strtoq() function converts the string in nptr to a quadt value. The
  5925	conversion is done according to the given base, which must be between 2 and 36
  5926	inclusive, or be the special value 0.
  5927	
  5928	The string may begin with an arbitrary amount of white space (as determine by
  5929	isspace(3)) followed by a single optional + or - sign. If base is zero or 16,
  5930	the string may then include a 0x prefix, and the number will be read in base
  5931	16; otherwise, a zero base is taken as 10 (decimal) unless the next character
  5932	is 0, in which case it is taken as 8 (octal).
  5933	
  5934	The remainder of the string is converted to a long value in the obvious manner,
  5935	stopping at the first character which is not a valid digit in the given base.
  5936	(In bases above 10, the letter A in either upper or lower case represents 10, B
  5937	represents 11, and so forth, with Z representing 35.)
  5938	
  5939	Return Value
  5940	
  5941	strtoq() function returns the result of the conversion, unless the value would
  5942	underflow or overflow. If an underflow occurs, strtoq() returns QUAD_MIN. If an
  5943	overflow occurs, strtoq() returns QUAD_MAX. In both cases, errno is set to
  5944	ERANGE.
  5945	
  5946	Errors
  5947	
  5948	ERANGE
  5949	
  5950	    The given string was out of range; the value converted has been clamped.
  5951	
  5952	strtouq
  5953	
  5954	Name
  5955	
  5956	strtouq -- convert a string to an uquad_t
  5957	
  5958	Synopsis
  5959	
  5960	#include <sys/types.h>
  5961	#include <stdlib.h>
  5962	#include <limits.h>
  5963	
  5964	uquadt strtouq(const char *nptr, char **endptr, int base);
  5965	
  5966	Description
  5967	
  5968	The strtouq() function converts the string in nptr to a uquadt value. The
  5969	conversion is done according to the given base, which must be between 2 and 36
  5970	inclusive, or be the special value 0.
  5971	
  5972	The string may begin with an arbitrary amount of white space (as determined by
  5973	isspace(3)) followed by a single optional + or - sign. If base is zero or 16,
  5974	the string may then include a 0x prefix, and the number will be read in base
  5975	16; otherwise, a zero base is taken as 10 (decimal) unless the next character
  5976	is 0, in which case it is taken as 8 (octal).
  5977	
  5978	The remainder of the string is converted to an unsigned long value in the
  5979	obvious manner, stopping at the end of the string or at the first character
  5980	that does not produce a valid digit in the given base. (In bases above 10, the
  5981	letter A in either upper or lower case represents 10, B represents 11, and so
  5982	forth, with Z representing 35.)
  5983	
  5984	Return Value
  5985	
  5986	Upon success the strtouq() function returns either the result of the conversion
  5987	or, if there was a leading minus sign, the negation of the result of the
  5988	conversion, unless the original (non-negated) value would overflow. In the case
  5989	of an overflow the function returns UQUAD_MAX and the global variable errno is
  5990	set to ERANGE.
  5991	
  5992	Errors
  5993	
  5994	ERANGE
  5995	
  5996	    The given string was out of range; the value converted has been clamped.
  5997	
  5998	strverscmp
  5999	
  6000	Name
  6001	
  6002	strverscmp -- compare S1 and S2 as strings holding name and indices/version
  6003	numbers
  6004	
  6005	Synopsis
  6006	
  6007	#include <string.h>
  6008	
  6009	extern int strverscmp(const char *s1, const char *s2);
  6010	
  6011	Description
  6012	
  6013	Compare S1 and S2 as strings holding name and indices/version numbers.
  6014	
  6015	__sysconf
  6016	
  6017	Name
  6018	
  6019	__sysconf -- get configuration information at runtime
  6020	
  6021	Synopsis
  6022	
  6023	#include <unistd.h>
  6024	
  6025	long __sysconf(int name);
  6026	
  6027	Description
  6028	
  6029	Get configuration information at runtime.
  6030	
  6031	This is weak alias to sysconf.
  6032	
  6033	__sysconf(name) has the same specification as sysconf(name).
  6034	
  6035	__sysconf is not in the source standard; it is only in the binary standard.
  6036	
  6037	system
  6038	
  6039	Name
  6040	
  6041	system -- execute a shell command
  6042	
  6043	Synopsis
  6044	
  6045	#include <stdlib.h>
  6046	
  6047	int system (const char * string);
  6048	
  6049	Description
  6050	
  6051	system() executes a command specified in string by calling /bin/sh -c string,
  6052	and returns after the command has been completed. During execution of the
  6053	command, SIGCHLD will be blocked, and SIGINT and SIGQUIT will be ignored.
  6054	
  6055	Return Value
  6056	
  6057	The value returned is 127 if the execve() call for /bin/sh fails, -1 if there
  6058	was another error and the return code of the command otherwise.
  6059	
  6060	If the value of string is NULL, system() returns nonzero if the shell is
  6061	available, and zero if not.
  6062	
  6063	system() does not affect the wait status of any other children.
  6064	
  6065	Bugs
  6066	
  6067	It is extremely unfortunate that the libc version of system() ignores
  6068	interrupts. This makes programs that call it from a loop uninterruptable. This
  6069	means that for such purposes one should not use system() but a private version
  6070	like (warning: untested code!)
  6071	
  6072	Do not use system() from a program with suid or sgid privileges, because
  6073	strange values for some environment variables might be used to subvert system
  6074	integrity. Use the exec(3) family of functions instead, but not execlp(3) or
  6075	execvp(3). system() will not, in fact, work properly from programs with suid or
  6076	sgid privileges on systems on which /bin/sh is bash version 2, since bash 2
  6077	drops privileges on startup. (Debian uses a modified bash which does not do
  6078	this when invoked as sh.)
  6079	
  6080	The check for the availability of /bin/sh is not actually performed; it is
  6081	always assumed to be available. ISO C specifies the check, but POSIX.2
  6082	specifies that the return shall always be non-zero, since a system without the
  6083	shell is not conforming, and it is this that is implemented.
  6084	
  6085	It is possible for the shell command to return 127, so that code is not a sure
  6086	indication that the execve() call failed; check errno to make sure.
  6087	
  6088	_sys_errlist
  6089	
  6090	Name
  6091	
  6092	_sys_errlist -- array containing the "C" locale strings used by strerror()
  6093	
  6094	Synopsis
  6095	
  6096	#include <stdio.h>
  6097	
  6098	extern const char *const _sys_errlist[];
  6099	
  6100	Description
  6101	
  6102	An array containing the "C" locale strings used by strerror(). This normally
  6103	should not be used directly. The strerror function provides all the needed
  6104	functionality.
  6105	
  6106	_sys_siglist
  6107	
  6108	Name
  6109	
  6110	_sys_siglist -- array containing the names of the signal names
  6111	
  6112	Synopsis
  6113	
  6114	#include <signal.h>
  6115	
  6116	extern const char *const _sys_siglist[NSIG];
  6117	
  6118	Description
  6119	
  6120	An array containing the names of the signal names.
  6121	
  6122	This exists only for compatibility. Use strsignal instead (see <string.h>).
  6123	
  6124	textdomain
  6125	
  6126	Name
  6127	
  6128	textdomain -- set the current default message catalog to DOMAINNAME
  6129	
  6130	Synopsis
  6131	
  6132	#include <libintl.h>
  6133	
  6134	extern char *textdomain(const char *domainname);
  6135	
  6136	Description
  6137	
  6138	Set the current default message catalog to DOMAINNAME.
  6139	
  6140	If DOMAINNAME is null, return the current default.
  6141	
  6142	If DOMAINNAME is "", reset to the default of "messages".
  6143	
  6144	vasprintf
  6145	
  6146	Name
  6147	
  6148	vasprintf -- write formatted output to a string dynamically allocated with
  6149	malloc and store the address of the string in *PTR
  6150	
  6151	Synopsis
  6152	
  6153	#include <stdio.h>
  6154	
  6155	extern int vasprintf(char **restrict ptr, const char *restrict f,
  6156	                     G_va_list arg);
  6157	
  6158	Description
  6159	
  6160	Write formatted output to a string dynamically allocated with malloc.
  6161	
  6162	Store the address of the string in *PTR.
  6163	
  6164	vdprintf
  6165	
  6166	Name
  6167	
  6168	vdprintf -- write formatted output to a file descriptor
  6169	
  6170	Synopsis
  6171	
  6172	#include <stdio.h>
  6173	
  6174	extern int vdprintf(int fd, const char *restrict fmt,
  6175	                    G_va_list arg);
  6176	
  6177	Description
  6178	
  6179	Write formatted output to a file descriptor.
  6180	
  6181	verrx
  6182	
  6183	Name
  6184	
  6185	verrx -- display formatted error messages
  6186	
  6187	Synopsis
  6188	
  6189	#include <err.h>
  6190	
  6191	void verrx(int eval, const char *fmt, valist args);
  6192	
  6193	Description
  6194	
  6195	The verrx() function displays a formatted error message on the standard error
  6196	output. The last component of the program name, a colon character, and a space
  6197	are output. If the fmt argument is not NULL, the formatted error message, a
  6198	colon character, and a space are output. The output is followed by a newline
  6199	character.
  6200	
  6201	The verrx() function does not return, but exits with the value of the argument
  6202	eval.
  6203	
  6204	wait4
  6205	
  6206	Name
  6207	
  6208	wait4 -- wait for process termination, BSD style
  6209	
  6210	Synopsis
  6211	
  6212	#define _USE_BSD
  6213	#include <sys/types.h>
  6214	#include <sys/resource.h>
  6215	#include <sys/wait.h>
  6216	
  6217	pid_t wait4(pid_t pid, int *status, int options,
  6218	            struct rusage *rusage);
  6219	
  6220	Description
  6221	
  6222	The wait4 function suspends execution of the current process until a child as
  6223	specified by the pid argument has exited, or until a signal is delivered whose
  6224	action is to terminate the current process or to call a signal handling
  6225	function. If a child as requested by pid has already exited by the time of the
  6226	call (a so-called "zombie" process), the function returns immediately. Any
  6227	system resources used by the child are freed.
  6228	
  6229	The value of pid can be one of:
  6230	
  6231	< -1
  6232	
  6233	    wait for any child process whose process group ID is equal to the absolute
  6234	    value of pid.
  6235	
  6236	-1
  6237	
  6238	    wait for any child process; this is equivalent to calling wait3.
  6239	
  6240	0
  6241	
  6242	    wait for any child process whose process group ID is equal to that of the
  6243	    calling process.
  6244	
  6245	> 0
  6246	
  6247	    wait for the child whose process ID is equal to the value of pid.
  6248	
  6249	The value of options is a bitwise OR of zero or more of the following
  6250	constants:
  6251	
  6252	WNOHANG
  6253	
  6254	    return immediately if no child is there to be waited for.
  6255	
  6256	WUNTRACED
  6257	
  6258	    return for children which are stopped, and whose status has not been
  6259	    reported.
  6260	
  6261	If status is not NULL, wait4 stores status information in the location pointed
  6262	to by status.
  6263	
  6264	This status can be evaluated with the following macros (these macros take the
  6265	stat buffer (an int) as an argument -- not a pointer to the buffer!):
  6266	
  6267	WIFEXITED(status)
  6268	
  6269	    is non-zero if the child exited normally.
  6270	
  6271	WEXITSTATUS(status)
  6272	
  6273	    evaluates to the least significant eight bits of the return code of the
  6274	    child which terminated, which may have been set as the argument to a call
  6275	    to exit() or as the argument for a return statement in the main program.
  6276	    This macro can only be evaluated if WIFEXITED returned non-zero.
  6277	
  6278	WIFSIGNALED(status)
  6279	
  6280	    returns true if the child process exited because of a signal which was not
  6281	    caught.
  6282	
  6283	WTERMSIG(status)
  6284	
  6285	    returns the number of the signal that caused the child process to
  6286	    terminate. This macro can only be evaluated if WIFSIGNALED returned
  6287	    non-zero.
  6288	
  6289	WIFSTOPPED(status)
  6290	
  6291	    returns true if the child process which caused the return is currently
  6292	    stopped; this is only possible if the call was done using WUNTRACED.
  6293	
  6294	WSTOPSIG(status)
  6295	
  6296	    returns the number of the signal which caused the child to stop. This macro
  6297	    can only be evaluated if WIFSTOPPED returned non-zero.
  6298	
  6299	If rusage is not NULL, the struct rusage as defined in <sys/resource.h> it
  6300	points to will be filled with accounting information. See getrusage(2) for
  6301	details.
  6302	
  6303	Return Value
  6304	
  6305	The process ID of the child which exited, -1 on error (in particular, when no
  6306	unwaited-for child processes of the specified kind exist) or zero if WNOHANG
  6307	was used and no child was available yet. In the latter two cases errno will be
  6308	set appropriately.
  6309	
  6310	Errors
  6311	
  6312	ECHILD
  6313	
  6314	    No unwaited-for child process as specified does exist.
  6315	
  6316	ERESTARTSYS
  6317	
  6318	    If WNOHANG was not set and an unblocked signal or a SIGCHLD was caught.
  6319	    This error is returned by the system call. The library interface is not
  6320	    allowed to return ERESTARTSYS, but will return EINTR.
  6321	
  6322	warn
  6323	
  6324	Name
  6325	
  6326	warn -- formatted error messages
  6327	
  6328	Synopsis
  6329	
  6330	#include <err.h>
  6331	
  6332	void warn(const char *fmt, ...);
  6333	
  6334	Description
  6335	
  6336	The warn() function displays a formatted error message on the standard error
  6337	output. The last component of the program name, a colon character, and a space
  6338	are output. If the fmt argument is not NULL, the formatted error message, a
  6339	colon character, and a space are output. The error message string affiliated
  6340	with the current value of the global variable errno is output. The output is
  6341	followed by a newline character.
  6342	
  6343	warnx
  6344	
  6345	Name
  6346	
  6347	warnx -- formatted error messages
  6348	
  6349	Synopsis
  6350	
  6351	#include <err.h>
  6352	
  6353	void warnx(const char *fmt, ...);
  6354	
  6355	Description
  6356	
  6357	The warnx() function displays a formatted error message on the standard error
  6358	output. The last component of the program name, a colon character, and a space
  6359	are output. If the fmt argument is not NULL, the formatted error message, a
  6360	colon character, and a space are output. The output is followed by a newline
  6361	character.
  6362	
  6363	wcpcpy
  6364	
  6365	Name
  6366	
  6367	wcpcpy -- copy a wide character string, returning a pointer to its end
  6368	
  6369	Synopsis
  6370	
  6371	#include <wchar.h>
  6372	
  6373	wchar_t *wcpcpy(wchar_t *dest, const wchar_t *src);
  6374	
  6375	Description
  6376	
  6377	The wcpcpy function is the wide-character equivalent of the stpcpy function. It
  6378	copies the wide character string pointed to by src, including the terminating
  6379	L'\0' character, to the array pointed to by dest.
  6380	
  6381	The strings may not overlap.
  6382	
  6383	The programmer must ensure that there is room for at least wcslen(src)+1 wide
  6384	characters at dest.
  6385	
  6386	Return Value
  6387	
  6388	wcpcpy returns a pointer to the end of the wide-character string dest, that is,
  6389	a pointer to the terminating L'\0' character.
  6390	
  6391	wcpncpy
  6392	
  6393	Name
  6394	
  6395	wcpncpy -- copy a fixed-size string of wide characters, returning a pointer to
  6396	its end
  6397	
  6398	Synopsis
  6399	
  6400	#include <wchar.h>
  6401	
  6402	wchar_t *wcpncpy(wchar_t *dest, const wchar_t *src, size_t n);
  6403	
  6404	Description
  6405	
  6406	The wcpncpy function is the wide-character equivalent of the stpncpy function.
  6407	It copies at most n wide characters from the wide-character string pointed to
  6408	by src, including the terminating L'\0' character, to the array pointed to by
  6409	dest. Exactly n wide characters are written at dest. If the length wcslen(src)
  6410	is smaller than n, the remaining wide characters in the array pointed to by
  6411	dest are filled with L'\0' characters. If the length wcslen(src) is greater or
  6412	equal to n, the string pointed to by dest will not be L'\0' terminated.
  6413	
  6414	The strings may not overlap.
  6415	
  6416	The programmer must ensure that there is room for at least n wide characters at
  6417	dest.
  6418	
  6419	Return Value
  6420	
  6421	wcpncpy returns a pointer to the last wide character written, i.e. dest + n -
  6422	1.
  6423	
  6424	wcscasecmp
  6425	
  6426	Name
  6427	
  6428	wcscasecmp -- compare two wide-character strings, ignoring case
  6429	
  6430	Synopsis
  6431	
  6432	#include <wchar.h>
  6433	
  6434	int wcscasecmp(const wchar_t *s1, const wchar_t *s2);
  6435	
  6436	Description
  6437	
  6438	The wcscasecmp function is the wide-character equivalent of the strcasecmp
  6439	function. It compares the wide-character string pointed to by s1 and the
  6440	wide-character string pointed to by s2, ignoring case differences (towupper,
  6441	towlower).
  6442	
  6443	Return Value
  6444	
  6445	The wcscasecmp function returns zero if the wide-character strings at s1 and s2
  6446	are equal except for case distinctions. It returns a positive integer if s1 is
  6447	greater than s2, ignoring case. It returns a negative integer if s1 is smaller
  6448	than s2, ignoring case.
  6449	
  6450	Notes
  6451	
  6452	The behavior of wcscasecmp depends on the LC_CTYPE category of the current
  6453	locale.
  6454	
  6455	wcsdup
  6456	
  6457	Name
  6458	
  6459	wcsdup -- duplicate a wide-character string
  6460	
  6461	Synopsis
  6462	
  6463	#include <wchar.h>
  6464	
  6465	wchar_t *wcsdup(const wchar_t *s);
  6466	
  6467	Description
  6468	
  6469	The wcsdup function is the wide-character equivalent of the strdup function. It
  6470	allocates and returns a new wide-character string whose initial contents is a
  6471	duplicate of the wide-character string pointed to by s.
  6472	
  6473	Memory for the new wide-character string is obtained with malloc(3), and can be
  6474	freed with free(3).
  6475	
  6476	Return Value
  6477	
  6478	The wcsdup function returns a pointer to the new wide-character string, or NULL
  6479	if sufficient memory was not available.
  6480	
  6481	wcsncasecmp
  6482	
  6483	Name
  6484	
  6485	wcsncasecmp -- compare two fixed-size wide-character strings, ignoring case
  6486	
  6487	Synopsis
  6488	
  6489	#include <wchar.h>
  6490	
  6491	int wcsncasecmp(const wchar_t *s1, const wchar_t *s2, size_t n);
  6492	
  6493	Description
  6494	
  6495	The wcsncasecmp function is the wide-character equivalent of the strncasecmp
  6496	function. It compares the wide-character string pointed to by s1 and the
  6497	wide-character string pointed to by s2, but at most n wide characters from each
  6498	string, ignoring case differences (towupper, towlower).
  6499	
  6500	Return Value
  6501	
  6502	The wcsncasecmp function returns zero if the wide-character strings at s1 and
  6503	s2, truncated to at most length n, are equal except for case distinctions. It
  6504	returns a positive integer if truncated s1 is greater than truncated s2,
  6505	ignoring case. It returns a negative integer if truncated s1 is smaller than
  6506	truncated s2, ignoring case.
  6507	
  6508	Notes
  6509	
  6510	The behavior of wcsncasecmp depends on the LC_CTYPE category of the current
  6511	locale.
  6512	
  6513	wcsnlen
  6514	
  6515	Name
  6516	
  6517	wcsnlen -- determine the length of a fixed-size wide-character string
  6518	
  6519	Synopsis
  6520	
  6521	#include <wchar.h>
  6522	
  6523	size_t wcsnlen(const wchar_t *s, size_t maxlen);
  6524	
  6525	Description
  6526	
  6527	The wcsnlen function is the wide-character equivalent of the strnlen function.
  6528	It returns the number of wide-characters in the string pointed to by s, not
  6529	including the terminating L'\0' character, but at most maxlen. In doing this,
  6530	wcsnlen looks only at the first maxlen wide-characters at s and never beyond
  6531	s+maxlen.
  6532	
  6533	Return Value
  6534	
  6535	The wcsnlen function returns wcslen(s), if that is less than maxlen, or maxlen
  6536	if there is no L'\0' character among the first maxlen wide characters pointed
  6537	to by s.
  6538	
  6539	Notes
  6540	
  6541	The behavior of wcsncasecmp depends on the LC_CTYPE category of the current
  6542	locale.
  6543	
  6544	wcsnrtombs
  6545	
  6546	Name
  6547	
  6548	wcsnrtombs -- convert a wide character string to a multi-byte string
  6549	
  6550	Synopsis
  6551	
  6552	#include <wchar.h>
  6553	
  6554	size_t wcsnrtombs(char *dest, const wchar_t **src, size_t nwc,
  6555	                  size_t len, mbstate_t *ps);
  6556	
  6557	Description
  6558	
  6559	The wcsnrtombs function is like the wcsrtombs function, except that the number
  6560	of wide characters to be converted, starting at *src, is limited to nwc.
  6561	
  6562	If dest is not a NULL pointer, the wcsnrtombs function converts at most nwc
  6563	wide characters from the wide-character string *src to a multibyte string
  6564	starting at dest. At most len bytes are written to dest. The state *ps is
  6565	updated. The conversion is effectively performed by repeatedly calling wcrtomb
  6566	(dest,*src,ps), as long as this call succeeds, and then incrementing dest by
  6567	the number of bytes written and *src by one. The conversion can stop for three
  6568	reasons:
  6569	
  6570	1. A wide character has been encountered that can not be represented as a
  6571	multibyte sequence (according to the current locale). In this case *src is left
  6572	pointing to the invalid wide character, (size_t)(-1) is returned, and errno is
  6573	set to EILSEQ.
  6574	
  6575	2. nwc wide characters have been converted without encountering a L'\0', or the
  6576	length limit forces a stop. In this case *src is left pointing to the next wide
  6577	character to be converted, and the number of bytes written to dest is returned.
  6578	
  6579	3. The wide-character string has been completely converted, including the
  6580	terminating L'\0' (which has the side effect of bringing back *ps to the
  6581	initial state). In this case *src is set to NULL, and the number of bytes
  6582	written to dest, excluding the terminating '\0' byte, is returned.
  6583	
  6584	If dest is NULL, len is ignored, and the conversion proceeds as above, except
  6585	that the converted bytes are not written out to memory, and that no destination
  6586	length limit exists.
  6587	
  6588	In both of the above cases, if ps is a NULL pointer, a static anonymous state
  6589	only known to the wcsnrtombs function is used instead.
  6590	
  6591	The programmer must ensure that there is room for at least len bytes at dest.
  6592	
  6593	Return Value
  6594	
  6595	The wcsnrtombs function returns the number of bytes that make up the converted
  6596	part of multibyte sequence, not including the terminating null byte. If a wide
  6597	character was encountered which could not be converted, (size_t)(-1) is
  6598	returned, and errno set to EILSEQ.
  6599	
  6600	Notes
  6601	
  6602	The behavior of wcsnrtombs depends on the LC_CTYPE category of the current
  6603	locale.
  6604	
  6605	Passing NULL as ps is not multi-thread safe.
  6606	
  6607	wcstoq
  6608	
  6609	Name
  6610	
  6611	wcstoq -- convert initial portion of wide string NPTR to long int
  6612	representation
  6613	
  6614	Synopsis
  6615	
  6616	#include <wchar.h>
  6617	
  6618	extern long long int wcstoq(const wchar_t *restrict nptr,
  6619	                            wchar_t **restrict endptr, int base);
  6620	
  6621	Description
  6622	
  6623	Convert initial portion of wide string NPTR to long int representation.
  6624	
  6625	wcstouq
  6626	
  6627	Name
  6628	
  6629	wcstouq -- convert initial portion of wide string NPTR to unsigned long long
  6630	int representation
  6631	
  6632	Synopsis
  6633	
  6634	#include <wchar.h>
  6635	
  6636	extern unsigned long long int wcstouq(const wchar_t *restrict nptr,
  6637	                           wchar_t **restrict endptr,int base);
  6638	
  6639	Description
  6640	
  6641	Convert initial portion of wide string NPTR to unsigned long long int
  6642	representation.
  6643	
  6644	__xmknod
  6645	
  6646	Name
  6647	
  6648	__xmknod -- make block or character special file
  6649	
  6650	Synopsis
  6651	
  6652	int __xmknod(int ver,
  6653	            __const char *path,
  6654	            __mode_t mode,
  6655	            __dev_t *dev);
  6656	
  6657	Description
  6658	
  6659	ver must be 1 or the behavior is undefined.
  6660	
  6661	__xmknod(1, path, mode, dev) has the same specification as mknod(path, mode,
  6662	dev).
  6663	
  6664	Note that the of dev_t is not the same as the argument that the kernel syscall
  6665	uses (TODO: need to document what dev_t is).
  6666	
  6667	__xmknod is not in the source standard; it is only in the binary standard.
  6668	
  6669	-------------------------------------------------------------------------------
  6670	
  6671	Interfaces for libm
  6672	
  6673	The behaviour of the interfaces in this library is specified by the following
  6674	Standards.
  6675	
  6676	ISO/IEC 9899: 1999, Programming Languages --C[9]
  6677	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
  6678	(ISBN: 1-85912-181-0, C606)[10]
  6679	
  6680	-------------------------------------------------------------------------------
  6681	
  6682	Math
  6683	
  6684	Table 10-26. libm - Math Function Interfaces
  6685	
  6686	+-----------------------------------------------------------------------------+
  6687	|acos        |ceilf         |erfl(GLIBC_2.0)  |j1l(GLIBC_2.0) |remquof        |
  6688	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[9]              |[9]            |(GLIBC_2.0)[9] |
  6689	|[10]        |              |                 |               |               |
  6690	|------------+--------------+-----------------+---------------+---------------|
  6691	|acosf       |ceill         |exp(GLIBC_2.0)   |jn(GLIBC_2.0)  |remquol        |
  6692	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[10]             |[10]           |(GLIBC_2.0)[9] |
  6693	|[9]         |              |                 |               |               |
  6694	|------------+--------------+-----------------+---------------+---------------|
  6695	|acosh       |cexp          |expm1(GLIBC_2.0) |jnf(GLIBC_2.0) |rint(GLIBC_2.0)|
  6696	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[10]             |[9]            |[10]           |
  6697	|[10]        |              |                 |               |               |
  6698	|------------+--------------+-----------------+---------------+---------------|
  6699	|acoshf      |cexpf         |fabs(GLIBC_2.0)  |jnl(GLIBC_2.0) |rintf          |
  6700	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[10]             |[9]            |(GLIBC_2.0)[9] |
  6701	|[9]         |              |                 |               |               |
  6702	|------------+--------------+-----------------+---------------+---------------|
  6703	|acoshl      |cexpl         |fabsf(GLIBC_2.0) |ldexp          |rintl          |
  6704	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[9]              |(GLIBC_2.0)[10]|(GLIBC_2.0)[9] |
  6705	|[9]         |              |                 |               |               |
  6706	|------------+--------------+-----------------+---------------+---------------|
  6707	|acosl       |cimag         |fabsl(GLIBC_2.0) |ldexpf         |round          |
  6708	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[9]              |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6709	|[9]         |              |                 |               |               |
  6710	|------------+--------------+-----------------+---------------+---------------|
  6711	|asin        |cimagf        |fdim(GLIBC_2.0)  |ldexpl         |roundf         |
  6712	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[9]              |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6713	|[10]        |              |                 |               |               |
  6714	|------------+--------------+-----------------+---------------+---------------|
  6715	|asinf       |cimagl        |fdimf(GLIBC_2.0) |lgamma         |roundl         |
  6716	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[9]              |(GLIBC_2.0)[10]|(GLIBC_2.0)[9] |
  6717	|[9]         |              |                 |               |               |
  6718	|------------+--------------+-----------------+---------------+---------------|
  6719	|asinh       |clog10        |fdiml(GLIBC_2.0) |lgamma_r       |scalb          |
  6720	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[9]              |(GLIBC_2.0)[9] |(GLIBC_2.0)[10]|
  6721	|[10]        |              |                 |               |               |
  6722	|------------+--------------+-----------------+---------------+---------------|
  6723	|asinhf      |clog10f       |feclearexcept    |lgammaf        |scalbf         |
  6724	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6725	|[9]         |              |                 |               |               |
  6726	|------------+--------------+-----------------+---------------+---------------|
  6727	|asinhl      |clog10l       |fegetenv         |lgammaf_r      |scalbl         |
  6728	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6729	|[9]         |              |                 |               |               |
  6730	|------------+--------------+-----------------+---------------+---------------|
  6731	|asinl       |clogf         |fegetexceptflag  |lgammal        |scalbln        |
  6732	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6733	|[9]         |              |                 |               |               |
  6734	|------------+--------------+-----------------+---------------+---------------|
  6735	|atan        |clogl         |fegetround       |lgammal_r      |scalblnf       |
  6736	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6737	|[10]        |              |                 |               |               |
  6738	|------------+--------------+-----------------+---------------+---------------|
  6739	|atan2       |conj          |feholdexcept     |llrint         |scalblnl       |
  6740	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6741	|[10]        |              |                 |               |               |
  6742	|------------+--------------+-----------------+---------------+---------------|
  6743	|atan2f      |conjf         |feraiseexcept    |llrintf        |scalbn         |
  6744	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6745	|[9]         |              |                 |               |               |
  6746	|------------+--------------+-----------------+---------------+---------------|
  6747	|atan2l      |conjl         |fesetenv         |llrintl        |scalbnf        |
  6748	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6749	|[9]         |              |                 |               |               |
  6750	|------------+--------------+-----------------+---------------+---------------|
  6751	|atanf       |copysign      |fesetexceptflag  |llround        |scalbnl        |
  6752	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6753	|[9]         |              |                 |               |               |
  6754	|------------+--------------+-----------------+---------------+---------------|
  6755	|atanh       |copysignf     |fesetround       |llroundf       |significand    |
  6756	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6757	|[10]        |              |                 |               |               |
  6758	|------------+--------------+-----------------+---------------+---------------|
  6759	|atanhf      |copysignl     |fetestexcept     |llroundl       |significandf   |
  6760	|(GLIBC_2.0) |(GLIBC_2.0)[9]|(GLIBC_2.0)[9]   |(GLIBC_2.0)[9] |(GLIBC_2.0)[9] |
  6761	|[9]         |              |                 |               |               |
  6762	|------------+--------------+-----------------+---------------+---------------|
  6763	|atanhl      |cos(GLIBC_2.0)|feupdateenv      |log(GLIBC_2.0) |significandl   |
  6764	|(GLIBC_2.0) |[10]          |(GLIBC_2.0)[9]   |[10]           |(GLIBC_2.0)[9] |
  6765	|[9]         |              |                 |               |               |
  6766	|------------+--------------+-----------------+---------------+---------------|
  6767	|atanl       |cosf          |finite(GLIBC_2.0)|log10          |sin(GLIBC_2.0) |
  6768	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[10]             |(GLIBC_2.0)[10]|[10]           |
  6769	|[9]         |              |                 |               |               |
  6770	|------------+--------------+-----------------+---------------+---------------|
  6771	|cabs        |cosh          |finitef          |log1p          |sincos         |
  6772	|(GLIBC_2.1) |(GLIBC_2.1)   |(GLIBC_2.1)[9]   |(GLIBC_2.1)[10]|(GLIBC_2.1)[9] |
  6773	|[10]        |[10]          |                 |               |               |
  6774	|------------+--------------+-----------------+---------------+---------------|
  6775	|cabsf       |coshf         |finitel          |logb(GLIBC_2.1)|sincosf        |
  6776	|(GLIBC_2.1) |(GLIBC_2.1)[9]|(GLIBC_2.1)[9]   |[10]           |(GLIBC_2.1)[9] |
  6777	|[9]         |              |                 |               |               |
  6778	|------------+--------------+-----------------+---------------+---------------|
  6779	|cabsl       |coshl         |floor(GLIBC_2.1) |lrint          |sincosl        |
  6780	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[10]             |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6781	|[9]         |              |                 |               |               |
  6782	|------------+--------------+-----------------+---------------+---------------|
  6783	|cacos       |cosl          |floorf(GLIBC_2.1)|lrintf         |sinf(GLIBC_2.1)|
  6784	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |[9]            |
  6785	|[9]         |              |                 |               |               |
  6786	|------------+--------------+-----------------+---------------+---------------|
  6787	|cacosf      |cpow          |floorl(GLIBC_2.1)|lrintl         |sinh(GLIBC_2.1)|
  6788	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |[10]           |
  6789	|[9]         |              |                 |               |               |
  6790	|------------+--------------+-----------------+---------------+---------------|
  6791	|cacosh      |cpowf         |fma(GLIBC_2.1)[9]|lround         |sinhf          |
  6792	|(GLIBC_2.1) |(GLIBC_2.1)[9]|                 |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6793	|[9]         |              |                 |               |               |
  6794	|------------+--------------+-----------------+---------------+---------------|
  6795	|cacoshf     |cpowl         |fmaf(GLIBC_2.1)  |lroundf        |sinhl          |
  6796	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6797	|[9]         |              |                 |               |               |
  6798	|------------+--------------+-----------------+---------------+---------------|
  6799	|cacoshl     |cproj         |fmal(GLIBC_2.1)  |lroundl        |sinl(GLIBC_2.1)|
  6800	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |[9]            |
  6801	|[9]         |              |                 |               |               |
  6802	|------------+--------------+-----------------+---------------+---------------|
  6803	|cacosl      |cprojf        |fmax(GLIBC_2.1)  |matherr        |sqrt(GLIBC_2.1)|
  6804	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |[10]           |
  6805	|[9]         |              |                 |               |               |
  6806	|------------+--------------+-----------------+---------------+---------------|
  6807	|carg        |cprojl        |fmaxf(GLIBC_2.1) |modf(GLIBC_2.1)|sqrtf          |
  6808	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |[10]           |(GLIBC_2.1)[9] |
  6809	|[9]         |              |                 |               |               |
  6810	|------------+--------------+-----------------+---------------+---------------|
  6811	|cargf       |creal         |fmaxl(GLIBC_2.1) |modff          |sqrtl          |
  6812	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6813	|[9]         |              |                 |               |               |
  6814	|------------+--------------+-----------------+---------------+---------------|
  6815	|cargl       |creall        |fmin(GLIBC_2.1)  |modfl          |tan(GLIBC_2.1) |
  6816	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |[10]           |
  6817	|[9]         |              |                 |               |               |
  6818	|------------+--------------+-----------------+---------------+---------------|
  6819	|casin       |csin          |fminf(GLIBC_2.1) |nan(GLIBC_2.1) |tanf(GLIBC_2.1)|
  6820	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |[9]            |[9]            |
  6821	|[9]         |              |                 |               |               |
  6822	|------------+--------------+-----------------+---------------+---------------|
  6823	|casinf      |csinf         |fminl(GLIBC_2.1) |nanf(GLIBC_2.1)|tanh(GLIBC_2.1)|
  6824	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |[9]            |[10]           |
  6825	|[9]         |              |                 |               |               |
  6826	|------------+--------------+-----------------+---------------+---------------|
  6827	|casinh      |csinh         |fmod(GLIBC_2.1)  |nanl(GLIBC_2.1)|tanhf          |
  6828	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[10]             |[9]            |(GLIBC_2.1)[9] |
  6829	|[9]         |              |                 |               |               |
  6830	|------------+--------------+-----------------+---------------+---------------|
  6831	|casinhf     |csinhf        |fmodf(GLIBC_2.1) |nearbyint      |tanhl          |
  6832	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6833	|[9]         |              |                 |               |               |
  6834	|------------+--------------+-----------------+---------------+---------------|
  6835	|casinhl     |csinhl        |fmodl(GLIBC_2.1) |nearbyintf     |tanl(GLIBC_2.1)|
  6836	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |[9]            |
  6837	|[9]         |              |                 |               |               |
  6838	|------------+--------------+-----------------+---------------+---------------|
  6839	|casinl      |csinl         |frexp(GLIBC_2.1) |nearbyintl     |tgamma         |
  6840	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[10]             |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6841	|[9]         |              |                 |               |               |
  6842	|------------+--------------+-----------------+---------------+---------------|
  6843	|catan       |csqrt         |frexpf(GLIBC_2.1)|nextafter      |tgammaf        |
  6844	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[10]|(GLIBC_2.1)[9] |
  6845	|[9]         |              |                 |               |               |
  6846	|------------+--------------+-----------------+---------------+---------------|
  6847	|catanf      |csqrtf        |frexpl(GLIBC_2.1)|nextafterf     |tgammal        |
  6848	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6849	|[9]         |              |                 |               |               |
  6850	|------------+--------------+-----------------+---------------+---------------|
  6851	|catanh      |csqrtl        |gamma(GLIBC_2.1) |nextafterl     |trunc          |
  6852	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[10]             |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6853	|[9]         |              |                 |               |               |
  6854	|------------+--------------+-----------------+---------------+---------------|
  6855	|catanhf     |ctan          |gammaf(GLIBC_2.1)|nexttoward     |truncf         |
  6856	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6857	|[9]         |              |                 |               |               |
  6858	|------------+--------------+-----------------+---------------+---------------|
  6859	|catanhl     |ctanf         |gammal(GLIBC_2.1)|nexttowardf    |truncl         |
  6860	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |(GLIBC_2.1)[9] |
  6861	|[9]         |              |                 |               |               |
  6862	|------------+--------------+-----------------+---------------+---------------|
  6863	|catanl      |ctanh         |hypot(GLIBC_2.1) |nexttowardl    |y0(GLIBC_2.1)  |
  6864	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[10]             |(GLIBC_2.1)[9] |[10]           |
  6865	|[9]         |              |                 |               |               |
  6866	|------------+--------------+-----------------+---------------+---------------|
  6867	|cbrt        |ctanhf        |hypotf(GLIBC_2.0)|pow(GLIBC_2.0) |y0f(GLIBC_2.0) |
  6868	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[9]              |[10]           |[9]            |
  6869	|[10]        |              |                 |               |               |
  6870	|------------+--------------+-----------------+---------------+---------------|
  6871	|cbrtf       |ctanhl        |hypotl(GLIBC_2.0)|pow10          |y0l(GLIBC_2.0) |
  6872	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[9]              |(GLIBC_2.0)[9] |[9]            |
  6873	|[9]         |              |                 |               |               |
  6874	|------------+--------------+-----------------+---------------+---------------|
  6875	|cbrtl       |ctanl         |ilogb(GLIBC_2.0) |pow10f         |y1(GLIBC_2.0)  |
  6876	|(GLIBC_2.0) |(GLIBC_2.0)[9]|[10]             |(GLIBC_2.0)[9] |[10]           |
  6877	|[9]         |              |                 |               |               |
  6878	|------------+--------------+-----------------+---------------+---------------|
  6879	|ccos        |dremf         |ilogbf(GLIBC_2.1)|pow10l         |y1f(GLIBC_2.1) |
  6880	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |(GLIBC_2.1)[9] |[9]            |
  6881	|[9]         |              |                 |               |               |
  6882	|------------+--------------+-----------------+---------------+---------------|
  6883	|ccosf       |dreml         |ilogbl(GLIBC_2.1)|powf(GLIBC_2.1)|y1l(GLIBC_2.1) |
  6884	|(GLIBC_2.1) |(GLIBC_2.1)[9]|[9]              |[9]            |[9]            |
  6885	|[9]         |              |                 |               |               |
  6886	|------------+--------------+-----------------+---------------+---------------|
  6887	|ccosh       |erf(GLIBC_2.1)|j0(GLIBC_2.1)[10]|powl(GLIBC_2.1)|yn(GLIBC_2.1)  |
  6888	|(GLIBC_2.1) |[10]          |                 |[9]            |[10]           |
  6889	|[9]         |              |                 |               |               |
  6890	|------------+--------------+-----------------+---------------+---------------|
  6891	|ccoshf      |erfc          |j0f(GLIBC_2.1)[9]|remainder      |ynf(GLIBC_2.1) |
  6892	|(GLIBC_2.1) |(GLIBC_2.1)   |                 |(GLIBC_2.1)[10]|[9]            |
  6893	|[9]         |[10]          |                 |               |               |
  6894	|------------+--------------+-----------------+---------------+---------------|
  6895	|ccoshl      |erfcf         |j0l(GLIBC_2.1)[9]|remainderf     |ynl(GLIBC_2.1) |
  6896	|(GLIBC_2.1) |(GLIBC_2.1)[9]|                 |(GLIBC_2.1)[9] |[9]            |
  6897	|[9]         |              |                 |               |               |
  6898	|------------+--------------+-----------------+---------------+---------------|
  6899	|ccosl       |erfcl         |j1(GLIBC_2.1)[10]|remainderl     |               |
  6900	|(GLIBC_2.1) |(GLIBC_2.1)[9]|                 |(GLIBC_2.1)[9] |               |
  6901	|[9]         |              |                 |               |               |
  6902	|------------+--------------+-----------------+---------------+---------------|
  6903	|ceil        |erff          |j1f(GLIBC_2.0)[9]|remquo         |               |
  6904	|(GLIBC_2.0) |(GLIBC_2.0)[9]|                 |(GLIBC_2.0)[9] |               |
  6905	|[10]        |              |                 |               |               |
  6906	+-----------------------------------------------------------------------------+
  6907	-------------------------------------------------------------------------------
  6908	
  6909	Data Symbols
  6910	
  6911	Table 10-27. libm - Math Data Interfaces
  6912	
  6913	+--------------------------+
  6914	|clog[9]|signgam[10] | | | |
  6915	+--------------------------+
  6916	-------------------------------------------------------------------------------
  6917	
  6918	Data Definitions for libm
  6919	
  6920	-------------------------------------------------------------------------------
  6921	
  6922	Interfaces for libpthread
  6923	
  6924	LSB systems support POSIX threads with the following exceptions. This list is
  6925	intended to match the behavior of historical Linux implementations.
  6926	Applications should be written to deal with either POSIX threads or the thread
  6927	behaviors described here.
  6928	
  6929	POSIX specifies a concept of per-process rather than per-thread signals. The
  6930	LSB does not require this behavior; traditional Linux implementations have had
  6931	per-thread signals only. A related issue is that applications cannot (using
  6932	legacy Linux implementations, at least) rely on getpid() returning the same
  6933	value in different threads.
  6934	
  6935	Note: one implication of per-thread signals is that a core dump (for example)
  6936	may not stop all threads in a given process. This may be an issue when
  6937	designing ways to stop/start applications.
  6938	
  6939	Applications which create child processes (using fork() and the like) must then
  6940	wait for them (using waitpid() family of functions) in the same thread as they
  6941	created them. Note that coding applications this way will work both with full
  6942	POSIX threads and legacy Linux thread implementations.
  6943	
  6944	POSIX specifies that changing the user or group id instantly affects the
  6945	behavior of all threads. This behavior is not specified; applications must use
  6946	their own lock if they need this behavior. Rationale: it seems unnecessary and
  6947	it is a performance hit (an SMP kernel must lock the user id). (FIXME: is this
  6948	our current understanding? It was discussed on lsb-spec on January 2000 but I'm
  6949	not sure we reached a consensus).
  6950	
  6951	Although this standard doesn't have a way to list processes (/proc or "ps"
  6952	command line isn't in, right?), it is our intention to not specify one way or
  6953	the other whether multiple threads appear as separate processes or as a single
  6954	process.
  6955	
  6956	Applications cannot rely on resource limits (getrusage and setrusage) being
  6957	maintained per-process rather than per-thread.
  6958	
  6959	Applications must disconnect from the controlling tty before pthread_create
  6960	(FIXME: have I summarized this correctly?).
  6961	
  6962	times() doesn't account for all threads, just the caller.
  6963	
  6964	Applications must not call pthread_cancel if they call any system libraries
  6965	(most notably X windows), as system libraries are not guaranteed to be thread
  6966	safe. Likewise, for such libraries, only one thread per process may call them.
  6967	
  6968	Applications cannot rely on fcntl/lockf locks being visible per-process rather
  6969	than per-thread. Likewise for mandatory file locks.
  6970	
  6971	Threaded applications cannot use SIGUSR1 or SIGUSR2.
  6972	
  6973	The behaviour of the interfaces in this library is specified by the following
  6974	Standards.
  6975	
  6976	Linux Standard Base[11]
  6977	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
  6978	(ISBN: 1-85912-181-0, C606)[12]
  6979	
  6980	-------------------------------------------------------------------------------
  6981	
  6982	Posix Threads
  6983	
  6984	Table 10-28. libpthread - Posix Threads Function Interfaces
  6985	
  6986	+------------------------------------------------------------------------------------------------------------------------------------+
  6987	|pthread_attr_destroy        |pthread_attr_setscope    |pthread_exit(GLIBC_2.0)  |pthread_mutexattr_settype    |pthread_setcanceltype|
  6988	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |[12]                     |(GLIBC_2.0)[12]              |(GLIBC_2.0)[12]      |
  6989	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  6990	|pthread_attr_getdetachstate |pthread_attr_setstackaddr|pthread_getschedparam    |pthread_once(GLIBC_2.0)[12]  |pthread_setschedparam|
  6991	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]          |                             |(GLIBC_2.0)[12]      |
  6992	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  6993	|pthread_attr_getguardsize   |pthread_attr_setstacksize|pthread_getspecific      |pthread_rwlock_destroy       |pthread_setspecific  |
  6994	|(GLIBC_2.1)[12]             |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]              |(GLIBC_2.1)[12]      |
  6995	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  6996	|pthread_attr_getinheritsched|pthread_cancel(GLIBC_2.0)|pthread_join(GLIBC_2.0)  |pthread_rwlock_init          |pthread_sigmask      |
  6997	|(GLIBC_2.0)[12]             |[12]                     |[12]                     |(GLIBC_2.0)[12]              |(GLIBC_2.0)[12]      |
  6998	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  6999	|pthread_attr_getschedparam  |pthread_cond_broadcast   |pthread_key_create       |pthread_rwlock_rdlock        |pthread_testcancel   |
  7000	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |(GLIBC_2.0)[12]      |
  7001	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7002	|pthread_attr_getschedpolicy |pthread_cond_destroy     |pthread_key_delete       |pthread_rwlock_tryrdlock     |sem_close(GLIBC_2.0) |
  7003	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |[12]                 |
  7004	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7005	|pthread_attr_getscope       |pthread_cond_init        |pthread_kill(GLIBC_2.0)  |pthread_rwlock_trywrlock     |sem_destroy          |
  7006	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |[12]                     |(GLIBC_2.0)[12]              |(GLIBC_2.0)[12]      |
  7007	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7008	|pthread_attr_getstackaddr   |pthread_cond_signal      |pthread_mutex_destroy    |pthread_rwlock_unlock        |sem_getvalue         |
  7009	|(GLIBC_2.1)[12]             |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]              |(GLIBC_2.1)[12]      |
  7010	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7011	|pthread_attr_getstacksize   |pthread_cond_timedwait   |pthread_mutex_init       |pthread_rwlock_wrlock        |sem_init(GLIBC_2.1)  |
  7012	|(GLIBC_2.1)[12]             |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]              |[12]                 |
  7013	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7014	|pthread_attr_init(GLIBC_2.1)|pthread_cond_wait        |pthread_mutex_lock       |pthread_rwlockattr_destroy   |sem_open(GLIBC_2.1)  |
  7015	|[12]                        |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]              |[12]                 |
  7016	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7017	|pthread_attr_setdetachstate |pthread_condattr_destroy |pthread_mutex_trylock    |pthread_rwlockattr_getpshared|sem_post(GLIBC_2.0)  |
  7018	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |[12]                 |
  7019	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7020	|pthread_attr_setguardsize   |pthread_condattr_init    |pthread_mutex_unlock     |pthread_rwlockattr_init      |sem_timedwait        |
  7021	|(GLIBC_2.1)[12]             |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]              |(GLIBC_2.1)[11]      |
  7022	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7023	|pthread_attr_setinheritsched|pthread_create(GLIBC_2.0)|pthread_mutexattr_destroy|pthread_rwlockattr_setpshared|sem_trywait          |
  7024	|(GLIBC_2.0)[12]             |[12]                     |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |(GLIBC_2.0)[12]      |
  7025	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7026	|pthread_attr_setschedparam  |pthread_detach(GLIBC_2.0)|pthread_mutexattr_gettype|pthread_self(GLIBC_2.0)[12]  |sem_unlink(GLIBC_2.0)|
  7027	|(GLIBC_2.0)[12]             |[12]                     |(GLIBC_2.0)[12]          |                             |[12]                 |
  7028	|----------------------------+-------------------------+-------------------------+-----------------------------+---------------------|
  7029	|pthread_attr_setschedpolicy |pthread_equal(GLIBC_2.0) |pthread_mutexattr_init   |pthread_setcancelstate       |sem_wait(GLIBC_2.0)  |
  7030	|(GLIBC_2.0)[12]             |[12]                     |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |[12]                 |
  7031	+------------------------------------------------------------------------------------------------------------------------------------+
  7032	-------------------------------------------------------------------------------
  7033	
  7034	Data Definitions for libpthread
  7035	
  7036	-------------------------------------------------------------------------------
  7037	
  7038	semaphore.h
  7039	
  7040	typedef struct
  7041	{
  7042	  struct __sem_lock;
  7043	  long status;
  7044	  int __sem_value;
  7045	  int spinlock;
  7046	  Unknown Type:".." __sem_waiting;
  7047	}
  7048	sem_t;
  7049	-------------------------------------------------------------------------------
  7050	
  7051	Interfaces for libdl
  7052	
  7053	Table 10-29. libdl Definition
  7054	
  7055	+--------------------+
  7056	|Library:|libdl      |
  7057	|--------+-----------|
  7058	|SONAME: |libdl.so.2 |
  7059	+--------------------+
  7060	
  7061	The behaviour of the interfaces in this library is specified by the following
  7062	Standards.
  7063	
  7064	Linux Standard Base[13]
  7065	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
  7066	(ISBN: 1-85912-181-0, C606)[14]
  7067	
  7068	-------------------------------------------------------------------------------
  7069	
  7070	Dynamic Loader
  7071	
  7072	Table 10-30. libdl - Dynamic Loader Function Interfaces
  7073	
  7074	+------------------------------------------------------------------------------+
  7075	|dladdr         |dlclose        |dlerror        |dlopen         |dlsym         |
  7076	|(GLIBC_2.0)[13]|(GLIBC_2.0)[14]|(GLIBC_2.0)[14]|(GLIBC_2.0)[14]|(GLIBC_2.0)   |
  7077	|               |               |               |               |[14]          |
  7078	+------------------------------------------------------------------------------+
  7079	-------------------------------------------------------------------------------
  7080	
  7081	Data Definitions for libdl
  7082	
  7083	-------------------------------------------------------------------------------
  7084	
  7085	Interface Definitions for libdl
  7086	
  7087	Table of Contents
  7088	dladdr ?? library routine for dynamic linking of object files
  7089	
  7090	dladdr
  7091	
  7092	Name
  7093	
  7094	dladdr -- library routine for dynamic linking of object files
  7095	
  7096	Synopsis
  7097	
  7098	cc ... -ldl ...
  7099	
  7100	#include <dlfcn.h>
  7101	
  7102	typedef struct {
  7103	             const char      *dli_fname;
  7104	             void            *dli_fbase;
  7105	             const char      *dli_sname;
  7106	             void            *dli_saddr;
  7107	} Dl_info;
  7108	
  7109	int dladdr(void *address, Dlinfo *dlip);
  7110	
  7111	Description
  7112	
  7113	This function implements the System V dynamic linking routines.
  7114	
  7115	The dladdr() function is the inverse of the dlsym() function. If the given
  7116	address is successfully located inside a module, dladdr() returns nonzero,
  7117	otherwise 0. On a successful return, the fields of dlip are filled in as
  7118	follows:
  7119	
  7120	dlifname
  7121	
  7122	    the pathname of the module
  7123	
  7124	dlifbase
  7125	
  7126	    the base address of the module
  7127	
  7128	dlisname
  7129	
  7130	    the name of the highest addressed symbol whose address precedes the given
  7131	    address
  7132	
  7133	dlifaddr
  7134	
  7135	    the address of that symbol
  7136	
  7137	Shared objects must be linked using the -shared option to the linker ld(1). The
  7138	linker flag -rpath may be used to add a directory to the default search path
  7139	for shared objects and shared libraries. The linker flag -E or the C compiler
  7140	flag -rdynamic should be used to cause the application to export its symbols to
  7141	the shared objects.
  7142	
  7143	Environment
  7144	
  7145	LD_LIBRARY_PATH
  7146	
  7147	    directory search-path for object files
  7148	
  7149	-------------------------------------------------------------------------------
  7150	
  7151	Interfaces for libcrypt
  7152	
  7153	Table 10-31. libcrypt Definition
  7154	
  7155	+-----------------------+
  7156	|Library:|libcrypt      |
  7157	|--------+--------------|
  7158	|SONAME: |libcrypt.so.1 |
  7159	+-----------------------+
  7160	
  7161	The behaviour of the interfaces in this library is specified by the following
  7162	Standards.
  7163	
  7164	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
  7165	(ISBN: 1-85912-181-0, C606)[15]
  7166	
  7167	-------------------------------------------------------------------------------
  7168	
  7169	Encryption
  7170	
  7171	Table 10-32. libcrypt - Encryption Function Interfaces
  7172	
  7173	+---------------------------------------------------------------------+
  7174	|crypt(GLIBC_2.0)[15]|encrypt(GLIBC_2.0)[15]|setkey(GLIBC_2.0)[15]| | |
  7175	+---------------------------------------------------------------------+
  7176	-------------------------------------------------------------------------------
  7177	
  7178	Data Definitions for libcrypt
  7179	
  7180	-------------------------------------------------------------------------------
  7181	
  7182	stdlib.h
  7183	
  7184	typedef struct
  7185	{
  7186	  long long quot;
  7187	  long long rem;
  7188	}
  7189	lldiv_t;
  7190	
  7191	typedef struct
  7192	{
  7193	  int quot;
  7194	  int rem;
  7195	}
  7196	div_t;
  7197	
  7198	typedef struct
  7199	{
  7200	  long quot;
  7201	  long rem;
  7202	}
  7203	ldiv_t;
  7204	
  7205	typedef int (*__compar_fn_t) ();
  7206	-------------------------------------------------------------------------------
  7207	
  7208	unistd.h
  7209	
  7210	typedef __ssize_t ssize_t;
  7211	
  7212	typedef __pid_t pid_t;
  7213	
  7214	typedef __off_t off_t;
  7215	-------------------------------------------------------------------------------
  7216	
  7217	Interfaces for librt
  7218	
  7219	The behaviour of the interfaces in this library is specified by the following
  7220	Standards.
  7221	
  7222	Large File Support[16]
  7223	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
  7224	(ISBN: 1-85912-181-0, C606)[17]
  7225	
  7226	-------------------------------------------------------------------------------
  7227	
  7228	Asynchronous I/O
  7229	
  7230	Table 10-33. librt - Asynchronous I/O Function Interfaces
  7231	
  7232	+-----------------------------------------------------------------------------+
  7233	|aio_cancel   |aio_fsync64  |aio_suspend        |clock_getres   |lio_listio64 |
  7234	|(GLIBC_2.1)  |(GLIBC_2.1)  |(GLIBC_2.1)[17]    |(GLIBC_2.1)[17]|(GLIBC_2.1)  |
  7235	|[17]         |[16]         |                   |               |[16]         |
  7236	|-------------+-------------+-------------------+---------------+-------------|
  7237	|aio_cancel64 |aio_read     |aio_suspend64      |clock_gettime  |shm_open     |
  7238	|(GLIBC_2.1)  |(GLIBC_2.1)  |(GLIBC_2.1)[16]    |(GLIBC_2.1)[17]|(GLIBC_2.1)  |
  7239	|[16]         |[17]         |                   |               |[17]         |
  7240	|-------------+-------------+-------------------+---------------+-------------|
  7241	|aio_error    |aio_read64   |aio_write          |clock_nanosleep|shm_unlink   |
  7242	|(GLIBC_2.1)  |(GLIBC_2.1)  |(GLIBC_2.1)[17]    |(GLIBC_2.1)[17]|(GLIBC_2.1)  |
  7243	|[17]         |[16]         |                   |               |[17]         |
  7244	|-------------+-------------+-------------------+---------------+-------------|
  7245	|aio_error64  |aio_return   |aio_write64        |clock_settime  |             |
  7246	|(GLIBC_2.1)  |(GLIBC_2.1)  |(GLIBC_2.1)[16]    |(GLIBC_2.1)[17]|             |
  7247	|[16]         |[17]         |                   |               |             |
  7248	|-------------+-------------+-------------------+---------------+-------------|
  7249	|aio_fsync    |aio_return64 |clock_getcpuclockid|lio_listio     |             |
  7250	|(GLIBC_2.1)  |(GLIBC_2.1)  |(GLIBC_2.1)[17]    |(GLIBC_2.1)[17]|             |
  7251	|[17]         |[16]         |                   |               |             |
  7252	+-----------------------------------------------------------------------------+
  7253	-------------------------------------------------------------------------------
  7254	
  7255	Data Definitions for librt
  7256	
  7257	-------------------------------------------------------------------------------
  7258	
  7259	aio.h
  7260	
  7261	struct aiocb
  7262	{
  7263	  int aio_fildes;
  7264	  int aio_lio_opcode;
  7265	  int aio_reqprio;
  7266	  void *aio_buf;
  7267	  size_t aio_nbytes;
  7268	  struct sigevent aio_sigevent;
  7269	  struct aiocb *__next_prio;
  7270	  int __abs_prio;
  7271	  int __policy;
  7272	  int __error_code;
  7273	  __ssize_t __return_value;
  7274	  __off_t aio_offset;
  7275	  char __pad[1];
  7276	  char __unused[1];
  7277	}
  7278	 ;
  7279	
  7280	struct aiocb64
  7281	{
  7282	  int aio_fildes;
  7283	  int aio_lio_opcode;
  7284	  int aio_reqprio;
  7285	  void *aio_buf;
  7286	  size_t aio_nbytes;
  7287	  struct sigevent aio_sigevent;
  7288	  struct aiocb *__next_prio;
  7289	  int __abs_prio;
  7290	  int __policy;
  7291	  int __error_code;
  7292	  __ssize_t __return_value;
  7293	  __off64_t aio_offset;
  7294	  char __unused[1];
  7295	}
  7296	 ;
  7297	
  7298	V. Utility Libraries
  7299	
  7300	Table of Contents
  7301	11. Libraries
  7302	
  7303	-------------------------------------------------------------------------------
  7304	
  7305	Chapter 11. Libraries
  7306	
  7307	An LSB-conforming implementation may also support some utility libraries which
  7308	are built on top of the interfaces provided by the base libraries. These
  7309	libraries implement common functionality, and hide additional system dependent
  7310	information such as file formats and device names.
  7311	
  7312	-------------------------------------------------------------------------------
  7313	
  7314	Interfaces for libz
  7315	
  7316	Table 11-1. libz Definition
  7317	
  7318	+-------------------+
  7319	|Library:|libz      |
  7320	|--------+----------|
  7321	|SONAME: |libz.so.1 |
  7322	+-------------------+
  7323	
  7324	The behaviour of the interfaces in this library is specified by the following
  7325	Standards.
  7326	
  7327	zlib 1.1.3 Manual[18]
  7328	
  7329	-------------------------------------------------------------------------------
  7330	
  7331	Compression Library
  7332	
  7333	Table 11-2. libz - Compression Library Function Interfaces
  7334	
  7335	+-----------------------------------------------------------------------------+
  7336	|adler32[18]  |deflateInit_[18]    |gzerror  |gzread[18] |inflateInit2_[18]   |
  7337	|             |                    |[18]     |           |                    |
  7338	|-------------+--------------------+---------+-----------+--------------------|
  7339	|compress[18] |deflateParams[18]   |gzflush  |gzrewind   |inflateInit_[18]    |
  7340	|             |                    |[18]     |[18]       |                    |
  7341	|-------------+--------------------+---------+-----------+--------------------|
  7342	|compress2[18]|deflateReset[18]    |gzgetc   |gzseek[18] |inflateReset[18]    |
  7343	|             |                    |[18]     |           |                    |
  7344	|-------------+--------------------+---------+-----------+--------------------|
  7345	|crc32[18]    |deflateSetDictionary|gzgets   |gzsetparams|inflateSetDictionary|
  7346	|             |[18]                |[18]     |[18]       |[18]                |
  7347	|-------------+--------------------+---------+-----------+--------------------|
  7348	|deflate[18]  |get_crc_table[18]   |gzopen   |gztell[18] |inflateSync[18]     |
  7349	|             |                    |[18]     |           |                    |
  7350	|-------------+--------------------+---------+-----------+--------------------|
  7351	|deflateCopy  |gzclose[18]         |gzprintf |gzwrite[18]|inflateSyncPoint[18]|
  7352	|[18]         |                    |[18]     |           |                    |
  7353	|-------------+--------------------+---------+-----------+--------------------|
  7354	|deflateEnd   |gzdopen[18]         |gzputc   |inflate[18]|uncompress[18]      |
  7355	|[18]         |                    |[18]     |           |                    |
  7356	|-------------+--------------------+---------+-----------+--------------------|
  7357	|deflateInit2_|gzeof[18]           |gzputs   |inflateEnd |zError[18]          |
  7358	|[18]         |                    |[18]     |[18]       |                    |
  7359	+-----------------------------------------------------------------------------+
  7360	-------------------------------------------------------------------------------
  7361	
  7362	Interfaces for libncurses
  7363	
  7364	Table 11-3. libncurses Definition
  7365	
  7366	+-------------------------+
  7367	|Library:|libncurses      |
  7368	|--------+----------------|
  7369	|SONAME: |libncurses.so.5 |
  7370	+-------------------------+
  7371	
  7372	The behaviour of the interfaces in this library is specified by the following
  7373	Standards.
  7374	
  7375	CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:
  7376	1-85912-171-3, C610), plus Corrigendum U018[19]
  7377	
  7378	-------------------------------------------------------------------------------
  7379	
  7380	Curses
  7381	
  7382	Table 11-4. libncurses - Curses Function Interfaces
  7383	
  7384	+-----------------------------------------------------------------------------+
  7385	|addch[19]       |has_ic[19]    |mvwaddch[19]    |scr_dump[19]   |waddchstr   |
  7386	|                |              |                |               |[19]        |
  7387	|----------------+--------------+----------------+---------------+------------|
  7388	|addchnstr[19]   |has_il[19]    |mvwaddchnstr[19]|scr_init[19]   |waddnstr[19]|
  7389	|----------------+--------------+----------------+---------------+------------|
  7390	|addchstr[19]    |hline[19]     |mvwaddchstr[19] |scr_restore[19]|waddstr[19] |
  7391	|----------------+--------------+----------------+---------------+------------|
  7392	|addnstr[19]     |idcok[19]     |mvwaddnstr[19]  |scr_set[19]    |wattr_get   |
  7393	|                |              |                |               |[19]        |
  7394	|----------------+--------------+----------------+---------------+------------|
  7395	|addstr[19]      |idlok[19]     |mvwaddstr[19]   |scrl[19]       |wattr_off   |
  7396	|                |              |                |               |[19]        |
  7397	|----------------+--------------+----------------+---------------+------------|
  7398	|attr_get[19]    |immedok[19]   |mvwchgat[19]    |scroll[19]     |wattr_on[19]|
  7399	|----------------+--------------+----------------+---------------+------------|
  7400	|attr_off[19]    |inch[19]      |mvwdelch[19]    |scrollok[19]   |wattr_set   |
  7401	|                |              |                |               |[19]        |
  7402	|----------------+--------------+----------------+---------------+------------|
  7403	|attr_on[19]     |inchnstr[19]  |mvwgetch[19]    |set_term[19]   |wattroff[19]|
  7404	|----------------+--------------+----------------+---------------+------------|
  7405	|attr_set[19]    |inchstr[19]   |mvwgetnstr[19]  |setscrreg[19]  |wattron[19] |
  7406	|----------------+--------------+----------------+---------------+------------|
  7407	|attroff[19]     |init_color[19]|mvwgetstr[19]   |slk_attr_set   |wattrset[19]|
  7408	|                |              |                |[19]           |            |
  7409	|----------------+--------------+----------------+---------------+------------|
  7410	|attron[19]      |init_pair[19] |mvwhline[19]    |slk_attroff[19]|wbkgd[19]   |
  7411	|----------------+--------------+----------------+---------------+------------|
  7412	|attrset[19]     |initscr[19]   |mvwin[19]       |slk_attron[19] |wbkgdset[19]|
  7413	|----------------+--------------+----------------+---------------+------------|
  7414	|baudrate[19]    |innstr[19]    |mvwinch[19]     |slk_attrset[19]|wborder[19] |
  7415	|----------------+--------------+----------------+---------------+------------|
  7416	|beep[19]        |insch[19]     |mvwinchnstr[19] |slk_clear[19]  |wchgat[19]  |
  7417	|----------------+--------------+----------------+---------------+------------|
  7418	|bkgd[19]        |insdelln[19]  |mvwinchstr[19]  |slk_color[19]  |wclear[19]  |
  7419	|----------------+--------------+----------------+---------------+------------|
  7420	|bkgdset[19]     |insertln[19]  |mvwinnstr[19]   |slk_init[19]   |wclrtobot   |
  7421	|                |              |                |               |[19]        |
  7422	|----------------+--------------+----------------+---------------+------------|
  7423	|border[19]      |insnstr[19]   |mvwinsch[19]    |slk_label[19]  |wclrtoeol   |
  7424	|                |              |                |               |[19]        |
  7425	|----------------+--------------+----------------+---------------+------------|
  7426	|box[19]         |insstr[19]    |mvwinsnstr[19]  |slk_noutrefresh|wcolor_set  |
  7427	|                |              |                |[19]           |[19]        |
  7428	|----------------+--------------+----------------+---------------+------------|
  7429	|can_change_color|instr[19]     |mvwinsstr[19]   |slk_refresh[19]|wcursyncup  |
  7430	|[19]            |              |                |               |[19]        |
  7431	|----------------+--------------+----------------+---------------+------------|
  7432	|cbreak[19]      |intrflush[19] |mvwinstr[19]    |slk_restore[19]|wdelch[19]  |
  7433	|----------------+--------------+----------------+---------------+------------|
  7434	|chgat[19]       |is_linetouched|mvwprintw[19]   |slk_set[19]    |wdeleteln   |
  7435	|                |[19]          |                |               |[19]        |
  7436	|----------------+--------------+----------------+---------------+------------|
  7437	|clear[19]       |is_wintouched |mvwscanw[19]    |slk_touch[19]  |wechochar   |
  7438	|                |[19]          |                |               |[19]        |
  7439	|----------------+--------------+----------------+---------------+------------|
  7440	|clearok[19]     |isendwin[19]  |mvwvline[19]    |standend[19]   |werase[19]  |
  7441	|----------------+--------------+----------------+---------------+------------|
  7442	|clrtobot[19]    |keyname[19]   |napms[19]       |standout[19]   |wgetch[19]  |
  7443	|----------------+--------------+----------------+---------------+------------|
  7444	|clrtoeol[19]    |keypad[19]    |newpad[19]      |start_color[19]|wgetnstr[19]|
  7445	|----------------+--------------+----------------+---------------+------------|
  7446	|color_content   |killchar[19]  |newterm[19]     |subpad[19]     |wgetstr[19] |
  7447	|[19]            |              |                |               |            |
  7448	|----------------+--------------+----------------+---------------+------------|
  7449	|color_set[19]   |leaveok[19]   |newwin[19]      |subwin[19]     |whline[19]  |
  7450	|----------------+--------------+----------------+---------------+------------|
  7451	|copywin[19]     |longname[19]  |nl[19]          |syncok[19]     |winch[19]   |
  7452	|----------------+--------------+----------------+---------------+------------|
  7453	|curs_set[19]    |meta[19]      |nocbreak[19]    |termattrs[19]  |winchnstr   |
  7454	|                |              |                |               |[19]        |
  7455	|----------------+--------------+----------------+---------------+------------|
  7456	|def_prog_mode   |move[19]      |nodelay[19]     |termname[19]   |winchstr[19]|
  7457	|[19]            |              |                |               |            |
  7458	|----------------+--------------+----------------+---------------+------------|
  7459	|def_shell_mode  |mvaddch[19]   |noecho[19]      |tgetent[19]    |winnstr[19] |
  7460	|[19]            |              |                |               |            |
  7461	|----------------+--------------+----------------+---------------+------------|
  7462	|delay_output[19]|mvaddchnstr   |nonl[19]        |tgetflag[19]   |winsch[19]  |
  7463	|                |[19]          |                |               |            |
  7464	|----------------+--------------+----------------+---------------+------------|
  7465	|delch[19]       |mvaddchstr[19]|noqiflush[19]   |tgetnum[19]    |winsdelln   |
  7466	|                |              |                |               |[19]        |
  7467	|----------------+--------------+----------------+---------------+------------|
  7468	|deleteln[19]    |mvaddnstr[19] |noraw[19]       |tgetstr[19]    |winsertln   |
  7469	|                |              |                |               |[19]        |
  7470	|----------------+--------------+----------------+---------------+------------|
  7471	|delscreen[19]   |mvaddstr[19]  |notimeout[19]   |tgoto[19]      |winsnstr[19]|
  7472	|----------------+--------------+----------------+---------------+------------|
  7473	|delwin[19]      |mvchgat[19]   |overlay[19]     |tigetflag[19]  |winsstr[19] |
  7474	|----------------+--------------+----------------+---------------+------------|
  7475	|derwin[19]      |mvcur[19]     |overwrite[19]   |tigetnum[19]   |winstr[19]  |
  7476	|----------------+--------------+----------------+---------------+------------|
  7477	|doupdate[19]    |mvdelch[19]   |pair_content[19]|tigetstr[19]   |wmove[19]   |
  7478	|----------------+--------------+----------------+---------------+------------|
  7479	|dupwin[19]      |mvderwin[19]  |pechochar[19]   |timeout[19]    |wnoutrefresh|
  7480	|                |              |                |               |[19]        |
  7481	|----------------+--------------+----------------+---------------+------------|
  7482	|echo[19]        |mvgetch[19]   |pnoutrefresh[19]|tparm[19]      |wprintw[19] |
  7483	|----------------+--------------+----------------+---------------+------------|
  7484	|echochar[19]    |mvgetnstr[19] |prefresh[19]    |tputs[19]      |wredrawln   |
  7485	|                |              |                |               |[19]        |
  7486	|----------------+--------------+----------------+---------------+------------|
  7487	|endwin[19]      |mvgetstr[19]  |printw[19]      |typeahead[19]  |wrefresh[19]|
  7488	|----------------+--------------+----------------+---------------+------------|
  7489	|erase[19]       |mvhline[19]   |putp[19]        |ungetch[19]    |wscanw[19]  |
  7490	|----------------+--------------+----------------+---------------+------------|
  7491	|erasechar[19]   |mvinch[19]    |putwin[19]      |untouchwin[19] |wscrl[19]   |
  7492	|----------------+--------------+----------------+---------------+------------|
  7493	|filter[19]      |mvinchnstr[19]|qiflush[19]     |use_env[19]    |wsetscrreg  |
  7494	|                |              |                |               |[19]        |
  7495	|----------------+--------------+----------------+---------------+------------|
  7496	|flash[19]       |mvinchstr[19] |raw[19]         |vidattr[19]    |wstandend   |
  7497	|                |              |                |               |[19]        |
  7498	|----------------+--------------+----------------+---------------+------------|
  7499	|flushinp[19]    |mvinnstr[19]  |redrawwin[19]   |vidputs[19]    |wstandout   |
  7500	|                |              |                |               |[19]        |
  7501	|----------------+--------------+----------------+---------------+------------|
  7502	|getbkgd[19]     |mvinsch[19]   |refresh[19]     |vline[19]      |wsyncdown   |
  7503	|                |              |                |               |[19]        |
  7504	|----------------+--------------+----------------+---------------+------------|
  7505	|getch[19]       |mvinsnstr[19] |reset_prog_mode |vw_printw[19]  |wsyncup[19] |
  7506	|                |              |[19]            |               |            |
  7507	|----------------+--------------+----------------+---------------+------------|
  7508	|getnstr[19]     |mvinsstr[19]  |reset_shell_mode|vw_scanw[19]   |wtimeout[19]|
  7509	|                |              |[19]            |               |            |
  7510	|----------------+--------------+----------------+---------------+------------|
  7511	|getstr[19]      |mvinstr[19]   |resetty[19]     |vwprintw[19]   |wtouchln[19]|
  7512	|----------------+--------------+----------------+---------------+------------|
  7513	|getwin[19]      |mvprintw[19]  |ripoffline[19]  |vwscanw[19]    |wvline[19]  |
  7514	|----------------+--------------+----------------+---------------+------------|
  7515	|halfdelay[19]   |mvscanw[19]   |savetty[19]     |waddch[19]     |            |
  7516	|----------------+--------------+----------------+---------------+------------|
  7517	|has_colors[19]  |mvvline[19]   |scanw[19]       |waddchnstr[19] |            |
  7518	+-----------------------------------------------------------------------------+
  7519	-------------------------------------------------------------------------------
  7520	
  7521	Data Symbols
  7522	
  7523	Table 11-5. libncurses - Curses Data Interfaces
  7524	
  7525	+---------------------------+
  7526	|curscr[19]|stdscr[19]| | | |
  7527	+---------------------------+
  7528	-------------------------------------------------------------------------------
  7529	
  7530	Data Definitions for libncurses
  7531	
  7532	-------------------------------------------------------------------------------
  7533	
  7534	curses.h
  7535	
  7536	typedef unsigned long chtype;
  7537	
  7538	typedef char bool;
  7539	
  7540	typedef chtype attr_t;
  7541	
  7542	typedef struct screen SCREEN;
  7543	
  7544	typedef struct _win_st
  7545	{
  7546	  short _cury;
  7547	  short _curx;
  7548	  short _maxy;
  7549	  short _maxx;
  7550	  short _begy;
  7551	  short _begx;
  7552	  short _flags;
  7553	  attr_t _attrs;
  7554	  chtype _bkgd;
  7555	  bool _notimeout;
  7556	  bool _clear;
  7557	  bool _leaveok;
  7558	  bool _scroll;
  7559	  bool _idlok;
  7560	  bool _idcok;
  7561	  bool _immed;
  7562	  bool _sync;
  7563	  bool _use_keypad;
  7564	  int _delay;
  7565	  struct ldat *_line;
  7566	  short _regtop;
  7567	  short _regbottom;
  7568	  int _parx;
  7569	  int _pary;
  7570	  struct _win_st *_parent;
  7571	}
  7572	WINDOW;
  7573	-------------------------------------------------------------------------------
  7574	
  7575	Interfaces for libutil
  7576	
  7577	The behaviour of the interfaces in this library is specified by the following
  7578	Standards.
  7579	
  7580	Linux Standard Base[20]
  7581	
  7582	-------------------------------------------------------------------------------
  7583	
  7584	Utility Functions
  7585	
  7586	Table 11-6. libutil - Utility Functions Function Interfaces
  7587	
  7588	+-----------------------------------------+
  7589	|forkpty[20]|login_tty[20]|logwtmp[20]| | |
  7590	|-----------+-------------+-----------+-+-|
  7591	|login[20]  |logout[20]   |openpty[20]| | |
  7592	+-----------------------------------------+
  7593	-------------------------------------------------------------------------------
  7594	
  7595	Interface Definitions for libutil
  7596	
  7597	Table of Contents
  7598	forkpty ?? find and open an available pseudo-tty
  7599	getopt ?? parse command line options
  7600	getutent_r ?? find and open an available pseudo-tty
  7601	getutid_r ?? find and open an available pseudo-tty
  7602	getutline_r ?? find and open an available pseudo-tty
  7603	login_tty ?? find and open an available pseudo-tty
  7604	login ?? login utility function
  7605	logout ?? logout utility function
  7606	mkfifo ?? make a FIFO special file
  7607	mknod ?? make a directory, a special or regular file
  7608	openpty ?? find and open an available pseudo-tty
  7609	
  7610	forkpty
  7611	
  7612	Name
  7613	
  7614	forkpty -- find and open an available pseudo-tty
  7615	
  7616	Synopsis
  7617	
  7618	int forkpty(int *amaster,
  7619	        char *name,
  7620	        struct termios *termp,
  7621	        struct winsize *winp);
  7622	
  7623	Description
  7624	
  7625	The forkpty() function joins openpty(), fork(), and login_tty() to create a new
  7626	process operating on a pseudo-tty. The file descriptor of the master side of
  7627	the pseudo-tty is returned in amaster, and null or the filename of the slave in
  7628	name. If non-null, the termp and winp parameters will determine the terminal
  7629	attributes and window size of the slave side of the pseudo-tty.
  7630	
  7631	Return Value
  7632	
  7633	On success of the child process, zero is returned. When the parent process
  7634	receives the PID of its child process, pid is returned. On error, -1 is
  7635	returned, and errno is set appropriately.
  7636	
  7637	getopt
  7638	
  7639	Name
  7640	
  7641	getopt -- parse command line options
  7642	
  7643	Synopsis
  7644	
  7645	int getopt(int argc, char * const argv[], const char *optstring);
  7646	extern char *optarg;
  7647	extern int optind, opterr, optopt;
  7648	
  7649	GNU supports the following extensions of getopt:
  7650	
  7651	int getopt_long(int argc, char * const argv[],
  7652	               const char *optstring,
  7653	               const struct option *longopts, int *longindex);
  7654	
  7655	int getopt_long_only(int argc, char * const argv[],
  7656	                    const char *optstring,
  7657	                    const struct option *longopts, int *longindex);
  7658	
  7659	Description
  7660	
  7661	The getopt() function parses command line arguments. GNU and POSIX
  7662	specifications for this function vary in the following areas.
  7663	
  7664	Option Characteristics
  7665	
  7666	GNU specifies that:
  7667	
  7668	  * an element of argv that starts with "-" (and is not exactly "-" or "--") is
  7669	    an option element.
  7670	
  7671	  * characters of an option element, aside from the initial "-", are option
  7672	    characters.
  7673	
  7674	POSIX specifies that:
  7675	
  7676	  * applications using getopt() must obey the following syntax guidelines:
  7677	
  7678	    (1) option name is a single alphanumeric character from the portable
  7679	    character set
  7680	
  7681	    (2) option is preceded by the "-" delimiter character
  7682	
  7683	    (3) options without option-arguments should be accepted when grouped behind
  7684	    one "-" delimiter
  7685	
  7686	    (4) each option and option-argument is a separate argument
  7687	
  7688	    (5) option-arguments are not optional
  7689	
  7690	    (6) all options should precede operands on the command line
  7691	
  7692	    (7) the argument "--" is accepted as a delimiter indicating the end of
  7693	    options and the consideration of subsequent arguments, if any, as operands
  7694	
  7695	  * historical implementations of getopt() support other characters as options
  7696	    as an allowed extension, but applications that use extensions are not
  7697	    maximally portable.
  7698	
  7699	  * support for multi-byte option characters is only possible when such
  7700	    characters can be represented as type int.
  7701	
  7702	  * applications that call any utility with a first operand starting with "-"
  7703	    should usually specify "--" to mark the end of the options. Standard
  7704	    utilities that do not support this guideline indicate that fact in the
  7705	    OPTIONS section of the utility description.
  7706	
  7707	Extensions
  7708	
  7709	GNU specifies that:
  7710	
  7711	  * if a character is followed by two colons, the option takes an optional arg;
  7712	    if there is text in the current argv-element, it is returned in optarg,
  7713	    otherwise optarg is set to zero.
  7714	
  7715	  * if optstring contains W followed by a semi-colon, then -W foo is treated as
  7716	    the long option --foo. (Not available with libraries before GNU libc 2.)
  7717	
  7718	  * getopt_long() works like getopt() except that it also accepts "long
  7719	    options", or, options that are preface with two dashes instead of one.
  7720	
  7721	  * long option names may be abbreviated if the abbreviation is unique or an
  7722	    exact match for some defined option.
  7723	
  7724	  * a long option may take a parameter, of the form --arg=param or --arg param.
  7725	
  7726	  * getopt_long_only() works like getopt_long(), except that both "-" and "--"
  7727	    indicate long option. If an option that starts with "-" (not "--") doesn't
  7728	    match a long option, but does match a short option, it is parsed instead as
  7729	    a short option.
  7730	
  7731	POSIX specifies that:
  7732	
  7733	  * the -W option is reserved for implementation extensions.
  7734	
  7735	Return Values
  7736	
  7737	GNU specifies the following getopt() return values:
  7738	
  7739	  * the next option character is returned, if found successfully.
  7740	
  7741	  * colon character (":") is returned if a parameter is missing for one of the
  7742	    options.
  7743	
  7744	  * question mark ("?") is returned if an unknown option character is
  7745	    encountered.
  7746	
  7747	  * "-1" is returned for the end of the option list.
  7748	
  7749	GNU specifies the following getopt_long() and getopt_long_only() return values:
  7750	
  7751	  * when short option is recognized, the option character is returned.
  7752	
  7753	  * when long option is recognized, val is returned if flag is NULL, otherwise,
  7754	    0 is returned.
  7755	
  7756	  * error and -1 returns are the same as for getopt().
  7757	
  7758	  * question mark ("?") is returned for an ambiguous match or an extraneous
  7759	    parameter.
  7760	
  7761	POSIX specifies the following getopt() return values:
  7762	
  7763	  * the next option character is returned, if found successfully.
  7764	
  7765	  * colon character (":") is returned if a parameter is missing for one of the
  7766	    options and the first character of opstring is ":".
  7767	
  7768	  * question mark ("?") is returned if an unknown option character not in
  7769	    optstring is encountered, or if getopt() detects a missing argument and the
  7770	    first character of optstring is not ":".
  7771	
  7772	  * "-1" is returned for the end of the option list.
  7773	
  7774	Environmental Variables
  7775	
  7776	GNU specifies that:
  7777	
  7778	  * if the variable POSIXLY_CORRECT is set, option processing stops as soon as
  7779	    a non-option argument is encountered.
  7780	
  7781	  * if POSIXLY_CORRECT is set, GNU getopt() conforms to POSIX.2.
  7782	
  7783	  * the variable _[PID]_GNU_nonoption_argv_flags_ was used by bash 2.0 to
  7784	    communicate to GNU libc which arguments resulted from wildcard expansion
  7785	    and so should not be considered as options. This behavior was removed in
  7786	    bash version 2.01, but the support remains in GNU libc.
  7787	
  7788	Environmental Variables
  7789	
  7790	POSIX.2 Interpretation 150 reports a technical error in the function of getopt
  7791	(). GNU implements the correct behavior of getopt().
  7792	
  7793	getutent_r
  7794	
  7795	Name
  7796	
  7797	getutent_r -- find and open an available pseudo-tty
  7798	
  7799	Synopsis
  7800	
  7801	int getutent_r(
  7802	struct utmp *buffer,
  7803	struct utmp **result);
  7804	
  7805	Description
  7806	
  7807	Same at described in getutent(3), but storing information in a user provided
  7808	buffer.
  7809	
  7810	getutid_r
  7811	
  7812	Name
  7813	
  7814	getutid_r -- find and open an available pseudo-tty
  7815	
  7816	Synopsis
  7817	
  7818	int getutid_r(
  7819	const struct utmp *id,
  7820	struct utmp *buffer,
  7821	struct utmp **result);
  7822	
  7823	Description
  7824	
  7825	Same at described in getutent(3), but storing information in a user provided
  7826	buffer.
  7827	
  7828	getutline_r
  7829	
  7830	Name
  7831	
  7832	getutline_r -- find and open an available pseudo-tty
  7833	
  7834	Synopsis
  7835	
  7836	int getutline_r(
  7837	const struct utmp *id,
  7838	struct utmp *buffer,
  7839	struct utmp **result);
  7840	
  7841	Description
  7842	
  7843	Same at described in getutent(3), but storing information in a user provided
  7844	buffer.
  7845	
  7846	login_tty
  7847	
  7848	Name
  7849	
  7850	login_tty -- find and open an available pseudo-tty
  7851	
  7852	Synopsis
  7853	
  7854	int login_tty(int fdr);
  7855	
  7856	Description
  7857	
  7858	The login_tty() function sets up for a login on the tty referenced by the file
  7859	descriptor fd: create a new session, make the tty for the current process the
  7860	controlling terminal, set the standard input, output, and error streams of the
  7861	current process, and closing fd.
  7862	
  7863	Return Value
  7864	
  7865	On success, zero is returned. On error, -1 is returned, and errno is set
  7866	appropriately.
  7867	
  7868	login
  7869	
  7870	Name
  7871	
  7872	login -- login utility function
  7873	
  7874	Synopsis
  7875	
  7876	void login(struct utmp *ut);
  7877	
  7878	Description
  7879	
  7880	The login() function updates the /var/run/utmp and /var/log/wtmp files with
  7881	user information contained in ut.
  7882	
  7883	logout
  7884	
  7885	Name
  7886	
  7887	logout -- logout utility function
  7888	
  7889	Synopsis
  7890	
  7891	int logout(const char *line);
  7892	
  7893	Description
  7894	
  7895	Given the device line, the logout() function removes the entry from the
  7896	corresponding /var/run/utmp system file.
  7897	
  7898	Return Value
  7899	
  7900	Zero is returned if there was no entry to remove. A non-zero return value
  7901	indicates success.
  7902	
  7903	mkfifo
  7904	
  7905	Name
  7906	
  7907	mkfifo -- make a FIFO special file
  7908	
  7909	Synopsis
  7910	
  7911	int mkfifo(const char *path, mode_t mode);
  7912	
  7913	Description
  7914	
  7915	The mkfifo() function attempts to create a FIFO special file named by the
  7916	pathname to which the argument path points. GNU and POSIX specifications for
  7917	this function vary in the following areas.
  7918	
  7919	Node Permissions
  7920	
  7921	Permissions are specified in the mode argument.
  7922	
  7923	GNU specifies that:
  7924	
  7925	  * permissions are modified by the process umask in the usual way: the
  7926	    permissions of the created node are (mode & ~umask).
  7927	
  7928	POSIX specifies that:
  7929	
  7930	  * file permission bits of the new FIFO are initialized from mode. The file
  7931	    permission bits of the mode argument are modified by the process file
  7932	    creation mask. When bits in mode other than the file permission bits are
  7933	    set, the effect is implementation-dependent.
  7934	
  7935	  * upon successful completion, mkfifo() marks for update the st_atime,
  7936	    st_ctime and st_mtime fields of the file. Also, the st_ctime and st_mtime
  7937	    fields of the directory that contains the new entry are marked for update.
  7938	
  7939	Errors
  7940	
  7941	POSIX specifies the following error conditions that are not reflected in GNU:
  7942	
  7943	  * ELOOP too many symbolic links were encountered in resolving path
  7944	
  7945	mknod
  7946	
  7947	Name
  7948	
  7949	mknod -- make a directory, a special or regular file
  7950	
  7951	Synopsis
  7952	
  7953	int mknod(const char *path, mode_t mode, dev_t dev);
  7954	
  7955	Description
  7956	
  7957	The mknod() function attempts to create a filesystem node named by the pathname
  7958	to which the argument path points. GNU and POSIX specifications for this
  7959	function vary in the following areas.
  7960	
  7961	Node Type
  7962	
  7963	Node type is specified in the mode argument (using the bitwise OR) from the
  7964	symb olic constants S_IFREG, S_IFCHR, S_IFBLK, and S_IFIFO.
  7965	
  7966	GNU specifies that:
  7967	
  7968	  * a node type specified as zero behaves as S_IFREG.
  7969	
  7970	  * for the node types S_IFCHR and S_IFBLK, dev specifies the major and minor
  7971	    numbers of the newly created device special file.
  7972	
  7973	POSIX specifies that:
  7974	
  7975	  * S_IFDIR may additionally be used to create a directory file.
  7976	
  7977	  * S_IFIFO is the only portable use of mknod().
  7978	
  7979	  * if mode is not S_IFIFO or dev is not 0, the behavior of mknod() is
  7980	    unspecified.
  7981	
  7982	Node Permissions
  7983	
  7984	Permissions are specified in the mode argument.
  7985	
  7986	GNU specifies that:
  7987	
  7988	  * permissions are modified by the process umask in the usual way: the
  7989	    permissions of the created node are (mode & ~umask).
  7990	
  7991	POSIX specifies that:
  7992	
  7993	  * the mode argument specifies node permissions (using the bitwise OR) from
  7994	    the following symbolic constants: S_ISUID set user ID on execution S_ISGID
  7995	    set group ID on execution S_IRWXU read, write or execute (search) by owner
  7996	    S_IRUSR read by owner S_IWUSR write by owner S_IXUSR execute (search) by
  7997	    owner S_IRWXG read, write or execute (search) by group S_IRGRP read by
  7998	    group S_IWGRP write by group S_IXGRP execute (search) by group S_IRWXO
  7999	    read, write or execute (search) by others S_IROTH read by others S_IWOTH
  8000	    write by others S_IXOTH execute (search) by others S_ISVTX on directories,
  8001	    restricted deletion flag
  8002	
  8003	  * owner, group, and other permission bits of mode are modified by the file
  8004	    mode creation mask of the process. The mknod() function clears each bit
  8005	    whose corresponding bit in the file mode creation mask of the process is
  8006	    set.
  8007	
  8008	  * upon successful completion, mknod() marks for update the st_atime, st_ctime
  8009	    and st_mtime fields of the file. Also, the st_ctime and st_mtime fields of
  8010	    the directory that contains the new entry are marked for update.
  8011	
  8012	Errors
  8013	
  8014	GNU specifies the following error conditions that are not reflected in POSIX:
  8015	
  8016	  * EFAULT pathname points outside your accessible address space
  8017	
  8018	  * ENOMEM insufficient kernel memory was available
  8019	
  8020	POSIX specifies the following error conditions that are not reflected in GNU:
  8021	
  8022	  * EIO an I/O error occurred while accessing the file system
  8023	
  8024	openpty
  8025	
  8026	Name
  8027	
  8028	openpty -- find and open an available pseudo-tty
  8029	
  8030	Synopsis
  8031	
  8032	int openpty(int *amaster,
  8033	        int *aslave,
  8034	        char *name,
  8035	        struct termios *termp,
  8036	        struct winsize *winp);
  8037	
  8038	Description
  8039	
  8040	The openpty() function finds an available pseudo-tty and returns file
  8041	descriptors for the amaster and aslave. The filename of the slave is returned
  8042	in name, otherwise a null. The terminal parameters of the slave will be set to
  8043	the values in termp, otherwise a null. The window size of the slave will be set
  8044	to the values in winp, otherwise a null.
  8045	
  8046	Return Value
  8047	
  8048	On success, zero is returned. On error, -1 is returned, and errno is set
  8049	appropriately.
  8050	
  8051	Errors
  8052	
  8053	ENOENT
  8054	
  8055	    There are no available ttys.
  8056	
  8057	VI. Graphic Libraries
  8058	
  8059	Table of Contents
  8060	12. Libraries
  8061	
  8062	-------------------------------------------------------------------------------
  8063	
  8064	Chapter 12. Libraries
  8065	
  8066	The X Libraries should be built thread-safe.
  8067	
  8068	-------------------------------------------------------------------------------
  8069	
  8070	Interfaces for libX11
  8071	
  8072	Table 12-1. libX11 Definition
  8073	
  8074	+---------------------+
  8075	|Library:|libX11      |
  8076	|--------+------------|
  8077	|SONAME: |libX11.so.6 |
  8078	+---------------------+
  8079	
  8080	The behaviour of the interfaces in this library is specified by the following
  8081	Standards.
  8082	
  8083	X11R6.4 Xlib - C library[21]
  8084	
  8085	-------------------------------------------------------------------------------
  8086	
  8087	X Windows Interface
  8088	
  8089	Table 12-2. libX11 - X Windows Interface Function Interfaces
  8090	
  8091	+---------------------------------------------------------------------------------------------------------------------------------------------------+
  8092	|XActivateScreenSaver[21]    |XEmptyRegion[21]          |XOpenDisplay[21]              |XTextWidth16[21]                |XkbFreeCompatMap[21]       |
  8093	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8094	|XAddConnectionWatch[21]     |XEnableAccessControl[21]  |XOpenIM[21]                   |XTranslateCoordinates[21]       |XkbFreeComponentList[21]   |
  8095	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8096	|XAddExtension[21]           |XEqualRegion[21]          |XOpenOM[21]                   |XUndefineCursor[21]             |XkbFreeControls[21]        |
  8097	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8098	|XAddHost[21]                |XEventMaskOfScreen[21]    |XParseColor[21]               |XUngrabButton[21]               |XkbFreeGeomColors[21]      |
  8099	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8100	|XAddHosts[21]               |XEventsQueued[21]         |XParseGeometry[21]            |XUngrabKey[21]                  |XkbFreeGeomDoodads[21]     |
  8101	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8102	|XAddPixel[21]               |XExtendedMaxRequestSize   |XPeekEvent[21]                |XUngrabKeyboard[21]             |XkbFreeGeomKeyAliases[21]  |
  8103	|                            |[21]                      |                              |                                |                           |
  8104	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8105	|XAddToExtensionList[21]     |XExtentsOfFontSet[21]     |XPeekIfEvent[21]              |XUngrabPointer[21]              |XkbFreeGeomKeys[21]        |
  8106	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8107	|XAddToSaveSet[21]           |XFetchBuffer[21]          |XPending[21]                  |XUngrabServer[21]               |XkbFreeGeomOutlines[21]    |
  8108	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8109	|XAllPlanes[21]              |XFetchBytes[21]           |XPlanesOfScreen[21]           |XUninstallColormap[21]          |XkbFreeGeomOverlayKeys[21] |
  8110	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8111	|XAllocClassHint[21]         |XFetchName[21]            |XPointInRegion[21]            |XUnionRectWithRegion[21]        |XkbFreeGeomOverlayRows[21] |
  8112	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8113	|XAllocColor[21]             |XFillArc[21]              |XPolygonRegion[21]            |XUnionRegion[21]                |XkbFreeGeomOverlays[21]    |
  8114	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8115	|XAllocColorCells[21]        |XFillArcs[21]             |XProcessInternalConnection[21]|XUnloadFont[21]                 |XkbFreeGeomPoints[21]      |
  8116	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8117	|XAllocColorPlanes[21]       |XFillPolygon[21]          |XProtocolRevision[21]         |XUnlockDisplay[21]              |XkbFreeGeomProperties[21]  |
  8118	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8119	|XAllocIconSize[21]          |XFillRectangle[21]        |XProtocolVersion[21]          |XUnmapSubwindows[21]            |XkbFreeGeomRows[21]        |
  8120	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8121	|XAllocNamedColor[21]        |XFillRectangles[21]       |XPutBackEvent[21]             |XUnmapWindow[21]                |XkbFreeGeomSections[21]    |
  8122	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8123	|XAllocSizeHints[21]         |XFilterEvent[21]          |XPutImage[21]                 |XUnregisterIMInstantiateCallback|XkbFreeGeomShapes[21]      |
  8124	|                            |                          |                              |[21]                            |                           |
  8125	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8126	|XAllocStandardColormap[21]  |XFindContext[21]          |XPutPixel[21]                 |XUnsetICFocus[21]               |XkbFreeGeometry[21]        |
  8127	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8128	|XAllocWMHints[21]           |XFindOnExtensionList[21]  |XQLength[21]                  |XVaCreateNestedList[21]         |XkbFreeIndicatorMaps[21]   |
  8129	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8130	|XAllowEvents[21]            |XFlush[21]                |XQueryBestCursor[21]          |XVendorRelease[21]              |XkbFreeKeyboard[21]        |
  8131	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8132	|XAutoRepeatOff[21]          |XFlushGC[21]              |XQueryBestSize[21]            |XVisualIDFromVisual[21]         |XkbFreeNames[21]           |
  8133	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8134	|XAutoRepeatOn[21]           |XFontsOfFontSet[21]       |XQueryBestStipple[21]         |XWMGeometry[21]                 |XkbFreeServerMap[21]       |
  8135	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8136	|XBaseFontNameListOfFontSet  |XForceScreenSaver[21]     |XQueryBestTile[21]            |XWarpPointer[21]                |XkbGetAutoRepeatRate[21]   |
  8137	|[21]                        |                          |                              |                                |                           |
  8138	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8139	|XBell[21]                   |XFree[21]                 |XQueryColor[21]               |XWhitePixel[21]                 |XkbGetCompatMap[21]        |
  8140	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8141	|XBitmapBitOrder[21]         |XFreeColormap[21]         |XQueryColors[21]              |XWhitePixelOfScreen[21]         |XkbGetControls[21]         |
  8142	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8143	|XBitmapPad[21]              |XFreeColors[21]           |XQueryExtension[21]           |XWidthMMOfScreen[21]            |XkbGetGeometry[21]         |
  8144	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8145	|XBitmapUnit[21]             |XFreeCursor[21]           |XQueryFont[21]                |XWidthOfScreen[21]              |XkbGetIndicatorMap[21]     |
  8146	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8147	|XBlackPixel[21]             |XFreeExtensionList[21]    |XQueryKeymap[21]              |XWindowEvent[21]                |XkbGetIndicatorState[21]   |
  8148	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8149	|XBlackPixelOfScreen[21]     |XFreeFont[21]             |XQueryPointer[21]             |XWithdrawWindow[21]             |XkbGetKeyActions[21]       |
  8150	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8151	|XCellsOfScreen[21]          |XFreeFontInfo[21]         |XQueryTextExtents[21]         |XWriteBitmapFile[21]            |XkbGetKeyBehaviors[21]     |
  8152	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8153	|XChangeActivePointerGrab[21]|XFreeFontNames[21]        |XQueryTextExtents16[21]       |XXorRegion[21]                  |XkbGetKeyExplicitComponents|
  8154	|                            |                          |                              |                                |[21]                       |
  8155	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8156	|XChangeGC[21]               |XFreeFontPath[21]         |XQueryTree[21]                |XauDisposeAuth[21]              |XkbGetKeyModifierMap[21]   |
  8157	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8158	|XChangeKeyboardControl[21]  |XFreeFontSet[21]          |XRaiseWindow[21]              |XauFileName[21]                 |XkbGetKeySyms[21]          |
  8159	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8160	|XChangeKeyboardMapping[21]  |XFreeGC[21]               |XReadBitmapFile[21]           |XauGetBestAuthByAddr[21]        |XkbGetKeyTypes[21]         |
  8161	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8162	|XChangePointerControl[21]   |XFreeModifiermap[21]      |XReadBitmapFileData[21]       |XauReadAuth[21]                 |XkbGetKeyVirtualModMap[21] |
  8163	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8164	|XChangeProperty[21]         |XFreePixmap[21]           |XRebindKeysym[21]             |XcmsAddColorSpace[21]           |XkbGetKeyboard[21]         |
  8165	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8166	|XChangeSaveSet[21]          |XFreeStringList[21]       |XRecolorCursor[21]            |XcmsAddFunctionSet[21]          |XkbGetKeyboardByName[21]   |
  8167	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8168	|XChangeWindowAttributes[21] |XGContextFromGC[21]       |XReconfigureWMWindow[21]      |XcmsAllocColor[21]              |XkbGetMap[21]              |
  8169	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8170	|XCheckIfEvent[21]           |XGeometry[21]             |XRectInRegion[21]             |XcmsAllocNamedColor[21]         |XkbGetMapChanges[21]       |
  8171	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8172	|XCheckMaskEvent[21]         |XGetAtomName[21]          |XRefreshKeyboardMapping[21]   |XcmsCCCOfColormap[21]           |XkbGetNamedGeometry[21]    |
  8173	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8174	|XCheckTypedEvent[21]        |XGetAtomNames[21]         |XRegisterIMInstantiateCallback|XcmsCIELabClipL[21]             |XkbGetNamedIndicator[21]   |
  8175	|                            |                          |[21]                          |                                |                           |
  8176	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8177	|XCheckTypedWindowEvent[21]  |XGetClassHint[21]         |XRemoveConnectionWatch[21]    |XcmsCIELabClipLab[21]           |XkbGetNames[21]            |
  8178	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8179	|XCheckWindowEvent[21]       |XGetCommand[21]           |XRemoveFromSaveSet[21]        |XcmsCIELabClipab[21]            |XkbGetState[21]            |
  8180	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8181	|XCirculateSubwindows[21]    |XGetDefault[21]           |XRemoveHost[21]               |XcmsCIELabQueryMaxC[21]         |XkbGetUpdatedMap[21]       |
  8182	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8183	|XCirculateSubwindowsDown[21]|XGetErrorDatabaseText[21] |XRemoveHosts[21]              |XcmsCIELabQueryMaxL[21]         |XkbGetVirtualMods[21]      |
  8184	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8185	|XCirculateSubwindowsUp[21]  |XGetErrorText[21]         |XReparentWindow[21]           |XcmsCIELabQueryMaxLC[21]        |XkbGetXlibControls[21]     |
  8186	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8187	|XClearArea[21]              |XGetFontPath[21]          |XResetScreenSaver[21]         |XcmsCIELabQueryMinL[21]         |XkbIgnoreExtension[21]     |
  8188	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8189	|XClearWindow[21]            |XGetFontProperty[21]      |XResizeWindow[21]             |XcmsCIELabToCIEXYZ[21]          |XkbInitCanonicalKeyTypes   |
  8190	|                            |                          |                              |                                |[21]                       |
  8191	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8192	|XClipBox[21]                |XGetGCValues[21]          |XResourceManagerString[21]    |XcmsCIELabWhiteShiftColors[21]  |XkbKeyTypesForCoreSymbols  |
  8193	|                            |                          |                              |                                |[21]                       |
  8194	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8195	|XCloseDisplay[21]           |XGetGeometry[21]          |XRestackWindows[21]           |XcmsCIELuvClipL[21]             |XkbKeycodeToKeysym[21]     |
  8196	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8197	|XCloseIM[21]                |XGetICValues[21]          |XRootWindow[21]               |XcmsCIELuvClipLuv[21]           |XkbKeysymToModifiers[21]   |
  8198	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8199	|XCloseOM[21]                |XGetIMValues[21]          |XRootWindowOfScreen[21]       |XcmsCIELuvClipuv[21]            |XkbLatchGroup[21]          |
  8200	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8201	|XConfigureWindow[21]        |XGetIconName[21]          |XRotateBuffers[21]            |XcmsCIELuvQueryMaxC[21]         |XkbLatchModifiers[21]      |
  8202	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8203	|XConnectionNumber[21]       |XGetIconSizes[21]         |XRotateWindowProperties[21]   |XcmsCIELuvQueryMaxL[21]         |XkbLibraryVersion[21]      |
  8204	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8205	|XContextDependentDrawing[21]|XGetImage[21]             |XSaveContext[21]              |XcmsCIELuvQueryMaxLC[21]        |XkbListComponents[21]      |
  8206	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8207	|XContextualDrawing[21]      |XGetInputFocus[21]        |XScreenCount[21]              |XcmsCIELuvQueryMinL[21]         |XkbLockGroup[21]           |
  8208	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8209	|XConvertCase[21]            |XGetKeyboardControl[21]   |XScreenNumberOfScreen[21]     |XcmsCIELuvToCIEuvY[21]          |XkbLockModifiers[21]       |
  8210	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8211	|XConvertSelection[21]       |XGetKeyboardMapping[21]   |XScreenOfDisplay[21]          |XcmsCIELuvWhiteShiftColors[21]  |XkbLookupKeyBinding[21]    |
  8212	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8213	|XCopyArea[21]               |XGetModifierMapping[21]   |XScreenResourceString[21]     |XcmsCIEXYZToCIELab[21]          |XkbLookupKeySym[21]        |
  8214	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8215	|XCopyColormapAndFree[21]    |XGetMotionEvents[21]      |XSelectInput[21]              |XcmsCIEXYZToCIEuvY[21]          |XkbNoteControlsChanges[21] |
  8216	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8217	|XCopyGC[21]                 |XGetNormalHints[21]       |XSendEvent[21]                |XcmsCIEXYZToCIExyY[21]          |XkbNoteMapChanges[21]      |
  8218	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8219	|XCopyPlane[21]              |XGetOCValues[21]          |XServerVendor[21]             |XcmsCIEXYZToRGBi[21]            |XkbNoteNameChanges[21]     |
  8220	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8221	|XCreateBitmapFromData[21]   |XGetOMValues[21]          |XSetAccessControl[21]         |XcmsCIEuvYToCIELuv[21]          |XkbOpenDisplay[21]         |
  8222	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8223	|XCreateColormap[21]         |XGetPixel[21]             |XSetAfterFunction[21]         |XcmsCIEuvYToCIEXYZ[21]          |XkbQueryExtension[21]      |
  8224	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8225	|XCreateFontCursor[21]       |XGetPointerControl[21]    |XSetArcMode[21]               |XcmsCIEuvYToTekHVC[21]          |XkbRefreshKeyboardMapping  |
  8226	|                            |                          |                              |                                |[21]                       |
  8227	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8228	|XCreateFontSet[21]          |XGetPointerMapping[21]    |XSetAuthorization[21]         |XcmsCIExyYToCIEXYZ[21]          |XkbResizeKeyActions[21]    |
  8229	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8230	|XCreateGC[21]               |XGetRGBColormaps[21]      |XSetBackground[21]            |XcmsClientWhitePointOfCCC[21]   |XkbResizeKeySyms[21]       |
  8231	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8232	|XCreateGlyphCursor[21]      |XGetScreenSaver[21]       |XSetClassHint[21]             |XcmsConvertColors[21]           |XkbResizeKeyType[21]       |
  8233	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8234	|XCreateIC[21]               |XGetSelectionOwner[21]    |XSetClipMask[21]              |XcmsCreateCCC[21]               |XkbSelectEventDetails[21]  |
  8235	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8236	|XCreateImage[21]            |XGetSizeHints[21]         |XSetClipOrigin[21]            |XcmsDefaultCCC[21]              |XkbSelectEvents[21]        |
  8237	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8238	|XCreateOC[21]               |XGetStandardColormap[21]  |XSetClipRectangles[21]        |XcmsDisplayOfCCC[21]            |XkbSetAtomFuncs[21]        |
  8239	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8240	|XCreatePixmap[21]           |XGetSubImage[21]          |XSetCloseDownMode[21]         |XcmsFormatOfPrefix[21]          |XkbSetAutoRepeatRate[21]   |
  8241	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8242	|XCreatePixmapCursor[21]     |XGetTextProperty[21]      |XSetCommand[21]               |XcmsFreeCCC[21]                 |XkbSetAutoResetControls[21]|
  8243	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8244	|XCreatePixmapFromBitmapData |XGetTransientForHint[21]  |XSetDashes[21]                |XcmsLookupColor[21]             |XkbSetCompatMap[21]        |
  8245	|[21]                        |                          |                              |                                |                           |
  8246	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8247	|XCreateRegion[21]           |XGetVisualInfo[21]        |XSetErrorHandler[21]          |XcmsPrefixOfFormat[21]          |XkbSetControls[21]         |
  8248	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8249	|XCreateSimpleWindow[21]     |XGetWMClientMachine[21]   |XSetFillRule[21]              |XcmsQueryBlack[21]              |XkbSetDebuggingFlags[21]   |
  8250	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8251	|XCreateWindow[21]           |XGetWMColormapWindows[21] |XSetFillStyle[21]             |XcmsQueryBlue[21]               |XkbSetDetectableAutoRepeat |
  8252	|                            |                          |                              |                                |[21]                       |
  8253	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8254	|XDefaultColormap[21]        |XGetWMHints[21]           |XSetFont[21]                  |XcmsQueryColor[21]              |XkbSetGeometry[21]         |
  8255	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8256	|XDefaultColormapOfScreen[21]|XGetWMIconName[21]        |XSetFontPath[21]              |XcmsQueryColors[21]             |XkbSetIgnoreLockMods[21]   |
  8257	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8258	|XDefaultDepth[21]           |XGetWMName[21]            |XSetForeground[21]            |XcmsQueryGreen[21]              |XkbSetIndicatorMap[21]     |
  8259	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8260	|XDefaultDepthOfScreen[21]   |XGetWMNormalHints[21]     |XSetFunction[21]              |XcmsQueryRed[21]                |XkbSetMap[21]              |
  8261	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8262	|XDefaultGC[21]              |XGetWMProtocols[21]       |XSetGraphicsExposures[21]     |XcmsQueryWhite[21]              |XkbSetNamedIndicator[21]   |
  8263	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8264	|XDefaultGCOfScreen[21]      |XGetWMSizeHints[21]       |XSetICFocus[21]               |XcmsRGBToRGBi[21]               |XkbSetNames[21]            |
  8265	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8266	|XDefaultRootWindow[21]      |XGetWindowAttributes[21]  |XSetICValues[21]              |XcmsRGBiToCIEXYZ[21]            |XkbSetServerInternalMods   |
  8267	|                            |                          |                              |                                |[21]                       |
  8268	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8269	|XDefaultScreen[21]          |XGetWindowProperty[21]    |XSetIMValues[21]              |XcmsRGBiToRGB[21]               |XkbSetXlibControls[21]     |
  8270	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8271	|XDefaultScreenOfDisplay[21] |XGetZoomHints[21]         |XSetIOErrorHandler[21]        |XcmsScreenNumberOfCCC[21]       |XkbToControl[21]           |
  8272	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8273	|XDefaultString[21]          |XGrabButton[21]           |XSetIconName[21]              |XcmsScreenWhitePointOfCCC[21]   |XkbTranslateKey[21]        |
  8274	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8275	|XDefaultVisual[21]          |XGrabKey[21]              |XSetIconSizes[21]             |XcmsSetCCCOfColormap[21]        |XkbTranslateKeyCode[21]    |
  8276	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8277	|XDefaultVisualOfScreen[21]  |XGrabKeyboard[21]         |XSetInputFocus[21]            |XcmsSetCompressionProc[21]      |XkbTranslateKeySym[21]     |
  8278	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8279	|XDefineCursor[21]           |XGrabPointer[21]          |XSetLineAttributes[21]        |XcmsSetWhiteAdjustProc[21]      |XkbUpdateActionVirtualMods |
  8280	|                            |                          |                              |                                |[21]                       |
  8281	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8282	|XDeleteContext[21]          |XGrabServer[21]           |XSetLocaleModifiers[21]       |XcmsSetWhitePoint[21]           |XkbUpdateKeyTypeVirtualMods|
  8283	|                            |                          |                              |                                |[21]                       |
  8284	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8285	|XDeleteModifiermapEntry[21] |XHeightMMOfScreen[21]     |XSetModifierMapping[21]       |XcmsStoreColor[21]              |XkbUpdateMapFromCore[21]   |
  8286	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8287	|XDeleteProperty[21]         |XHeightOfScreen[21]       |XSetNormalHints[21]           |XcmsStoreColors[21]             |XkbUseExtension[21]        |
  8288	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8289	|XDestroyIC[21]              |XIMOfIC[21]               |XSetOCValues[21]              |XcmsTekHVCClipC[21]             |XkbVirtualModsToReal[21]   |
  8290	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8291	|XDestroyImage[21]           |XIconifyWindow[21]        |XSetOMValues[21]              |XcmsTekHVCClipV[21]             |XkbXlibControlsImplemented |
  8292	|                            |                          |                              |                                |[21]                       |
  8293	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8294	|XDestroyOC[21]              |XIfEvent[21]              |XSetPlaneMask[21]             |XcmsTekHVCClipVC[21]            |XmbDrawImageString[21]     |
  8295	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8296	|XDestroyRegion[21]          |XImageByteOrder[21]       |XSetPointerMapping[21]        |XcmsTekHVCQueryMaxC[21]         |XmbDrawString[21]          |
  8297	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8298	|XDestroySubwindows[21]      |XInitExtension[21]        |XSetRGBColormaps[21]          |XcmsTekHVCQueryMaxV[21]         |XmbDrawText[21]            |
  8299	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8300	|XDestroyWindow[21]          |XInitImage[21]            |XSetRegion[21]                |XcmsTekHVCQueryMaxVC[21]        |XmbLookupString[21]        |
  8301	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8302	|XDirectionalDependentDrawing|XInitThreads[21]          |XSetScreenSaver[21]           |XcmsTekHVCQueryMaxVSamples[21]  |XmbResetIC[21]             |
  8303	|[21]                        |                          |                              |                                |                           |
  8304	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8305	|XDisableAccessControl[21]   |XInsertModifiermapEntry   |XSetSelectionOwner[21]        |XcmsTekHVCQueryMinV[21]         |XmbSetWMProperties[21]     |
  8306	|                            |[21]                      |                              |                                |                           |
  8307	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8308	|XDisplayCells[21]           |XInstallColormap[21]      |XSetSizeHints[21]             |XcmsTekHVCToCIEuvY[21]          |XmbTextEscapement[21]      |
  8309	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8310	|XDisplayHeight[21]          |XInternAtom[21]           |XSetStandardColormap[21]      |XcmsTekHVCWhiteShiftColors[21]  |XmbTextExtents[21]         |
  8311	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8312	|XDisplayHeightMM[21]        |XInternAtoms[21]          |XSetStandardProperties[21]    |XcmsVisualOfCCC[21]             |XmbTextListToTextProperty  |
  8313	|                            |                          |                              |                                |[21]                       |
  8314	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8315	|XDisplayKeycodes[21]        |XInternalConnectionNumbers|XSetState[21]                 |XkbAllocClientMap[21]           |XmbTextPerCharExtents[21]  |
  8316	|                            |[21]                      |                              |                                |                           |
  8317	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8318	|XDisplayMotionBufferSize[21]|XIntersectRegion[21]      |XSetStipple[21]               |XkbAllocCompatMap[21]           |XmbTextPropertyToTextList  |
  8319	|                            |                          |                              |                                |[21]                       |
  8320	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8321	|XDisplayName[21]            |XKeycodeToKeysym[21]      |XSetSubwindowMode[21]         |XkbAllocControls[21]            |XrmCombineDatabase[21]     |
  8322	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8323	|XDisplayOfIM[21]            |XKeysymToKeycode[21]      |XSetTSOrigin[21]              |XkbAllocGeomColors[21]          |XrmCombineFileDatabase[21] |
  8324	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8325	|XDisplayOfOM[21]            |XKeysymToString[21]       |XSetTextProperty[21]          |XkbAllocGeomDoodads[21]         |XrmDestroyDatabase[21]     |
  8326	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8327	|XDisplayOfScreen[21]        |XKillClient[21]           |XSetTile[21]                  |XkbAllocGeomKeyAliases[21]      |XrmEnumerateDatabase[21]   |
  8328	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8329	|XDisplayPlanes[21]          |XLastKnownRequestProcessed|XSetTransientForHint[21]      |XkbAllocGeomKeys[21]            |XrmGetDatabase[21]         |
  8330	|                            |[21]                      |                              |                                |                           |
  8331	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8332	|XDisplayString[21]          |XListDepths[21]           |XSetWMClientMachine[21]       |XkbAllocGeomOutlines[21]        |XrmGetFileDatabase[21]     |
  8333	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8334	|XDisplayWidth[21]           |XListExtensions[21]       |XSetWMColormapWindows[21]     |XkbAllocGeomOverlayKeys[21]     |XrmGetResource[21]         |
  8335	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8336	|XDisplayWidthMM[21]         |XListFonts[21]            |XSetWMHints[21]               |XkbAllocGeomOverlayRows[21]     |XrmGetStringDatabase[21]   |
  8337	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8338	|XDoesBackingStore[21]       |XListFontsWithInfo[21]    |XSetWMIconName[21]            |XkbAllocGeomOverlays[21]        |XrmInitialize[21]          |
  8339	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8340	|XDoesSaveUnders[21]         |XListHosts[21]            |XSetWMName[21]                |XkbAllocGeomPoints[21]          |XrmLocaleOfDatabase[21]    |
  8341	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8342	|XDrawArc[21]                |XListInstalledColormaps   |XSetWMNormalHints[21]         |XkbAllocGeomProps[21]           |XrmMergeDatabases[21]      |
  8343	|                            |[21]                      |                              |                                |                           |
  8344	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8345	|XDrawArcs[21]               |XListPixmapFormats[21]    |XSetWMProperties[21]          |XkbAllocGeomRows[21]            |XrmParseCommand[21]        |
  8346	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8347	|XDrawImageString[21]        |XListProperties[21]       |XSetWMProtocols[21]           |XkbAllocGeomSectionDoodads[21]  |XrmPermStringToQuark[21]   |
  8348	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8349	|XDrawImageString16[21]      |XLoadFont[21]             |XSetWMSizeHints[21]           |XkbAllocGeomSections[21]        |XrmPutFileDatabase[21]     |
  8350	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8351	|XDrawLine[21]               |XLoadQueryFont[21]        |XSetWindowBackground[21]      |XkbAllocGeomShapes[21]          |XrmPutLineResource[21]     |
  8352	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8353	|XDrawLines[21]              |XLocaleOfFontSet[21]      |XSetWindowBackgroundPixmap[21]|XkbAllocGeometry[21]            |XrmPutResource[21]         |
  8354	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8355	|XDrawPoint[21]              |XLocaleOfIM[21]           |XSetWindowBorder[21]          |XkbAllocIndicatorMaps[21]       |XrmPutStringResource[21]   |
  8356	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8357	|XDrawPoints[21]             |XLocaleOfOM[21]           |XSetWindowBorderPixmap[21]    |XkbAllocKeyboard[21]            |XrmQGetResource[21]        |
  8358	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8359	|XDrawRectangle[21]          |XLockDisplay[21]          |XSetWindowBorderWidth[21]     |XkbAllocNames[21]               |XrmQGetSearchList[21]      |
  8360	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8361	|XDrawRectangles[21]         |XLookupColor[21]          |XSetWindowColormap[21]        |XkbAllocServerMap[21]           |XrmQGetSearchResource[21]  |
  8362	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8363	|XDrawSegments[21]           |XLookupKeysym[21]         |XSetZoomHints[21]             |XkbApplyCompatMapToKey[21]      |XrmQPutResource[21]        |
  8364	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8365	|XDrawString[21]             |XLookupString[21]         |XShrinkRegion[21]             |XkbApplyVirtualModChanges[21]   |XrmQPutStringResource[21]  |
  8366	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8367	|XDrawString16[21]           |XLowerWindow[21]          |XStoreBuffer[21]              |XkbBell[21]                     |XrmQuarkToString[21]       |
  8368	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8369	|XDrawText[21]               |XMapRaised[21]            |XStoreBytes[21]               |XkbBellEvent[21]                |XrmSetDatabase[21]         |
  8370	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8371	|XDrawText16[21]             |XMapSubwindows[21]        |XStoreColor[21]               |XkbChangeEnabledControls[21]    |XrmStringToBindingQuarkList|
  8372	|                            |                          |                              |                                |[21]                       |
  8373	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8374	|XEHeadOfExtensionList[21]   |XMapWindow[21]            |XStoreColors[21]              |XkbChangeKeycodeRange[21]       |XrmStringToQuark[21]       |
  8375	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8376	|XESetBeforeFlush[21]        |XMaskEvent[21]            |XStoreName[21]                |XkbChangeMap[21]                |XrmStringToQuarkList[21]   |
  8377	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8378	|XESetCloseDisplay[21]       |XMatchVisualInfo[21]      |XStoreNamedColor[21]          |XkbChangeNames[21]              |XrmUniqueQuark[21]         |
  8379	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8380	|XESetCopyGC[21]             |XMaxCmapsOfScreen[21]     |XStringListToTextProperty[21] |XkbChangeTypesOfKey[21]         |XwcDrawImageString[21]     |
  8381	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8382	|XESetCreateFont[21]         |XMaxRequestSize[21]       |XStringToKeysym[21]           |XkbComputeEffectiveMap[21]      |XwcDrawString[21]          |
  8383	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8384	|XESetCreateGC[21]           |XMinCmapsOfScreen[21]     |XSubImage[21]                 |XkbComputeRowBounds[21]         |XwcDrawText[21]            |
  8385	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8386	|XESetError[21]              |XMoveResizeWindow[21]     |XSubtractRegion[21]           |XkbComputeSectionBounds[21]     |XwcFreeStringList[21]      |
  8387	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8388	|XESetErrorString[21]        |XMoveWindow[21]           |XSupportsLocale[21]           |XkbComputeShapeBounds[21]       |XwcLookupString[21]        |
  8389	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8390	|XESetEventToWire[21]        |XNewModifiermap[21]       |XSync[21]                     |XkbComputeShapeTop[21]          |XwcResetIC[21]             |
  8391	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8392	|XESetFreeFont[21]           |XNextEvent[21]            |XSynchronize[21]              |XkbCopyKeyType[21]              |XwcTextEscapement[21]      |
  8393	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8394	|XESetFreeGC[21]             |XNextRequest[21]          |XTextExtents[21]              |XkbCopyKeyTypes[21]             |XwcTextExtents[21]         |
  8395	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8396	|XESetPrintErrorValues[21]   |XNoOp[21]                 |XTextExtents16[21]            |XkbFindOverlayForKey[21]        |XwcTextListToTextProperty  |
  8397	|                            |                          |                              |                                |[21]                       |
  8398	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8399	|XESetWireToError[21]        |XOMOfOC[21]               |XTextPropertyToStringList[21] |XkbForceBell[21]                |XwcTextPerCharExtents[21]  |
  8400	|----------------------------+--------------------------+------------------------------+--------------------------------+---------------------------|
  8401	|XESetWireToEvent[21]        |XOffsetRegion[21]         |XTextWidth[21]                |XkbFreeClientMap[21]            |XwcTextPropertyToTextList  |
  8402	|                            |                          |                              |                                |[21]                       |
  8403	+---------------------------------------------------------------------------------------------------------------------------------------------------+
  8404	-------------------------------------------------------------------------------
  8405	
  8406	Data Definitions for libX11
  8407	
  8408	-------------------------------------------------------------------------------
  8409	
  8410	X11/Xauth.h
  8411	
  8412	typedef struct xauth
  8413	{
  8414	  unsigned short family;
  8415	  unsigned short address_length;
  8416	  char *address;
  8417	  unsigned short number_length;
  8418	  char *number;
  8419	  unsigned short name_length;
  8420	  char *name;
  8421	  unsigned short data_length;
  8422	  char *data;
  8423	}
  8424	Xauth;
  8425	-------------------------------------------------------------------------------
  8426	
  8427	X11/Xcms.h
  8428	
  8429	typedef unsigned long XcmsColorFormat;
  8430	
  8431	typedef double XcmsFloat;
  8432	
  8433	typedef struct
  8434	{
  8435	  unsigned short red;
  8436	  unsigned short green;
  8437	  unsigned short blue;
  8438	}
  8439	XcmsRGB;
  8440	
  8441	typedef struct
  8442	{
  8443	  XcmsFloat red;
  8444	  XcmsFloat green;
  8445	  XcmsFloat blue;
  8446	}
  8447	XcmsRGBi;
  8448	
  8449	typedef struct
  8450	{
  8451	  XcmsFloat X;
  8452	  XcmsFloat Y;
  8453	  XcmsFloat Z;
  8454	}
  8455	XcmsCIEXYZ;
  8456	
  8457	typedef struct
  8458	{
  8459	  XcmsFloat u_prime;
  8460	  XcmsFloat v_prime;
  8461	  XcmsFloat Y;
  8462	}
  8463	XcmsCIEuvY;
  8464	
  8465	typedef struct
  8466	{
  8467	  XcmsFloat x;
  8468	  XcmsFloat y;
  8469	  XcmsFloat Y;
  8470	}
  8471	XcmsCIExyY;
  8472	
  8473	typedef struct
  8474	{
  8475	  XcmsFloat L_star;
  8476	  XcmsFloat a_star;
  8477	  XcmsFloat b_star;
  8478	}
  8479	XcmsCIELab;
  8480	
  8481	typedef struct
  8482	{
  8483	  XcmsFloat L_star;
  8484	  XcmsFloat u_star;
  8485	  XcmsFloat v_star;
  8486	}
  8487	XcmsCIELuv;
  8488	
  8489	typedef struct
  8490	{
  8491	  XcmsFloat H;
  8492	  XcmsFloat V;
  8493	  XcmsFloat C;
  8494	}
  8495	XcmsTekHVC;
  8496	
  8497	typedef struct
  8498	{
  8499	  XcmsFloat pad0;
  8500	  XcmsFloat pad1;
  8501	  XcmsFloat pad2;
  8502	  XcmsFloat pad3;
  8503	}
  8504	XcmsPad;
  8505	
  8506	typedef union
  8507	{
  8508	  union spec;
  8509	  XcmsRGB RGB;
  8510	  unsigned long pixel;
  8511	  XcmsRGBi RGBi;
  8512	  XcmsColorFormat ;
  8513	  XcmsCIEXYZ CIEXYZ;
  8514	  XcmsCIEuvY CIEuvY;
  8515	  XcmsCIExyY CIExyY;
  8516	  XcmsCIELab CIELab;
  8517	  XcmsCIELuv CIELuv;
  8518	  XcmsTekHVC TekHVC;
  8519	  XcmsPad Pad;
  8520	}
  8521	XcmsColor;
  8522	
  8523	typedef struct _XcmsPerScrnInfo
  8524	{
  8525	  XcmsColor screenWhitePt;
  8526	  XPointer functionSet;
  8527	  XPointer screenData;
  8528	  unsigned char state;
  8529	  char pad[1];
  8530	}
  8531	XcmsPerScrnInfo;
  8532	
  8533	typedef int (*XcmsCompressionProc) ();
  8534	
  8535	typedef int (*XcmsWhiteAdjustProc) ();
  8536	
  8537	typedef int (*XcmsScreenInitProc) ();
  8538	
  8539	typedef void (*XcmsScreenFreeProc) ();
  8540	
  8541	typedef int (*XcmsConversionProc) ();
  8542	
  8543	typedef int (*XcmsParseStringProc) ();
  8544	
  8545	typedef struct _XcmsCCC
  8546	{
  8547	  Display *dpy;
  8548	  int screenNumber;
  8549	  Visual *visual;
  8550	  XcmsColor clientWhitePt;
  8551	  XcmsCompressionProc gamutCompProc;
  8552	  XPointer gamutCompClientData;
  8553	  XcmsWhiteAdjustProc whitePtAdjProc;
  8554	  XPointer whitePtAdjClientData;
  8555	  XcmsPerScrnInfo *pPerScrnInfo;
  8556	}
  8557	 *XcmsCCC;
  8558	
  8559	typedef XcmsConversionProc *XcmsFuncListPtr;
  8560	
  8561	typedef struct _XcmsColorSpace
  8562	{
  8563	  char *prefix;
  8564	  XcmsColorFormat id;
  8565	  XcmsParseStringProc parseString;
  8566	  XcmsFuncListPtr to_CIEXYZ;
  8567	  XcmsFuncListPtr from_CIEXYZ;
  8568	  int inverse_flag;
  8569	}
  8570	XcmsColorSpace;
  8571	
  8572	typedef struct _XcmsFunctionSet
  8573	{
  8574	  XcmsColorSpace **DDColorSpaces;
  8575	  XcmsScreenInitProc screenInitProc;
  8576	  XcmsScreenFreeProc screenFreeProc;
  8577	}
  8578	XcmsFunctionSet;
  8579	-------------------------------------------------------------------------------
  8580	
  8581	X11/Xlib.h
  8582	
  8583	typedef char *XPointer;
  8584	
  8585	typedef struct _XExtData
  8586	{
  8587	  int number;
  8588	  struct _XExtData *next;
  8589	  int (*free_private) (struct _XExtData * extension);
  8590	  XPointer private_data;
  8591	}
  8592	XExtData;
  8593	
  8594	typedef struct
  8595	{
  8596	  int extension;
  8597	  int major_opcode;
  8598	  int first_event;
  8599	  int first_error;
  8600	}
  8601	XExtCodes;
  8602	
  8603	typedef struct
  8604	{
  8605	  int depth;
  8606	  int bits_per_pixel;
  8607	  int scanline_pad;
  8608	}
  8609	XPixmapFormatValues;
  8610	
  8611	typedef struct
  8612	{
  8613	  int function;
  8614	  unsigned long plane_mask;
  8615	  unsigned long foreground;
  8616	  unsigned long background;
  8617	  int line_width;
  8618	  int line_style;
  8619	  int cap_style;
  8620	  int join_style;
  8621	  int fill_style;
  8622	  int fill_rule;
  8623	  int arc_mode;
  8624	  Pixmap tile;
  8625	  Pixmap stipple;
  8626	  int ts_x_origin;
  8627	  int ts_y_origin;
  8628	  Font font;
  8629	  int subwindow_mode;
  8630	  int graphics_exposures;
  8631	  int clip_x_origin;
  8632	  int clip_y_origin;
  8633	  Pixmap clip_mask;
  8634	  int dash_offset;
  8635	  char dashes;
  8636	}
  8637	XGCValues;
  8638	
  8639	typedef struct _XGC *GC;
  8640	
  8641	typedef struct
  8642	{
  8643	  XExtData *ext_data;
  8644	  VisualID visualid;
  8645	  int class;
  8646	  unsigned long red_mask;
  8647	  unsigned long green_mask;
  8648	  unsigned long blue_mask;
  8649	  int bits_per_rgb;
  8650	  int map_entries;
  8651	}
  8652	Visual;
  8653	
  8654	typedef struct
  8655	{
  8656	  int depth;
  8657	  int nvisuals;
  8658	  Visual *visuals;
  8659	}
  8660	Depth;
  8661	
  8662	typedef struct
  8663	{
  8664	  XExtData *ext_data;
  8665	  struct _XDisplay *display;
  8666	  Window root;
  8667	  int width;
  8668	  int height;
  8669	  int mwidth;
  8670	  int mheight;
  8671	  int ndepths;
  8672	  Depth *depths;
  8673	  int root_depth;
  8674	  Visual *root_visual;
  8675	  GC default_gc;
  8676	  Colormap cmap;
  8677	  unsigned long white_pixel;
  8678	  unsigned long black_pixel;
  8679	  int max_maps;
  8680	  int min_maps;
  8681	  int backing_store;
  8682	  int save_unders;
  8683	  long root_input_mask;
  8684	}
  8685	Screen;
  8686	
  8687	typedef struct
  8688	{
  8689	  XExtData *ext_data;
  8690	  int depth;
  8691	  int bits_per_pixel;
  8692	  int scanline_pad;
  8693	}
  8694	ScreenFormat;
  8695	
  8696	typedef struct
  8697	{
  8698	  Pixmap background_pixmap;
  8699	  unsigned long background_pixel;
  8700	  Pixmap border_pixmap;
  8701	  unsigned long border_pixel;
  8702	  int bit_gravity;
  8703	  int win_gravity;
  8704	  int backing_store;
  8705	  unsigned long backing_planes;
  8706	  unsigned long backing_pixel;
  8707	  int save_under;
  8708	  long event_mask;
  8709	  long do_not_propagate_mask;
  8710	  int override_redirect;
  8711	  Colormap colormap;
  8712	  Cursor cursor;
  8713	}
  8714	XSetWindowAttributes;
  8715	
  8716	typedef struct
  8717	{
  8718	  int x;
  8719	  int y;
  8720	  int width;
  8721	  int height;
  8722	  int border_width;
  8723	  int depth;
  8724	  Visual *visual;
  8725	  Window root;
  8726	  int class;
  8727	  int bit_gravity;
  8728	  int win_gravity;
  8729	  int backing_store;
  8730	  unsigned long backing_planes;
  8731	  unsigned long backing_pixel;
  8732	  int save_under;
  8733	  Colormap colormap;
  8734	  int map_installed;
  8735	  int map_state;
  8736	  long all_event_masks;
  8737	  long your_event_mask;
  8738	  long do_not_propagate_mask;
  8739	  int override_redirect;
  8740	  Screen *screen;
  8741	}
  8742	XWindowAttributes;
  8743	
  8744	typedef struct
  8745	{
  8746	  int family;
  8747	  int length;
  8748	  char *address;
  8749	}
  8750	XHostAddress;
  8751	
  8752	struct XImagefuncs;
  8753	
  8754	typedef struct _XImage
  8755	{
  8756	  int width;
  8757	  int height;
  8758	  int xoffset;
  8759	  int ;
  8760	  char *data;
  8761	  int byte_order;
  8762	  int bitmap_unit;
  8763	  int bitmap_bit_order;
  8764	  int bitmap_pad;
  8765	  int depth;
  8766	  int bytes_per_line;
  8767	  int bits_per_pixel;
  8768	  unsigned long red_mask;
  8769	  unsigned long green_mask;
  8770	  unsigned long blue_mask;
  8771	  XPointer obdata;
  8772	}
  8773	XImage;
  8774	
  8775	typedef struct
  8776	{
  8777	  int x;
  8778	  int y;
  8779	  int width;
  8780	  int height;
  8781	  int border_width;
  8782	  Window sibling;
  8783	  int stack_mode;
  8784	}
  8785	XWindowChanges;
  8786	
  8787	typedef struct
  8788	{
  8789	  short x1;
  8790	  short y1;
  8791	  short x2;
  8792	  short y2;
  8793	}
  8794	XSegment;
  8795	
  8796	typedef struct
  8797	{
  8798	  short x;
  8799	  short y;
  8800	}
  8801	XPoint;
  8802	
  8803	typedef struct
  8804	{
  8805	  short x;
  8806	  short y;
  8807	  unsigned short width;
  8808	  unsigned short height;
  8809	}
  8810	XRectangle;
  8811	
  8812	typedef struct
  8813	{
  8814	  short x;
  8815	  short y;
  8816	  unsigned short width;
  8817	  unsigned short height;
  8818	  short angle1;
  8819	  short angle2;
  8820	}
  8821	XArc;
  8822	
  8823	typedef struct
  8824	{
  8825	  int key_click_percent;
  8826	  int bell_percent;
  8827	  int bell_pitch;
  8828	  int bell_duration;
  8829	  int led;
  8830	  int led_mode;
  8831	  int key;
  8832	  int auto_repeat_mode;
  8833	}
  8834	XKeyboardControl;
  8835	
  8836	typedef struct
  8837	{
  8838	  int key_click_percent;
  8839	  int bell_percent;
  8840	  unsigned int bell_pitch;
  8841	  unsigned int bell_duration;
  8842	  unsigned long led_mask;
  8843	  int global_auto_repeat;
  8844	  char auto_repeats[1];
  8845	}
  8846	XKeyboardState;
  8847	
  8848	typedef struct
  8849	{
  8850	  Time time;
  8851	  short x;
  8852	  short y;
  8853	}
  8854	XTimeCoord;
  8855	
  8856	typedef struct
  8857	{
  8858	  int max_keypermod;
  8859	  KeyCode *modifiermap;
  8860	}
  8861	XModifierKeymap;
  8862	
  8863	typedef struct _XDisplay Display;
  8864	
  8865	typedef struct
  8866	{
  8867	  int type;
  8868	  unsigned long serial;
  8869	  int send_event;
  8870	  Display *display;
  8871	  Window window;
  8872	  Window root;
  8873	  Window subwindow;
  8874	  Time time;
  8875	  int x;
  8876	  int y;
  8877	  int x_root;
  8878	  int y_root;
  8879	  unsigned int state;
  8880	  unsigned int keycode;
  8881	  int same_screen;
  8882	}
  8883	XKeyEvent;
  8884	
  8885	typedef XKeyEvent XKeyPressedEvent;
  8886	
  8887	typedef XKeyEvent XKeyReleasedEvent;
  8888	
  8889	typedef struct
  8890	{
  8891	  int type;
  8892	  unsigned long serial;
  8893	  int send_event;
  8894	  Display *display;
  8895	  Window window;
  8896	  Window root;
  8897	  Window subwindow;
  8898	  Time time;
  8899	  int x;
  8900	  int y;
  8901	  int x_root;
  8902	  int y_root;
  8903	  unsigned int state;
  8904	  unsigned int button;
  8905	  int same_screen;
  8906	}
  8907	XButtonEvent;
  8908	
  8909	typedef XButtonEvent XButtonPressedEvent;
  8910	
  8911	typedef XButtonEvent XButtonReleasedEvent;
  8912	
  8913	typedef struct
  8914	{
  8915	  int type;
  8916	  unsigned long serial;
  8917	  int send_event;
  8918	  Display *display;
  8919	  Window window;
  8920	  Window root;
  8921	  Window subwindow;
  8922	  Time time;
  8923	  int x;
  8924	  int y;
  8925	  int x_root;
  8926	  int y_root;
  8927	  unsigned int state;
  8928	  char is_hint;
  8929	  int same_screen;
  8930	}
  8931	XMotionEvent;
  8932	
  8933	typedef XMotionEvent XPointerMovedEvent;
  8934	
  8935	typedef struct
  8936	{
  8937	  int type;
  8938	  unsigned long serial;
  8939	  int send_event;
  8940	  Display *display;
  8941	  Window window;
  8942	  Window root;
  8943	  Window subwindow;
  8944	  Time time;
  8945	  int x;
  8946	  int y;
  8947	  int x_root;
  8948	  int y_root;
  8949	  int mode;
  8950	  int detail;
  8951	  int same_screen;
  8952	  int focus;
  8953	  unsigned int state;
  8954	}
  8955	XCrossingEvent;
  8956	
  8957	typedef XCrossingEvent XEnterWindowEvent;
  8958	
  8959	typedef XCrossingEvent XLeaveWindowEvent;
  8960	
  8961	typedef struct
  8962	{
  8963	  int type;
  8964	  unsigned long serial;
  8965	  int send_event;
  8966	  Display *display;
  8967	  Window window;
  8968	  int mode;
  8969	  int detail;
  8970	}
  8971	XFocusChangeEvent;
  8972	
  8973	typedef XFocusChangeEvent XFocusInEvent;
  8974	
  8975	typedef XFocusChangeEvent XFocusOutEvent;
  8976	
  8977	typedef struct
  8978	{
  8979	  int type;
  8980	  unsigned long serial;
  8981	  int send_event;
  8982	  Display *display;
  8983	  Window window;
  8984	  char key_vector[1];
  8985	}
  8986	XKeymapEvent;
  8987	
  8988	typedef struct
  8989	{
  8990	  int type;
  8991	  unsigned long serial;
  8992	  int send_event;
  8993	  Display *display;
  8994	  Window window;
  8995	  int x;
  8996	  int y;
  8997	  int width;
  8998	  int height;
  8999	  int count;
  9000	}
  9001	XExposeEvent;
  9002	
  9003	typedef struct
  9004	{
  9005	  int type;
  9006	  unsigned long serial;
  9007	  int send_event;
  9008	  Display *display;
  9009	  Drawable drawable;
  9010	  int x;
  9011	  int y;
  9012	  int width;
  9013	  int height;
  9014	  int count;
  9015	  int major_code;
  9016	  int minor_code;
  9017	}
  9018	XGraphicsExposeEvent;
  9019	
  9020	typedef struct
  9021	{
  9022	  int type;
  9023	  unsigned long serial;
  9024	  int send_event;
  9025	  Display *display;
  9026	  Drawable drawable;
  9027	  int major_code;
  9028	  int minor_code;
  9029	}
  9030	XNoExposeEvent;
  9031	
  9032	typedef struct
  9033	{
  9034	  int type;
  9035	  unsigned long serial;
  9036	  int send_event;
  9037	  Display *display;
  9038	  Window window;
  9039	  int state;
  9040	}
  9041	XVisibilityEvent;
  9042	
  9043	typedef struct
  9044	{
  9045	  int type;
  9046	  unsigned long serial;
  9047	  int send_event;
  9048	  Display *display;
  9049	  Window parent;
  9050	  Window window;
  9051	  int x;
  9052	  int y;
  9053	  int width;
  9054	  int height;
  9055	  int border_width;
  9056	  int override_redirect;
  9057	}
  9058	XCreateWindowEvent;
  9059	
  9060	typedef struct
  9061	{
  9062	  int type;
  9063	  unsigned long serial;
  9064	  int send_event;
  9065	  Display *display;
  9066	  Window event;
  9067	  Window window;
  9068	}
  9069	XDestroyWindowEvent;
  9070	
  9071	typedef struct
  9072	{
  9073	  int type;
  9074	  unsigned long serial;
  9075	  int send_event;
  9076	  Display *display;
  9077	  Window event;
  9078	  Window window;
  9079	  int from_configure;
  9080	}
  9081	XUnmapEvent;
  9082	
  9083	typedef struct
  9084	{
  9085	  int type;
  9086	  unsigned long serial;
  9087	  int send_event;
  9088	  Display *display;
  9089	  Window event;
  9090	  Window window;
  9091	  int override_redirect;
  9092	}
  9093	XMapEvent;
  9094	
  9095	typedef struct
  9096	{
  9097	  int type;
  9098	  unsigned long serial;
  9099	  int send_event;
  9100	  Display *display;
  9101	  Window parent;
  9102	  Window window;
  9103	}
  9104	XMapRequestEvent;
  9105	
  9106	typedef struct
  9107	{
  9108	  int type;
  9109	  unsigned long serial;
  9110	  int send_event;
  9111	  Display *display;
  9112	  Window event;
  9113	  Window window;
  9114	  Window parent;
  9115	  int x;
  9116	  int y;
  9117	  int override_redirect;
  9118	}
  9119	XReparentEvent;
  9120	
  9121	typedef struct
  9122	{
  9123	  int type;
  9124	  unsigned long serial;
  9125	  int send_event;
  9126	  Display *display;
  9127	  Window event;
  9128	  Window window;
  9129	  int x;
  9130	  int y;
  9131	  int width;
  9132	  int height;
  9133	  int border_width;
  9134	  Window above;
  9135	  int override_redirect;
  9136	}
  9137	XConfigureEvent;
  9138	
  9139	typedef struct
  9140	{
  9141	  int type;
  9142	  unsigned long serial;
  9143	  int send_event;
  9144	  Display *display;
  9145	  Window event;
  9146	  Window window;
  9147	  int x;
  9148	  int y;
  9149	}
  9150	XGravityEvent;
  9151	
  9152	typedef struct
  9153	{
  9154	  int type;
  9155	  unsigned long serial;
  9156	  int send_event;
  9157	  Display *display;
  9158	  Window window;
  9159	  int width;
  9160	  int height;
  9161	}
  9162	XResizeRequestEvent;
  9163	
  9164	typedef struct
  9165	{
  9166	  int type;
  9167	  unsigned long serial;
  9168	  int send_event;
  9169	  Display *display;
  9170	  Window parent;
  9171	  Window window;
  9172	  int x;
  9173	  int y;
  9174	  int width;
  9175	  int height;
  9176	  int border_width;
  9177	  Window above;
  9178	  int detail;
  9179	  unsigned long value_mask;
  9180	}
  9181	XConfigureRequestEvent;
  9182	
  9183	typedef struct
  9184	{
  9185	  int type;
  9186	  unsigned long serial;
  9187	  int send_event;
  9188	  Display *display;
  9189	  Window event;
  9190	  Window window;
  9191	  int place;
  9192	}
  9193	XCirculateEvent;
  9194	
  9195	typedef struct
  9196	{
  9197	  int type;
  9198	  unsigned long serial;
  9199	  int send_event;
  9200	  Display *display;
  9201	  Window parent;
  9202	  Window window;
  9203	  int place;
  9204	}
  9205	XCirculateRequestEvent;
  9206	
  9207	typedef struct
  9208	{
  9209	  int type;
  9210	  unsigned long serial;
  9211	  int send_event;
  9212	  Display *display;
  9213	  Window window;
  9214	  Atom atom;
  9215	  Time time;
  9216	  int state;
  9217	}
  9218	XPropertyEvent;
  9219	
  9220	typedef struct
  9221	{
  9222	  int type;
  9223	  unsigned long serial;
  9224	  int send_event;
  9225	  Display *display;
  9226	  Window window;
  9227	  Atom selection;
  9228	  Time time;
  9229	}
  9230	XSelectionClearEvent;
  9231	
  9232	typedef struct
  9233	{
  9234	  int type;
  9235	  unsigned long serial;
  9236	  int send_event;
  9237	  Display *display;
  9238	  Window owner;
  9239	  Window requestor;
  9240	  Atom selection;
  9241	  Atom target;
  9242	  Atom property;
  9243	  Time time;
  9244	}
  9245	XSelectionRequestEvent;
  9246	
  9247	typedef struct
  9248	{
  9249	  int type;
  9250	  unsigned long serial;
  9251	  int send_event;
  9252	  Display *display;
  9253	  Window requestor;
  9254	  Atom selection;
  9255	  Atom target;
  9256	  Atom property;
  9257	  Time time;
  9258	}
  9259	XSelectionEvent;
  9260	
  9261	typedef struct
  9262	{
  9263	  int type;
  9264	  unsigned long serial;
  9265	  int send_event;
  9266	  Display *display;
  9267	  Window window;
  9268	  Colormap colormap;
  9269	  int new;
  9270	  int state;
  9271	}
  9272	XColormapEvent;
  9273	
  9274	typedef union
  9275	{
  9276	  char b[1];
  9277	  short s[1];
  9278	  long l[1];
  9279	  union data;
  9280	}
  9281	XClientMessageEvent;
  9282	
  9283	typedef struct
  9284	{
  9285	  int type;
  9286	  unsigned long serial;
  9287	  int send_event;
  9288	  Display *display;
  9289	  Window window;
  9290	  int request;
  9291	  int first_keycode;
  9292	  int count;
  9293	}
  9294	XMappingEvent;
  9295	
  9296	typedef struct
  9297	{
  9298	  int type;
  9299	  Display *display;
  9300	  XID resourceid;
  9301	  unsigned long serial;
  9302	  unsigned char error_code;
  9303	  unsigned char request_code;
  9304	  unsigned char minor_code;
  9305	}
  9306	XErrorEvent;
  9307	
  9308	typedef struct
  9309	{
  9310	  int type;
  9311	  unsigned long serial;
  9312	  int send_event;
  9313	  Display *display;
  9314	  Window window;
  9315	}
  9316	XAnyEvent;
  9317	
  9318	typedef union _XEvent
  9319	{
  9320	  int type;
  9321	  XAnyEvent xany;
  9322	  XKeyEvent xkey;
  9323	  XButtonEvent xbutton;
  9324	  XMotionEvent xmotion;
  9325	  XCrossingEvent xcrossing;
  9326	  XFocusChangeEvent xfocus;
  9327	  XExposeEvent xexpose;
  9328	  XGraphicsExposeEvent xgraphicsexpose;
  9329	  XNoExposeEvent xnoexpose;
  9330	  XVisibilityEvent xvisibility;
  9331	  XCreateWindowEvent xcreatewindow;
  9332	  XDestroyWindowEvent xdestroywindow;
  9333	  XUnmapEvent xunmap;
  9334	  XMapEvent xmap;
  9335	  XMapRequestEvent xmaprequest;
  9336	  XReparentEvent xreparent;
  9337	  XConfigureEvent xconfigure;
  9338	  XGravityEvent xgravity;
  9339	  XResizeRequestEvent xresizerequest;
  9340	  XConfigureRequestEvent xconfigurerequest;
  9341	  XCirculateEvent xcirculate;
  9342	  XCirculateRequestEvent xcirculaterequest;
  9343	  XPropertyEvent xproperty;
  9344	  XSelectionClearEvent xselectionclear;
  9345	  XSelectionRequestEvent xselectionrequest;
  9346	  XSelectionEvent xselection;
  9347	  XColormapEvent xcolormap;
  9348	  XClientMessageEvent xclient;
  9349	  XMappingEvent xmapping;
  9350	  XErrorEvent xerror;
  9351	  XKeymapEvent xkeymap;
  9352	  long pad[1];
  9353	}
  9354	XEvent;
  9355	
  9356	typedef struct
  9357	{
  9358	  short lbearing;
  9359	  short rbearing;
  9360	  short width;
  9361	  short ascent;
  9362	  short descent;
  9363	  unsigned short attributes;
  9364	}
  9365	XCharStruct;
  9366	
  9367	typedef struct
  9368	{
  9369	  Atom name;
  9370	  unsigned long card32;
  9371	}
  9372	XFontProp;
  9373	
  9374	typedef struct
  9375	{
  9376	  XExtData *ext_data;
  9377	  Font fid;
  9378	  unsigned int direction;
  9379	  unsigned int min_char_or_byte2;
  9380	  unsigned int max_char_or_byte2;
  9381	  unsigned int min_byte1;
  9382	  unsigned int max_byte1;
  9383	  int all_chars_exist;
  9384	  unsigned int default_char;
  9385	  int n_properties;
  9386	  XFontProp *properties;
  9387	  XCharStruct min_bounds;
  9388	  XCharStruct max_bounds;
  9389	  XCharStruct *per_char;
  9390	  int ascent;
  9391	  int descent;
  9392	}
  9393	XFontStruct;
  9394	
  9395	typedef struct
  9396	{
  9397	  XRectangle max_ink_extent;
  9398	  XRectangle max_logical_extent;
  9399	}
  9400	XFontSetExtents;
  9401	
  9402	typedef struct
  9403	{
  9404	  char *chars;
  9405	  int nchars;
  9406	  int delta;
  9407	  Font font;
  9408	}
  9409	XTextItem;
  9410	
  9411	typedef struct
  9412	{
  9413	  unsigned char byte1;
  9414	  unsigned char byte2;
  9415	}
  9416	XChar2b;
  9417	
  9418	typedef struct
  9419	{
  9420	  XChar2b *chars;
  9421	  int nchars;
  9422	  int delta;
  9423	  Font font;
  9424	}
  9425	XTextItem16;
  9426	
  9427	typedef union
  9428	{
  9429	  Display *display;
  9430	  GC gc;
  9431	  Visual *visual;
  9432	  Screen *screen;
  9433	  ScreenFormat *pixmap_format;
  9434	  XFontStruct *font;
  9435	}
  9436	XEDataObject;
  9437	
  9438	typedef struct _XOM *XOM;
  9439	
  9440	typedef struct _XOC *XOC;
  9441	
  9442	typedef struct _XOC *XFontSet;
  9443	
  9444	typedef struct
  9445	{
  9446	  char *chars;
  9447	  int nchars;
  9448	  int delta;
  9449	  XFontSet font_set;
  9450	}
  9451	XmbTextItem;
  9452	
  9453	typedef struct
  9454	{
  9455	  wchar_t *chars;
  9456	  int nchars;
  9457	  int delta;
  9458	  XFontSet font_set;
  9459	}
  9460	XwcTextItem;
  9461	
  9462	typedef struct _XIM *XIM;
  9463	
  9464	typedef struct _XIC *XIC;
  9465	
  9466	typedef void (*XIDProc) ();
  9467	
  9468	struct _XDisplay;
  9469	
  9470	struct _XrmHashBucketRec;
  9471	
  9472	typedef struct
  9473	{
  9474	  unsigned long pixel;
  9475	  unsigned short red;
  9476	  unsigned short green;
  9477	  unsigned short blue;
  9478	  char flags;
  9479	  char pad;
  9480	}
  9481	XColor;
  9482	
  9483	typedef void *XVaNestedList;
  9484	
  9485	typedef int (*XErrorHandler) ();
  9486	
  9487	typedef int (*XIOErrorHandler) ();
  9488	
  9489	typedef void (*XConnectionWatchProc) ();
  9490	-------------------------------------------------------------------------------
  9491	
  9492	X11/Xutil.h
  9493	
  9494	typedef struct
  9495	{
  9496	  int x;
  9497	  int y;
  9498	  struct max_aspect;
  9499	  int base_width;
  9500	  int base_height;
  9501	  int win_gravity;
  9502	}
  9503	XSizeHints;
  9504	
  9505	typedef struct
  9506	{
  9507	  long flags;
  9508	  int input;
  9509	  int initial_state;
  9510	  Pixmap icon_pixmap;
  9511	  Window icon_window;
  9512	  int icon_x;
  9513	  int icon_y;
  9514	  Pixmap icon_mask;
  9515	  XID window_group;
  9516	}
  9517	XWMHints;
  9518	
  9519	typedef struct
  9520	{
  9521	  unsigned char *value;
  9522	  Atom encoding;
  9523	  int ;
  9524	  unsigned long nitems;
  9525	}
  9526	XTextProperty;
  9527	
  9528	typedef struct
  9529	{
  9530	  int min_width;
  9531	  int min_height;
  9532	  int max_width;
  9533	  int max_height;
  9534	  int width_inc;
  9535	  int height_inc;
  9536	}
  9537	XIconSize;
  9538	
  9539	typedef struct
  9540	{
  9541	  char *res_name;
  9542	  char *res_class;
  9543	}
  9544	XClassHint;
  9545	
  9546	typedef struct _XComposeStatus
  9547	{
  9548	  XPointer compose_ptr;
  9549	  int chars_matched;
  9550	}
  9551	XComposeStatus;
  9552	
  9553	typedef struct _XRegion *Region;
  9554	
  9555	typedef struct
  9556	{
  9557	  Visual *visual;
  9558	  VisualID visualid;
  9559	  int screen;
  9560	  int depth;
  9561	  int class;
  9562	  unsigned long red_mask;
  9563	  unsigned long green_mask;
  9564	  unsigned long blue_mask;
  9565	  int colormap_size;
  9566	  int bits_per_rgb;
  9567	}
  9568	XVisualInfo;
  9569	
  9570	typedef struct
  9571	{
  9572	  Colormap colormap;
  9573	  unsigned long red_max;
  9574	  unsigned long red_mult;
  9575	  unsigned long green_max;
  9576	  unsigned long green_mult;
  9577	  unsigned long blue_max;
  9578	  unsigned long blue_mult;
  9579	  unsigned long base_pixel;
  9580	  VisualID visualid;
  9581	  XID killid;
  9582	}
  9583	XStandardColormap;
  9584	
  9585	typedef int XContext;
  9586	
  9587	typedef enum
  9588	{
  9589	  XStringStyle,
  9590	  XCompoundTextStyle,
  9591	  XTextStyle,
  9592	  XStdICCTextStyle,
  9593	  XUTF8StringStyle
  9594	}
  9595	XICCEncodingStyle;
  9596	-------------------------------------------------------------------------------
  9597	
  9598	Interfaces for libXext
  9599	
  9600	Table 12-3. libXext Definition
  9601	
  9602	+----------------------+
  9603	|Library:|libXext      |
  9604	|--------+-------------|
  9605	|SONAME: |libXext.so.6 |
  9606	+----------------------+
  9607	
  9608	The behaviour of the interfaces in this library is specified by the following
  9609	Standards.
  9610	
  9611	Double Buffer Extension Library[22]
  9612	X Display Power Management Signaling (DPMS) Extension, Library Specification
  9613	[23]
  9614	Security Extension Specification, Version 7.1[24]
  9615	X Nonrectangular Window Shape Extension Library Version 1.0[25]
  9616	MIT-SHM--The MIT Shared Memory Extension[26]
  9617	X Synchronization Extension Library[27]
  9618	
  9619	-------------------------------------------------------------------------------
  9620	
  9621	X Shape Extension
  9622	
  9623	Table 12-4. libXext - X Shape Extension Function Interfaces
  9624	
  9625	+-------------------------------------------------------------------------------------+
  9626	|XShapeCombineMask[25]  |XShapeCombineShape |XShapeOffsetShape   |XShapeQueryVersion| |
  9627	|                       |[25]               |[25]                |[25]              | |
  9628	|-----------------------+-------------------+--------------------+------------------+-|
  9629	|XShapeCombineRectangles|XShapeGetRectangles|XShapeQueryExtension|XShapeSelectInput | |
  9630	|[25]                   |[25]               |[25]                |[25]              | |
  9631	|-----------------------+-------------------+--------------------+------------------+-|
  9632	|XShapeCombineRegion[25]|XShapeInputSelected|XShapeQueryExtents  |                  | |
  9633	|                       |[25]               |[25]                |                  | |
  9634	+-------------------------------------------------------------------------------------+
  9635	-------------------------------------------------------------------------------
  9636	
  9637	X Display Power Managment Signaling Extension
  9638	
  9639	Table 12-5. libXext - X Display Power Managment Signaling Extension Function
  9640	Interfaces
  9641	
  9642	+-----------------------------------------------------------------------------+
  9643	|DPMSCapable|DPMSEnable[23]|DPMSGetTimeouts|DPMSInfo[23]      |DPMSSetTimeouts|
  9644	|[23]       |              |[23]           |                  |[23]           |
  9645	|-----------+--------------+---------------+------------------+---------------|
  9646	|DPMSDisable|DPMSForceLevel|DPMSGetVersion |DPMSQueryExtension|               |
  9647	|[23]       |[23]          |[23]           |[23]              |               |
  9648	+-----------------------------------------------------------------------------+
  9649	-------------------------------------------------------------------------------
  9650	
  9651	X Shared Memory Extensions
  9652	
  9653	Table 12-6. libXext - X Shared Memory Extensions Function Interfaces
  9654	
  9655	+-------------------------------------------------------------------------------------+
  9656	|XShmAttach[26] |XShmCreatePixmap|XShmGetEventBase|XShmPixmapFormat|XShmQueryExtension|
  9657	|               |[26]            |[26]            |[26]            |[26]              |
  9658	|---------------+----------------+----------------+----------------+------------------|
  9659	|XShmCreateImage|XShmDetach[26]  |XShmGetImage[26]|XShmPutImage[26]|XShmQueryVersion  |
  9660	|[26]           |                |                |                |[26]              |
  9661	+-------------------------------------------------------------------------------------+
  9662	-------------------------------------------------------------------------------
  9663	
  9664	X Security Extension
  9665	
  9666	Table 12-7. libXext - X Security Extension Function Interfaces
  9667	
  9668	+--------------------------------------------------------------------------------------------------------------------------+
  9669	|XSecurityAllocXauth|XSecurityFreeXauth|XSecurityGenerateAuthorization|XSecurityQueryExtension|XSecurityRevokeAuthorization|
  9670	|[24]               |[24]              |[24]                          |[24]                   |[24]                        |
  9671	+--------------------------------------------------------------------------------------------------------------------------+
  9672	-------------------------------------------------------------------------------
  9673	
  9674	X Synchronization Extension
  9675	
  9676	Table 12-8. libXext - X Synchronization Extension Function Interfaces
  9677	
  9678	+-----------------------------------------------------------------------------------------------------------------+
  9679	|XSyncAwait[27]     |XSyncFreeSystemCounterList|XSyncMinValue[27]  |XSyncValueEqual[27]     |XSyncValueLessOrEqual|
  9680	|                   |[27]                      |                   |                        |[27]                 |
  9681	|-------------------+--------------------------+-------------------+------------------------+---------------------|
  9682	|XSyncChangeAlarm   |XSyncGetPriority[27]      |XSyncQueryAlarm[27]|XSyncValueGreaterOrEqual|XSyncValueLessThan   |
  9683	|[27]               |                          |                   |[27]                    |[27]                 |
  9684	|-------------------+--------------------------+-------------------+------------------------+---------------------|
  9685	|XSyncChangeCounter |XSyncInitialize[27]       |XSyncQueryCounter  |XSyncValueGreaterThan   |XSyncValueLow32[27]  |
  9686	|[27]               |                          |[27]               |[27]                    |                     |
  9687	|-------------------+--------------------------+-------------------+------------------------+---------------------|
  9688	|XSyncCreateAlarm   |XSyncIntToValue[27]       |XSyncQueryExtension|XSyncValueHigh32[27]    |XSyncValueSubtract   |
  9689	|[27]               |                          |[27]               |                        |[27]                 |
  9690	|-------------------+--------------------------+-------------------+------------------------+---------------------|
  9691	|XSyncCreateCounter |XSyncIntsToValue[27]      |XSyncSetCounter[27]|XSyncValueIsNegative[27]|                     |
  9692	|[27]               |                          |                   |                        |                     |
  9693	|-------------------+--------------------------+-------------------+------------------------+---------------------|
  9694	|XSyncDestroyAlarm  |XSyncListSystemCounters   |XSyncSetPriority   |XSyncValueIsPositive[27]|                     |
  9695	|[27]               |[27]                      |[27]               |                        |                     |
  9696	|-------------------+--------------------------+-------------------+------------------------+---------------------|
  9697	|XSyncDestroyCounter|XSyncMaxValue[27]         |XSyncValueAdd[27]  |XSyncValueIsZero[27]    |                     |
  9698	|[27]               |                          |                   |                        |                     |
  9699	+-----------------------------------------------------------------------------------------------------------------+
  9700	-------------------------------------------------------------------------------
  9701	
  9702	X Double Buffer Extension
  9703	
  9704	Table 12-9. libXext - X Double Buffer Extension Function Interfaces
  9705	
  9706	+----------------------------------------------------------------------------------------------------------------------+
  9707	|XdbeAllocateBackBufferName|XdbeDeallocateBackBufferName|XdbeFreeVisualInfo[22]     |XdbeGetVisualInfo |XdbeSwapBuffers|
  9708	|[22]                      |[22]                        |                           |[22]              |[22]           |
  9709	|--------------------------+----------------------------+---------------------------+------------------+---------------|
  9710	|XdbeBeginIdiom[22]        |XdbeEndIdiom[22]            |XdbeGetBackBufferAttributes|XdbeQueryExtension|               |
  9711	|                          |                            |[22]                       |[22]              |               |
  9712	+----------------------------------------------------------------------------------------------------------------------+
  9713	-------------------------------------------------------------------------------
  9714	
  9715	Data Definitions for libXext
  9716	
  9717	-------------------------------------------------------------------------------
  9718	
  9719	X11/extensions/security.h
  9720	
  9721	typedef unsigned long XSecurityAuthorization;
  9722	
  9723	typedef struct
  9724	{
  9725	  unsigned int timeout;
  9726	  unsigned int trust_level;
  9727	  XID group;
  9728	  long event_mask;
  9729	}
  9730	XSecurityAuthorizationAttributes;
  9731	-------------------------------------------------------------------------------
  9732	
  9733	X11/extensions/sync.h
  9734	
  9735	typedef XID XSyncCounter;
  9736	
  9737	typedef XID XSyncAlarm;
  9738	
  9739	typedef struct _XSyncValue
  9740	{
  9741	  int hi;
  9742	  unsigned int lo;
  9743	}
  9744	XSyncValue;
  9745	
  9746	typedef enum
  9747	{
  9748	  XSyncAbsolute,
  9749	  XSyncRelative
  9750	}
  9751	XSyncValueType;
  9752	
  9753	typedef enum
  9754	{
  9755	  XSyncPositiveTransition,
  9756	  XSyncNegativeTransition,
  9757	  XSyncPositiveComparison,
  9758	  XSyncNegativeComparison
  9759	}
  9760	XSyncTestType;
  9761	
  9762	typedef enum
  9763	{
  9764	  XSyncAlarmActive,
  9765	  XSyncAlarmInactive,
  9766	  XSyncAlarmDestroyed
  9767	}
  9768	XSyncAlarmState;
  9769	
  9770	typedef struct _XSyncSystemCounter
  9771	{
  9772	  char *name;
  9773	  XSyncCounter counter;
  9774	  XSyncValue resolution;
  9775	}
  9776	XSyncSystemCounter;
  9777	
  9778	typedef struct
  9779	{
  9780	  XSyncCounter counter;
  9781	  XSyncValueType value_type;
  9782	  XSyncValue wait_value;
  9783	  XSyncTestType test_type;
  9784	}
  9785	XSyncTrigger;
  9786	
  9787	typedef struct
  9788	{
  9789	  XSyncTrigger trigger;
  9790	  XSyncValue event_threshold;
  9791	}
  9792	XSyncWaitCondition;
  9793	
  9794	typedef struct
  9795	{
  9796	  XSyncTrigger trigger;
  9797	  XSyncValue delta;
  9798	  int events;
  9799	  XSyncAlarmState state;
  9800	}
  9801	XSyncAlarmAttributes;
  9802	-------------------------------------------------------------------------------
  9803	
  9804	Interfaces for libSM
  9805	
  9806	Table 12-10. libSM Definition
  9807	
  9808	+--------------------+
  9809	|Library:|libSM      |
  9810	|--------+-----------|
  9811	|SONAME: |libSM.so.6 |
  9812	+--------------------+
  9813	
  9814	The behaviour of the interfaces in this library is specified by the following
  9815	Standards.
  9816	
  9817	X11R6.4 X Session Management Library[28]
  9818	
  9819	-------------------------------------------------------------------------------
  9820	
  9821	Session Management Functions
  9822	
  9823	Table 12-11. libSM - Session Management Functions Function Interfaces
  9824	
  9825	+-----------------------------------------------------------------------------------------------------------------+
  9826	|SmFreeProperty[28] |SmcInteractRequest[28]      |SmcSaveYourselfDone|SmsGenerateClientID   |SmsSaveComplete[28]  |
  9827	|                   |                            |[28]               |[28]                  |                     |
  9828	|-------------------+----------------------------+-------------------+----------------------+---------------------|
  9829	|SmFreeReasons[28]  |SmcModifyCallbacks[28]      |SmcSetErrorHandler |SmsGetIceConnection   |SmsSaveYourself[28]  |
  9830	|                   |                            |[28]               |[28]                  |                     |
  9831	|-------------------+----------------------------+-------------------+----------------------+---------------------|
  9832	|SmcClientID[28]    |SmcOpenConnection[28]       |SmcSetProperties   |SmsInitialize[28]     |SmsSaveYourselfPhase2|
  9833	|                   |                            |[28]               |                      |[28]                 |
  9834	|-------------------+----------------------------+-------------------+----------------------+---------------------|
  9835	|SmcCloseConnection |SmcProtocolRevision[28]     |SmcVendor[28]      |SmsInteract[28]       |SmsSetErrorHandler   |
  9836	|[28]               |                            |                   |                      |[28]                 |
  9837	|-------------------+----------------------------+-------------------+----------------------+---------------------|
  9838	|SmcDeleteProperties|SmcProtocolVersion[28]      |SmsCleanUp[28]     |SmsProtocolRevision   |SmsShutdownCancelled |
  9839	|[28]               |                            |                   |[28]                  |[28]                 |
  9840	|-------------------+----------------------------+-------------------+----------------------+---------------------|
  9841	|SmcGetIceConnection|SmcRelease[28]              |SmsClientHostName  |SmsProtocolVersion[28]|                     |
  9842	|[28]               |                            |[28]               |                      |                     |
  9843	|-------------------+----------------------------+-------------------+----------------------+---------------------|
  9844	|SmcGetProperties   |SmcRequestSaveYourself[28]  |SmsClientID[28]    |SmsRegisterClientReply|                     |
  9845	|[28]               |                            |                   |[28]                  |                     |
  9846	|-------------------+----------------------------+-------------------+----------------------+---------------------|
  9847	|SmcInteractDone[28]|SmcRequestSaveYourselfPhase2|SmsDie[28]         |SmsReturnProperties   |                     |
  9848	|                   |[28]                        |                   |[28]                  |                     |
  9849	+-----------------------------------------------------------------------------------------------------------------+
  9850	-------------------------------------------------------------------------------
  9851	
  9852	Data Definitions for libSM
  9853	
  9854	-------------------------------------------------------------------------------
  9855	
  9856	X11/SM/SMlib.h
  9857	
  9858	typedef IcePointer SmPointer;
  9859	
  9860	typedef struct _SmcConn *SmcConn;
  9861	
  9862	typedef struct _SmsConn *SmsConn;
  9863	
  9864	typedef struct
  9865	{
  9866	  int length;
  9867	  SmPointer value;
  9868	}
  9869	SmPropValue;
  9870	
  9871	typedef struct
  9872	{
  9873	  char *name;
  9874	  char *type;
  9875	  int num_vals;
  9876	  SmPropValue *vals;
  9877	}
  9878	SmProp;
  9879	
  9880	typedef enum
  9881	{
  9882	  SmcClosedNow,
  9883	  SmcClosedASAP,
  9884	  SmcConnectionInUse
  9885	}
  9886	SmcCloseStatus;
  9887	
  9888	typedef void (*SmcSaveYourselfPhase2Proc) ();
  9889	
  9890	typedef void (*SmcInteractProc) ();
  9891	
  9892	typedef void (*SmcDieProc) ();
  9893	
  9894	typedef void (*SmcShutdownCancelledProc) ();
  9895	
  9896	typedef void (*SmcSaveCompleteProc) ();
  9897	
  9898	typedef void (*SmcPropReplyProc) ();
  9899	
  9900	typedef struct
  9901	{
  9902	  SmcShutdownCancelledProc callback;
  9903	  SmPointer client_data;
  9904	  struct shutdown_cancelled;
  9905	}
  9906	SmcCallbacks;
  9907	
  9908	typedef void (*SmsSetPropertiesProc) ();
  9909	
  9910	typedef void (*SmsDeletePropertiesProc) ();
  9911	
  9912	typedef void (*SmsGetPropertiesProc) ();
  9913	
  9914	typedef struct
  9915	{
  9916	  SmsGetPropertiesProc callback;
  9917	  SmPointer manager_data;
  9918	  struct get_properties;
  9919	}
  9920	SmsCallbacks;
  9921	
  9922	typedef int (*SmsNewClientProc) ();
  9923	
  9924	typedef void (*SmcErrorHandler) ();
  9925	
  9926	typedef void (*SmsErrorHandler) ();
  9927	-------------------------------------------------------------------------------
  9928	
  9929	Interfaces for libICE
  9930	
  9931	Table 12-12. libICE Definition
  9932	
  9933	+---------------------+
  9934	|Library:|libICE      |
  9935	|--------+------------|
  9936	|SONAME: |libICE.so.6 |
  9937	+---------------------+
  9938	
  9939	The behaviour of the interfaces in this library is specified by the following
  9940	Standards.
  9941	
  9942	X11R6.4 X Inter-Client Exchange (ICE) Protocol[29]
  9943	
  9944	-------------------------------------------------------------------------------
  9945	
  9946	ICE Functions
  9947	
  9948	Table 12-13. libICE - ICE Functions Function Interfaces
  9949	
  9950	+-----------------------------------------------------------------------------------------------------------------------------------------------+
  9951	|IceAcceptConnection[29]    |IceConnectionStatus[29]     |IceGetListenConnectionString[29]|IceProcessMessages[29]     |IceSetErrorHandler[29]   |
  9952	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9953	|IceAddConnectionWatch[29]  |IceConnectionString[29]     |IceGetOutBufSize[29]            |IceProtocolRevision[29]    |IceSetHostBasedAuthProc  |
  9954	|                           |                            |                                |                           |[29]                     |
  9955	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9956	|IceAllocScratch[29]        |IceFlush[29]                |IceInitThreads[29]              |IceProtocolSetup[29]       |IceSetIOErrorHandler[29] |
  9957	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9958	|IceAppLockConn[29]         |IceFreeAuthFileEntry[29]    |IceLastReceivedSequenceNumber   |IceProtocolShutdown[29]    |IceSetPaAuthData[29]     |
  9959	|                           |                            |[29]                            |                           |                         |
  9960	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9961	|IceAppUnlockConn[29]       |IceFreeListenObjs[29]       |IceLastSentSequenceNumber[29]   |IceProtocolVersion[29]     |IceSetShutdownNegotiation|
  9962	|                           |                            |                                |                           |[29]                     |
  9963	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9964	|IceAuthFileName[29]        |IceGenerateMagicCookie[29]  |IceListenForConnections[29]     |IceReadAuthFileEntry[29]   |IceSwapping[29]          |
  9965	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9966	|IceCheckShutdownNegotiation|IceGetAuthFileEntry[29]     |IceListenForWellKnownConnections|IceRegisterForProtocolReply|IceUnlockAuthFile[29]    |
  9967	|[29]                       |                            |[29]                            |[29]                       |                         |
  9968	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9969	|IceCloseConnection[29]     |IceGetConnectionContext[29] |IceLockAuthFile[29]             |IceRegisterForProtocolSetup|IceVendor[29]            |
  9970	|                           |                            |                                |[29]                       |                         |
  9971	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9972	|IceComposeNetworkIdList[29]|IceGetInBufSize[29]         |IceOpenConnection[29]           |IceRelease[29]             |IceWriteAuthFileEntry[29]|
  9973	|---------------------------+----------------------------+--------------------------------+---------------------------+-------------------------|
  9974	|IceConnectionNumber[29]    |IceGetListenConnectionNumber|IcePing[29]                     |IceRemoveConnectionWatch   |                         |
  9975	|                           |[29]                        |                                |[29]                       |                         |
  9976	+-----------------------------------------------------------------------------------------------------------------------------------------------+
  9977	-------------------------------------------------------------------------------
  9978	
  9979	Data Definitions for libICE
  9980	
  9981	-------------------------------------------------------------------------------
  9982	
  9983	X11/ICE/ICElib.h
  9984	
  9985	typedef void *IcePointer;
  9986	
  9987	typedef enum
  9988	{
  9989	  IcePoAuthHaveReply,
  9990	  IcePoAuthRejected,
  9991	  IcePoAuthFailed,
  9992	  IcePoAuthDoneCleanup
  9993	}
  9994	IcePoAuthStatus;
  9995	
  9996	typedef enum
  9997	{
  9998	  IcePaAuthContinue,
  9999	  IcePaAuthAccepted,
 10000	  IcePaAuthRejected,
 10001	  IcePaAuthFailed
 10002	}
 10003	IcePaAuthStatus;
 10004	
 10005	typedef enum
 10006	{
 10007	  IceConnectPending,
 10008	  IceConnectAccepted,
 10009	  IceConnectRejected,
 10010	  IceConnectIOError
 10011	}
 10012	IceConnectStatus;
 10013	
 10014	typedef enum
 10015	{
 10016	  IceProtocolSetupSuccess,
 10017	  IceProtocolSetupFailure,
 10018	  IceProtocolSetupIOError,
 10019	  IceProtocolAlreadyActive
 10020	}
 10021	IceProtocolSetupStatus;
 10022	
 10023	typedef enum
 10024	{
 10025	  IceAcceptSuccess,
 10026	  IceAcceptFailure,
 10027	  IceAcceptBadMalloc
 10028	}
 10029	IceAcceptStatus;
 10030	
 10031	typedef enum
 10032	{
 10033	  IceClosedNow,
 10034	  IceClosedASAP,
 10035	  IceConnectionInUse,
 10036	  IceStartedShutdownNegotiation
 10037	}
 10038	IceCloseStatus;
 10039	
 10040	typedef enum
 10041	{
 10042	  IceProcessMessagesSuccess,
 10043	  IceProcessMessagesIOError,
 10044	  IceProcessMessagesConnectionClosed
 10045	}
 10046	IceProcessMessagesStatus;
 10047	
 10048	typedef struct
 10049	{
 10050	  unsigned long sequence_of_request;
 10051	  int major_opcode_of_request;
 10052	  int minor_opcode_of_request;
 10053	  IcePointer reply;
 10054	}
 10055	IceReplyWaitInfo;
 10056	
 10057	typedef struct _IceConn *IceConn;
 10058	
 10059	typedef struct _IceListenObj *IceListenObj;
 10060	
 10061	typedef void (*IceWatchProc) ();
 10062	
 10063	typedef void (*IcePoProcessMsgProc) ();
 10064	
 10065	typedef void (*IcePaProcessMsgProc) ();
 10066	
 10067	typedef IcePoAuthStatus (*IcePoAuthProc) ();
 10068	
 10069	typedef IcePaAuthStatus (*IcePaAuthProc) ();
 10070	
 10071	typedef int (*IceHostBasedAuthProc) ();
 10072	
 10073	typedef int (*IceProtocolSetupProc) ();
 10074	
 10075	typedef void (*IceProtocolActivateProc) ();
 10076	
 10077	typedef void (*IceIOErrorProc) ();
 10078	
 10079	typedef void (*IcePingReplyProc) ();
 10080	
 10081	typedef void (*IceErrorHandler) ();
 10082	
 10083	typedef void (*IceIOErrorHandler) ();
 10084	
 10085	typedef struct
 10086	{
 10087	  int major_version;
 10088	  int minor_version;
 10089	  IcePoProcessMsgProc process_msg_proc;
 10090	}
 10091	IcePoVersionRec;
 10092	
 10093	typedef struct
 10094	{
 10095	  int major_version;
 10096	  int minor_version;
 10097	  IcePaProcessMsgProc process_msg_proc;
 10098	}
 10099	IcePaVersionRec;
 10100	-------------------------------------------------------------------------------
 10101	
 10102	X11/ICE/ICEutil.h
 10103	
 10104	typedef struct
 10105	{
 10106	  char *protocol_name;
 10107	  unsigned short protocol_data_length;
 10108	  char *protocol_data;
 10109	  char *network_id;
 10110	  char *auth_name;
 10111	  unsigned short auth_data_length;
 10112	  char *auth_data;
 10113	}
 10114	IceAuthFileEntry;
 10115	
 10116	typedef struct
 10117	{
 10118	  char *protocol_name;
 10119	  char *network_id;
 10120	  char *auth_name;
 10121	  unsigned short auth_data_length;
 10122	  char *auth_data;
 10123	}
 10124	IceAuthDataEntry;
 10125	-------------------------------------------------------------------------------
 10126	
 10127	Interfaces for libXt
 10128	
 10129	Table 12-14. libXt Definition
 10130	
 10131	+--------------------+
 10132	|Library:|libXt      |
 10133	|--------+-----------|
 10134	|SONAME: |libXt.so.6 |
 10135	+--------------------+
 10136	
 10137	The behaviour of the interfaces in this library is specified by the following
 10138	Standards.
 10139	
 10140	Linux Standard Base[30]
 10141	X11R.4 X Toolkit Intrinsics[31]
 10142	
 10143	-------------------------------------------------------------------------------
 10144	
 10145	X Toolkit
 10146	
 10147	Table 12-15. libXt - X Toolkit Function Interfaces
 10148	
 10149	+-------------------------------------------------------------------------------------------------------------------------------------------------------+
 10150	|XtAddActions[31]             |XtCancelSelectionRequest[31]    |XtError[31]                    |XtMainLoop[31]             |XtSessionGetToken[31]       |
 10151	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10152	|XtAddCallback[31]            |XtChangeManagedSet[31]          |XtErrorMsg[31]                 |XtMakeGeometryRequest[31]  |XtSessionReturnToken[31]    |
 10153	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10154	|XtAddCallbacks[31]           |XtClass[31]                     |XtFindFile[31]                 |XtMakeResizeRequest[31]    |XtSetErrorHandler[31]       |
 10155	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10156	|XtAddConverter[31]           |XtCloseDisplay[31]              |XtFree[31]                     |XtMalloc[31]               |XtSetErrorMsgHandler[31]    |
 10157	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10158	|XtAddEventHandler[31]        |XtConfigureWidget[31]           |XtGetActionKeysym[31]          |XtManageChild[31]          |XtSetEventDispatcher[31]    |
 10159	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10160	|XtAddExposureToRegion[31]    |XtConvert[31]                   |XtGetActionList[31]            |XtManageChildren[31]       |XtSetKeyTranslator[31]      |
 10161	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10162	|XtAddGrab[31]                |XtConvertAndStore[31]           |XtGetApplicationNameAndClass   |XtMapWidget[31]            |XtSetKeyboardFocus[31]      |
 10163	|                             |                                |[31]                           |                           |                            |
 10164	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10165	|XtAddInput[31]               |XtConvertCase[31]               |XtGetApplicationResources[31]  |XtMenuPopupAction[31]      |XtSetLanguageProc[31]       |
 10166	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10167	|XtAddRawEventHandler[31]     |XtCreateApplicationContext[31]  |XtGetClassExtension[31]        |XtMergeArgLists[31]        |XtSetMappedWhenManaged[31]  |
 10168	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10169	|XtAddSignal[31]              |XtCreateApplicationShell[31]    |XtGetConstraintResourceList[31]|XtMoveWidget[31]           |XtSetMultiClickTime[31]     |
 10170	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10171	|XtAddTimeOut[31]             |XtCreateManagedWidget[31]       |XtGetDisplays[31]              |XtName[31]                 |XtSetSelectionParameters[31]|
 10172	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10173	|XtAddWorkProc[31]            |XtCreatePopupShell[31]          |XtGetErrorDatabase[31]         |XtNameToWidget[31]         |XtSetSelectionTimeout[31]   |
 10174	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10175	|XtAllocateGC[31]             |XtCreateSelectionRequest[31]    |XtGetErrorDatabaseText[31]     |XtNewString[31]            |XtSetSensitive[31]          |
 10176	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10177	|XtAppAddActionHook[31]       |XtCreateWidget[31]              |XtGetGC[31]                    |XtNextEvent[31]            |XtSetSubvalues[31]          |
 10178	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10179	|XtAppAddActions[31]          |XtCreateWindow[31]              |XtGetKeyboardFocusWidget[31]   |XtNoticeSignal[31]         |XtSetTypeConverter[31]      |
 10180	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10181	|XtAppAddBlockHook[31]        |XtCvtColorToPixel[31]           |XtGetKeysymTable[31]           |XtOpenApplication[31]      |XtSetValues[31]             |
 10182	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10183	|XtAppAddConverter[31]        |XtCvtIntToBool[31]              |XtGetMultiClickTime[31]        |XtOpenDisplay[31]          |XtSetWMColormapWindows[31]  |
 10184	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10185	|XtAppAddInput[31]            |XtCvtIntToBoolean[31]           |XtGetResourceList[31]          |XtOverrideTranslations[31] |XtSetWarningHandler[31]     |
 10186	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10187	|XtAppAddSignal[31]           |XtCvtIntToColor[31]             |XtGetSelectionParameters[31]   |XtOwnSelection[31]         |XtSetWarningMsgHandler[31]  |
 10188	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10189	|XtAppAddTimeOut[31]          |XtCvtIntToFloat[31]             |XtGetSelectionRequest[31]      |XtOwnSelectionIncremental  |XtShellStrings[31]          |
 10190	|                             |                                |                               |[31]                       |                            |
 10191	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10192	|XtAppAddWorkProc[31]         |XtCvtIntToFont[31]              |XtGetSelectionTimeout[31]      |XtParent[31]               |XtStringConversionWarning   |
 10193	|                             |                                |                               |                           |[31]                        |
 10194	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10195	|XtAppCreateShell[31]         |XtCvtIntToPixel[31]             |XtGetSelectionValue[31]        |XtParseAcceleratorTable[31]|XtStrings[31]               |
 10196	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10197	|XtAppError[31]               |XtCvtIntToPixmap[31]            |XtGetSelectionValueIncremental |XtParseTranslationTable[31]|XtSuperclass[31]            |
 10198	|                             |                                |[31]                           |                           |                            |
 10199	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10200	|XtAppErrorMsg[31]            |XtCvtIntToShort[31]             |XtGetSelectionValues[31]       |XtPeekEvent[31]            |XtToolkitInitialize[31]     |
 10201	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10202	|XtAppGetErrorDatabase[31]    |XtCvtIntToUnsignedChar[31]      |XtGetSelectionValuesIncremental|XtPending[31]              |XtToolkitThreadInitialize   |
 10203	|                             |                                |[31]                           |                           |[31]                        |
 10204	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10205	|XtAppGetErrorDatabaseText[31]|XtCvtStringToAcceleratorTable   |XtGetSubresources[31]          |XtPopdown[31]              |XtTranslateCoords[31]       |
 10206	|                             |[31]                            |                               |                           |                            |
 10207	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10208	|XtAppGetExitFlag[31]         |XtCvtStringToAtom[31]           |XtGetSubvalues[31]             |XtPopup[31]                |XtTranslateKey[31]          |
 10209	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10210	|XtAppGetSelectionTimeout[31] |XtCvtStringToBool[31]           |XtGetValues[31]                |XtPopupSpringLoaded[31]    |XtTranslateKeycode[31]      |
 10211	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10212	|XtAppInitialize[31]          |XtCvtStringToBoolean[31]        |XtGrabButton[31]               |XtProcessEvent[31]         |XtUngrabButton[31]          |
 10213	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10214	|XtAppLock[31]                |XtCvtStringToCommandArgArray[31]|XtGrabKey[31]                  |XtProcessLock[31]          |XtUngrabKey[31]             |
 10215	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10216	|XtAppMainLoop[31]            |XtCvtStringToCursor[31]         |XtGrabKeyboard[31]             |XtProcessUnlock[31]        |XtUngrabKeyboard[31]        |
 10217	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10218	|XtAppNextEvent[31]           |XtCvtStringToDimension[31]      |XtGrabPointer[31]              |XtQueryGeometry[31]        |XtUngrabPointer[31]         |
 10219	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10220	|XtAppPeekEvent[31]           |XtCvtStringToDirectoryString[31]|XtHasCallbacks[31]             |XtRealizeWidget[31]        |XtUninstallTranslations[31] |
 10221	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10222	|XtAppPending[31]             |XtCvtStringToDisplay[31]        |XtHooksOfDisplay[31]           |XtRealloc[31]              |XtUnmanageChild[31]         |
 10223	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10224	|XtAppProcessEvent[31]        |XtCvtStringToFile[31]           |XtInitialize[31]               |XtRegisterCaseConverter[31]|XtUnmanageChildren[31]      |
 10225	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10226	|XtAppReleaseCacheRefs[31]    |XtCvtStringToFloat[31]          |XtInitializeWidgetClass[31]    |XtRegisterDrawable[31]     |XtUnmapWidget[31]           |
 10227	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10228	|XtAppSetErrorHandler[31]     |XtCvtStringToFont[31]           |XtInsertEventHandler[31]       |XtRegisterExtensionSelector|XtUnrealizeWidget[31]       |
 10229	|                             |                                |                               |[31]                       |                            |
 10230	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10231	|XtAppSetErrorMsgHandler[31]  |XtCvtStringToFontSet[31]        |XtInsertEventTypeHandler[31]   |XtRegisterGrabAction[31]   |XtUnregisterDrawable[31]    |
 10232	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10233	|XtAppSetExitFlag[31]         |XtCvtStringToFontStruct[31]     |XtInsertRawEventHandler[31]    |XtReleaseGC[31]            |XtVaAppCreateShell[31]      |
 10234	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10235	|XtAppSetFallbackResources[31]|XtCvtStringToGravity[31]        |XtInstallAccelerators[31]      |XtReleasePropertyAtom[31]  |XtVaAppInitialize[31]       |
 10236	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10237	|XtAppSetSelectionTimeout[31] |XtCvtStringToInitialState[31]   |XtInstallAllAccelerators[31]   |XtRemoveActionHook[31]     |XtVaCreateArgsList[31]      |
 10238	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10239	|XtAppSetTypeConverter[31]    |XtCvtStringToInt[31]            |XtIsApplicationShell[31]       |XtRemoveAllCallbacks[31]   |XtVaCreateManagedWidget[31] |
 10240	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10241	|XtAppSetWarningHandler[31]   |XtCvtStringToPixel[31]          |XtIsComposite[31]              |XtRemoveBlockHook[31]      |XtVaCreatePopupShell[31]    |
 10242	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10243	|XtAppSetWarningMsgHandler[31]|XtCvtStringToRestartStyle[31]   |XtIsConstraint[31]             |XtRemoveCallback[31]       |XtVaCreateWidget[31]        |
 10244	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10245	|XtAppUnlock[31]              |XtCvtStringToShort[31]          |XtIsManaged[31]                |XtRemoveCallbacks[31]      |XtVaGetApplicationResources |
 10246	|                             |                                |                               |                           |[31]                        |
 10247	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10248	|XtAppWarning[31]             |XtCvtStringToTranslationTable   |XtIsObject[31]                 |XtRemoveEventHandler[31]   |XtVaGetSubresources[31]     |
 10249	|                             |[31]                            |                               |                           |                            |
 10250	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10251	|XtAppWarningMsg[31]          |XtCvtStringToUnsignedChar[31]   |XtIsOverrideShell[31]          |XtRemoveEventTypeHandler   |XtVaGetSubvalues[31]        |
 10252	|                             |                                |                               |[31]                       |                            |
 10253	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10254	|XtAugmentTranslations[31]    |XtCvtStringToVisual[31]         |XtIsRealized[31]               |XtRemoveGrab[31]           |XtVaGetValues[31]           |
 10255	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10256	|XtBuildEventMask[31]         |XtDatabase[31]                  |XtIsRectObj[31]                |XtRemoveInput[31]          |XtVaOpenApplication[31]     |
 10257	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10258	|XtCallAcceptFocus[31]        |XtDestroyApplicationContext[31] |XtIsSensitive[31]              |XtRemoveRawEventHandler[31]|XtVaSetSubvalues[31]        |
 10259	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10260	|XtCallActionProc[31]         |XtDestroyGC[31]                 |XtIsSessionShell[31]           |XtRemoveSignal[31]         |XtVaSetValues[31]           |
 10261	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10262	|XtCallCallbackList[31]       |XtDestroyWidget[31]             |XtIsShell[31]                  |XtRemoveTimeOut[31]        |XtWarning[31]               |
 10263	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10264	|XtCallCallbacks[31]          |XtDirectConvert[31]             |XtIsSubclass[31]               |XtRemoveWorkProc[31]       |XtWarningMsg[31]            |
 10265	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10266	|XtCallConverter[31]          |XtDisownSelection[31]           |XtIsTopLevelShell[31]          |XtReservePropertyAtom[31]  |XtWidgetToApplicationContext|
 10267	|                             |                                |                               |                           |[31]                        |
 10268	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10269	|XtCallbackExclusive[31]      |XtDispatchEvent[31]             |XtIsTransientShell[31]         |XtResizeWidget[31]         |XtWindow[31]                |
 10270	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10271	|XtCallbackNone[31]           |XtDispatchEventToWidget[31]     |XtIsVendorShell[31]            |XtResizeWindow[31]         |XtWindowOfObject[31]        |
 10272	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10273	|XtCallbackNonexclusive[31]   |XtDisplay[31]                   |XtIsWMShell[31]                |XtResolvePathname[31]      |XtWindowToWidget[31]        |
 10274	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10275	|XtCallbackPopdown[31]        |XtDisplayInitialize[31]         |XtIsWidget[31]                 |XtScreen[31]               |_XtCopyFromArg[30]          |
 10276	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10277	|XtCallbackReleaseCacheRef[31]|XtDisplayOfObject[31]           |XtKeysymToKeycodeList[31]      |XtScreenDatabase[31]       |_XtInherit[30]              |
 10278	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10279	|XtCallbackReleaseCacheRefList|XtDisplayStringConversionWarning|XtLastEventProcessed[31]       |XtScreenOfObject[31]       |_XtIsSubclassOf[30]         |
 10280	|[31]                         |[31]                            |                               |                           |                            |
 10281	|-----------------------------+--------------------------------+-------------------------------+---------------------------+----------------------------|
 10282	|XtCalloc[31]                 |XtDisplayToApplicationContext   |XtLastTimestampProcessed[31]   |XtSendSelectionRequest[31] |                            |
 10283	|                             |[31]                            |                               |                           |                            |
 10284	+-------------------------------------------------------------------------------------------------------------------------------------------------------+
 10285	-------------------------------------------------------------------------------
 10286	
 10287	Data Symbols
 10288	
 10289	Table 12-16. libXt - X Toolkit Data Interfaces
 10290	
 10291	+-------------------------------------------------------------------------------------------------------------------------+
 10292	|XtCXtToolkitError[31]      |constraintWidgetClass   |rectObjClass[31]       |topLevelShellClassRec[31]|wmShellClassRec   |
 10293	|                           |[31]                    |                       |                         |[31]              |
 10294	|---------------------------+------------------------+-----------------------+-------------------------+------------------|
 10295	|_XtInheritTranslations[30] |coreWidgetClass[31]     |rectObjClassRec[31]    |topLevelShellWidgetClass |wmShellWidgetClass|
 10296	|                           |                        |                       |[31]                     |[31]              |
 10297	|---------------------------+------------------------+-----------------------+-------------------------+------------------|
 10298	|applicationShellWidgetClass|objectClass[31]         |sessionShellClassRec   |transientShellClassRec   |                  |
 10299	|[31]                       |                        |[31]                   |[31]                     |                  |
 10300	|---------------------------+------------------------+-----------------------+-------------------------+------------------|
 10301	|compositeClassRec[31]      |objectClassRec[31]      |sessionShellWidgetClass|transientShellWidgetClass|                  |
 10302	|                           |                        |[31]                   |[31]                     |                  |
 10303	|---------------------------+------------------------+-----------------------+-------------------------+------------------|
 10304	|compositeWidgetClass[31]   |overrideShellClassRec   |shellClassRec[31]      |widgetClass[31]          |                  |
 10305	|                           |[31]                    |                       |                         |                  |
 10306	|---------------------------+------------------------+-----------------------+-------------------------+------------------|
 10307	|constraintClassRec[31]     |overrideShellWidgetClass|shellWidgetClass[31]   |widgetClassRec[31]       |                  |
 10308	|                           |[31]                    |                       |                         |                  |
 10309	+-------------------------------------------------------------------------------------------------------------------------+
 10310	-------------------------------------------------------------------------------
 10311	
 10312	Interface Definitions for libXt
 10313	
 10314	Table of Contents
 10315	_XtCopyFromArg ?? Copy "size" bytes from src to dst.
 10316	_XtInherit ?? inheritance operation.
 10317	_XtInheritTranslations ?? an inheritance constant
 10318	_XtIsSubclassOf ?? Is Widget a Subclass of WidgetClass.
 10319	
 10320	_XtCopyFromArg
 10321	
 10322	Name
 10323	
 10324	_XtCopyFromArg -- Copy "size" bytes from src to dst.
 10325	
 10326	Synopsis
 10327	
 10328	void _XtCopyFromArg(XtArgVal src,char* dst,unsigned int size);
 10329	
 10330	Description
 10331	
 10332	The _XtCopyFromArg() function copies "size" bytes from src to dst. This is an
 10333	internal X function call.
 10334	
 10335	_XtInherit
 10336	
 10337	Name
 10338	
 10339	_XtInherit -- inheritance operation.
 10340	
 10341	Synopsis
 10342	
 10343	#include <IntrinsicP.h>
 10344	
 10345	extern void _XtInherit(
 10346	#if NeedFunctionPrototypes
 10347	    void
 10348	#endif
 10349	);
 10350	
 10351	Description
 10352	
 10353	_XtInherit() is a procedure that issues an error message if it is actually
 10354	called.
 10355	
 10356	_XtInheritTranslations
 10357	
 10358	Name
 10359	
 10360	_XtInheritTranslations -- an inheritance constant
 10361	
 10362	Synopsis
 10363	
 10364	#include <CoreP.h>
 10365	
 10366	externalref int _XtInheritTranslations;
 10367	
 10368	Description
 10369	
 10370	_XtInheritTranslations is an inheritance constant.
 10371	
 10372	_XtIsSubclassOf
 10373	
 10374	Name
 10375	
 10376	_XtIsSubclassOf -- Is Widget a Subclass of WidgetClass.
 10377	
 10378	Synopsis
 10379	
 10380	#include <Intrinsic.h>
 10381	
 10382	extern Boolean _XtIsSubclassOf(
 10383	    Widget              /* object*  /,
 10384	    WidgetClass         /* widget_class */,
 10385	    WidgetClass         /* flag_class */,
 10386	    _XtXtEnum           /* type_flag */,
 10387	);
 10388	
 10389	Description
 10390	
 10391	Is Widget(object) a Subclass of WidgetClass(widget_class).
 10392	
 10393	-------------------------------------------------------------------------------
 10394	
 10395	Interfaces for libGL
 10396	
 10397	Table 12-17. libGL Definition
 10398	
 10399	+--------------------+
 10400	|Library:|libGL      |
 10401	|--------+-----------|
 10402	|SONAME: |libGL.so.1 |
 10403	+--------------------+
 10404	
 10405	The behaviour of the interfaces in this library is specified by the following
 10406	Standards.
 10407	
 10408	OpenGL® Application Binary Interface for Linux[32]
 10409	
 10410	-------------------------------------------------------------------------------
 10411	
 10412	GL X interface
 10413	
 10414	Table 12-18. libGL - GL X interface Function Interfaces
 10415	
 10416	+-----------------------------------------------------------------------------------------------------------------+
 10417	|glXChooseVisual[32]|glXDestroyContext  |glXGetContextIDEXT[32]   |glXImportContextEXT   |glXQueryExtensionsString|
 10418	|                   |[32]               |                         |[32]                  |[32]                    |
 10419	|-------------------+-------------------+-------------------------+----------------------+------------------------|
 10420	|glXCopyContext[32] |glXDestroyGLXPixmap|glXGetCurrentContext[32] |glXIsDirect[32]       |glXQueryServerString[32]|
 10421	|                   |[32]               |                         |                      |                        |
 10422	|-------------------+-------------------+-------------------------+----------------------+------------------------|
 10423	|glXCreateContext   |glXDestroyPbuffer  |glXGetCurrentDisplay[32] |glXMakeContextCurrent |glXQueryVersion[32]     |
 10424	|[32]               |[32]               |                         |[32]                  |                        |
 10425	|-------------------+-------------------+-------------------------+----------------------+------------------------|
 10426	|glXCreateGLXPixmap |glXDestroyPixmap   |glXGetCurrentDrawable[32]|glXMakeCurrent[32]    |glXSelectEvent[32]      |
 10427	|[32]               |[32]               |                         |                      |                        |
 10428	|-------------------+-------------------+-------------------------+----------------------+------------------------|
 10429	|glXCreateNewContext|glXDestroyWindow   |glXGetCurrentReadDrawable|glXQueryContext[32]   |glXSwapBuffers[32]      |
 10430	|[32]               |[32]               |[32]                     |                      |                        |
 10431	|-------------------+-------------------+-------------------------+----------------------+------------------------|
 10432	|glXCreatePbuffer   |glXFreeContextEXT  |glXGetFBConfigAttrib[32] |glXQueryContextInfoEXT|glXUseXFont[32]         |
 10433	|[32]               |[32]               |                         |[32]                  |                        |
 10434	|-------------------+-------------------+-------------------------+----------------------+------------------------|
 10435	|glXCreatePixmap[32]|glXGetClientString |glXGetSelectedEvent[32]  |glXQueryDrawable[32]  |glXWaitGL[32]           |
 10436	|                   |[32]               |                         |                      |                        |
 10437	|-------------------+-------------------+-------------------------+----------------------+------------------------|
 10438	|glXCreateWindow[32]|glXGetConfig[32]   |glXGetVisualFromFBConfig |glXQueryExtension[32] |glXWaitX[32]            |
 10439	|                   |                   |[32]                     |                      |                        |
 10440	+-----------------------------------------------------------------------------------------------------------------+
 10441	-------------------------------------------------------------------------------
 10442	
 10443	OpenGL
 10444	
 10445	Table 12-19. libGL - OpenGL Function Interfaces
 10446	
 10447	+------------------------------------------------------------------------------------------------------------------+
 10448	|glAccum[32]              |glDepthRange[32]           |glIndexPointer[32]   |glNormal3d[32]      |glTexCoord1fv[32]|
 10449	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10450	|glActiveTextureARB[32]   |glDisable[32]              |glIndexd[32]         |glNormal3dv[32]     |glTexCoord1i[32] |
 10451	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10452	|glAlphaFunc[32]          |glDisableClientState[32]   |glIndexdv[32]        |glNormal3f[32]      |glTexCoord1iv[32]|
 10453	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10454	|glAreTexturesResident[32]|glDrawArrays[32]           |glIndexf[32]         |glNormal3fv[32]     |glTexCoord1s[32] |
 10455	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10456	|glArrayElement[32]       |glDrawBuffer[32]           |glIndexfv[32]        |glNormal3i[32]      |glTexCoord1sv[32]|
 10457	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10458	|glBegin[32]              |glDrawElements[32]         |glIndexi[32]         |glNormal3iv[32]     |glTexCoord2d[32] |
 10459	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10460	|glBindTexture[32]        |glDrawPixels[32]           |glIndexiv[32]        |glNormal3s[32]      |glTexCoord2dv[32]|
 10461	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10462	|glBitmap[32]             |glDrawRangeElements[32]    |glIndexs[32]         |glNormal3sv[32]     |glTexCoord2f[32] |
 10463	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10464	|glBlendColor[32]         |glEdgeFlag[32]             |glIndexsv[32]        |glNormalPointer[32] |glTexCoord2fv[32]|
 10465	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10466	|glBlendColorEXT[32]      |glEdgeFlagPointer[32]      |glIndexub[32]        |glOrtho[32]         |glTexCoord2i[32] |
 10467	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10468	|glBlendEquation[32]      |glEdgeFlagv[32]            |glIndexubv[32]       |glPassThrough[32]   |glTexCoord2iv[32]|
 10469	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10470	|glBlendEquationEXT[32]   |glEnable[32]               |glInitNames[32]      |glPixelMapfv[32]    |glTexCoord2s[32] |
 10471	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10472	|glBlendFunc[32]          |glEnableClientState[32]    |glInterleavedArrays  |glPixelMapuiv[32]   |glTexCoord2sv[32]|
 10473	|                         |                           |[32]                 |                    |                 |
 10474	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10475	|glCallList[32]           |glEnd[32]                  |glIsEnabled[32]      |glPixelMapusv[32]   |glTexCoord3d[32] |
 10476	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10477	|glCallLists[32]          |glEndList[32]              |glIsList[32]         |glPixelStoref[32]   |glTexCoord3dv[32]|
 10478	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10479	|glClear[32]              |glEvalCoord1d[32]          |glIsTexture[32]      |glPixelStorei[32]   |glTexCoord3f[32] |
 10480	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10481	|glClearAccum[32]         |glEvalCoord1dv[32]         |glLightModelf[32]    |glPixelTransferf[32]|glTexCoord3fv[32]|
 10482	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10483	|glClearColor[32]         |glEvalCoord1f[32]          |glLightModelfv[32]   |glPixelTransferi[32]|glTexCoord3i[32] |
 10484	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10485	|glClearDepth[32]         |glEvalCoord1fv[32]         |glLightModeli[32]    |glPixelZoom[32]     |glTexCoord3iv[32]|
 10486	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10487	|glClearIndex[32]         |glEvalCoord2d[32]          |glLightModeliv[32]   |glPointSize[32]     |glTexCoord3s[32] |
 10488	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10489	|glClearStencil[32]       |glEvalCoord2dv[32]         |glLightf[32]         |glPolygonMode[32]   |glTexCoord3sv[32]|
 10490	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10491	|glClientActiveTextureARB |glEvalCoord2f[32]          |glLightfv[32]        |glPolygonOffset[32] |glTexCoord4d[32] |
 10492	|[32]                     |                           |                     |                    |                 |
 10493	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10494	|glClipPlane[32]          |glEvalCoord2fv[32]         |glLighti[32]         |glPolygonStipple[32]|glTexCoord4dv[32]|
 10495	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10496	|glColor3b[32]            |glEvalMesh1[32]            |glLightiv[32]        |glPopAttrib[32]     |glTexCoord4f[32] |
 10497	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10498	|glColor3bv[32]           |glEvalMesh2[32]            |glLineStipple[32]    |glPopClientAttrib   |glTexCoord4fv[32]|
 10499	|                         |                           |                     |[32]                |                 |
 10500	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10501	|glColor3d[32]            |glEvalPoint1[32]           |glLineWidth[32]      |glPopMatrix[32]     |glTexCoord4i[32] |
 10502	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10503	|glColor3dv[32]           |glEvalPoint2[32]           |glListBase[32]       |glPopName[32]       |glTexCoord4iv[32]|
 10504	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10505	|glColor3f[32]            |glFeedbackBuffer[32]       |glLoadIdentity[32]   |glPrioritizeTextures|glTexCoord4s[32] |
 10506	|                         |                           |                     |[32]                |                 |
 10507	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10508	|glColor3fv[32]           |glFinish[32]               |glLoadMatrixd[32]    |glPushAttrib[32]    |glTexCoord4sv[32]|
 10509	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10510	|glColor3i[32]            |glFlush[32]                |glLoadMatrixf[32]    |glPushClientAttrib  |glTexCoordPointer|
 10511	|                         |                           |                     |[32]                |[32]             |
 10512	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10513	|glColor3iv[32]           |glFogf[32]                 |glLoadName[32]       |glPushMatrix[32]    |glTexEnvf[32]    |
 10514	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10515	|glColor3s[32]            |glFogfv[32]                |glLogicOp[32]        |glPushName[32]      |glTexEnvfv[32]   |
 10516	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10517	|glColor3sv[32]           |glFogi[32]                 |glMap1d[32]          |glRasterPos2d[32]   |glTexEnvi[32]    |
 10518	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10519	|glColor3ub[32]           |glFogiv[32]                |glMap1f[32]          |glRasterPos2dv[32]  |glTexEnviv[32]   |
 10520	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10521	|glColor3ubv[32]          |glFrontFace[32]            |glMap2d[32]          |glRasterPos2f[32]   |glTexGend[32]    |
 10522	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10523	|glColor3ui[32]           |glFrustum[32]              |glMap2f[32]          |glRasterPos2fv[32]  |glTexGendv[32]   |
 10524	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10525	|glColor3uiv[32]          |glGenLists[32]             |glMapGrid1d[32]      |glRasterPos2i[32]   |glTexGenf[32]    |
 10526	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10527	|glColor3us[32]           |glGenTextures[32]          |glMapGrid1f[32]      |glRasterPos2iv[32]  |glTexGenfv[32]   |
 10528	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10529	|glColor3usv[32]          |glGetBooleanv[32]          |glMapGrid2d[32]      |glRasterPos2s[32]   |glTexGeni[32]    |
 10530	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10531	|glColor4b[32]            |glGetClipPlane[32]         |glMapGrid2f[32]      |glRasterPos2sv[32]  |glTexGeniv[32]   |
 10532	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10533	|glColor4bv[32]           |glGetColorTable[32]        |glMaterialf[32]      |glRasterPos3d[32]   |glTexImage1D[32] |
 10534	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10535	|glColor4d[32]            |glGetColorTableParameterfv |glMaterialfv[32]     |glRasterPos3dv[32]  |glTexImage2D[32] |
 10536	|                         |[32]                       |                     |                    |                 |
 10537	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10538	|glColor4dv[32]           |glGetColorTableParameteriv |glMateriali[32]      |glRasterPos3f[32]   |glTexImage3D[32] |
 10539	|                         |[32]                       |                     |                    |                 |
 10540	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10541	|glColor4f[32]            |glGetConvolutionFilter[32] |glMaterialiv[32]     |glRasterPos3fv[32]  |glTexParameterf  |
 10542	|                         |                           |                     |                    |[32]             |
 10543	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10544	|glColor4fv[32]           |glGetConvolutionParameterfv|glMatrixMode[32]     |glRasterPos3i[32]   |glTexParameterfv |
 10545	|                         |[32]                       |                     |                    |[32]             |
 10546	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10547	|glColor4i[32]            |glGetConvolutionParameteriv|glMinmax[32]         |glRasterPos3iv[32]  |glTexParameteri  |
 10548	|                         |[32]                       |                     |                    |[32]             |
 10549	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10550	|glColor4iv[32]           |glGetDoublev[32]           |glMultMatrixd[32]    |glRasterPos3s[32]   |glTexParameteriv |
 10551	|                         |                           |                     |                    |[32]             |
 10552	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10553	|glColor4s[32]            |glGetError[32]             |glMultMatrixf[32]    |glRasterPos3sv[32]  |glTexSubImage1D  |
 10554	|                         |                           |                     |                    |[32]             |
 10555	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10556	|glColor4sv[32]           |glGetFloatv[32]            |glMultiTexCoord1dARB |glRasterPos4d[32]   |glTexSubImage2D  |
 10557	|                         |                           |[32]                 |                    |[32]             |
 10558	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10559	|glColor4ub[32]           |glGetHistogram[32]         |glMultiTexCoord1dvARB|glRasterPos4dv[32]  |glTexSubImage3D  |
 10560	|                         |                           |[32]                 |                    |[32]             |
 10561	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10562	|glColor4ubv[32]          |glGetHistogramParameterfv  |glMultiTexCoord1fARB |glRasterPos4f[32]   |glTranslated[32] |
 10563	|                         |[32]                       |[32]                 |                    |                 |
 10564	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10565	|glColor4ui[32]           |glGetHistogramParameteriv  |glMultiTexCoord1fvARB|glRasterPos4fv[32]  |glTranslatef[32] |
 10566	|                         |[32]                       |[32]                 |                    |                 |
 10567	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10568	|glColor4uiv[32]          |glGetIntegerv[32]          |glMultiTexCoord1iARB |glRasterPos4i[32]   |glVertex2d[32]   |
 10569	|                         |                           |[32]                 |                    |                 |
 10570	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10571	|glColor4us[32]           |glGetLightfv[32]           |glMultiTexCoord1ivARB|glRasterPos4iv[32]  |glVertex2dv[32]  |
 10572	|                         |                           |[32]                 |                    |                 |
 10573	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10574	|glColor4usv[32]          |glGetLightiv[32]           |glMultiTexCoord1sARB |glRasterPos4s[32]   |glVertex2f[32]   |
 10575	|                         |                           |[32]                 |                    |                 |
 10576	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10577	|glColorMask[32]          |glGetMapdv[32]             |glMultiTexCoord1svARB|glRasterPos4sv[32]  |glVertex2fv[32]  |
 10578	|                         |                           |[32]                 |                    |                 |
 10579	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10580	|glColorMaterial[32]      |glGetMapfv[32]             |glMultiTexCoord2dARB |glReadBuffer[32]    |glVertex2i[32]   |
 10581	|                         |                           |[32]                 |                    |                 |
 10582	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10583	|glColorPointer[32]       |glGetMapiv[32]             |glMultiTexCoord2dvARB|glReadPixels[32]    |glVertex2iv[32]  |
 10584	|                         |                           |[32]                 |                    |                 |
 10585	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10586	|glColorSubTable[32]      |glGetMaterialfv[32]        |glMultiTexCoord2fARB |glRectd[32]         |glVertex2s[32]   |
 10587	|                         |                           |[32]                 |                    |                 |
 10588	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10589	|glColorTable[32]         |glGetMaterialiv[32]        |glMultiTexCoord2fvARB|glRectdv[32]        |glVertex2sv[32]  |
 10590	|                         |                           |[32]                 |                    |                 |
 10591	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10592	|glColorTableParameterfv  |glGetMinmax[32]            |glMultiTexCoord2iARB |glRectf[32]         |glVertex3d[32]   |
 10593	|[32]                     |                           |[32]                 |                    |                 |
 10594	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10595	|glColorTableParameteriv  |glGetMinmaxParameterfv[32] |glMultiTexCoord2ivARB|glRectfv[32]        |glVertex3dv[32]  |
 10596	|[32]                     |                           |[32]                 |                    |                 |
 10597	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10598	|glConvolutionFilter1D[32]|glGetMinmaxParameteriv[32] |glMultiTexCoord2sARB |glRecti[32]         |glVertex3f[32]   |
 10599	|                         |                           |[32]                 |                    |                 |
 10600	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10601	|glConvolutionFilter2D[32]|glGetPixelMapfv[32]        |glMultiTexCoord2svARB|glRectiv[32]        |glVertex3fv[32]  |
 10602	|                         |                           |[32]                 |                    |                 |
 10603	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10604	|glConvolutionParameterf  |glGetPixelMapuiv[32]       |glMultiTexCoord3dARB |glRects[32]         |glVertex3i[32]   |
 10605	|[32]                     |                           |[32]                 |                    |                 |
 10606	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10607	|glConvolutionParameterfv |glGetPixelMapusv[32]       |glMultiTexCoord3dvARB|glRectsv[32]        |glVertex3iv[32]  |
 10608	|[32]                     |                           |[32]                 |                    |                 |
 10609	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10610	|glConvolutionParameteri  |glGetPointerv[32]          |glMultiTexCoord3fARB |glRenderMode[32]    |glVertex3s[32]   |
 10611	|[32]                     |                           |[32]                 |                    |                 |
 10612	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10613	|glConvolutionParameteriv |glGetPolygonStipple[32]    |glMultiTexCoord3fvARB|glResetHistogram[32]|glVertex3sv[32]  |
 10614	|[32]                     |                           |[32]                 |                    |                 |
 10615	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10616	|glCopyColorSubTable[32]  |glGetSeparableFilter[32]   |glMultiTexCoord3iARB |glResetMinmax[32]   |glVertex4d[32]   |
 10617	|                         |                           |[32]                 |                    |                 |
 10618	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10619	|glCopyColorTable[32]     |glGetString[32]            |glMultiTexCoord3ivARB|glRotated[32]       |glVertex4dv[32]  |
 10620	|                         |                           |[32]                 |                    |                 |
 10621	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10622	|glCopyConvolutionFilter1D|glGetTexEnvfv[32]          |glMultiTexCoord3sARB |glRotatef[32]       |glVertex4f[32]   |
 10623	|[32]                     |                           |[32]                 |                    |                 |
 10624	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10625	|glCopyConvolutionFilter2D|glGetTexEnviv[32]          |glMultiTexCoord3svARB|glScaled[32]        |glVertex4fv[32]  |
 10626	|[32]                     |                           |[32]                 |                    |                 |
 10627	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10628	|glCopyPixels[32]         |glGetTexGendv[32]          |glMultiTexCoord4dARB |glScalef[32]        |glVertex4i[32]   |
 10629	|                         |                           |[32]                 |                    |                 |
 10630	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10631	|glCopyTexImage1D[32]     |glGetTexGenfv[32]          |glMultiTexCoord4dvARB|glScissor[32]       |glVertex4iv[32]  |
 10632	|                         |                           |[32]                 |                    |                 |
 10633	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10634	|glCopyTexImage2D[32]     |glGetTexGeniv[32]          |glMultiTexCoord4fARB |glSelectBuffer[32]  |glVertex4s[32]   |
 10635	|                         |                           |[32]                 |                    |                 |
 10636	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10637	|glCopyTexSubImage1D[32]  |glGetTexImage[32]          |glMultiTexCoord4fvARB|glSeparableFilter2D |glVertex4sv[32]  |
 10638	|                         |                           |[32]                 |[32]                |                 |
 10639	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10640	|glCopyTexSubImage2D[32]  |glGetTexLevelParameterfv   |glMultiTexCoord4iARB |glShadeModel[32]    |glVertexPointer  |
 10641	|                         |[32]                       |[32]                 |                    |[32]             |
 10642	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10643	|glCopyTexSubImage3D[32]  |glGetTexLevelParameteriv   |glMultiTexCoord4ivARB|glStencilFunc[32]   |glViewport[32]   |
 10644	|                         |[32]                       |[32]                 |                    |                 |
 10645	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10646	|glCullFace[32]           |glGetTexParameterfv[32]    |glMultiTexCoord4sARB |glStencilMask[32]   |glXChooseFBConfig|
 10647	|                         |                           |[32]                 |                    |[32]             |
 10648	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10649	|glDeleteLists[32]        |glGetTexParameteriv[32]    |glMultiTexCoord4svARB|glStencilOp[32]     |                 |
 10650	|                         |                           |[32]                 |                    |                 |
 10651	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10652	|glDeleteTextures[32]     |glHint[32]                 |glNewList[32]        |glTexCoord1d[32]    |                 |
 10653	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10654	|glDepthFunc[32]          |glHistogram[32]            |glNormal3b[32]       |glTexCoord1dv[32]   |                 |
 10655	|-------------------------+---------------------------+---------------------+--------------------+-----------------|
 10656	|glDepthMask[32]          |glIndexMask[32]            |glNormal3bv[32]      |glTexCoord1f[32]    |                 |
 10657	+------------------------------------------------------------------------------------------------------------------+
 10658	-------------------------------------------------------------------------------
 10659	
 10660	Data Definitions for libGL
 10661	
 10662	-------------------------------------------------------------------------------
 10663	
 10664	GL/gl.h
 10665	
 10666	typedef unsigned int GLenum;
 10667	
 10668	typedef unsigned char GLboolean;
 10669	
 10670	typedef unsigned int GLbitfield;
 10671	
 10672	typedef void GLvoid;
 10673	
 10674	typedef char GLbyte;
 10675	
 10676	typedef short GLshort;
 10677	
 10678	typedef int GLint;
 10679	
 10680	typedef unsigned char GLubyte;
 10681	
 10682	typedef unsigned short GLushort;
 10683	
 10684	typedef unsigned int GLuint;
 10685	
 10686	typedef int GLsizei;
 10687	
 10688	typedef float GLfloat;
 10689	
 10690	typedef float GLclampf;
 10691	
 10692	typedef double GLdouble;
 10693	
 10694	typedef double GLclampd;
 10695	-------------------------------------------------------------------------------
 10696	
 10697	GL/glx.h
 10698	
 10699	typedef struct __GLXcontextRec *GLXContext;
 10700	
 10701	typedef struct __GLXFBConfigRec *GLXFBConfig;
 10702	
 10703	typedef XID GLXContextID;
 10704	
 10705	typedef XID GLXPixmap;
 10706	
 10707	typedef XID GLXDrawable;
 10708	
 10709	typedef XID GLXPbuffer;
 10710	
 10711	typedef XID GLXWindow;
 10712	
 10713	VII. Package Format and Installation
 10714	
 10715	Table of Contents
 10716	13. Software Installation
 10717	
 10718	-------------------------------------------------------------------------------
 10719	
 10720	Chapter 13. Software Installation
 10721	
 10722	-------------------------------------------------------------------------------
 10723	
 10724	Package Format
 10725	
 10726	Applications should be provided in the RPM packaging format as defined in the
 10727	appendix of Maximum RPM, with some restrictions listed below. [33]
 10728	
 10729	Distributions must provide a mechanism for installing applications in this
 10730	packaging format with some restrictions listed below. [34]
 10731	
 10732	-------------------------------------------------------------------------------
 10733	
 10734	Package Script Constraints
 10735	
 10736	Scripts used as part of the package install and uninstall may only use commands
 10737	and interfaces that are specified by the LSB. All other commands are not
 10738	guaranteed to be present, or to behave in expected ways.
 10739	
 10740	Packages may not use RPM triggers.
 10741	
 10742	Packages may not depend on the order in which scripts are executed
 10743	(pre-install, pre-uninstall, &c), when doing an upgrade.
 10744	
 10745	-------------------------------------------------------------------------------
 10746	
 10747	Package Tools
 10748	
 10749	The LSB does not specify the interface to the tools used to manipulate LSB
 10750	conformant packages. Each conforming distribution will provide documentation
 10751	for installing LSB packages.
 10752	
 10753	-------------------------------------------------------------------------------
 10754	
 10755	Package Naming
 10756	
 10757	Because there is no consistent packaging naming amongst the various Linux
 10758	distributions, it is necessary for LSB conformant packages to adhere the
 10759	following naming rules to avoid conflicts with packages provided by the
 10760	distributions.
 10761	
 10762	  * All LSB package names must begin with the prefix "lsb-" to avoid
 10763	    conflicting with existing packages used by Linux distributions.
 10764	
 10765	  * If the package name contains only one hyphen (including the one in the
 10766	    "lsb-" prefix) then the package name must be assigned by the Linux Assigned
 10767	    Names and Numbers Authority (LANANA), which shall maintain a registry of
 10768	    LSB names.
 10769	
 10770	  * If the package name contains more than one hyphen (i.e.,
 10771	    "lsb-www.redhat.com-redhat-database" or "lsb-gnome-gnumeric"), then the
 10772	    portion of the package name between first and second hyphens must either be
 10773	    an LSB provider name assigned by the LANANA, or it may be owners' DNS name
 10774	    in lower case, with at least one '.'. I.e., "debian.org",
 10775	    "staroffice.sun.com", etc. The LSB provider name assigned by LANANA must
 10776	    only consist of the ASCII characters [a-z0-9].
 10777	
 10778	-------------------------------------------------------------------------------
 10779	
 10780	Package Dependencies
 10781	
 10782	Packages must depend on a dependency "lsb". They may not depend on other
 10783	system-provided dependencies. If a package includes "Provides" it must only
 10784	provide a virtual package name which is registered to that application.
 10785	
 10786	VIII. Commands and Utilities
 10787	
 10788	Table of Contents
 10789	14. Command and Utilities
 10790	
 10791	-------------------------------------------------------------------------------
 10792	
 10793	Chapter 14. Command and Utilities
 10794	
 10795	Command and Utilities
 10796	
 10797	 The following table lists the Commands and Utilities. Unless otherwise
 10798	specified the command or utility is described in the Single UNIX Specification
 10799	(SUS). When an interface is not defined in the SUS, then the next prevailing
 10800	standard is referenced (ie., POSIX, SVID).
 10801	
 10802	The behaviour of the interfaces described in this section are specified by the
 10803	following Standards.
 10804	
 10805	Linux Standard Base [35]
 10806	CAE Specification, January 1997, Commands and Utilities (XCU), Issue 5(ISBN:
 10807	1-85912-191-8, C604) [36]
 10808	
 10809	Table 14-1. Commands and Utilities
 10810	
 10811	+------------------------------------------------------------------------+
 10812	|ar [35]     |at [35]      |awk [35]     |basename [36]   |batch [35]    |
 10813	|------------+-------------+-------------+----------------+--------------|
 10814	|bc [35]     |cat [35]     |chfn [35]    |chgrp [35]      |chmod [35]    |
 10815	|------------+-------------+-------------+----------------+--------------|
 10816	|chown [36]  |chsh [35]    |cksum [36]   |cmp [36]        |col [35]      |
 10817	|------------+-------------+-------------+----------------+--------------|
 10818	|comm [36]   |cp [35]      |cpio [35]    |crontab [35]    |csplit [35]   |
 10819	|------------+-------------+-------------+----------------+--------------|
 10820	|cut [35]    |date [35]    |dd [35]      |df [35]         |diff [35]     |
 10821	|------------+-------------+-------------+----------------+--------------|
 10822	|dirname [36]|du [35]      |echo [35]    |egrep [35]      |env [35]      |
 10823	|------------+-------------+-------------+----------------+--------------|
 10824	|expand [35] |expr [35]    |false [36]   |fgrep [35]      |file [35]     |
 10825	|------------+-------------+-------------+----------------+--------------|
 10826	|find [35]   |fold [36]    |fuser [35]   |gencat [35]     |getconf [36]  |
 10827	|------------+-------------+-------------+----------------+--------------|
 10828	|grep [35]   |groupadd [35]|groupdel [35]|groupmod [35]   |groups [35]   |
 10829	|------------+-------------+-------------+----------------+--------------|
 10830	|gunzip [35] |gzip [35]    |head [35]    |hostname [35]   |iconv [35]    |
 10831	|------------+-------------+-------------+----------------+--------------|
 10832	|id [36]     |install [35] |ipcrm [35]   |ipcs [35]       |join [36]     |
 10833	|------------+-------------+-------------+----------------+--------------|
 10834	|kill [36]   |killall [35] |ln [35]      |locale [36]     |localedef [36]|
 10835	|------------+-------------+-------------+----------------+--------------|
 10836	|logname [36]|lpr [35]     |ls [35]      |lsb_release [35]|m4 [35]       |
 10837	|------------+-------------+-------------+----------------+--------------|
 10838	|make [35]   |man [35]     |md5sum [35]  |mkdir [35]      |mkfifo [36]   |
 10839	|------------+-------------+-------------+----------------+--------------|
 10840	|mknod [35]  |mktemp [35]  |more [35]    |mount [35]      |mv [35]       |
 10841	|------------+-------------+-------------+----------------+--------------|
 10842	|newgrp [35] |nice [35]    |nl [35]      |nohup [35]      |od [35]       |
 10843	|------------+-------------+-------------+----------------+--------------|
 10844	|passwd [35] |paste [35]   |patch [35]   |pathchk [35]    |pidof [35]    |
 10845	|------------+-------------+-------------+----------------+--------------|
 10846	|pr [35]     |printf [35]  |ps [36]      |pwd [35]        |renice [35]   |
 10847	|------------+-------------+-------------+----------------+--------------|
 10848	|rm [35]     |rmdir [35]   |rsync [35]   |sed [35]        |sendmail [35] |
 10849	|------------+-------------+-------------+----------------+--------------|
 10850	|sh [36]     |sleep [35]   |sort [35]    |split [35]      |strip [35]    |
 10851	|------------+-------------+-------------+----------------+--------------|
 10852	|stty [36]   |su [35]      |sum [35]     |sync [35]       |tail [35]     |
 10853	|------------+-------------+-------------+----------------+--------------|
 10854	|tar [35]    |tee [35]     |test [35]    |time [35]       |touch [35]    |
 10855	|------------+-------------+-------------+----------------+--------------|
 10856	|tr [35]     |true [36]    |tsort [36]   |tty [35]        |umount [35]   |
 10857	|------------+-------------+-------------+----------------+--------------|
 10858	|uname [35]  |unexpand [35]|uniq [35]    |useradd [35]    |userdel [35]  |
 10859	|------------+-------------+-------------+----------------+--------------|
 10860	|usermod [35]|wc [35]      |xargs [35]   |                |              |
 10861	+------------------------------------------------------------------------+
 10862	-------------------------------------------------------------------------------
 10863	
 10864	Command Behavior
 10865	
 10866	Table of Contents
 10867	ar ?? create and maintain library archives
 10868	at ?? examine or delete jobs for later execution
 10869	awk ?? pattern scanning and processing language
 10870	batch ?? execute commands when the system load permits
 10871	bc ?? An arbitrary precision calculator language
 10872	cat ?? concatenate and print files
 10873	chfn ?? change user name and information
 10874	chgrp ?? change group ownership
 10875	chmod ?? change file access permissions
 10876	chown ?? change file access permissions
 10877	chsh ?? change login shell
 10878	col ?? filter reverse line feeds from input
 10879	cp ?? copy files and directories
 10880	cpio ?? copy file archives in and out
 10881	csplit ?? split a file into sections determined by context lines
 10882	crontab ?? maintain crontab files for individual users
 10883	cut ?? split a file into sections determined by context lines
 10884	date ?? print or set the system date and time
 10885	dd ?? convert and copy a file
 10886	df ?? report filesystem disk space usage
 10887	diff ?? find differences between two files
 10888	dmesg ?? print or control the kernel ring buffer
 10889	du ?? estimate file space usage
 10890	echo ?? display a line of text
 10891	egrep ?? search a file with an ERE pattern
 10892	env ?? run a program in a modified environment
 10893	expand ?? convert tabs to spaces
 10894	expr ?? evaluate expressions
 10895	fgrep ?? search a file with an ERE pattern
 10896	file ?? determine file type
 10897	find ?? search for files in a directory hierarchy
 10898	fuser ?? identify processes using files or sockets
 10899	gencat ?? generate a formatted message catalogue
 10900	grep ?? print lines matching a pattern
 10901	groupadd ?? Create a new group
 10902	groupdel ?? Delete a group
 10903	groupmod ?? Modify a group
 10904	groups ?? Display a group
 10905	gzip ?? compress or expand files
 10906	gunzip ?? uncompress files
 10907	head ?? output the first part of files
 10908	hostname ?? show the system's host name
 10909	iconv ?? show the system's host name
 10910	install ?? copy files and set attributes
 10911	ipcrm ?? Create a new user or update default new user information
 10912	ipcs ?? copy files and set attributes
 10913	killall ?? kill processes by name
 10914	ln ?? make links between files
 10915	localedef ?? split a file into sections determined by context lines
 10916	login ?? Begin session on the system
 10917	lpr ?? off line print
 10918	ls ?? list directory contents
 10919	lsb_release ?? print distribution specific information
 10920	m4 ?? macro processor
 10921	make ?? maintain, update and regenerate groups of programs
 10922	man ?? display system documentation
 10923	md5sum ?? generates or checks MD5 message digests
 10924	mkdir ?? make directories
 10925	mknod ?? make block or character special files
 10926	mktemp ?? make temporary file name (unique)
 10927	more ?? file perusal filter for crt viewing
 10928	mount ?? Create a new user or update default new user information
 10929	mv ?? move (rename) files
 10930	newgrp ?? Change group ID
 10931	nice ?? nice run a program with modified scheduling priority
 10932	nl ?? number lines of files
 10933	nohup ?? nohup run a command immune to hangups, with output to a non-tty
 10934	od ?? dump files in octal and other formats
 10935	passwd ?? change user password
 10936	paste ?? merge lines of files
 10937	patch ?? apply a diff file to an original
 10938	pathchk ?? check whether file names are valid or portable.
 10939	pidof ?? find the process ID of a running program.
 10940	pr ?? split a file into sections determined by context lines
 10941	printf ?? and print data.
 10942	pwd ?? print name of current/working directory.
 10943	renice ?? alter priority of running processes
 10944	rm ?? remove files or directories.
 10945	rmdir ?? remove empty directories.
 10946	rsync ?? faster, flexible replacement for rcp
 10947	sed ?? stream editor
 10948	sendmail ?? an electronic mail transport agent
 10949	shutdown ?? bring the system down
 10950	sleep ?? delay for a specified amount of time
 10951	sort ?? sort, merge or sequence check text files
 10952	split ?? split a file into pieces
 10953	strip ?? remove unnecessary information from executable files
 10954	su ?? Change user ID or become super-user
 10955	sum ?? print checksum and block count of a file
 10956	sync ?? flush filesystem buffers
 10957	tail ?? output the last part of files
 10958	tar ?? file archiver
 10959	tee ?? read from standard input and write to standard output and files
 10960	test ?? check file types and compare values
 10961	time ?? run programs and summarize system resource usage
 10962	touch ?? change file access and modification times
 10963	tr ?? translate or delete characters
 10964	tty ?? print the file name of the terminal connected to standard input
 10965	umount ?? unmount file systems
 10966	uname ?? return system name
 10967	unexpand ?? convert spaces to tabs
 10968	uniq ?? remove duplicate lines from a sorted file
 10969	useradd ?? Create a new user or update default new user information
 10970	userdel ?? Delete a user account and related files
 10971	usermod ?? Modify a user account
 10972	wc ?? print the number of bytes, words, and lines in files
 10973	xargs ?? build and execute command lines from standard input
 10974	
 10975	This section contains descriptions of commands that are not documented by other
 10976	standards, or descriptions of the difference from other standards.
 10977	
 10978	ar
 10979	
 10980	Name
 10981	
 10982	ar -- create and maintain library archives
 10983	
 10984	Description
 10985	
 10986	The specification for "ar" is as specified in the SUS but with the following
 10987	differences as listed below.
 10988	
 10989	Differences
 10990	
 10991	-f
 10992	
 10993	    equivalent to -T as defined by the SUS.
 10994	
 10995	-l
 10996	
 10997	    this option is accepted but causes none of the actions specified by the
 10998	    SUS.
 10999	
 11000	-q
 11001	
 11002	    similar to the behavior specified by the SUS, with the addition that the
 11003	    symbol table is updated. Using -qS will give the SUS specified behavior,
 11004	    although the increased speed may not be experienced from this
 11005	    implementation.
 11006	
 11007	at
 11008	
 11009	Name
 11010	
 11011	at -- examine or delete jobs for later execution
 11012	
 11013	Description
 11014	
 11015	The specification for "at" is as specified in the SUS but with the following
 11016	differences as listed below.
 11017	
 11018	Differences
 11019	
 11020	-c
 11021	
 11022	    cats the jobs listed on the command line to standard output.
 11023	
 11024	-d
 11025	
 11026	    This option is functionally equivalent to the -r option specified in the
 11027	    SUS.
 11028	
 11029	-r
 11030	
 11031	    This option is not supported but the '-d' option is equivalent.
 11032	
 11033	-t time
 11034	
 11035	    This option is not supported.
 11036	
 11037	-V
 11038	
 11039	    Prints the version number to standard error.
 11040	
 11041	-v
 11042	
 11043	    Shows the time the job will be executed.
 11044	
 11045	FILES
 11046	
 11047	    The files at.allow and at.deny reside in /etc rather than /usr/lib/cron.
 11048	
 11049	awk
 11050	
 11051	Name
 11052	
 11053	awk -- pattern scanning and processing language
 11054	
 11055	Description
 11056	
 11057	The specification for "awk" is as specified in the SUS with no differences.
 11058	"gawk" and "mawk" are SUS compliant implementations of the awk language.
 11059	
 11060	batch
 11061	
 11062	Name
 11063	
 11064	batch -- execute commands when the system load permits
 11065	
 11066	Synopsis
 11067	
 11068	batch [-V] [-q queue] [-f file] [-mv] [TIME]
 11069	
 11070	Description
 11071	
 11072	batch read commands from standard input or a specified file which are to be
 11073	executed at a later time, using /bin/sh
 11074	
 11075	Differences
 11076	
 11077	-f file
 11078	
 11079	    Reads the job from file rather than standard input.
 11080	
 11081	-m
 11082	
 11083	    Send mail to the user when the job has completed even if there was no
 11084	    output.
 11085	
 11086	-q queue
 11087	
 11088	    uses the specified queue. A queue designation consists of a single letter;
 11089	    valid queue designations range from a to z. and A to Z. The a queue is the
 11090	    default for at and the b queue for batch. Queues with higher letters run
 11091	    with increased niceness. The special queue "=" is reserved for jobs which
 11092	    are currently running.
 11093	
 11094	-V
 11095	
 11096	    Prints the version number to standard error.
 11097	
 11098	-v
 11099	
 11100	    Shows the time the job will be executed.
 11101	
 11102	FILES
 11103	
 11104	    The files at.allow and at.deny reside in /etc rather than /usr/lib/cron.
 11105	
 11106	bc
 11107	
 11108	Name
 11109	
 11110	bc -- An arbitrary precision calculator language
 11111	
 11112	Description
 11113	
 11114	The specification for "bc" is as specified in the SUS but with the following
 11115	differences as listed below.
 11116	
 11117	Differences
 11118	
 11119	-q, --quiet
 11120	
 11121	    Do not print the normal welcome message.
 11122	
 11123	-s, --standard
 11124	
 11125	    Process exactly the POSIX bc language.
 11126	
 11127	-v, --version
 11128	
 11129	    Print the version number and copyright and quit.
 11130	
 11131	-w, --warn
 11132	
 11133	    Give warnings for extensions to POSIX bc.
 11134	
 11135	cat
 11136	
 11137	Name
 11138	
 11139	cat -- concatenate and print files
 11140	
 11141	Description
 11142	
 11143	The specification for "cat" is as specified in the SUS but with the following
 11144	differences as listed below.
 11145	
 11146	Differences
 11147	
 11148	-A, --show-all
 11149	
 11150	    equivalent to -vET
 11151	
 11152	-b, --number-nonblank
 11153	
 11154	    number nonblank output lines.
 11155	
 11156	-e
 11157	
 11158	    equivalent to -vE.
 11159	
 11160	-E, --show-ends
 11161	
 11162	    display $ at end of each line.
 11163	
 11164	-n, --number
 11165	
 11166	    number all output lines.
 11167	
 11168	-s, --squeeze-blank
 11169	
 11170	    never more than one single blank line.
 11171	
 11172	-t
 11173	
 11174	    equivalent to -vT.
 11175	
 11176	-T, --showtabs
 11177	
 11178	    display TAB characters as ^I.
 11179	
 11180	-u
 11181	
 11182	    unlike as specified in the SUS, this option is silently ignored.
 11183	
 11184	-v, --show-nonprinting
 11185	
 11186	    use ^ and M- notation, except for LFD and TAB.
 11187	
 11188	--version
 11189	
 11190	    output version information and exit.
 11191	
 11192	chfn
 11193	
 11194	Name
 11195	
 11196	chfn -- change user name and information
 11197	
 11198	Synopsis
 11199	
 11200	chfn [-f full_name] [-r room_no]
 11201	     [-w work_ph] [-h home_ph] [-o other] [user]
 11202	
 11203	Description
 11204	
 11205	chfn changes user fullname, office number, office extension, and home phone
 11206	number information for a user's account. This information is typically printed
 11207	by finger and similar programs. A normal user may only change the fields for
 11208	their own account, the super user may change the fields for any account. Also,
 11209	only the super user may use the -o option to change the undefined portions of
 11210	the GCOS field.
 11211	
 11212	The only restrictions placed on the contents of the fields is that no control
 11213	characters may be present, nor any of comma, colon, or equal sign. The other
 11214	field does not have this restriction, and is used to store accounting
 11215	information used by other applications.
 11216	
 11217	If none of the options are selected, chfn operates in an interactive fashion,
 11218	prompting the user with the current values for all of the fields. Enter the new
 11219	value to change the field, or leave the line blank to use the current value.
 11220	The current value is displayed between a pair of [ ] marks. Without options,
 11221	chfn prompts for the current user account.
 11222	
 11223	As it is possible for the system to be configured to restrict which fields a
 11224	non-privileged user is permitted to change, applications should be written to
 11225	gracefully handle these situations.
 11226	
 11227	Standard Options
 11228	
 11229	-f full_name
 11230	
 11231	    Set the user's full name.
 11232	
 11233	-r room_no
 11234	
 11235	    Set the user's room number.
 11236	
 11237	-w work_ph
 11238	
 11239	    Set the user's work phone number.
 11240	
 11241	-h home_ph
 11242	
 11243	    Set the user's home phone number.
 11244	
 11245	-o other
 11246	
 11247	    Set the contents of the other field.
 11248	
 11249	chgrp
 11250	
 11251	Name
 11252	
 11253	chgrp -- change group ownership
 11254	
 11255	Synopsis
 11256	
 11257	chgrp [OPTION]... GROUP FILE...
 11258	chgrp [OPTION]... --reference=RFILE FILE...
 11259	
 11260	Description
 11261	
 11262	The specification for "chgrp" is as specified in the SUS but with the following
 11263	differences as listed below.
 11264	
 11265	Differences
 11266	
 11267	-c, --changes
 11268	
 11269	    like verbose but report only when a change is made
 11270	
 11271	--dereference
 11272	
 11273	    affect the referent of each symbolic link, rather than the symbolic link
 11274	    itself
 11275	
 11276	-h, --no-dereference
 11277	
 11278	    affect symbolic links instead of any referenced file (available only on
 11279	    systems that can change the ownership of a symlink)
 11280	
 11281	-f, --silent, --quiet
 11282	
 11283	    suppress most error messages
 11284	
 11285	--reference=RFILE
 11286	
 11287	    use RFILE's group rather than the specified GROUP value
 11288	
 11289	-v, --verbose
 11290	
 11291	    output a diagnostic for every file processed
 11292	
 11293	--version
 11294	
 11295	    output version information and exit
 11296	
 11297	chmod
 11298	
 11299	Name
 11300	
 11301	chmod -- change file access permissions
 11302	
 11303	Synopsis
 11304	
 11305	chmod [OPTION]... MODE[,MODE]... FILE...
 11306	chmod [OPTION]... OCTAL-MODE FILE...
 11307	chmod [OPTION]... --reference=RFILE FILE...
 11308	
 11309	Description
 11310	
 11311	The specification for "chmod" is as specified in the SUS but with the following
 11312	differences as listed below.
 11313	
 11314	Differences
 11315	
 11316	-c, --changes
 11317	
 11318	    like verbose but report only when a change is made
 11319	
 11320	-f, --silent, --quiet
 11321	
 11322	    suppress most error messages
 11323	
 11324	--reference=RFILE
 11325	
 11326	    use RFILE's mode instead of MODE values
 11327	
 11328	-v, --verbose
 11329	
 11330	    output a diagnostic for every file processed
 11331	
 11332	--version
 11333	
 11334	    output version information and exit
 11335	
 11336	chown
 11337	
 11338	Name
 11339	
 11340	chown -- change file access permissions
 11341	
 11342	Synopsis
 11343	
 11344	chown [OPTION]... OWNER[:[GROUP]] FILE...
 11345	chown [OPTION]... :GROUP FILE...
 11346	chown [OPTION]... --reference=RFILE FILE...
 11347	
 11348	Description
 11349	
 11350	The specification for "chown" is as specified in the SUS but with the following
 11351	differences as listed below.
 11352	
 11353	Differences
 11354	
 11355	-c, --changes
 11356	
 11357	    like verbose but report only when a change is made
 11358	
 11359	--dereference
 11360	
 11361	    affect the referent of each symbolic link, rather than the symbolic link
 11362	    itself
 11363	
 11364	-h, --no-dereference
 11365	
 11366	    affect symbolic links instead of any referenced file (available only on
 11367	    systems that can change the ownership of a symlink)
 11368	
 11369	--from=CURRENT_OWNER:CURRENT_GROUP
 11370	
 11371	    change the owner and/or group of each file only if its current owner and/or
 11372	    group match those specified here. Either may be omitted, in which case a
 11373	    match is not required for the omitted attribute.
 11374	
 11375	-f, --silent, --quiet
 11376	
 11377	    suppress most error messages
 11378	
 11379	--reference=RFILE
 11380	
 11381	    use RFILE's owner and group rather than the specified OWNER:GROUP values
 11382	
 11383	-v, --verbose
 11384	
 11385	    output a diagnostic for every file processed
 11386	
 11387	--version
 11388	
 11389	    output version information and exit
 11390	
 11391	Note
 11392	
 11393	 The use of the '.' character as a separator between the specification of the
 11394	user name and group name is supported (in addition to the use of the ':'
 11395	character as specified in the SUS).
 11396	
 11397	chsh
 11398	
 11399	Name
 11400	
 11401	chsh -- change login shell
 11402	
 11403	Synopsis
 11404	
 11405	chsh [-s login_shell] [user]
 11406	
 11407	Description
 11408	
 11409	chsh changes the user login shell. This determines the name of the user's
 11410	initial login command. A normal user may only change the login shell for their
 11411	own account, the super user may change the login shell for any account.
 11412	
 11413	The only restrictions placed on the login shell is that the command name must
 11414	be listed in /etc/shells, unless the invoker is the super-user, and then any
 11415	value may be added. An account with a restricted login shell may not change
 11416	their login shell.
 11417	
 11418	If the -s option is not selected, chsh operates in an interactive fashion,
 11419	prompting the user with the current login shell. Enter the new value to change
 11420	the field, or leave the line blank to use the current value. The current value
 11421	is displayed between a pair of [ ] marks.
 11422	
 11423	Standard Options
 11424	
 11425	-s login_shell
 11426	
 11427	    Set the login shell.
 11428	
 11429	col
 11430	
 11431	Name
 11432	
 11433	col -- filter reverse line feeds from input
 11434	
 11435	Note
 11436	
 11437	The "col" command does not support the "-p" option as specified in SUS.
 11438	
 11439	cp
 11440	
 11441	Name
 11442	
 11443	cp -- copy files and directories
 11444	
 11445	Synopsis
 11446	
 11447	Description
 11448	
 11449	The specification for "cp" is as specified in the SUS but with the following
 11450	differences as listed below.
 11451	
 11452	Differences
 11453	
 11454	-a archive
 11455	
 11456	    same as -dpR
 11457	
 11458	--backup[=CONTROL]
 11459	
 11460	    make a backup of each existing destination file
 11461	
 11462	-b
 11463	
 11464	    like --backup but does not accept an argument
 11465	
 11466	-d, --no-dereference
 11467	
 11468	    never follow symbolic links
 11469	
 11470	-H
 11471	
 11472	    follow command-line symbolic links
 11473	
 11474	-l, --link
 11475	
 11476	    link files instead of copying
 11477	
 11478	-L, --dereference
 11479	
 11480	    always follow symbolic links
 11481	
 11482	--parents
 11483	
 11484	    append source path to DIRECTORY
 11485	
 11486	--remove-destination
 11487	
 11488	    remove each existing destination file before attempting to open it
 11489	    (contrast with --force)
 11490	
 11491	--sparse=WHEN
 11492	
 11493	    control creation of spares files.
 11494	
 11495	    By default, sparse SOURCE files are detected by a crude heuristic and the
 11496	    corresponding DEST file is made sparse as well. That is the behavior
 11497	    selected by --sparse=auto. Specify --sparse=always to create a sparse DEST
 11498	    file whenever the SOURCE file contains a long enough sequence of zero
 11499	    bytes. Use --sparse=never to inhibit creation of sparse files.
 11500	
 11501	--strip-trailing-slashes
 11502	
 11503	    remove any trailing slashes from each SOURCE argument
 11504	
 11505	-s, --symbolic-link
 11506	
 11507	    make symbolic links instead of copying
 11508	
 11509	-S, --suffix=SUFFIX
 11510	
 11511	    override the usual backup suffix
 11512	
 11513	--target-directory=DIRECTORY
 11514	
 11515	    move all SOURCE arguments into DIRECTORY
 11516	
 11517	-u, --update
 11518	
 11519	    copy only when the SOURCE file is newer than the destination file or when
 11520	    the destination file is missing
 11521	
 11522	-v, --verbose
 11523	
 11524	    explain what is being done
 11525	
 11526	-x, --one-file-system
 11527	
 11528	    stay on this file system
 11529	
 11530	--version
 11531	
 11532	    output version information and exit
 11533	
 11534	cpio
 11535	
 11536	Name
 11537	
 11538	cpio -- copy file archives in and out
 11539	
 11540	Description
 11541	
 11542	The specification for "cpio" is as specified in the SUS. While additional
 11543	features my be found in Linux versions of this command, the SUS specified
 11544	interface is correctly and completely implemented.
 11545	
 11546	csplit
 11547	
 11548	Name
 11549	
 11550	csplit -- split a file into sections determined by context lines
 11551	
 11552	Description
 11553	
 11554	The specification for "csplit" is as specified in the SUS but with the
 11555	following differences as listed below.
 11556	
 11557	Differences
 11558	
 11559	-b, --sufix-=FORMAT
 11560	
 11561	    use sprintf FORMAT instead of %d
 11562	
 11563	--quiet, --silent
 11564	
 11565	    These options are equivalent to the -s option as specified in the SUS
 11566	
 11567	-z, --elide-empty-files
 11568	
 11569	    remove empty output files
 11570	
 11571	--version
 11572	
 11573	    output version information and exit
 11574	
 11575	crontab
 11576	
 11577	Name
 11578	
 11579	crontab -- maintain crontab files for individual users
 11580	
 11581	Synopsis
 11582	
 11583	crontab [ -u user ] file
 11584	crontab [ -u user ] { -l | -r | -e }
 11585	
 11586	Description
 11587	
 11588	The specification for "crontab" is as specified in the SUS but with the
 11589	following differences as listed below.
 11590	
 11591	Differences
 11592	
 11593	-u user
 11594	
 11595	    specifies the name of the user whose crontab is to be used, rather than the
 11596	    user who is running crontab
 11597	
 11598	FILES
 11599	
 11600	    The files cron.allow and cron.deny reside in /etc rather than /usr/lib/
 11601	    cron.
 11602	
 11603	cut
 11604	
 11605	Name
 11606	
 11607	cut -- split a file into sections determined by context lines
 11608	
 11609	Description
 11610	
 11611	The specification for "cut" is as specified in the SUS but with the following
 11612	differences as listed below.
 11613	
 11614	Differences
 11615	
 11616	-n
 11617	
 11618	    This option as specified in the SUS is not supported
 11619	
 11620	--version
 11621	
 11622	    output version information and exit
 11623	
 11624	date
 11625	
 11626	Name
 11627	
 11628	date -- print or set the system date and time
 11629	
 11630	Description
 11631	
 11632	The specification for "date" is as specified in the SUS but with the following
 11633	differences as listed below.
 11634	
 11635	Differences
 11636	
 11637	-d, --date=STRING
 11638	
 11639	    display time described by STRING, not now
 11640	
 11641	-f, --file=DATAFILE
 11642	
 11643	    like --date once for each line of DATEFILE
 11644	
 11645	-r, --reference=FILE
 11646	
 11647	    display the last modification time of FILE
 11648	
 11649	-R, --rfc-822
 11650	
 11651	    output RFC-822 compliant date string
 11652	
 11653	-s, --set=STRING
 11654	
 11655	    set time described by STRING
 11656	
 11657	--utc, --universal
 11658	
 11659	    equivalent to the -u option as specified in the SUS
 11660	
 11661	--version
 11662	
 11663	    output version information and exit
 11664	
 11665	dd
 11666	
 11667	Name
 11668	
 11669	dd -- convert and copy a file
 11670	
 11671	Description
 11672	
 11673	The specification for "dd" is as specified in the SUS but with the following
 11674	differences as listed below.
 11675	
 11676	Differences
 11677	
 11678	SWAB
 11679	
 11680	    this keyword to the CONV= option causes alternate bytes to be swapped, just
 11681	    as the SUS declares. Unlike the SUS declaration, the odd character is not
 11682	    ignored, but is appended to the output instead.
 11683	
 11684	df
 11685	
 11686	Name
 11687	
 11688	df -- report filesystem disk space usage
 11689	
 11690	Description
 11691	
 11692	The specification for "df" is as specified in the SUS but with the following
 11693	differences as listed below.
 11694	
 11695	Disk space is shown in 1K blocks by default, unless the environment variable
 11696	POSIXLY_CORRECT is set, in which case 512-byte blocks are used.
 11697	
 11698	If an argument is the absolute file name of a disk device node containing a
 11699	mounted filesystem, df shows the space available on that filesystem rather than
 11700	on the filesystem containing the device node (which is always the root
 11701	filesystem)
 11702	
 11703	Differences
 11704	
 11705	-a, --all
 11706	
 11707	    include filesystems having 0 blocks
 11708	
 11709	--block-size=SIZE
 11710	
 11711	    use SIZE-byte blocks
 11712	
 11713	-h, --human-readable
 11714	
 11715	    print sizes in human readable (e.g., 1K 234M 2G)
 11716	
 11717	-H, --si
 11718	
 11719	    likewise, but use powers of 1000 not 1024
 11720	
 11721	-i, --inodes
 11722	
 11723	    list inode information instead of block usage
 11724	
 11725	-l, --local
 11726	
 11727	    limit listing to local filesystems
 11728	
 11729	-l, --local
 11730	
 11731	    limit listing to local filesystems
 11732	
 11733	-m, --megabytes
 11734	
 11735	    like --block-size=1048576
 11736	
 11737	--no-sync
 11738	
 11739	    do not invoke sync before getting usage info (default)
 11740	
 11741	-P, --portability
 11742	
 11743	    use the POSIX output
 11744	
 11745	--sync
 11746	
 11747	    invoke sync before getting usage info
 11748	
 11749	-t, --type=TYPE
 11750	
 11751	    use the POSIX output
 11752	
 11753	--portability
 11754	
 11755	    Same as the -P option as specified in SUS
 11756	
 11757	--sync
 11758	
 11759	    invoke sync before getting usage info
 11760	
 11761	-t, --type=TYPE
 11762	
 11763	    This option is different from what is specified in the SUS.
 11764	
 11765	    limit listing to filesystems of type TYPE
 11766	
 11767	-T, --print-type
 11768	
 11769	    print filesystem type
 11770	
 11771	-x, --exclude-type=TYPE
 11772	
 11773	    limit listing to filesystems not of type TYPE
 11774	
 11775	diff
 11776	
 11777	Name
 11778	
 11779	diff -- find differences between two files
 11780	
 11781	Description
 11782	
 11783	The specification for "diff" is as specified in the SUS but with the following
 11784	differences as listed below.
 11785	
 11786	If an argument is the absolute file name of a disk device node containing a
 11787	mounted filesystem, df shows the space available on that filesystem rather than
 11788	on the filesystem containing the device node (which is always the root
 11789	filesystem)
 11790	
 11791	Differences
 11792	
 11793	-a
 11794	
 11795	    Treat all files as text and compare them line-by- line, even if they do not
 11796	    seem to be text.
 11797	
 11798	-B
 11799	
 11800	    Ignore changes that just insert or delete blank lines.
 11801	
 11802	--brief
 11803	
 11804	    Report only whether the files differ, not the details of the differences.
 11805	
 11806	--context[=lines]
 11807	
 11808	    Equivalent to the -C option as specified in the SUS.
 11809	
 11810	-d
 11811	
 11812	    Change the algorithm to perhaps find a smaller set of changes. This makes
 11813	    diff slower (sometimes much slower).
 11814	
 11815	-D name
 11816	
 11817	    Make merged if-then-else output, conditional on the preprocessor macro
 11818	    name.
 11819	
 11820	--ed
 11821	
 11822	    Equivalent to the -e option as specified in the SUS
 11823	
 11824	--exclude=pattern
 11825	
 11826	    When comparing directories, ignore files and subdirectories whose basenames
 11827	    match pattern.
 11828	
 11829	--exclude-from=file
 11830	
 11831	    When comparing directories, ignore files and subdirectories whose basenames
 11832	    match any pattern contained in file.
 11833	
 11834	--expand-tabs
 11835	
 11836	    Expand tabs to spaces in the output, to preserve the alignment of tabs in
 11837	    the input files.
 11838	
 11839	-F regexp
 11840	
 11841	    In context and unified , for each hunk of differences, show some of the
 11842	    last preceding line that matches regexp.
 11843	
 11844	--forward-ed
 11845	
 11846	    Make output that looks vaguely like an ed script but has changes in the
 11847	    order they appear in the file.
 11848	
 11849	-H
 11850	
 11851	    Use heuristics to speed handling of large files that have numerous
 11852	    scattered small changes.
 11853	
 11854	--horizon-lines=lines
 11855	
 11856	    Do not discard the last lines lines of the common prefix and the first
 11857	    lines lines of the common suffix.
 11858	
 11859	-i
 11860	
 11861	    Ignore changes in case; consider upper and lower case letters equivalent.
 11862	
 11863	-I regexp
 11864	
 11865	    Ignore changes that just insert or delete lines that match regexp.
 11866	
 11867	--ifdef=name
 11868	
 11869	    Make merged if-then-else output, conditional on the preprocessor macro
 11870	    name.
 11871	
 11872	--ignore-all-space
 11873	
 11874	    Ignore white space when comparing lines.
 11875	
 11876	--ignore-case
 11877	
 11878	    Ignore changes in case; consider upper and lower case to be the same.
 11879	
 11880	--ignore-matching-lines=regexp
 11881	
 11882	    Ignore changes that just insert or delete lines that match regexp.
 11883	
 11884	--ignore-space-change
 11885	
 11886	    Ignore changes in amount of white space.
 11887	
 11888	--initial-tab
 11889	
 11890	    Output a tab rather than a space before the text of a line in normal or
 11891	    context . This causes the alignment of tabs in the line to look normal.
 11892	
 11893	-l
 11894	
 11895	    Pass the output through pr to paginate it.
 11896	
 11897	--ignore-case
 11898	
 11899	    Ignore changes in case; consider upper and lower case to be the same.
 11900	
 11901	dmesg
 11902	
 11903	Name
 11904	
 11905	dmesg -- print or control the kernel ring buffer
 11906	
 11907	Synopsis
 11908	
 11909	dmesg [ -c ] [ -n level ] [ -s bufsize ]
 11910	
 11911	Description
 11912	
 11913	dmesg is used to examine or control the kernel ring buffer.
 11914	
 11915	Standard Options
 11916	
 11917	-c
 11918	
 11919	    clear the ring buffer contents after printing.
 11920	
 11921	-n level
 11922	
 11923	    set the level at which logging of messages is done to the console.
 11924	
 11925	-s bufsize
 11926	
 11927	    use a buffer of bufsize to query the kernel ring buffer. This is 8196 by
 11928	    default (this matches the default kernel syslog buffer size in 2.0.33 and
 11929	    2.1.103). If you have set the kernel buffer to larger than the default then
 11930	    this option can be used to view the entire buffer.
 11931	
 11932	du
 11933	
 11934	Name
 11935	
 11936	du -- estimate file space usage
 11937	
 11938	Description
 11939	
 11940	The specification for "du" is as specified in the SUS but with the following
 11941	differences as listed below.
 11942	
 11943	Differences
 11944	
 11945	--block-size=SIZE
 11946	
 11947	    use SIZE-byte blocks
 11948	
 11949	-b, --bytes
 11950	
 11951	    print size in bytes
 11952	
 11953	-c, --total
 11954	
 11955	    produce a grand total
 11956	
 11957	-D, --dereference-args
 11958	
 11959	    dereference PATHs when symbolic link
 11960	
 11961	-h, --human-readable
 11962	
 11963	    print sizes in human readable (e.g., 1K 234M 2G)
 11964	
 11965	--kilobytes
 11966	
 11967	    equivalent to --block-size=1024
 11968	
 11969	--l, --count-links
 11970	
 11971	    count sizes many times if hard linked
 11972	
 11973	-L, --dereference
 11974	
 11975	    dereference all symbolic links
 11976	
 11977	-m, --megabytes
 11978	
 11979	    equivalent to --block-size=1048576
 11980	
 11981	-r
 11982	
 11983	    This option (as specified in the SUS) is not supported
 11984	
 11985	-S, --separate-dirs
 11986	
 11987	    do not include size of subdirectories
 11988	
 11989	-X FILE, --exclude-from=FILE
 11990	
 11991	    Exclude files that match any pattern in FILE
 11992	
 11993	--exclude=PAT
 11994	
 11995	    Exclude files that match PAT
 11996	
 11997	--max-depth=N
 11998	
 11999	    print the total for a directory (or file, with --all) only if it is N or
 12000	    fewer levels below the command line argument; --max-depth=0 is the same as
 12001	    --summarize
 12002	
 12003	--version
 12004	
 12005	    output version information and exit
 12006	
 12007	echo
 12008	
 12009	Name
 12010	
 12011	echo -- display a line of text
 12012	
 12013	Synopsis
 12014	
 12015	echo [OPTION]... [STRING]...
 12016	
 12017	Description
 12018	
 12019	The specification for "echo" is as specified in the SUS but with the following
 12020	differences as listed below. Unlike as specified in the SUS the echo command
 12021	does support options.
 12022	
 12023	Differences
 12024	
 12025	-n
 12026	
 12027	    do not output the trailing newline
 12028	
 12029	-e
 12030	
 12031	    enable interpretation of the backslash-escaped characters listed below
 12032	
 12033	-E
 12034	
 12035	    disable interpretation of those sequences in STRINGs
 12036	
 12037	--version
 12038	
 12039	    output version information and exit (should be alone)
 12040	
 12041	egrep
 12042	
 12043	Name
 12044	
 12045	egrep -- search a file with an ERE pattern
 12046	
 12047	Description
 12048	
 12049	egrep is equivalent to grep -E. See the specification for grep for further
 12050	details
 12051	
 12052	env
 12053	
 12054	Name
 12055	
 12056	env -- run a program in a modified environment
 12057	
 12058	Description
 12059	
 12060	The specification for "env" is as specified in the SUS but with the following
 12061	differences as listed below.
 12062	
 12063	Differences
 12064	
 12065	--ignore-environment
 12066	
 12067	    equivalent to the -i option
 12068	
 12069	-u, --unset=NAME
 12070	
 12071	    remove variable from the environment
 12072	
 12073	expand
 12074	
 12075	Name
 12076	
 12077	expand -- convert tabs to spaces
 12078	
 12079	Description
 12080	
 12081	The specification for "expand" is as specified in the SUS but with the
 12082	following differences as listed below.
 12083	
 12084	Differences
 12085	
 12086	-i, --initial
 12087	
 12088	    do not convert TABs after non whitespace
 12089	
 12090	-t, --tabs=NUMBER
 12091	
 12092	    In addition to the behaviour for -t as specified in the SUS, the argument
 12093	    may also be a number which specifies the number of characters apart tabs
 12094	    are instead of 8.
 12095	
 12096	expr
 12097	
 12098	Name
 12099	
 12100	expr -- evaluate expressions
 12101	
 12102	Description
 12103	
 12104	The specification for "expr" is as specified in the SUS but with the some extra
 12105	operands supported
 12106	
 12107	Extra operands
 12108	
 12109	match STRING REGEXP
 12110	
 12111	    same as STRING : REGEXP
 12112	
 12113	substr STRING POS LENGTH
 12114	
 12115	    substring of STRING, POS counted from 1
 12116	
 12117	index STRING CHARS
 12118	
 12119	    index in STRING where any CHARS is found, or 0
 12120	
 12121	length STRING
 12122	
 12123	    length of STRING
 12124	
 12125	quote STRING
 12126	
 12127	    interpret TOKEN as a string, even if it is a keyword like match or an
 12128	    operator like /
 12129	
 12130	fgrep
 12131	
 12132	Name
 12133	
 12134	fgrep -- search a file with an ERE pattern
 12135	
 12136	Description
 12137	
 12138	fgrep is equivalent to grep -F. See the specification for grep for further
 12139	details
 12140	
 12141	file
 12142	
 12143	Name
 12144	
 12145	file -- determine file type
 12146	
 12147	Description
 12148	
 12149	The specification for "file" is as specified in the SUS but with the additional
 12150	options as specified below.
 12151	
 12152	Additional Options
 12153	
 12154	-b, --brief
 12155	
 12156	    Do not prepend filenames to output lines
 12157	
 12158	-c, --checking-printout
 12159	
 12160	    Cause a checking printout of the parsed form of the magic file. This is
 12161	    usually used in conjunction with -m to debug a new magic file before
 12162	    installing it.
 12163	
 12164	-f, --files-from namefile
 12165	
 12166	    Read the names of the files to be examined from namefile (one per line)
 12167	    before the argument list. Either namefile or at least one filename argument
 12168	    must be present; to test the standard input, use `-' as a filename
 12169	    argument.
 12170	
 12171	-i, --mime
 12172	
 12173	    Causes the file command to output mime type strings rather than the more
 12174	    traditional human readable ones. Thus it may say `text/plain; charset=
 12175	    us-ascii' rather than `ASCII text'. In order for this option to work, file
 12176	    changes the way it handles files recognized by the command itself (such as
 12177	    many of the text file types, directories etc), and makes use of an
 12178	    alternative `magic' file.
 12179	
 12180	-k, --keep-going
 12181	
 12182	    Don't stop at the first match, keep going.
 12183	
 12184	-m, --magic-file list
 12185	
 12186	    Specify an alternate list of files containing magic numbers. This can be a
 12187	    single file, or a colon-separated list of files.
 12188	
 12189	-n, --no-buffer
 12190	
 12191	    Force stdout to be flushed after checking each file. This is only useful if
 12192	    checking a list of files. It is intended to be used by programs that want
 12193	    filetype output from a pipe.
 12194	
 12195	-z, --uncompress
 12196	
 12197	    Try to look inside compressed files.
 12198	
 12199	-L, --dereference
 12200	
 12201	    This option causes symlinks to be followed.
 12202	
 12203	-s, --special-files
 12204	
 12205	    Normally, file only attempts to read and determine the type of argument
 12206	    files which stat(2) reports are ordinary files. This prevents problems,
 12207	    because reading special files may have peculiar consequences. Specifying
 12208	    the -s option causes file to also read argument files which are block or
 12209	    character special files. This is useful for determining the filesystem
 12210	    types of the data in raw disk partitions, which are block special files.
 12211	    This option also causes file to disregard the file size as reported by stat
 12212	    (2) since on some systems it reports a zero size for raw disk partitions.
 12213	
 12214	find
 12215	
 12216	Name
 12217	
 12218	find --  search for files in a directory hierarchy
 12219	
 12220	Description
 12221	
 12222	The specification for "find" is as specified in the SUS but with the additional
 12223	options as specified below.
 12224	
 12225	Additional Options
 12226	
 12227	-daystart
 12228	
 12229	    Measure times (for -amin, -atime, -cmin, -ctime, -mmin, and -mtime) from
 12230	    the beginning of today rather than from 24 hours ago.
 12231	
 12232	-follow
 12233	
 12234	    Dereference symbolic links. Implies -noleaf.
 12235	
 12236	-maxdepth levels
 12237	
 12238	    Descend at most levels (a non-negative integer) levels of directories below
 12239	    the command line arguments. -maxdepth 0 means only apply the tests and
 12240	    actions to the command line arguments.
 12241	
 12242	-mindepth levels
 12243	
 12244	    Do not apply any tests or actions at levels less than levels (a
 12245	    non-negative integer). -mindepth 1 means process all files except the
 12246	    command line arguments.
 12247	
 12248	-mount
 12249	
 12250	    Equivalent to -xdev as specified in the SUS.
 12251	
 12252	-noleaf
 12253	
 12254	    Do not optimize by assuming that directories contain 2 fewer subdirectories
 12255	    than their hard link count.
 12256	
 12257	-version
 12258	
 12259	    Print the find version number and exit.
 12260	
 12261	-amin n
 12262	
 12263	    File was last accessed n minutes ago.
 12264	
 12265	-anewer file
 12266	
 12267	    File was last accessed more recently than file was modified. -anewer is
 12268	    affected by -follow only if -follow comes before -anewer on the command
 12269	    line.
 12270	
 12271	-cmin n
 12272	
 12273	    File's status was last changed n minutes ago.
 12274	
 12275	-cnewer file
 12276	
 12277	    File's status was last changed more recently than file was modified.
 12278	    -cnewer is affected by -follow only if -follow comes before -cnewer on the
 12279	    command line.
 12280	
 12281	-empty
 12282	
 12283	    File is empty and is either a regular file or a directory.
 12284	
 12285	-false
 12286	
 12287	    Always false.
 12288	
 12289	-fstype type
 12290	
 12291	    File is on a filesystem of type type.
 12292	
 12293	-gid n
 12294	
 12295	    File's numeric group ID is n.
 12296	
 12297	-ilname pattern
 12298	
 12299	    Like -lname, but the match is case insensitive.
 12300	
 12301	-iname pattern
 12302	
 12303	    Like -name, but the match is case insensitive.
 12304	
 12305	-inum n
 12306	
 12307	    File has inode number n.
 12308	
 12309	-ipath path
 12310	
 12311	    Like -path, but the match is case insensitive.
 12312	
 12313	-iregex pattern
 12314	
 12315	    Like -regex, but the match is case insensitive.
 12316	
 12317	-lname
 12318	
 12319	    File is a symbolic link whose contents match shell pattern pattern. The
 12320	    metacharacters do not treat / or . specially.
 12321	
 12322	-mmin n
 12323	
 12324	    File's data was last modified n minutes ago.
 12325	
 12326	-nouser
 12327	
 12328	    No user corresponds to file's numeric user ID.
 12329	
 12330	-nogroup
 12331	
 12332	    No group corresponds to file's numeric group ID.
 12333	
 12334	-path pattern
 12335	
 12336	    File name matches shell pattern pattern.
 12337	
 12338	-perm +mode
 12339	
 12340	    Any of the permission bits mode are set for the file.
 12341	
 12342	-regex
 12343	
 12344	    File name matches regular expression pattern. This is a match on the whole
 12345	    path, not a search.
 12346	
 12347	-true
 12348	
 12349	    Always true.
 12350	
 12351	-type c
 12352	
 12353	    In addition to the types specified in the SUS, the letters l and s are also
 12354	    supported and refer to symbolic links and sockets respectively.
 12355	
 12356	-uid n
 12357	
 12358	    File's numeric user ID is n.
 12359	
 12360	-used
 12361	
 12362	    File was last accessed n days after its status was last changed.
 12363	
 12364	-xtype c
 12365	
 12366	    The same as -type unless the file is a symbolic link. For symbolic links:
 12367	    if -follow has not been given, true if the file is a link to a file of type
 12368	    c; if -follow has been given, true if c is l. In other words, for symbolic
 12369	    links, -xtype checks the type of the file that -type does not check.
 12370	
 12371	-fls file
 12372	
 12373	    True; like -ls but write to file like -fprint.
 12374	
 12375	-fprint file
 12376	
 12377	    True; print the full file name into file file. If file does not exist when
 12378	    find is run, it is cre- ated; if it does exist, it is truncated. The file
 12379	    names `/dev/stdout' and `/dev/stderr' are han- dled specially; they refer
 12380	    to the standard output and standard error output, respectively.
 12381	
 12382	-fprint0 file
 12383	
 12384	    True; like -print0 but write to file like -fprint.
 12385	
 12386	-fprintf file
 12387	
 12388	    True; like -printf but write to file like -fprint.
 12389	
 12390	-print0
 12391	
 12392	    True; print the full file name on the standard output, followed by a null
 12393	    character. This allows file names that contain newlines to be correctly
 12394	    interpreted by programs that process the find output.
 12395	
 12396	-printf
 12397	
 12398	    True; print on the standard output, inter- preting \ escapes and %
 12399	    directives. Field widths and precisions can be specified as with the printf
 12400	    C function. Unlike -print, -printf does not add a newline at the end of the
 12401	    string. The escapes and directives are:
 12402	
 12403	    \a
 12404	
 12405	        Alarm bell.
 12406	
 12407	    \b
 12408	
 12409	        Backspace.
 12410	
 12411	    \c
 12412	
 12413	        Stop printing from this immediately and flush the output.
 12414	
 12415	    \f
 12416	
 12417	        Form feed.
 12418	
 12419	    \n
 12420	
 12421	        Newline.
 12422	
 12423	    \r
 12424	
 12425	        Carriage return.
 12426	
 12427	    \t
 12428	
 12429	        Horizontal tab.
 12430	
 12431	    \v
 12432	
 12433	        Vertical tab.
 12434	
 12435	    \\
 12436	
 12437	        A literal backslash (\).
 12438	
 12439	    %%
 12440	
 12441	        A literal percent sign.
 12442	
 12443	    %a
 12444	
 12445	        File's last access time in the returned by the C ctime function.
 12446	
 12447	    %Ak
 12448	
 12449	        File's last access time in the specified by k, which is either @ or a
 12450	        directive for the C strftime function. The possible values for k are
 12451	        listed below; some of them might not be available on all systems, due
 12452	        to differences in strftime between systems.
 12453	
 12454	        @
 12455	
 12456	            seconds since Jan. 1, 1970, 00:00 GMT.
 12457	
 12458	        H
 12459	
 12460	            hour (00..23)
 12461	
 12462	        I
 12463	
 12464	            hour (01..12)
 12465	
 12466	        k
 12467	
 12468	            hour ( 0..23)
 12469	
 12470	        l
 12471	
 12472	            hour ( 1..12)
 12473	
 12474	        M
 12475	
 12476	            minute (00..59)
 12477	
 12478	        p
 12479	
 12480	            locale's AM or PM
 12481	
 12482	        r
 12483	
 12484	            time, 12-hour (hh:mm:ss [AP]M)
 12485	
 12486	        S
 12487	
 12488	            second (00..61)
 12489	
 12490	        T
 12491	
 12492	            time, 24-hour (hh:mm:ss)
 12493	
 12494	        X
 12495	
 12496	            locale's time representation (H:M:S)
 12497	
 12498	        Z
 12499	
 12500	            time zone (e.g., EDT), or nothing if no time zone is determinable
 12501	
 12502	        a
 12503	
 12504	            locale's abbreviated weekday name (Sun..Sat)
 12505	
 12506	        A
 12507	
 12508	            locale's full weekday name, variable length (Sunday..Saturday)
 12509	
 12510	        b
 12511	
 12512	            locale's abbreviated month name (Jan..Dec)
 12513	
 12514	        B
 12515	
 12516	            locale's full month name, variable
 12517	
 12518	        c
 12519	
 12520	            locale's date and time (Sat Nov 04 12:02:33 EST 1989)
 12521	
 12522	        d
 12523	
 12524	            day of month (01..31)
 12525	
 12526	        D
 12527	
 12528	            date (mm/dd/yy)
 12529	
 12530	        h
 12531	
 12532	            same as b
 12533	
 12534	        j
 12535	
 12536	            day of year (001.366)
 12537	
 12538	        m
 12539	
 12540	            month (01..12)
 12541	
 12542	        U
 12543	
 12544	            week number of year with Sunday as first day of week (00..53)
 12545	
 12546	        w
 12547	
 12548	            day of week (0..6)
 12549	
 12550	        W
 12551	
 12552	            week number of year with Monday as first day of week (00..53)
 12553	
 12554	        x
 12555	
 12556	            locale's date representation (mm/dd/yy)
 12557	
 12558	        y
 12559	
 12560	            last two digits of year (00..99)
 12561	
 12562	        Y
 12563	
 12564	            year (1970...)
 12565	
 12566	
 12567	
 12568	    %b
 12569	
 12570	        File's size in 512-byte blocks (rounded up).
 12571	
 12572	    %c
 12573	
 12574	        File's last status change time in the returned by the C ctime function.
 12575	
 12576	    %Ck
 12577	
 12578	        File's last status change time in the specified by k, which is the same
 12579	        as for %A.
 12580	
 12581	    %d
 12582	
 12583	        File's depth in the directory tree; 0 means the file is a command line
 12584	        argument.
 12585	
 12586	    %f
 12587	
 12588	        File's name with any leading directories removed (only the last
 12589	        element).
 12590	
 12591	    %F
 12592	
 12593	        Type of the filesystem the file is on; this value can be used for
 12594	        -fstype.
 12595	
 12596	    %g
 12597	
 12598	        File's group name, or numeric group ID if the group has no name.
 12599	
 12600	    %G
 12601	
 12602	        File's numeric group ID.
 12603	
 12604	    %h
 12605	
 12606	        Leading directories of file's name (all but the last element).
 12607	
 12608	    %H
 12609	
 12610	        Command line argument under which file was found.
 12611	
 12612	    %i
 12613	
 12614	        File's inode number (in decimal).
 12615	
 12616	    %k
 12617	
 12618	        File's size in 1K blocks (rounded up).
 12619	
 12620	    %l
 12621	
 12622	        Object of symbolic link (empty string if file is not a symbolic link).
 12623	
 12624	    %m
 12625	
 12626	        File's permission bits (in octal).
 12627	
 12628	    %n
 12629	
 12630	        Number of hard links to file.
 12631	
 12632	    %p
 12633	
 12634	        File's name.
 12635	
 12636	    %P
 12637	
 12638	        File's name with the name of the command line argument under which it
 12639	        was found removed.
 12640	
 12641	    %s
 12642	
 12643	        File's size in bytes.
 12644	
 12645	    %t
 12646	
 12647	        File's last modification time in the returned by the C ctime function.
 12648	
 12649	    %Tk
 12650	
 12651	        File's last modification time in the specified by k, which is the same
 12652	        as for %A.
 12653	
 12654	    %u
 12655	
 12656	        File's user name, or numeric user ID if the user has no name.
 12657	
 12658	    %U
 12659	
 12660	        File's numeric user ID.
 12661	
 12662	
 12663	
 12664	-ls
 12665	
 12666	    True; list current file in ls -dils on standard output. The block counts
 12667	    are of 1K blocks, unless the environment variable POSIXLY_CORRECT is set,
 12668	    in which case 512-byte blocks are used.
 12669	
 12670	Extra Operators
 12671	
 12672	    The following operators are supported in order of decreasing precedence.
 12673	    This overrides what is stated in the SUS.
 12674	
 12675	    ( expr )
 12676	
 12677	        Force precedence.
 12678	
 12679	    ! expr
 12680	
 12681	        True if expr is false
 12682	
 12683	    -not expr
 12684	
 12685	        Same as ! expr.
 12686	
 12687	    expr1 expr2
 12688	
 12689	        And (implied); expr2 is not evaluated if expr1 is false.
 12690	
 12691	    expr1 -a expr2
 12692	
 12693	        Same as expr1 expr2.
 12694	
 12695	    expr1 -and expr2
 12696	
 12697	        Same as expr1 expr2.
 12698	
 12699	    expr1 -o expr2
 12700	
 12701	        Or; expr2 is not evaluated if expr1 is true.
 12702	
 12703	    expr1 -or expr2
 12704	
 12705	        Same as expr1 -o expr2.
 12706	
 12707	    expr1, expr2
 12708	
 12709	        List; both expr1 and expr2 are always evaluated. The value of expr1 is
 12710	        discarded; the value of the list is the value of expr2.
 12711	
 12712	
 12713	
 12714	fuser
 12715	
 12716	Name
 12717	
 12718	fuser -- identify processes using files or sockets
 12719	
 12720	Description
 12721	
 12722	The specification for "fuser" is as specified in the SUS but with the following
 12723	differences as listed below.
 12724	
 12725	Differences
 12726	
 12727	-a
 12728	
 12729	    Show all files specified on the command line. By default, only files that
 12730	    are accessed by at least one process are shown.
 12731	
 12732	-c
 12733	
 12734	    This option as specified in the SUS is not supported.
 12735	
 12736	-f
 12737	
 12738	    This option as specified in the SUS is not supported.
 12739	
 12740	-k
 12741	
 12742	    Kill processes accessing the file. Unless changed with -signal, SIGKILL is
 12743	    sent. An fuser process never kills itself, but may kill other fuser
 12744	    processes. The effective user ID of the process executing fuser is set to
 12745	    its real user ID before attempting to kill.
 12746	
 12747	-i
 12748	
 12749	    Ask the user for confirmation before killing a process. This option is
 12750	    silently ignored if -k is not present too.
 12751	
 12752	-l
 12753	
 12754	    List all known signal names.
 12755	
 12756	-m
 12757	
 12758	    name specifies a file on a mounted file system or a block device that is
 12759	    mounted. All processes accessing files on that file system are listed. If a
 12760	    directory file is specified, it is automatically changed to name/. to use
 12761	    any file system that might be mounted on that directory.
 12762	
 12763	-n space
 12764	
 12765	    Select a different name space. The name spaces file (file names, the
 12766	    default), udp (local UDP ports), and tcp (local TCP ports) are supported.
 12767	    For ports, either the port number or the symbolic name can be specified. If
 12768	    there is no ambiguity, the shortcut notation name/space (e.g. name/proto)
 12769	    can be used.
 12770	
 12771	-s
 12772	
 12773	    Silent operation. -u and -v are ignored in this mode. -a must not be used
 12774	    with -s.
 12775	
 12776	-signal
 12777	
 12778	    Use the specified signal instead of SIGKILL when killing processes. Signals
 12779	    can be specified either by name (e.g. -HUP) or by number (e.g. -1).
 12780	
 12781	-v
 12782	
 12783	    Verbose mode.
 12784	
 12785	-V
 12786	
 12787	    Display version information.
 12788	
 12789	-
 12790	
 12791	    Reset all options and set the signal back to SIGKILL.
 12792	
 12793	gencat
 12794	
 12795	Name
 12796	
 12797	gencat -- generate a formatted message catalogue
 12798	
 12799	Description
 12800	
 12801	The specification for "gencat" is as specified in the SUS but with the
 12802	following differences as listed below.
 12803	
 12804	Differences
 12805	
 12806	-H, --header=NAME
 12807	
 12808	    Create C header file NAME containing symbol definitions
 12809	
 12810	--new
 12811	
 12812	    Do not use existing catalog, force new output file
 12813	
 12814	-o, --output=NAME
 12815	
 12816	    Write output to file NAME
 12817	
 12818	grep
 12819	
 12820	Name
 12821	
 12822	grep -- print lines matching a pattern
 12823	
 12824	Description
 12825	
 12826	The specification for "grep" is as specified in the SUS but with the following
 12827	differences as listed below.
 12828	
 12829	Differences
 12830	
 12831	-A NUM, --after-context=NUM
 12832	
 12833	    Print NUM lines of trailing context after matching lines.
 12834	
 12835	-a, --text
 12836	
 12837	    Process a binary file as if it were text; this is equivalent to the
 12838	    --binary-files=text option.
 12839	
 12840	-B NUM, --before-context=NUM
 12841	
 12842	    Print NUM lines of leading context before matching lines.
 12843	
 12844	-C [NUM], -NUM, --context[=NUM]
 12845	
 12846	    Print NUM lines (default 2) of output context.
 12847	
 12848	-b, --byte-offset
 12849	
 12850	    Print the byte offset within the input file before each line of output.
 12851	
 12852	--binary-files=TYPE
 12853	
 12854	    If the first few bytes of a file indicate that the file contains binary
 12855	    data, assume that the file is of type TYPE. By default, TYPE is binary, and
 12856	    grep normally outputs either a one-line message saying that a binary file
 12857	    matches, or no message if there is no match. If TYPE is without-match, grep
 12858	    assumes that a binary file does not match; this is equivalent to the -I
 12859	    option. If TYPE is text, grep processes a binary file as if it were text;
 12860	    this is equivalent to the -a option. Warning: grep --binary-files=text
 12861	    might output binary garbage, which can have nasty side effects if the
 12862	    output is a terminal and if the terminal driver interprets some of it as
 12863	    commands.
 12864	
 12865	-c, --count
 12866	
 12867	    Suppress normal output; instead print a count of matching lines for each
 12868	    input file. With the -v, --invert-match option (see below), count
 12869	    non-matching lines.
 12870	
 12871	-d ACTION, --directories=ACTION
 12872	
 12873	    If an input file is a directory, use ACTION to process it. By default,
 12874	    ACTION is read, which means that directories are read just as if they were
 12875	    ordinary files. If ACTION is skip, directories are silently skipped. If
 12876	    ACTION is recurse, grep reads all files under each directory, recursively;
 12877	    this is equivalent to the -r option.
 12878	
 12879	-G, --basic-regexp
 12880	
 12881	    Interpret PATTERN as a basic regular expression (see below). This is the
 12882	    default.
 12883	
 12884	-H, --with-filename
 12885	
 12886	    Print the filename for each match.
 12887	
 12888	-h, --no-filename
 12889	
 12890	    Suppress the prefixing of filenames on output when multiple files are
 12891	    searched.
 12892	
 12893	-I
 12894	
 12895	    Process a binary file as if it did not contain matching data; this is
 12896	    equivalent to the --binary-files=without-match option.
 12897	
 12898	--ignore-case
 12899	
 12900	    Equivalent to -i
 12901	
 12902	-L, --files-without-match
 12903	
 12904	    Suppress normal output; instead print the name of each input file from
 12905	    which no output would normally have been printed. The scanning will stop on
 12906	    the first match.
 12907	
 12908	--files-with-matches
 12909	
 12910	    Equivalent to -l
 12911	
 12912	--map
 12913	
 12914	    If possible, use the mmap(2) system call to read input, instead of the
 12915	    default read(2) system call. In some situations, --mmap yields better
 12916	    performance. However, --mmap can cause undefined behavior (including core
 12917	    dumps) if an input file shrinks while grep is operating, or if an I/O error
 12918	    occurs.
 12919	
 12920	--line-number
 12921	
 12922	    Equivalent to -n
 12923	
 12924	--quiet
 12925	
 12926	    Equivalent to -q
 12927	
 12928	-r, --recursive
 12929	
 12930	    Read all files under each directory, recursively; this is equivalent to the
 12931	    -d recurse option.
 12932	
 12933	--no-messages
 12934	
 12935	    Equivalent to -s
 12936	
 12937	-V, --version
 12938	
 12939	    Print the version number of grep to standard error.
 12940	
 12941	--invert-match
 12942	
 12943	    Equivalent to -v
 12944	
 12945	-w, --word-regexp
 12946	
 12947	    Select only those lines containing matches that form whole words. The test
 12948	    is that the matching substring must either be at the beginning of the line,
 12949	    or preceded by a non-word constituent character. Similarly, it must be
 12950	    either at the end of the line or followed by a non-word constituent
 12951	    character. Word-constituent characters are letters, digits, and the
 12952	    underscore.
 12953	
 12954	--line-regexp
 12955	
 12956	    Equivalent to -x
 12957	
 12958	-Z, --null
 12959	
 12960	    Output a zero byte (the ASCII NUL character) instead of the character that
 12961	    normally follows a file name.
 12962	
 12963	groupadd
 12964	
 12965	Name
 12966	
 12967	groupadd -- Create a new group
 12968	
 12969	Synopsis
 12970	
 12971	groupadd [-g gid [-o]] group
 12972	
 12973	Options
 12974	
 12975	-g gid [-o]
 12976	
 12977	    The numerical value of the group's ID. This value must be unique, unless
 12978	    the -o option is used. The value must be non-negative.
 12979	
 12980	groupdel
 12981	
 12982	Name
 12983	
 12984	groupdel -- Delete a group
 12985	
 12986	Synopsis
 12987	
 12988	groupdel group
 12989	
 12990	Description
 12991	
 12992	The groupdel command modifies the system account files, deleting all entries
 12993	that refer to group. The named group must exist.
 12994	
 12995	groupmod
 12996	
 12997	Name
 12998	
 12999	groupmod -- Modify a group
 13000	
 13001	Synopsis
 13002	
 13003	groupmod [-g gid [-o]] [-n group_name ] group
 13004	
 13005	Options
 13006	
 13007	-g gid [-o]
 13008	
 13009	    The numerical value of the group's ID. This value must be unique, unless
 13010	    the -o option is used. The value must be non-negative. Any files which the
 13011	    old group ID is the file group ID must have the file group ID changed
 13012	    manually.
 13013	
 13014	-n groupname
 13015	
 13016	    The name of the group will be changed from group to group_name.
 13017	
 13018	groups
 13019	
 13020	Name
 13021	
 13022	groups -- Display a group
 13023	
 13024	Synopsis
 13025	
 13026	groups [user]
 13027	
 13028	Description
 13029	
 13030	groups displays the current group ID names or values. If the value does not
 13031	have a corresponding entry in /etc/group, the value will be displayed as the
 13032	numerical group value. The optional user parameter will display the groups for
 13033	the named user.
 13034	
 13035	gzip
 13036	
 13037	Name
 13038	
 13039	gzip -- compress or expand files
 13040	
 13041	Synopsis
 13042	
 13043	gzip [ -acdfhlLnNrtvV19 ] [-S suffix] [ name ...  ]
 13044	
 13045	Description
 13046	
 13047	Gzip reduces the size of the named files using Lempel-Ziv coding (LZ77).
 13048	Whenever possible, each file is replaced by one with the extension .gz, while
 13049	keeping the same ownership modes, access and modification times. If no files
 13050	are specified, or if a file name is "-", the standard input is compressed to
 13051	the standard output. Gzip will only attempt to compress regular files. In
 13052	particular, it will ignore symbolic links.
 13053	
 13054	Options
 13055	
 13056	-a, --ascii
 13057	
 13058	    This option does nothing on Linux systems.
 13059	
 13060	-c, --stdout, --to-stdout
 13061	
 13062	    Write output on standard output; keep original files unchanged. If there
 13063	    are several input files, the output consists of a sequence of independently
 13064	    compressed members. To obtain better compression, concatenate all input
 13065	    files before compressing them.
 13066	
 13067	-d, --decompress, --uncompress
 13068	
 13069	    Decompress.
 13070	
 13071	-f, --force
 13072	
 13073	    Force compression or decompression even if the file has multiple links or
 13074	    the corresponding file already exists, or if the compressed data is read
 13075	    from or written to a terminal. If the input data is not in a recognized by
 13076	    gzip, and if the option --stdout is also given, copy the input data without
 13077	    change to the standard ouput: let zcat behave as cat. If -f is not given,
 13078	    and when not running in the background, gzip prompts to verify whether an
 13079	    existing file should be overwritten.
 13080	
 13081	-l, --list
 13082	
 13083	    For each compressed file, list the compressed size, uncompressed size,
 13084	    ration and uncompressed name.
 13085	
 13086	    The uncompressed size is given as -1 for files not in gzip .
 13087	
 13088	    In combination with the --verbose option, the method, crc and timestamp for
 13089	    the uncompress file is also displayed.
 13090	
 13091	    The compression methods currently supported are deflate, compress, lzh (SCO
 13092	    compress -H) and pack. The crc is given as ffffffff for a file not in gzip
 13093	    .
 13094	
 13095	    With --name, the uncompressed name, date and time are those stored within
 13096	    the compress file if present.
 13097	
 13098	    With --verbose, the size totals and compression ratio for all files is also
 13099	    displayed, unless some sizes are unknown. With --quiet, the title and
 13100	    totals lines are not displayed.
 13101	
 13102	-L, --license
 13103	
 13104	    Display the gzip license and quit.
 13105	
 13106	-n, --no-name
 13107	
 13108	    When compressing, do not save the original file name and time stamp by
 13109	    default. (The original name is always saved if the name had to be
 13110	    truncated.) When decompressing, do not restore the original file name if
 13111	    present (remove only the gzip suffix from the compressed file name) and do
 13112	    not restore the original time stamp if present (copy it from the compressed
 13113	    file). This option is the default when decompressing.
 13114	
 13115	-N, --name
 13116	
 13117	    When compressing, always save the original file name and time stamp; this
 13118	    is the default. When decompressing, restore the original file name and time
 13119	    stamp if present. This option is useful on systems which have a limit on
 13120	    file name length or when the time stamp has been lost after a file
 13121	    transfer.
 13122	
 13123	-q, --quiet
 13124	
 13125	    Suppress all warnings.
 13126	
 13127	-r, --recursive
 13128	
 13129	    Travel the directory structure recursively. If any of the file names
 13130	    specified on the command line are directories, gzip will descend into the
 13131	    directory and compress all the files it finds there (or decompress them in
 13132	    the case of gunzip).
 13133	
 13134	-S .suf, --sufix .suf
 13135	
 13136	    Use suffix .suf instead of .gz.
 13137	
 13138	-t, --test
 13139	
 13140	    Test. Check the compressed file integrity.
 13141	
 13142	-v, --verbose
 13143	
 13144	    Verbose. Display the name and percentage reduction for each file compressed
 13145	    or decompressed.
 13146	
 13147	-V, --version
 13148	
 13149	    Version. Display the version number and compilation options then quit.
 13150	
 13151	-#, --fast, --best
 13152	
 13153	    Regulate the speed of compression using the specified digit #, where -1 or
 13154	    --fast indicates the fastest compression method (less compression) and -9
 13155	    or --best indicates the slowest compression method (best compression). The
 13156	    default compression level is -6 (that is, biased towards high compression
 13157	    at expense of speed).
 13158	
 13159	gunzip
 13160	
 13161	Name
 13162	
 13163	gunzip -- uncompress files
 13164	
 13165	Description
 13166	
 13167	gunzip is equivalent to gzip -d. See the specification for grep for further
 13168	details
 13169	
 13170	head
 13171	
 13172	Name
 13173	
 13174	head -- output the first part of files
 13175	
 13176	Description
 13177	
 13178	The specification for "head" is as specified in the SUS but with the additional
 13179	options as specified below.
 13180	
 13181	Additional Options
 13182	
 13183	-c, --bytes=SIZE
 13184	
 13185	    Print first SIZE bytes. SIZE may have a multiplier suffix: b for 512, k for
 13186	    1K, m for 1 Meg
 13187	
 13188	--lines=NUMBER
 13189	
 13190	    Equivalent to -n option
 13191	
 13192	-q, --quiet, --silent
 13193	
 13194	    Never print headers giving file names
 13195	
 13196	-v
 13197	
 13198	    Always print headers giving file names
 13199	
 13200	hostname
 13201	
 13202	Name
 13203	
 13204	hostname -- show the system's host name
 13205	
 13206	Synopsis
 13207	
 13208	hostname [-v] [-a] [--alias] [-d] [--domain] [-f] [--fqdn]
 13209	[-i] [--ip-address] [--long] [-s]  [--short]  [-y]  [--yp]
 13210	[--nis]
 13211	
 13212	hostname [-v] [-F filename] [--file filename] [hostname]
 13213	
 13214	hostname [-v] [-h] [--help] [-V] [--version]
 13215	
 13216	Description
 13217	
 13218	Hostname is used to either set or display the current host or domain name of
 13219	the system. This name is used by many of the networking programs to identify
 13220	the machine. The domain name is also used by NIS/YP.
 13221	
 13222	When called without any arguments, the program displays the name of the system
 13223	as returned by the gethostname(2) function.
 13224	
 13225	When called with one argument or with the --file option, the commands set the
 13226	host name or the NIS/YP domain name. Note, that only the super-user can change
 13227	the names.
 13228	
 13229	Options
 13230	
 13231	-a, --alias
 13232	
 13233	    Display the alias name of the host (if used).
 13234	
 13235	-d, --domain
 13236	
 13237	    Display the name of the DNS domain.
 13238	
 13239	-F, --file filename
 13240	
 13241	    Read the host name from the specified file. Comments (lines starting with a
 13242	    #) are ignored.
 13243	
 13244	-f, --fqdn, --long
 13245	
 13246	    Display the FQDN (Fully Qualified Domain Name).
 13247	
 13248	-i, --ip-address
 13249	
 13250	    Display the IP address(es) of the host.
 13251	
 13252	-s, --short
 13253	
 13254	    Display the short host name. This is the host name cut at the first dot.
 13255	
 13256	-V, --version
 13257	
 13258	    Print version information on standard output and exit successfully.
 13259	
 13260	-v, --verbose
 13261	
 13262	    Be verbose and tell what's going on.
 13263	
 13264	-y, --yp, --nis
 13265	
 13266	    Display the NIS domain name. If a parameter is given (or --file name) then
 13267	    root can also set a new NIS domain.
 13268	
 13269	iconv
 13270	
 13271	Name
 13272	
 13273	iconv -- show the system's host name
 13274	
 13275	Synopsis
 13276	
 13277	iconv -f encoding -t encoding [--list] [-o file] [--output file] [--verbose] inputfile
 13278	
 13279	Description
 13280	
 13281	The iconv program converts the encoding of characters in inputfile from one
 13282	coded character set to another. The result is written to standard output unless
 13283	otherwise specified by the --output option.
 13284	
 13285	Options
 13286	
 13287	-f, --from-code encoding
 13288	
 13289	    Convert characters from encoding
 13290	
 13291	-t, --to-code encoding
 13292	
 13293	    Convert characters to encoding
 13294	
 13295	--list
 13296	
 13297	    List known coded character sets
 13298	
 13299	-o, --output file
 13300	
 13301	    Specify output file (instead of stdin)
 13302	
 13303	--verbose
 13304	
 13305	    Print progress information
 13306	
 13307	install
 13308	
 13309	Name
 13310	
 13311	install -- copy files and set attributes
 13312	
 13313	Synopsis
 13314	
 13315	install [OPTION]... SOURCE DEST           (1st )
 13316	install [OPTION]... SOURCE... DIRECTORY   (2nd )
 13317	install -d [OPTION]... DIRECTORY...       (3rd )
 13318	
 13319	Description
 13320	
 13321	In the first two formats, copy SOURCE to DEST or multiple SOURCE(s) to the
 13322	existing DIRECTORY, while setting permission modes and owner/group. In the
 13323	third , create all components of the given DIRECTORY(ies).
 13324	
 13325	Standard Options
 13326	
 13327	--backup[=CONTROL]
 13328	
 13329	    make a backup of each existing destination file
 13330	
 13331	-b
 13332	
 13333	    like --backup but does not accept an argument
 13334	
 13335	-d, --directory
 13336	
 13337	    treat all arguments as directory names; create all components of the
 13338	    specified directories
 13339	
 13340	-D
 13341	
 13342	    create all leading components of DEST except the last, then copy SOURCE to
 13343	    DEST; useful in the 1st
 13344	
 13345	-g, --group=GROUP
 13346	
 13347	    set group ownership, instead of process' current group
 13348	
 13349	-m, --mode=MODE
 13350	
 13351	    set permission mode (as in chmod), instead of rwxr-xr-x
 13352	
 13353	-o, --owner=OWNER
 13354	
 13355	    set ownership (super-user only)
 13356	
 13357	-p, --preserve-timestamps
 13358	
 13359	    apply access/modification times of SOURCE files to corresponding
 13360	    destination files
 13361	
 13362	-s, --strip
 13363	
 13364	    strip symbol tables, only for 1st and 2nd formats
 13365	
 13366	-S, --suffix=SUFFIX
 13367	
 13368	    override the usual backup suffix
 13369	
 13370	--verbose
 13371	
 13372	    print the name of each directory as it is created
 13373	
 13374	ipcrm
 13375	
 13376	Name
 13377	
 13378	ipcrm -- Create a new user or update default new user information
 13379	
 13380	Synopsis
 13381	
 13382	ipcrm [ shm | msg | sem ] id...
 13383	
 13384	Description
 13385	
 13386	ipcrm will remove the resource(s) specified by id.
 13387	
 13388	ipcs
 13389	
 13390	Name
 13391	
 13392	ipcs -- copy files and set attributes
 13393	
 13394	Synopsis
 13395	
 13396	ipcs [ -asmq ] [ -tclup ]
 13397	ipcs [ -smq ] -i id
 13398	
 13399	Description
 13400	
 13401	ipcs provides information on the ipc facilities for which the calling process
 13402	has read access.
 13403	
 13404	The -i option allows a specific resource id to be specified. Only information
 13405	on this id will be printed.
 13406	
 13407	Resource display options
 13408	
 13409	-m
 13410	
 13411	    shared memory segments
 13412	
 13413	-q
 13414	
 13415	    message queues
 13416	
 13417	-s
 13418	
 13419	    semaphore arrays
 13420	
 13421	-a
 13422	
 13423	    all (this is the default)
 13424	
 13425	Output options
 13426	
 13427	-t
 13428	
 13429	    time
 13430	
 13431	-p
 13432	
 13433	    pid
 13434	
 13435	-c
 13436	
 13437	    creator
 13438	
 13439	-l
 13440	
 13441	    limits
 13442	
 13443	-u
 13444	
 13445	    summary
 13446	
 13447	killall
 13448	
 13449	Name
 13450	
 13451	killall -- kill processes by name
 13452	
 13453	Synopsis
 13454	
 13455	killall [-egiqvw] [-signal] name ...
 13456	killall -l
 13457	killall -V
 13458	
 13459	Description
 13460	
 13461	killall sends a signal to all processes running any of the specified commands.
 13462	If no signal name is specified, SIGTERM is sent.
 13463	
 13464	Signals can be specified either by name (e.g. -HUP) or by number (e.g. -1).
 13465	Signal 0 (check if a process exists) can only be specified by number.
 13466	
 13467	If the command name contains a slash (/), processes executing that particular
 13468	file will be selected for killing, independent of their name.
 13469	
 13470	killall returns a non-zero return code if no process has been killed for any of
 13471	the listed commands. If at least one process has been killed for each command,
 13472	killall returns zero.
 13473	
 13474	A killall process never kills itself (but may kill other killall processes).
 13475	
 13476	Standard Options
 13477	
 13478	-e
 13479	
 13480	    Require an exact match for very long names. If a command name is longer
 13481	    than 15 characters, the full name may be unavailable (i.e. it is swapped
 13482	    out). In this case, killall will kill everything that matches within the
 13483	    first 15 characters. With -e, such entries are skipped. killall prints a
 13484	    message for each skipped entry if -v is specified in addition to -e.
 13485	
 13486	-g
 13487	
 13488	    Kill the process group to which the process belongs. The kill signal is
 13489	    only sent once per group, even if multiple processes belonging to the same
 13490	    process group were found.
 13491	
 13492	-i
 13493	
 13494	    Interactively ask for confirmation before killing.
 13495	
 13496	-l
 13497	
 13498	    List all known signal names.
 13499	
 13500	-q
 13501	
 13502	    Do not complain if no processes were killed.
 13503	
 13504	-v
 13505	
 13506	    Report if the signal was successfully sent.
 13507	
 13508	-V
 13509	
 13510	    Display version information.
 13511	
 13512	ln
 13513	
 13514	Name
 13515	
 13516	ln -- make links between files
 13517	
 13518	Description
 13519	
 13520	The specification for "ln" is as specified in the SUS but with the following
 13521	differences as listed below.
 13522	
 13523	Differences
 13524	
 13525	-b, --backup[=CONTROL]
 13526	
 13527	    make a backup of each existing destination file
 13528	
 13529	-n, --no-dereference
 13530	
 13531	    treat destination that is a symlink to a directory as if it were a normal
 13532	    file
 13533	
 13534	-i, --interactive
 13535	
 13536	    prompt whether to remove destinations
 13537	
 13538	-s, --symbolic
 13539	
 13540	    make symbolic links instead of hard links
 13541	
 13542	-S, --suffix=SUFFIX
 13543	
 13544	    override the usual backup suffix
 13545	
 13546	--target-directory=DIR
 13547	
 13548	    move all SOURCE arguments into directory DIR
 13549	
 13550	-v, --verbose
 13551	
 13552	    print name of each file before linking
 13553	
 13554	--version
 13555	
 13556	    output version information and exit
 13557	
 13558	Notes
 13559	
 13560	The backup suffix is ~, unless set with --suffix or SIMPLE_BACKUP_SUFFIX. The
 13561	version control method may be selected via the --backup option or through the
 13562	VERSION_CONTROL environment variable. Here are the values:
 13563	
 13564	none, off
 13565	
 13566	    never make backups (even if --backup is given)
 13567	
 13568	numbered, t
 13569	
 13570	    make numbered backups
 13571	
 13572	existing, nil
 13573	
 13574	    numbered if numbered backups exist, simple otherwise
 13575	
 13576	simple, never
 13577	
 13578	    always make simple backups
 13579	
 13580	localedef
 13581	
 13582	Name
 13583	
 13584	localedef -- split a file into sections determined by context lines
 13585	
 13586	Description
 13587	
 13588	The specification for "localedef" is as specified in the SUS but with the
 13589	following differences as listed below.
 13590	
 13591	Differences
 13592	
 13593	--charmap=charmapfile
 13594	
 13595	    Equivalent to the -f option
 13596	
 13597	--inputfile=intputfile
 13598	
 13599	    Equivalent to the -i option
 13600	
 13601	--force
 13602	
 13603	    Equivalent to the -c option
 13604	
 13605	-v, --verbose
 13606	
 13607	    Generate extra warnings about errors that are normally ignored.
 13608	
 13609	--quiet
 13610	
 13611	    Suppress all notifications and warnings, and report only fatal errors.
 13612	
 13613	login
 13614	
 13615	Name
 13616	
 13617	login -- Begin session on the system
 13618	
 13619	Synopsis
 13620	
 13621	login [-p] [username] [ENV=VAR ...]
 13622	login [-p] [-h host] [-f username]
 13623	login [-p] -r host
 13624	
 13625	Description
 13626	
 13627	login is used to establish a new session with the system. It is normally
 13628	invoked automatically by responding to the login: prompt on the user's
 13629	terminal. login may be special to the shell and may not be invoked as a
 13630	sub-process. Typically, login is treated by the shell as exec login which
 13631	causes the user to exit from the current shell. Attempting to execute login
 13632	from any shell but the login shell will produce an error message.
 13633	
 13634	When invoked from the login: prompt, the user may enter environmental variables
 13635	after the username. These variables are entered in the form NAME=VALUE. Not all
 13636	variables may be set in the fashion, notably PATH, HOME and SHELL.
 13637	Additionally, IFS may be inhibited if the user's login shell is /bin/sh.
 13638	
 13639	Standard Options
 13640	
 13641	-p
 13642	
 13643	    Preserve environment
 13644	
 13645	-f
 13646	
 13647	    Do not perform authentication, user is preauthenticated.
 13648	
 13649	-h
 13650	
 13651	    Name of the remote host for this login.
 13652	
 13653	-r
 13654	
 13655	    Perform autologin protocol for rlogin.
 13656	
 13657	lpr
 13658	
 13659	Name
 13660	
 13661	lpr -- off line print
 13662	
 13663	Synopsis
 13664	
 13665	lpr [-l] [-p] [-Pprinter] [-h] [-s] [-#copies] [-J name]
 13666	    [-T title] [name ...]
 13667	
 13668	Description
 13669	
 13670	Lpr uses a spooling daemon to print the named files when facilities become
 13671	available. If no names appear, the standard input is assumed.
 13672	
 13673	Standard Options
 13674	
 13675	-l
 13676	
 13677	    binary data - do not filter and send raw input to printer
 13678	
 13679	-p
 13680	
 13681	    with "pr" before sending to printer
 13682	
 13683	-Pprinter
 13684	
 13685	    send output to the printer named printer instead of the default printer
 13686	
 13687	-h
 13688	
 13689	    suppress header page
 13690	
 13691	-s
 13692	
 13693	    use symbolic links
 13694	
 13695	-#copies
 13696	
 13697	    copies is the number of copies to print
 13698	
 13699	-J name
 13700	
 13701	    name is the job name for the header page
 13702	
 13703	-T title
 13704	
 13705	    title is the title used for "pr"
 13706	
 13707	ls
 13708	
 13709	Name
 13710	
 13711	ls -- list directory contents
 13712	
 13713	Description
 13714	
 13715	The specification for "ls" is as declared by the SUS, but with the following
 13716	differences listed below.
 13717	
 13718	Differences
 13719	
 13720	-c
 13721	
 13722	    when -l is used with this option the sort order is by name, rather than by
 13723	    ctime as the SUS requires.
 13724	
 13725	-d
 13726	
 13727	    this option applies to entries in the file system specified on the command
 13728	    line. Normally when such options are directories, the contents of the
 13729	    directory are listed along with the directory. When this option is present
 13730	    these command line entries will be treated as though they were normal
 13731	    files, and their contents will not be listed.
 13732	
 13733	    The SUS makes no mention that this behavior pertains to command line
 13734	    entries, and only specifies behavior already otherwise present without the
 13735	    option. The SUS makes no implication of any additional behavior aside from
 13736	    that already specified.
 13737	
 13738	    The behavior of the Linux version of ls is entirely unexpected, given
 13739	    either SUS or the completely specified behavior presented above. Aside from
 13740	    the parent directory, the -d option for ls lists only those items specified
 13741	    on the command line, listing only the names of directories, and not their
 13742	    contents, but listing nothing else in this file system path that is not
 13743	    specified by the command line file list.
 13744	
 13745	-p
 13746	
 13747	    as well as the slash declared by SUS, this option will also display the *,
 13748	    @, and | characters for executables, links, and FIFOs, respectively.
 13749	
 13750	-u
 13751	
 13752	    when used with the -l option, the sort order is by name, rather than the
 13753	    SUS declared behavior of sorting by last modified date.
 13754	
 13755	lsb_release
 13756	
 13757	Name
 13758	
 13759	lsb_release -- print distribution specific information
 13760	
 13761	Synopsis
 13762	
 13763	lsb_release [OPTION]...
 13764	
 13765	Description
 13766	
 13767	GNU lsb_release 1.0 print certain LSB (Linux Standard Base) and Distribution
 13768	information.
 13769	
 13770	With no OPTION, same as -v.
 13771	
 13772	Options
 13773	
 13774	-v, --version
 13775	
 13776	    Display version of LSB against which distribution is compliant.
 13777	
 13778	-i, --id
 13779	
 13780	    Display string id of distributor.
 13781	
 13782	-d, --description
 13783	
 13784	    Display single line text description of distribution.
 13785	
 13786	-r, --release
 13787	
 13788	    Display release number of distribution.
 13789	
 13790	-c, --codename
 13791	
 13792	    Display codename according to distribution release.
 13793	
 13794	-a, --all
 13795	
 13796	    Display all of the above information.
 13797	
 13798	-s, --short
 13799	
 13800	    Display all of the above information in short output .
 13801	
 13802	-h, --help
 13803	
 13804	    Display this message.
 13805	
 13806	m4
 13807	
 13808	Name
 13809	
 13810	m4 -- macro processor
 13811	
 13812	Description
 13813	
 13814	The specification for "m4" is as specified in the SUS but with the following
 13815	differences as listed below.
 13816	
 13817	Differences
 13818	
 13819	--version
 13820	
 13821	    output version information and exit
 13822	
 13823	-e, --interactive
 13824	
 13825	    unbuffer output, ignore interrupts
 13826	
 13827	-E, --fatal-warnings
 13828	
 13829	    stop execution after first warning
 13830	
 13831	-Q, --quiet, --silent
 13832	
 13833	    suppress some warnings for builtins
 13834	
 13835	-P, --prefix-builtins
 13836	
 13837	    force a m4_ prefix to all builtins
 13838	
 13839	-I, --include=DIRECTORY
 13840	
 13841	    search this directory second for includes
 13842	
 13843	--define=NAME[=VALUE]
 13844	
 13845	    equivalent to the -D option
 13846	
 13847	--undefine=NAME
 13848	
 13849	    delete builtin NAME
 13850	
 13851	--synclines
 13852	
 13853	    equivalent to -s option
 13854	
 13855	-G, --traditional
 13856	
 13857	    suppress all GNU extensions
 13858	
 13859	-H, --hashsize=PRIME
 13860	
 13861	    set symbol lookup hash table size
 13862	
 13863	-L, --nesting-limit=NUMBER
 13864	
 13865	    change artificial nesting limit
 13866	
 13867	-F, --freeze-state=FILE
 13868	
 13869	    produce a frozen state on FILE at end
 13870	
 13871	-R, --reload-state=FILE
 13872	
 13873	    reload a frozen state from FILE at start
 13874	
 13875	-d, --debug=[FLAGS]
 13876	
 13877	    set debug level (no FLAGS implies 'aeq'). FLAGS is any of:
 13878	
 13879	    t
 13880	
 13881	        trace for all macro calls, not only 'ed
 13882	
 13883	    a
 13884	
 13885	        show actual arguments
 13886	
 13887	    e
 13888	
 13889	        show expansion
 13890	
 13891	    q
 13892	
 13893	        quote values as necessary, with a or e flag
 13894	
 13895	    c
 13896	
 13897	        show before collect, after collect and after call
 13898	
 13899	    x
 13900	
 13901	        add a unique macro call id, useful with c flag
 13902	
 13903	    f
 13904	
 13905	        say current input file name
 13906	
 13907	    l
 13908	
 13909	        say current input line number
 13910	
 13911	    p
 13912	
 13913	        show results of path searches
 13914	
 13915	    i
 13916	
 13917	        show changes in input files
 13918	
 13919	    V
 13920	
 13921	        shorthand for all of the above flags
 13922	
 13923	-t, --trace=NAME
 13924	
 13925	    trace NAME when it will be defined
 13926	
 13927	-l, --arglength=NUM
 13928	
 13929	    restrict macro tracing size
 13930	
 13931	-o, --error-output=FILE
 13932	
 13933	    redirect debug and trace output
 13934	
 13935	make
 13936	
 13937	Name
 13938	
 13939	make -- maintain, update and regenerate groups of programs
 13940	
 13941	Description
 13942	
 13943	The specification for "make" is as specified in the SUS but with the following
 13944	differences as listed below. GNU make which contains syntax extensions from
 13945	what is specified in the SUS.
 13946	
 13947	Differences
 13948	
 13949	-C dir
 13950	
 13951	    Change to directory dir before reading the makefiles or doing anything
 13952	    else. If multiple -C options are specified, each is interpreted relative to
 13953	    the previous one: -C / -C etc is equivalent to -C /etc. This is typically
 13954	    used with recursive invocations of make.
 13955	
 13956	-d
 13957	
 13958	    Print debugging information in addition to normal processing. The debugging
 13959	    information says which files are being considered for remaking, which
 13960	    filetimes are being compared and with what results, which files actually
 13961	    need to be remade, which implicit rules are considered and which are
 13962	    applied---everything interesting about how make decides what to do.
 13963	
 13964	-I dir
 13965	
 13966	    Specifies a directory dir to search for included makefiles. If several -I
 13967	    options are used to specify several directories, the directories are
 13968	    searched in the order specified. Unlike the arguments to other flags of
 13969	    make, directories given with -I flags may come directly after the flag:
 13970	    -Idir is allowed, as well as -I dir. This syntax is allowed for
 13971	    compatibility with the C preprocessor's -I flag.
 13972	
 13973	-j jobs
 13974	
 13975	    Specifies the number of jobs (commands) to run simultaneously. If there is
 13976	    more than one -j option, the last one is effective. If the -j option is
 13977	    given without an argument, make will not limit the number of jobs that can
 13978	    run simultaneously.
 13979	
 13980	-l [load]
 13981	
 13982	    Specifies that no new jobs (commands) should be started if there are others
 13983	    jobs running and the load average is at least load (a floating-point
 13984	    number). With no argument, removes a previous load limit.
 13985	
 13986	-o file
 13987	
 13988	    Do not remake the file file even if it is older than its dependencies, and
 13989	    do not remake anything on account of changes in file. Essentially the file
 13990	    is treated as very old and its rules are ignored.
 13991	
 13992	-v
 13993	
 13994	    Print the version of the make program plus a copyright, a list of authors
 13995	    and a notice that there is no warranty.
 13996	
 13997	-w
 13998	
 13999	    Print a message containing the working directory before and after other
 14000	    processing. This may be use­ ful for tracking down errors from complicated
 14001	    nests of recursive make commands.
 14002	
 14003	-W file
 14004	
 14005	    Pretend that the target file has just been modified. When used with the -n
 14006	    flag, this shows you what would happen if you were to modify that file.
 14007	    Without -n, it is almost the same as running a touch command on the given
 14008	    file before running make, except that the modification time is changed only
 14009	    in the imagination of make.
 14010	
 14011	man
 14012	
 14013	Name
 14014	
 14015	man -- display system documentation
 14016	
 14017	Description
 14018	
 14019	The specification for "man" is as specified in the SUS. While additional
 14020	features my be found in Linux versions of this command, the SUS specified
 14021	interface is correctly and completely implemented.
 14022	
 14023	md5sum
 14024	
 14025	Name
 14026	
 14027	md5sum -- generates or checks MD5 message digests
 14028	
 14029	Synopsis
 14030	
 14031	md5sum [-b] [-c [file]] | [file...]
 14032	
 14033	Options
 14034	
 14035	-b
 14036	
 14037	    Use binary mode.
 14038	
 14039	-c [file]
 14040	
 14041	    Check md5sum of all files listed in file against the checksum listed in the
 14042	    same file. The actual of that file is the same as output of md5sum. That
 14043	    is, each line in the file describes a file.
 14044	
 14045	mkdir
 14046	
 14047	Name
 14048	
 14049	mkdir -- make directories
 14050	
 14051	Description
 14052	
 14053	The specification for "mkdir" is as specified in the SUS but with the following
 14054	differences as listed below.
 14055	
 14056	Differences
 14057	
 14058	--verbose
 14059	
 14060	    print a message for each created directory
 14061	
 14062	--version
 14063	
 14064	    output version information and exit
 14065	
 14066	mknod
 14067	
 14068	Name
 14069	
 14070	mknod -- make block or character special files
 14071	
 14072	Synopsis
 14073	
 14074	mknod [OPTION]... NAME TYPE [MAJOR MINOR]
 14075	
 14076	Description
 14077	
 14078	Create the special file NAME of the given TYPE.
 14079	
 14080	MAJOR MINOR are forbidden for TYPE p, mandatory otherwise. TYPE may be:
 14081	
 14082	b
 14083	
 14084	    create a block (buffered) special file
 14085	
 14086	c, u
 14087	
 14088	    create a character (unbuffered) special file
 14089	
 14090	p
 14091	
 14092	    create a FIFO
 14093	
 14094	Standard Options
 14095	
 14096	-m, --mode=MODE
 14097	
 14098	    set permission mode (as in chmod), not a=rw - umask
 14099	
 14100	--version
 14101	
 14102	    output version information and exit
 14103	
 14104	mktemp
 14105	
 14106	Name
 14107	
 14108	mktemp -- make temporary file name (unique)
 14109	
 14110	Synopsis
 14111	
 14112	mktemp [-q] [-u] template
 14113	
 14114	Description
 14115	
 14116	The mktemp utility takes the given file name template and overwrites a portion
 14117	of it to create a file name. This file name is unique and suitable for use by
 14118	the application.
 14119	
 14120	Options
 14121	
 14122	-q
 14123	
 14124	    Fail silently if an error occurs. This is useful if a script does not want
 14125	    error output to go to standard error.
 14126	
 14127	-u
 14128	
 14129	    Operate in `unsafe' mode. The temp file will be unlinked before mktemp
 14130	    exits. This is slightly better than mktemp(3) but still introduces a race
 14131	    condition. Use of this option is not encouraged.
 14132	
 14133	more
 14134	
 14135	Name
 14136	
 14137	more -- file perusal filter for crt viewing
 14138	
 14139	Description
 14140	
 14141	The specification for "more" is as specified in the SUS but with the following
 14142	differences as listed below.
 14143	
 14144	Differences
 14145	
 14146	-num
 14147	
 14148	    This option specifies an integer which is the screen size (in lines).
 14149	
 14150	-d
 14151	
 14152	    more will prompt the user with the message "[Press space to contin­ ue, 'q'
 14153	    to quit.]" and will display "[Press 'h' for instructions.]" instead of
 14154	    ringing the bell when an illegal key is pressed.
 14155	
 14156	-e
 14157	
 14158	    This option is not supported
 14159	
 14160	-l
 14161	
 14162	    more usually treats ^L (form feed) as a special character, and will pause
 14163	    after any line that contains a form feed. The -l option will prevent this
 14164	    behavior.
 14165	
 14166	-i
 14167	
 14168	    This option is not supported
 14169	
 14170	-f
 14171	
 14172	    Causes more to count logical, rather than screen lines (i.e., long lines
 14173	    are not folded).
 14174	
 14175	-n
 14176	
 14177	    This option is not supported.
 14178	
 14179	-p
 14180	
 14181	    Do not scroll. Instead, clear the whole screen and then display the text.
 14182	
 14183	+/
 14184	
 14185	    The option specifies a string that will be searched for before each file is
 14186	    displayed.
 14187	
 14188	+num
 14189	
 14190	    Start at line number num.
 14191	
 14192	mount
 14193	
 14194	Name
 14195	
 14196	mount -- Create a new user or update default new user information
 14197	
 14198	Synopsis
 14199	
 14200	mount [-hV]
 14201	mount -a [-fFnrsvw] [-t vfstype]
 14202	mount [-fnrsvw] [-o options [,...]] device | dir
 14203	mount [-fnrsvw] [-t vfstype] [-o options] device dir
 14204	
 14205	Description
 14206	
 14207	All files accessible in a Unix system are arranged in one big tree, the file
 14208	hierarchy, rooted at /. These files can be spread out over several devices. The
 14209	mount command serves to attach the file system found on some device to the big
 14210	file tree. Conversely, the umount(8) command will detach it again.
 14211	
 14212	Standard Options
 14213	
 14214	-V
 14215	
 14216	    Output version.
 14217	
 14218	-v
 14219	
 14220	    Verbose mode.
 14221	
 14222	-a
 14223	
 14224	    Mount all filesystems (of the given types) mentioned in fstab.
 14225	
 14226	-F
 14227	
 14228	    (Used in conjunction with -a.) Fork off a new incarnation of mount for each
 14229	    device. This will do the mounts on different devices or different NFS
 14230	    servers in parallel.
 14231	
 14232	-f
 14233	
 14234	    Causes everything to be done except for the actual system call; if it's not
 14235	    obvious, this `fakes' mounting the file system.
 14236	
 14237	-n
 14238	
 14239	    Mount without writing in /etc/mtab. This is necessary for example when /etc
 14240	    is on a read-only file system.
 14241	
 14242	-s
 14243	
 14244	    Tolerate sloppy mount options rather than failing. This will ignore mount
 14245	    options not supported by a filesystem type. Not all filesystems support
 14246	    this option.
 14247	
 14248	-r
 14249	
 14250	    Mount the file system read-only. A synonym is -o ro.
 14251	
 14252	-w
 14253	
 14254	    Mount the file system read/write. This is the default. A synonym is -o rw.
 14255	
 14256	-L label
 14257	
 14258	    Mount the partition that has the specified label.
 14259	
 14260	-U uuid
 14261	
 14262	    Mount the partition that has the specified uuid. These two options require
 14263	    the file /proc/partitions to exist.
 14264	
 14265	-t vfstype
 14266	
 14267	    The argument following the -t is used to indicate the file system type.
 14268	
 14269	    More than one type may be specified in a comma separated list. The list of
 14270	    file system types can be prefixed with no to specify the file system types
 14271	    on which no action should be taken.
 14272	
 14273	-o
 14274	
 14275	    Options are specified with a -o flag followed by a comma separated string
 14276	    of options. Some of these options are only useful when they appear in the /
 14277	    etc/fstab file. The following options apply to any file system that is
 14278	    being mounted:
 14279	
 14280	    async
 14281	
 14282	        All I/O to the file system should be done asynchronously.
 14283	
 14284	    atime
 14285	
 14286	        Update inode access time for each access. This is the default.
 14287	
 14288	    auto
 14289	
 14290	        Can be mounted with the -a option.
 14291	
 14292	    defaults
 14293	
 14294	        Use default options: rw, suid, dev, exec, auto, nouser, and async.
 14295	
 14296	    dev
 14297	
 14298	        Interpret character or block special devices on the file system.
 14299	
 14300	    exec
 14301	
 14302	        Permit execution of binaries
 14303	
 14304	    noatime
 14305	
 14306	        Do not update inode access times on this file system.
 14307	
 14308	    noauto
 14309	
 14310	        Can only be mounted explicitly.
 14311	
 14312	    nodev
 14313	
 14314	        Do not interpret character or block special devices on the file system.
 14315	
 14316	    noexec
 14317	
 14318	        Do not allow execution of any binaries on the mounted file system.
 14319	
 14320	    nosuid
 14321	
 14322	        Do not allow set-user-identifier or set-group-identifier bits to take
 14323	        effect.
 14324	
 14325	    nouser
 14326	
 14327	        Forbid an ordinary (i.e., non-root) user to mount the file system. This
 14328	        is the default.
 14329	
 14330	    remount
 14331	
 14332	        Attempt to remount an already-mounted file system. This is commonly
 14333	        used to change the mount flags for a file system, especially to make a
 14334	        read-only file system writable.
 14335	
 14336	    ro
 14337	
 14338	        Mount the file system read-only
 14339	
 14340	    rw
 14341	
 14342	        Mount the file system read-write
 14343	
 14344	    suid
 14345	
 14346	        Allow set-user-identifier or set-group-iden­tifier bits to take effect.
 14347	
 14348	    sync
 14349	
 14350	        All I/O to the file system should be done synchronously.
 14351	
 14352	    user
 14353	
 14354	        Allow an ordinary user to mount the file system. This option implies
 14355	        the options noexec, nosuid, and nodev (unless overridden by subsequent
 14356	        options, as in the option line user,exec,dev,suid).
 14357	
 14358	mv
 14359	
 14360	Name
 14361	
 14362	mv -- move (rename) files
 14363	
 14364	Description
 14365	
 14366	The specification for "mv" is as specified in the SUS but with the following
 14367	differences as listed below.
 14368	
 14369	Differences
 14370	
 14371	-b, --backup[=CONTROL]
 14372	
 14373	    make backup before removal
 14374	
 14375	-S, --suffix=SUFFIX
 14376	
 14377	    override the usual backup suffix
 14378	
 14379	--strip-trailing-slashes
 14380	
 14381	    remove any trailing slashes from each SOURCE argument
 14382	
 14383	-S, --suffix=SUFFIX
 14384	
 14385	    override the usual backup suffix
 14386	
 14387	--target-directory=DIRECTORY
 14388	
 14389	    move all SOURCE arguments into DIRECTORY
 14390	
 14391	-u, --update
 14392	
 14393	    move only older or brand new non-directories
 14394	
 14395	-v, --verbose
 14396	
 14397	    explain what is being done
 14398	
 14399	--version
 14400	
 14401	    output version information and exit
 14402	
 14403	Notes
 14404	
 14405	The backup suffix is ~, unless set with --suffix or SIMPLE_BACKUP_SUFFIX. The
 14406	version control method may be selected via the --backup option or through the
 14407	VERSION_CONTROL environment variable. Here are the values:
 14408	
 14409	none, off
 14410	
 14411	    never make backups (even if --backup is given)
 14412	
 14413	numbered, t
 14414	
 14415	    make numbered backups
 14416	
 14417	existing, nil
 14418	
 14419	    numbered if numbered backups exist, simple otherwise
 14420	
 14421	simple, never
 14422	
 14423	    always make simple backups
 14424	
 14425	newgrp
 14426	
 14427	Name
 14428	
 14429	newgrp -- Change group ID
 14430	
 14431	Synopsis
 14432	
 14433	newgrp [-] [group]
 14434	
 14435	Description
 14436	
 14437	newgrp is used to change the current group ID during a login session. If the
 14438	optional - flag is given, the user's environment will be reinitialized as
 14439	though the user had logged in, otherwise the current environment, including
 14440	current working directory, remains unchanged.
 14441	
 14442	nice
 14443	
 14444	Name
 14445	
 14446	nice -- nice run a program with modified scheduling priority
 14447	
 14448	Description
 14449	
 14450	The specification for "nice" is as specified in the SUS but with the following
 14451	differences as listed below.
 14452	
 14453	Differences
 14454	
 14455	-ADJUST
 14456	
 14457	    increment priority by ADJUST first
 14458	
 14459	--help
 14460	
 14461	    display this help and exit
 14462	
 14463	--version
 14464	
 14465	    output version information and exit
 14466	
 14467	nl
 14468	
 14469	Name
 14470	
 14471	nl -- number lines of files
 14472	
 14473	Description
 14474	
 14475	The specification for "nl" is as specified in the SUS but with the following
 14476	differences as listed below.
 14477	
 14478	Differences
 14479	
 14480	--help
 14481	
 14482	    display this help and exit
 14483	
 14484	--version
 14485	
 14486	    output version information and exit
 14487	
 14488	nohup
 14489	
 14490	Name
 14491	
 14492	nohup -- nohup run a command immune to hangups, with output to a non-tty
 14493	
 14494	Description
 14495	
 14496	The specification for "nohup" is as specified in the SUS but with the following
 14497	differences as listed below.
 14498	
 14499	Differences
 14500	
 14501	--help
 14502	
 14503	    display this help and exit
 14504	
 14505	--version
 14506	
 14507	    output version information and exit
 14508	
 14509	od
 14510	
 14511	Name
 14512	
 14513	od -- dump files in octal and other formats
 14514	
 14515	Description
 14516	
 14517	The specification for "od" is as specified in the SUS but with the following
 14518	differences as listed below.
 14519	
 14520	Differences
 14521	
 14522	-w, --width[=BYTES]
 14523	
 14524	    output BYTES bytes per output line
 14525	
 14526	--traditional
 14527	
 14528	    accept arguments in pre-POSIX form
 14529	
 14530	--help
 14531	
 14532	    display this help and exit
 14533	
 14534	--version
 14535	
 14536	    output version information and exit
 14537	
 14538	Pre-POSIX specifications may be intermixed, they accumulate
 14539	
 14540	-a
 14541	
 14542	    same as -t a, select named characters
 14543	
 14544	-f
 14545	
 14546	    same as -t fF, select floats
 14547	
 14548	-h
 14549	
 14550	    same as -t x2, select hexadecimal shorts
 14551	
 14552	-i
 14553	
 14554	    same as -t d2, select decimal shorts
 14555	
 14556	-l
 14557	
 14558	    same as -t d4, select decimal longs
 14559	
 14560	passwd
 14561	
 14562	Name
 14563	
 14564	passwd -- change user password
 14565	
 14566	Synopsis
 14567	
 14568	passwd [-g] [-r|R] group
 14569	passwd [-x max] [-n min] [-w warn] [-i inact] name
 14570	passwd {-l|-u} name
 14571	
 14572	Description
 14573	
 14574	passwd changes passwords for user and group accounts. A normal user may only
 14575	change the password for their own account, the super user may change the
 14576	password for any account. The administrator of a group may change the password
 14577	for the group. passwd also changes password expiry dates and intervals.
 14578	
 14579	Options
 14580	
 14581	-g
 14582	
 14583	    Change the password for the named group.
 14584	
 14585	-r
 14586	
 14587	    Used in conjunction with the -g option to remove the current password from
 14588	    the named group.
 14589	
 14590	-R
 14591	
 14592	    Used in conjunction with the -g option to restrict the named group for all
 14593	    users.
 14594	
 14595	-x max
 14596	
 14597	    Set the maximum number of days a password remains valid.
 14598	
 14599	-n min
 14600	
 14601	    Set the minimum number of days before a password may be changed.
 14602	
 14603	-w warn
 14604	
 14605	    Set the number of days warning the user will receive before their password
 14606	    will expire.
 14607	
 14608	-i inactive
 14609	
 14610	    Disable an account after the password has been expired for the given number
 14611	    of days.
 14612	
 14613	-l
 14614	
 14615	    Disable an account by changing the password to a value which matches no
 14616	    possible encrypted value.
 14617	
 14618	-u
 14619	
 14620	    Re-enables an account by changing the password back to its previous value.
 14621	
 14622	paste
 14623	
 14624	Name
 14625	
 14626	paste -- merge lines of files
 14627	
 14628	Description
 14629	
 14630	The specification for "paste" is as specified in the SUS but with the following
 14631	differences as listed below.
 14632	
 14633	Differences
 14634	
 14635	--help
 14636	
 14637	    display this help and exit
 14638	
 14639	--version
 14640	
 14641	    output version information and exit
 14642	
 14643	patch
 14644	
 14645	Name
 14646	
 14647	patch -- apply a diff file to an original
 14648	
 14649	Description
 14650	
 14651	The specification for "patch" is as specified in the SUS but with the following
 14652	differences as listed below.
 14653	
 14654	Differences
 14655	
 14656	--backup-if-mismatch
 14657	
 14658	    Back up a file if the patch does not match the file exactly and if backups
 14659	    are not otherwise requested.
 14660	
 14661	--no-backup-if-mismatch
 14662	
 14663	    Do not back up a file if the patch does not match the file exactly and if
 14664	    backups are not otherwise requested.
 14665	
 14666	-B pref, --prefix=pref
 14667	
 14668	    prefix pref to a file name when generating its simple backup file name.
 14669	
 14670	--binary
 14671	
 14672	    Read and write all files in binary mode, except for standard output and /
 14673	    dev/tty. This option has no effect on POSIX-compliant systems.
 14674	
 14675	--dry-run
 14676	
 14677	    Print the results of applying the patches without actually changing any
 14678	    files.
 14679	
 14680	-E, --remove-empty-files
 14681	
 14682	    Remove output files that are empty after the patches have been applied.
 14683	    When patch removes a file, it also attempts to remove any empty ancestor
 14684	    directories.
 14685	
 14686	-f, --force
 14687	
 14688	    Skip patches whose headers do not say which file is to be patched; patch
 14689	    files even though they have the wrong version for the Prereq: line in the
 14690	    patch; and assume that patches are not reversed even if they look like they
 14691	    are.
 14692	
 14693	-F num, --fuzz=num
 14694	
 14695	    Set the maximum fuzz factor. This option only applies to diffs that have
 14696	    context, and causes patch to ignore up to that many lines in looking for
 14697	    places to install a hunk.
 14698	
 14699	-g num, --get=num
 14700	
 14701	    This option controls patch's actions when a file is under RCS or SCCS
 14702	    control, and does not exist or is read-only and matches the default
 14703	    version. If num is positive, patch gets (or checks out) the file from the
 14704	    revision control system; if zero, patch ignores RCS and SCCS and does not
 14705	    get the file; and if negative, patch asks the user where to get the file.
 14706	
 14707	-s, --silent, --quiet
 14708	
 14709	    Work silently, unless an error occurs.
 14710	
 14711	-t, --batch
 14712	
 14713	    Suppress questions like -f, but make some different assumptions: skip
 14714	    patches whose headers do not contain file names; skip patches for which the
 14715	    file has thewrong version for the Prereq: line in the patch; and assume
 14716	    that patches are reversed if they look like they are.
 14717	
 14718	-T, --set-time
 14719	
 14720	    Set the modification and access times of patched files from time stamps
 14721	    given in context diff headers, assuming that the context diff headers use
 14722	    local time.
 14723	
 14724	-u, --unified
 14725	
 14726	    Interpret the patch file as a unified context diff.
 14727	
 14728	-v, --version
 14729	
 14730	    Print out patch's revision header and patch level, and exit.
 14731	
 14732	-V method, --version-control=method
 14733	
 14734	    Use method to determine backup file names. The method can also be given by
 14735	    the PATCH_VERSION_CONTROL environment variable, which is overridden by this
 14736	    option.
 14737	
 14738	--verbose
 14739	
 14740	    Output extra information about the work being done.
 14741	
 14742	-x num, --debug=num
 14743	
 14744	    Set internal debugging flags of interest only to patch patchers.
 14745	
 14746	-Y pref, --basename-prefix=pref
 14747	
 14748	    Prefix pref to the basename of a file name when generating its simple
 14749	    backup file name.
 14750	
 14751	-z suffix, --suffix=suffix
 14752	
 14753	    Use suffix as the simple backup suffix.
 14754	
 14755	-Z, --set-utc
 14756	
 14757	    Set the modification and access times of patched files from time stamps
 14758	    given in context diff headers.
 14759	
 14760	--help
 14761	
 14762	    display this help and exit
 14763	
 14764	pathchk
 14765	
 14766	Name
 14767	
 14768	pathchk -- check whether file names are valid or portable.
 14769	
 14770	Description
 14771	
 14772	The specification for "pathchk" is as specified in the SUS but with the
 14773	following differences as listed below.
 14774	
 14775	Differences
 14776	
 14777	--help
 14778	
 14779	    display this help and exit
 14780	
 14781	--version
 14782	
 14783	    output version information and exit
 14784	
 14785	pidof
 14786	
 14787	Name
 14788	
 14789	pidof -- find the process ID of a running program.
 14790	
 14791	Synopsis
 14792	
 14793	pidof [-s] [-x] [-o omitpid..] program [program..]
 14794	
 14795	Options
 14796	
 14797	-s
 14798	
 14799	    Single shot - this instructs the program to only return one pid.
 14800	
 14801	-x
 14802	
 14803	    scripts too - this causes the program to also return process id's of shells
 14804	    running the named scripts.
 14805	
 14806	-o
 14807	
 14808	    Tells pidof to omit processes with that process id.
 14809	
 14810	pr
 14811	
 14812	Name
 14813	
 14814	pr -- split a file into sections determined by context lines
 14815	
 14816	Description
 14817	
 14818	The specification for "pr" is as specified in the SUS but with the following
 14819	differences as listed below.
 14820	
 14821	Differences
 14822	
 14823	-P
 14824	
 14825	    This option as specified in the SUS is not supported
 14826	
 14827	-c, --show-control-chars
 14828	
 14829	    use hat notation (^G) and octal backslash notation.
 14830	
 14831	-J, --join-lines
 14832	
 14833	    merge full lines, turns off -W line truncation, no column alignment.
 14834	
 14835	-N NUMBER, --first-line-number=NUMBER
 14836	
 14837	    start counting with NUMBER at 1st line of first page printed.
 14838	
 14839	-S[STRING], --sep-string=[=STRING]
 14840	
 14841	    separate columns by an optional STRING, don't use -S "STRING", -S only: No
 14842	    separator used without -S.
 14843	
 14844	-T, --omit-pagination
 14845	
 14846	    omit page headers and trailers, eliminate any pagination by form feeds set
 14847	    in input files.
 14848	
 14849	-v, --show-nonprinting
 14850	
 14851	    use octal backslash notation
 14852	
 14853	-W PAGE_WIDTH, --page-width=PAGE_WIDTH
 14854	
 14855	    set page width to PAGE_WIDTH (72) characters always, truncate lines, except
 14856	    -J option is set, no interference with -S or -s.
 14857	
 14858	--help
 14859	
 14860	    display this help and exit
 14861	
 14862	--version
 14863	
 14864	    output version information and exit
 14865	
 14866	printf
 14867	
 14868	Name
 14869	
 14870	printf --  and print data.
 14871	
 14872	Description
 14873	
 14874	The specification for "printf" is as specified in the SUS but with the
 14875	following differences as listed below.
 14876	
 14877	Differences
 14878	
 14879	--help
 14880	
 14881	    display this help and exit
 14882	
 14883	--version
 14884	
 14885	    output version information and exit
 14886	
 14887	pwd
 14888	
 14889	Name
 14890	
 14891	pwd -- print name of current/working directory.
 14892	
 14893	Description
 14894	
 14895	The specification for "pwd" is as specified in the SUS but with the following
 14896	differences as listed below.
 14897	
 14898	Differences
 14899	
 14900	--help
 14901	
 14902	    display this help and exit
 14903	
 14904	--version
 14905	
 14906	    output version information and exit
 14907	
 14908	renice
 14909	
 14910	Name
 14911	
 14912	renice -- alter priority of running processes
 14913	
 14914	Description
 14915	
 14916	The specification for "renice" is as specified in the SUS but with the
 14917	following differences as listed below.
 14918	
 14919	Differences
 14920	
 14921	-n increment
 14922	
 14923	    This option is not supported
 14924	
 14925	rm
 14926	
 14927	Name
 14928	
 14929	rm -- remove files or directories.
 14930	
 14931	Description
 14932	
 14933	The specification for "rm" is as specified in the SUS but with the following
 14934	differences as listed below.
 14935	
 14936	Differences
 14937	
 14938	-v, --verbose
 14939	
 14940	    explain what is being done.
 14941	
 14942	--help
 14943	
 14944	    display this help and exit
 14945	
 14946	--version
 14947	
 14948	    output version information and exit
 14949	
 14950	rmdir
 14951	
 14952	Name
 14953	
 14954	rmdir -- remove empty directories.
 14955	
 14956	Description
 14957	
 14958	The specification for "rmdir" is as specified in the SUS but with the following
 14959	differences as listed below.
 14960	
 14961	Differences
 14962	
 14963	--ignore-fail-on-non-empty
 14964	
 14965	    ignore each failure that is solely because a directory is non-empty.
 14966	
 14967	--verbose
 14968	
 14969	    output a diagnostic for every directory processed.
 14970	
 14971	--help
 14972	
 14973	    display this help and exit
 14974	
 14975	--version
 14976	
 14977	    output version information and exit
 14978	
 14979	rsync
 14980	
 14981	Name
 14982	
 14983	rsync -- faster, flexible replacement for rcp
 14984	
 14985	Synopsis
 14986	
 14987	rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST
 14988	rsync [OPTION]... [USER@]HOST:SRC DEST
 14989	rsync [OPTION]... SRC [SRC]... DEST
 14990	rsync [OPTION]... [USER@]HOST::SRC [DEST]
 14991	rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST
 14992	rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]
 14993	
 14994	Description
 14995	
 14996	rsync is a program that behaves in much the same way that rcp does, but has
 14997	many more options and uses the rsync remote-update protocol to greatly speedup
 14998	file transfers when the destination file already exists.
 14999	
 15000	The rsync remote-update protocol allows rsync to transfer just the differences
 15001	between two sets of files across the network link, using an efficient
 15002	checksum-search algorithm described in the technical report that accompanies
 15003	this package.
 15004	
 15005	Standard Options
 15006	
 15007	--version
 15008	
 15009	    print the rsync version number and exit
 15010	
 15011	-v, --verbose
 15012	
 15013	    This option increases the amount of information you are given during the
 15014	    transfer. By default, rsync works silently. A single -v will give you
 15015	    information about what files are being transferred and a brief summary at
 15016	    the end. Two -v flags will give you information on what files are being
 15017	    skipped and slightly more information at the end.
 15018	
 15019	-q, --quiet
 15020	
 15021	    This option decreases the amount of information you are given during the
 15022	    transfer, notably suppressing information messages from the remote server.
 15023	    This flag is useful when invoking rsync from cron.
 15024	
 15025	-I, --ignore-times
 15026	
 15027	    Normally rsync will skip any files that are already the same length and
 15028	    have the same time-stamp. This option turns off this behavior.
 15029	
 15030	-c, --checksum
 15031	
 15032	    This forces the sender to checksum all files using a 128-bit MD4 checksum
 15033	    before transfer. The checksum is then explicitly checked on the receiver
 15034	    and any files of the same name which already exist and have the same
 15035	    checksum and size on the receiver are skipped. This option can be quite
 15036	    slow.
 15037	
 15038	-a, --archive
 15039	
 15040	    A shortcut for specifying recursion and to preserve all attributes.
 15041	
 15042	-r, --recursive
 15043	
 15044	    This tells rsync to copy directories recursively. If you don´t specify this
 15045	    then rsync won´t copy directories at all.
 15046	
 15047	-R, --relative
 15048	
 15049	    Use relative paths. This means that the full path names specified on the
 15050	    command line are sent to the server rather than just the last parts of the
 15051	    filenames.
 15052	
 15053	-b, --backup
 15054	
 15055	    With this option preexisting destination files are renamed with a ~
 15056	    extension as each file is transferred. You can control the backup suffix
 15057	    using the --suffix option.
 15058	
 15059	--backup-dir=DIR
 15060	
 15061	    In combination with the --backup option, this tells rsync to store all
 15062	    backups in the specified directory. This is very useful for incremental
 15063	    backups.
 15064	
 15065	--suffix=SUFFIX
 15066	
 15067	    This option allows you to override the default backup suffix used with the
 15068	    -b option. The default is a ~.
 15069	
 15070	-u, --update
 15071	
 15072	    This forces rsync to skip any files for which the destination file already
 15073	    exists and has a date later than the source file.
 15074	
 15075	-l, --links
 15076	
 15077	    This tells rsync to recreate symbolic links on the remote system to be the
 15078	    same as the local system. Without this option, all symbolic links are
 15079	    skipped.
 15080	
 15081	-L, --copy-links
 15082	
 15083	    This tells rsync to transfer the file referenced by a symbolic link, rather
 15084	    than recreating the link.
 15085	
 15086	--copy-unsafe-links
 15087	
 15088	    This tells rsync to treat symbolic links that point outside the source tree
 15089	    like ordinary files. Absolute symlinks are also treated like ordinary
 15090	    files, and so are any symlinks in the source path itself when --relative is
 15091	    used.
 15092	
 15093	--safe-links
 15094	
 15095	    This tells rsync to ignore any symbolic links which point outside the
 15096	    destination tree. All absolute symlinks are also ignored.
 15097	
 15098	-H, --hard-links
 15099	
 15100	    This tells rsync to recreate hard links on the remote system to be the same
 15101	    as the local system. Without this option hard links are treated like
 15102	    regular files.
 15103	
 15104	-W, --whole-file
 15105	
 15106	    With this option the incremental rsync algorithm is not used and the whole
 15107	    file is sent as-is instead. This may be useful when using rsync with a
 15108	    local machine.
 15109	
 15110	-p, --perms
 15111	
 15112	    This option causes rsync to update the remote permissions to be the same as
 15113	    the local permissions.
 15114	
 15115	-o, --owner
 15116	
 15117	    This option causes rsync to update the remote owner of the file to be the
 15118	    same as the local owner. This is only available to the super-user. Note
 15119	    that if the source system is a daemon using chroot, the --numeric-ids
 15120	    option is implied because the source system cannot get access to the
 15121	    usernames.
 15122	
 15123	-g, --group
 15124	
 15125	    This option causes rsync to update the remote group of the file to be the
 15126	    same as the local group. If the receiving system is not running as the
 15127	    super-user, only groups that the receiver is a member of will be preserved
 15128	    (by group name, not group id number).
 15129	
 15130	-D, --devices
 15131	
 15132	    This option causes rsync to transfer character and block device information
 15133	    to the remote system to recreate these devices. This option is only
 15134	    available to the super-user.
 15135	
 15136	-t, --times
 15137	
 15138	    This tells rsync to transfer modification times along with the files and
 15139	    update them on the remote system.
 15140	
 15141	-n, --dry-run
 15142	
 15143	    This tells rsync to not do any file transfers, instead it will just report
 15144	    the actions it would have taken.
 15145	
 15146	-x, --one-file-system
 15147	
 15148	    This tells rsync not to cross filesystem boundaries when recursing.
 15149	
 15150	--existing
 15151	
 15152	    This tells rsync not to create any new files - only update files that
 15153	    already exist on the destination.
 15154	
 15155	--max-delete=NUM
 15156	
 15157	    This tells rsync not to delete more than NUM files or directories.
 15158	
 15159	--delete
 15160	
 15161	    This tells rsync to delete any files on the receiving side that aren´t on
 15162	    the sending side. Files that are excluded from transfer are excluded from
 15163	    being deleted unless you use --delete-excluded.
 15164	
 15165	    This option has no effect if directory recursion is not selected.
 15166	
 15167	--delete-excluded
 15168	
 15169	    In addition to deleting the files on the receiving side that are not on the
 15170	    sending side, this tells rsync to also delete any files on the receiving
 15171	    side that are excluded (see --exclude).
 15172	
 15173	--delete-after
 15174	
 15175	    By default rsync does file deletions before transferring files to try to
 15176	    ensure that there is sufficient space on the receiving filesystem. If you
 15177	    want to delete after transferring then use the --delete-after switch.
 15178	
 15179	-B, --block-size=BLOCKSIZE
 15180	
 15181	    This controls the block size used in the rsync algorithm. See the technical
 15182	    report for details.
 15183	
 15184	-e, --rsh=COMMAND
 15185	
 15186	    This option allows you to specify the remote shell program to use for
 15187	    communication between the local and remote copies of rsync.
 15188	
 15189	    You can also choose the remote shell program using the RSYNC_RSH
 15190	    environment variable.
 15191	
 15192	--rsync-path=PATH
 15193	
 15194	    Use this to specify the path to the copy of rsync on the remote machine.
 15195	    Note that this is the full path to the binary, not just the directory that
 15196	    the binary is in.
 15197	
 15198	--exclude=PATTERN
 15199	
 15200	    This option allows you to selectively exclude certain files from the list
 15201	    of files to be transferred.
 15202	
 15203	    You may use as many --exclude options on the command line as you like to
 15204	    build up the list of files to exclude.
 15205	
 15206	--exclude-from=FILE
 15207	
 15208	    This option is similar to the --exclude option, but instead it adds all
 15209	    exclude patterns listed in the file FILE to the exclude list. Blank lines
 15210	    in FILE and lines starting with ´;´ or ´#´ are ignored.
 15211	
 15212	--include=PATTERN
 15213	
 15214	    This option tells rsync to not exclude the specified pattern of filenames.
 15215	    This is useful as it allows you to build up quite complex exclude/include
 15216	    rules.
 15217	
 15218	--include-from=FILE
 15219	
 15220	    This specifies a list of include patterns from a file.
 15221	
 15222	-T, --temp-dir=DIR
 15223	
 15224	    This option instructs rsync to use DIR as a scratch directory when creating
 15225	    temporary copies of the files transferred on the receiving side. The
 15226	    default behavior is to create the temporary files in the receiving
 15227	    directory.
 15228	
 15229	-z, --compress
 15230	
 15231	    With this option, rsync compresses any data from the source file(s) which
 15232	    it sends to the destination machine.
 15233	
 15234	--numeric-ids
 15235	
 15236	    With this option rsync will transfer numeric group and user ids rather than
 15237	    using user and group names and mapping them at both ends.
 15238	
 15239	    By default rsync will use the user name and group name to determine what
 15240	    ownership to give files. The special uid 0 and the special group 0 are
 15241	    never mapped via user/group names even if the --numeric-ids option is not
 15242	    specified.
 15243	
 15244	--timeout=TIMEOUT
 15245	
 15246	    This option allows you to set a maximum IO timeout in seconds. If no data
 15247	    is transferred for the specified time then rsync will exit. The default is
 15248	    0, which means no timeout.
 15249	
 15250	--port=PORT
 15251	
 15252	    This specifies an alternate TCP port number to use rather than the default
 15253	    port 873. This only has effect when using rsync to connect to a remote
 15254	    rsync daemon.
 15255	
 15256	--blocking-io
 15257	
 15258	    This specifies whether rsync will use blocking IO when launching a remote
 15259	    shell transport. You may find this is needed for some remote shells that
 15260	    can´t handle the default non-blocking IO.
 15261	
 15262	--partial
 15263	
 15264	    By default, rsync will delete any partially transferred file if the
 15265	    transfer is interrupted. In some circumstances it is more desirable to keep
 15266	    partially transferred files. Using the --partial option tells rsync to keep
 15267	    the partial file which should make a subsequent transfer of the rest of the
 15268	    file much faster.
 15269	
 15270	--progress
 15271	
 15272	    This option tells rsync to print information showing the progress of the
 15273	    transfer.
 15274	
 15275	-P
 15276	
 15277	    Equivalent to --partial --progress
 15278	
 15279	--password-file
 15280	
 15281	    This option allows you to provide a password in a file for accessing a
 15282	    remote rsync server. Note that this option is only useful when accessing a
 15283	    rsync server using the built in transport, not when using a remote shell as
 15284	    the transport. The file must not be world readable. It should contain just
 15285	    the password as a single line.
 15286	
 15287	--bwlimit=KBPS
 15288	
 15289	    This option allows you to specify a maximum transfer rate in kilobytes per
 15290	    second. A value of zero specifies no limit.
 15291	
 15292	sed
 15293	
 15294	Name
 15295	
 15296	sed -- stream editor
 15297	
 15298	Description
 15299	
 15300	The specification for "sed" is as specified in the SUS but with the following
 15301	differences as listed below.
 15302	
 15303	Differences
 15304	
 15305	-V, --version
 15306	
 15307	    Print out the version of sed that is being run and a copyright notice, then
 15308	    exit.
 15309	
 15310	--quiet, --silent
 15311	
 15312	    Equivalent to the -n option
 15313	
 15314	--expression
 15315	
 15316	    Equivalent to the -e option
 15317	
 15318	--file=script-file
 15319	
 15320	    Equivalent to the -f option.
 15321	
 15322	sendmail
 15323	
 15324	Name
 15325	
 15326	sendmail -- an electronic mail transport agent
 15327	
 15328	Synopsis
 15329	
 15330	sendmail [flags] [address ...]
 15331	
 15332	Sending electronic mail
 15333	
 15334	To deliver electronic mail (email), applications shall support the interface
 15335	provided by /usr/sbin/sendmail (described here). The /usr/sbin/sendmail
 15336	interface shall be the default delivery method for applications.
 15337	
 15338	Description
 15339	
 15340	This program sends an email message to one or more recipients, routing the
 15341	message as necessary. This program is not intended as a user interface routine.
 15342	
 15343	With no flags, sendmail reads its standard input up to an end-of-file or a line
 15344	consisting only of a single dot and sends a copy of the message found there to
 15345	all of the addresses listed. It determines the network(s) to use based on the
 15346	syntax and contents of the addresses.
 15347	
 15348	It is recommended that applications use as few flags as necessary, none if
 15349	possible.
 15350	
 15351	Some agents allow aliasing on the local system to be prevented by preceding the
 15352	address with a backslash.
 15353	
 15354	The of messages must be as defined in RFC 2822.
 15355	
 15356	Options
 15357	
 15358	-bm
 15359	
 15360	    Read mail from standard input and deliver to the recipient addresses. This
 15361	    is the default mode of operation.
 15362	
 15363	-bp
 15364	
 15365	    List information about messages currently in the input mail queue.
 15366	
 15367	-bs
 15368	
 15369	    Use the SMTP protocol as described in RFC 2821. (Read SMTP commands on
 15370	    standard input and write SMTP responses on standard output.)
 15371	
 15372	    Note that RFC 2821 specifies \r\n (CR-LF) be used at the end of each line,
 15373	    but Unix pipes almost always use \n (LF) instead. To deal with this, agents
 15374	    will accept both \r\n and \n at the end of each line. When accepting \r\n,
 15375	    the \r before the \n is silently discarded.
 15376	
 15377	-F fullname
 15378	
 15379	    Explicitly set the full name of the sender for incoming mail unless the
 15380	    message already contains a From: message header.
 15381	
 15382	    If the user running sendmail is not sufficiently trusted, then the actual
 15383	    sender may be indicated in the message, depending on the behavior of the
 15384	    agent.
 15385	
 15386	-f name
 15387	
 15388	    Explicitly set the envelope sender address for incoming mail. If there is
 15389	    no From: header, the address specified in the From: header will also be
 15390	    set.
 15391	
 15392	    If the user running sendmail is not sufficiently trusted, then the actual
 15393	    sender will be indicated in the message.
 15394	
 15395	-i
 15396	
 15397	    Ignore dots alone on lines by themselves in incoming messages. This option
 15398	    is ignored when -bs is used.
 15399	
 15400	-odb
 15401	
 15402	    If supported, deliver any mail in background. Otherwise, this option is
 15403	    ignored.
 15404	
 15405	-odf
 15406	
 15407	    If supported, deliver any mail in foreground. Otherwise, this option is
 15408	    ignored.
 15409	
 15410	-oem or -em
 15411	
 15412	    Mail errors back to the sender (default).
 15413	
 15414	-oep or -ep
 15415	
 15416	    Write errors to the standard error output.
 15417	
 15418	-oeq or -eq
 15419	
 15420	    Do not send notification of errors to the sender. This only works for mail
 15421	    delivered locally.
 15422	
 15423	-oew or -ew
 15424	
 15425	    Write errors to the sender's terminal using the write(1) command, if he is
 15426	    logged in. Otherwise, mail errors back to the sender. If not supported,
 15427	    report errors in the same manner as -oem.
 15428	
 15429	-oi
 15430	
 15431	    Same as -i.
 15432	
 15433	-om
 15434	
 15435	    This option means 'me too', indicating that the sender of a message should
 15436	    receive a copy of the message if the sender appears in an alias expansion.
 15437	    Ignored if aliases are not supported.
 15438	
 15439	-t
 15440	
 15441	    Read the message to obtain recipients from the To:, Cc:, and Bcc: headers
 15442	    in the message instead of from the command arguments. If a Bcc: header is
 15443	    present, it is removed from the message unless there is no To: or Cc:
 15444	    header, in which case a Bcc: header with no data is created, in accordance
 15445	    with RFC 2822.
 15446	
 15447	    If there are any arguments, they specify addresses to which the message is
 15448	    not to be delivered. That is, the argument addresses are removed from the
 15449	    recipients list obtained from the headers. Note: some agents implement this
 15450	    behavior in reverse, adding addresses instead of removing them. Others may
 15451	    disallow addresses in argument list. Therefore, applications should not put
 15452	    addresses in the argument list if -t is used.
 15453	
 15454	    This option is sometimes ignored when not in -bm mode (the default).
 15455	
 15456	-v
 15457	
 15458	    Be more verbose. Additional -v options may make the software increasingly
 15459	    verbose.
 15460	
 15461	Exit status
 15462	
 15463	0
 15464	
 15465	    Successful completion on all addresses. This does not indicate successful
 15466	    delivery.
 15467	
 15468	>0
 15469	
 15470	    There was an error.
 15471	
 15472	Notes/Rationale
 15473	
 15474	This page is believed to reflect functionality provided by smail, exim and
 15475	other implementations, just not the sendmail implementation.
 15476	
 15477	There has been a suggestion to remove -oew, -ew, -om, -t, and -v. Also to
 15478	disallow -i when -bs is specified. Most of this strikes me as a good idea, but
 15479	it might want further discussion. Seems to me that the text "Some agents allow
 15480	aliasing on the local system to be prevented by preceding the address with a
 15481	backslash" needs to remain, if the behavior of different implementations really
 15482	does vary.
 15483	
 15484	shutdown
 15485	
 15486	Name
 15487	
 15488	shutdown -- bring the system down
 15489	
 15490	Synopsis
 15491	
 15492	/sbin/shutdown [-t sec] [-arkhcfF] time [warning-message]
 15493	
 15494	Description
 15495	
 15496	shutdown brings the system down in a secure way. All logged-in users are
 15497	notified that the system is going down, and login(1) is blocked. It is possible
 15498	to shut the system down immediately or after a specified delay. All processes
 15499	are first notified that the system is going down by the signal SIGTERM.
 15500	
 15501	Standard Options
 15502	
 15503	-a
 15504	
 15505	    Use /etc/shutdown.allow
 15506	
 15507	-t sec
 15508	
 15509	    Tell init(8) to wait sec seconds between sending processes the warning and
 15510	    the kill signal, before changing to another runlevel.
 15511	
 15512	-k
 15513	
 15514	    Don't really shutdown; only send the warning messages to everybody.
 15515	
 15516	-r
 15517	
 15518	    Reboot after shutdown
 15519	
 15520	-h
 15521	
 15522	    Halt after shutdown
 15523	
 15524	-f
 15525	
 15526	    Skip fsck on reboot
 15527	
 15528	-F
 15529	
 15530	    Force fsck on reboot
 15531	
 15532	-c
 15533	
 15534	    Cancel an already running shutdown. With this option it is of course not
 15535	    possible to give the time argument, but you can enter a explanatory message
 15536	    on the command line that will be sent to all users.
 15537	
 15538	time
 15539	
 15540	    When to shutdown
 15541	
 15542	    The time argument can have different formats. First, it can be an absolute
 15543	    time in the hh:mm, in which hh is the hour (1 or 2 digits) and mm is the
 15544	    minute of the hour (in two digits). Second, it can be in the +m, in which m
 15545	    is the number of minutes to wait. The word now is an alias for +0.
 15546	
 15547	    If shutdown is called with a delay, it creates the advisory file /etc/
 15548	    nologin which causes programs such as login(1) to not allow new user
 15549	    logins. Shutdown only removes this file if it is stopped before it can
 15550	    signal init (i.e. it is cancelled or something goes wrong). Otherwise it is
 15551	    the responsibility of the system shutdown or startup scripts to remove this
 15552	    file so that users can login.
 15553	
 15554	warning-message
 15555	
 15556	    Message to send all users.
 15557	
 15558	sleep
 15559	
 15560	Name
 15561	
 15562	sleep -- delay for a specified amount of time
 15563	
 15564	Synopsis
 15565	
 15566	sleep [OPTION]... NUMBER[SUFFIX]
 15567	
 15568	Description
 15569	
 15570	Pause for NUMBER seconds. SUFFIX may be s to keep seconds, m for minutes, h for
 15571	hours or d for days.
 15572	
 15573	Standard Options
 15574	
 15575	--help
 15576	
 15577	    display help and exit
 15578	
 15579	--version
 15580	
 15581	    output version information and exit
 15582	
 15583	sort
 15584	
 15585	Name
 15586	
 15587	sort -- sort, merge or sequence check text files
 15588	
 15589	Description
 15590	
 15591	The specification for "sort" is as specified in the SUS but with the following
 15592	differences as listed below.
 15593	
 15594	Differences
 15595	
 15596	-g
 15597	
 15598	    compare according to general numerical value, imply -b
 15599	
 15600	-M
 15601	
 15602	    compare (unknown) < JAN < ... < DEC, imply -b
 15603	
 15604	-s
 15605	
 15606	    stabilize sort by disabling last resort comparison
 15607	
 15608	-T DIRECTORY
 15609	
 15610	    use DIRECTORY for temporary files, not $TMPDIR or /tmp
 15611	
 15612	-z
 15613	
 15614	    Incompatible with SUS definition. End lines with 0 byte, not newline.
 15615	
 15616	--version
 15617	
 15618	    output version information and exit
 15619	
 15620	split
 15621	
 15622	Name
 15623	
 15624	split -- split a file into pieces
 15625	
 15626	Description
 15627	
 15628	The specification for "split" is as specified in the SUS but with the following
 15629	differences as listed below.
 15630	
 15631	Differences
 15632	
 15633	-a suffix_length
 15634	
 15635	    This option is not supported
 15636	
 15637	--bytes=SIZE
 15638	
 15639	    equivalent to the -b option
 15640	
 15641	-C, --line-bytes
 15642	
 15643	    put at most SIZE bytes of lines per output file
 15644	
 15645	--lines
 15646	
 15647	    equivalent to the -l option
 15648	
 15649	--verbose
 15650	
 15651	    print a diagnostic to standard error just
 15652	
 15653	--version
 15654	
 15655	    output version information and exit
 15656	
 15657	strip
 15658	
 15659	Name
 15660	
 15661	strip -- remove unnecessary information from executable files
 15662	
 15663	Description
 15664	
 15665	The specification for "strip" is as specified in the SUS but with the following
 15666	differences as listed below.
 15667	
 15668	Differences
 15669	
 15670	-F bdfname, --target=bfdname
 15671	
 15672	    Treat the original objfile as a file with the object code bfdname, and
 15673	    rewrite it in the same .
 15674	
 15675	-I bfdname, --input-target=bfdname
 15676	
 15677	    Treat the original objfile as a file with the object code bfdname.
 15678	
 15679	-O bdfname, --output-target=bfdname
 15680	
 15681	    Replace objfile with a file in the output bfdname.
 15682	
 15683	-R sectionname, --remove-section=sectionname
 15684	
 15685	    Remove the named section from the file. This option may be given more than
 15686	    once. Note that using this option inappropriately may make the object file
 15687	    unusable.
 15688	
 15689	-s, --strip-all
 15690	
 15691	    Remove all symbols.
 15692	
 15693	-S, -g, --strip-debug
 15694	
 15695	    Remove debugging symbols only.
 15696	
 15697	--strip-unneeded
 15698	
 15699	    Strip all symbols that are not needed for relocation processing.
 15700	
 15701	-N symbolname, --strip-symbol=symbolname
 15702	
 15703	    Remove symbol symbolname from the source file. This option may be given
 15704	    more than once, and may be combined with other strip options.
 15705	
 15706	-o file
 15707	
 15708	    Put the stripped output in file, rather than replacing the existing file.
 15709	    When this argument is used, only one objfile argument may be specified.
 15710	
 15711	-p, --preserve-dates
 15712	
 15713	    Preserve the access and modification dates of the file.
 15714	
 15715	-x, --discard-all
 15716	
 15717	    Remove non-global symbols.
 15718	
 15719	-X, --discard-locals
 15720	
 15721	    Remove compiler-generated local symbols. (These usually start with `L' or
 15722	    `.'.)
 15723	
 15724	-K symbolname, --keep-symbol=symbolname
 15725	
 15726	    Copy only symbol symbolname from the source file. This option may be given
 15727	    more than once.
 15728	
 15729	-N symbolname, --strip-symbol=symbolname
 15730	
 15731	    Do not copy symbol symbolname from the source file. This option may be
 15732	    given more than once, and may be combined with strip options other than -K.
 15733	
 15734	-v, --verbose
 15735	
 15736	    Verbose output: list all object files modified. In the case of archives,
 15737	    strip -v lists all members of the archive.
 15738	
 15739	--version
 15740	
 15741	    Show the version number for strip and exit.
 15742	
 15743	su
 15744	
 15745	Name
 15746	
 15747	su -- Change user ID or become super-user
 15748	
 15749	Synopsis
 15750	
 15751	su [OPTS] [-] [username [ARGS]]
 15752	
 15753	Description
 15754	
 15755	su is used to become another user during a login session. Invoked without a
 15756	username, su defaults to becoming the super user. The optional argument - may
 15757	be used to provide an environment similar to what the user would expect had the
 15758	user logged in directly.
 15759	
 15760	The user will be prompted for a password, if appropriate. Invalid passwords
 15761	will produce an error message. All attempts, both valid and invalid, are logged
 15762	to detect abuses of the system.
 15763	
 15764	An optional command can be executed. This is done by the shell specified in /
 15765	etc/passwd for the target user unless the -s or -m options are used. Any
 15766	arguments supplied after the username will be passed to the invoked shell
 15767	(shell must support the -c command line option in order for a command to be
 15768	passed to it).
 15769	
 15770	The current environment is passed to the new shell. The value of $PATH is reset
 15771	to /bin:/usr/bin for normal users, or /sbin:/bin:/usr/sbin:/usr/bin for the
 15772	super user. This may be changed with the ENV_PATH and ENV_SUPATH definitions in
 15773	/etc/login.defs. When using the -m or -p options, the users environment is not
 15774	changed.
 15775	
 15776	A subsystem login is indicated by the presense of a "*" as the first character
 15777	of the login shell. The given home directory will be used as the root of a new
 15778	filesystem which the user is actually logged into.
 15779	
 15780	Standard Options
 15781	
 15782	-
 15783	
 15784	    make this a login shell
 15785	
 15786	-c, --comand=command
 15787	
 15788	    pass command to the invoked shell using its -c option
 15789	
 15790	-m, -p, --preserve-environment
 15791	
 15792	    do not reset environment variables, and keep the same shell if it is
 15793	    present in /etc/shells
 15794	
 15795	-s, --shell=shell
 15796	
 15797	    use shell instead of the default in /etc/passwd. The shell specified must
 15798	    be present in /etc/shells.
 15799	
 15800	sum
 15801	
 15802	Name
 15803	
 15804	sum -- print checksum and block count of a file
 15805	
 15806	Description
 15807	
 15808	The specification for "sum" is as specified in the SUS but with the following
 15809	differences as listed below.
 15810	
 15811	Differences
 15812	
 15813	-s, --sysv
 15814	
 15815	    use System V sum algorithm, use 512 bytes blocks
 15816	
 15817	--version
 15818	
 15819	    output version information and exit
 15820	
 15821	sync
 15822	
 15823	Name
 15824	
 15825	sync -- flush filesystem buffers
 15826	
 15827	Synopsis
 15828	
 15829	sync [OPTION]
 15830	
 15831	Description
 15832	
 15833	Force changed blocks to disk, update the super block.
 15834	
 15835	Standard Options
 15836	
 15837	--help
 15838	
 15839	    display help and exit
 15840	
 15841	--version
 15842	
 15843	    output version information and exit
 15844	
 15845	tail
 15846	
 15847	Name
 15848	
 15849	tail -- output the last part of files
 15850	
 15851	Description
 15852	
 15853	The specification for "tail" is as specified in the SUS but with the following
 15854	differences as listed below.
 15855	
 15856	Differences
 15857	
 15858	--retry
 15859	
 15860	    keep trying to open a file even if it is inaccessible when tail starts or
 15861	    if it becomes inaccessible later -- useful only with -f
 15862	
 15863	--bytes=N
 15864	
 15865	    output the last N bytes
 15866	
 15867	--follow
 15868	
 15869	    equivalent to the -f option
 15870	
 15871	--lines=N
 15872	
 15873	    equivalent to the -n option
 15874	
 15875	--max-unchanged-stats=N
 15876	
 15877	    When tailing a file by name, if there have been this many consecutive
 15878	    iterations for which the size has remained the same, then open/fstat the
 15879	    file to determine if that file name is still associated with the same
 15880	    device/inode-number pair as before.
 15881	
 15882	--max-consecutive-size-changes=N
 15883	
 15884	    This option is meaningful only when following by name. Use it to control
 15885	    how long tail follows the descriptor of a file that continues growing at a
 15886	    rapid pace even after it is deleted or renamed. After detecting N
 15887	    consecutive size changes for a file, open/fstat the file to determine if
 15888	    that file name is still associated with the same device/inode-number pair
 15889	    as before.
 15890	
 15891	--pid=PID
 15892	
 15893	    with -f, terminate after process ID, PID dies
 15894	
 15895	-q, --quiet, --silent
 15896	
 15897	    never output headers giving file names
 15898	
 15899	-s, --sleep-interval=S
 15900	
 15901	    with -f, sleep S seconds between iterations
 15902	
 15903	-v, --verbose
 15904	
 15905	    always output headers giving file names
 15906	
 15907	+NUMBER, -NUMBER
 15908	
 15909	    This option does not support the c or l suffixes as stated in the SUS. The
 15910	    suffixes b, k, m are supported instead which refer to multipliers 512, 1024
 15911	    and 1048576 respectively.
 15912	
 15913	tar
 15914	
 15915	Name
 15916	
 15917	tar -- file archiver
 15918	
 15919	Description
 15920	
 15921	The specification for "tar" is as specified in the SUS but with the following
 15922	differences as listed below.
 15923	
 15924	Differences
 15925	
 15926	-A, --catenate, --concatenate
 15927	
 15928	    append tar files to an archive
 15929	
 15930	--create
 15931	
 15932	    Equivalent to the -c option
 15933	
 15934	-d, --diff, --compare
 15935	
 15936	    find differences between archive and file system
 15937	
 15938	--delete
 15939	
 15940	    delete from the archive (not for use on mag tapes!)
 15941	
 15942	--apend
 15943	
 15944	    Equivalent to the -r option.
 15945	
 15946	--list
 15947	
 15948	    Equivalent to the the -t option
 15949	
 15950	--update
 15951	
 15952	    Equivalent to the -u option
 15953	
 15954	--extract, --get
 15955	
 15956	    extract files from an archive
 15957	
 15958	--atime-preserve
 15959	
 15960	    don't change access times on dumped files
 15961	
 15962	--block-size N
 15963	
 15964	    Equivalent to the -b option
 15965	
 15966	-B, --read-full-blocks
 15967	
 15968	    reblock as we read (for reading 4.2BSD pipes)
 15969	
 15970	-C, --directory DIR
 15971	
 15972	    change to directory DIR
 15973	
 15974	--checkpoint
 15975	
 15976	    print directory names while reading the archive
 15977	
 15978	-f, --file [HOSTNAME:]F
 15979	
 15980	    use archive file or device F (default "-", meaning stdin/stdout).
 15981	
 15982	--force-local
 15983	
 15984	    archive file is local even if has a colon
 15985	
 15986	-F, --info-script F, --new-volume-script F
 15987	
 15988	    run script at end of each tape (implies -M)
 15989	
 15990	-G, --incremental
 15991	
 15992	    create/list/extract old GNU- incremental backup
 15993	
 15994	-g, --listed-incremental F
 15995	
 15996	    create/list/extract new GNU- incremental backup
 15997	
 15998	-h, --dereference
 15999	
 16000	    don't dump symlinks; dump the files they point to
 16001	
 16002	-i, --ignore-zeros
 16003	
 16004	    ignore blocks of zeros in archive (normally mean EOF)
 16005	
 16006	--bzip2
 16007	
 16008	    filter archive through bzip2, use to decompress .bz2 files
 16009	
 16010	--ignore-failed-read
 16011	
 16012	    don't exit with non-zero status on unreadable files
 16013	
 16014	-k, --keep-old-files
 16015	
 16016	    keep existing files; don't overwrite them from archive
 16017	
 16018	-K, --starting-file F
 16019	
 16020	    begin at file F in the archive
 16021	
 16022	-l, --one-file-system
 16023	
 16024	    stay in local file system when creating an archive
 16025	
 16026	-L, --tape-length N
 16027	
 16028	    change tapes after writing N*1024 bytes
 16029	
 16030	--modification-time
 16031	
 16032	    Equivalent to the -m option
 16033	
 16034	-M, --multi-volume
 16035	
 16036	    create/list/extract multi-volume archive
 16037	
 16038	-N, --after-date DATE, --newer DATE
 16039	
 16040	    only store files newer than DATE
 16041	
 16042	-o, --old-archive, --portability
 16043	
 16044	    write a V7 archive, rather than ANSI . Note that for the -o option the
 16045	    behaviour is different than what is specified in the SUSv2
 16046	
 16047	-O, --to-stdout
 16048	
 16049	    extract files to standard output
 16050	
 16051	-p, --same-permissions, --preserve-permissions
 16052	
 16053	    extract all protection information
 16054	
 16055	-P, --absolute-paths
 16056	
 16057	    don't strip leading /s from file names
 16058	
 16059	--preserve
 16060	
 16061	    Equvilent to -p -s
 16062	
 16063	-R, --record-number
 16064	
 16065	    show record number within archive with each message
 16066	
 16067	--remove-files
 16068	
 16069	    remove files after adding them to the archive
 16070	
 16071	-s, --same-order, --preserve-order
 16072	
 16073	    list of names to extract is sorted to match archive
 16074	
 16075	--same-owner
 16076	
 16077	    create extracted files with the same ownership
 16078	
 16079	-S, --sparse
 16080	
 16081	    handle sparse files efficiently
 16082	
 16083	-T, --files-from F
 16084	
 16085	    get names to extract or create from file F
 16086	
 16087	--null
 16088	
 16089	    -T reads null-terminated names, disable -C
 16090	
 16091	--totals
 16092	
 16093	    print total bytes written with --create
 16094	
 16095	--verbose
 16096	
 16097	    Equivalent to the -v option
 16098	
 16099	-V, --label NAME
 16100	
 16101	    create archive with volume name NAME
 16102	
 16103	--version
 16104	
 16105	    print tar program version number
 16106	
 16107	-w, --interactive, --confirmation
 16108	
 16109	    ask for confirmation for every action
 16110	
 16111	-W, --verify
 16112	
 16113	    attempt to verify the archive after writing it
 16114	
 16115	--exclude FILE
 16116	
 16117	    exclude file FILE
 16118	
 16119	-X, --exclude-from FILE
 16120	
 16121	    exclude files listed in FILE
 16122	
 16123	-Z, --compress, --uncompress
 16124	
 16125	    filter the archive through compress
 16126	
 16127	-z, --gzip, --ungzip
 16128	
 16129	    filter the archive through gzip
 16130	
 16131	--use-compress-program PROG
 16132	
 16133	    filter the archive through PROG (which must accept -d)
 16134	
 16135	--block-compress
 16136	
 16137	    block the output of compression program for tapes
 16138	
 16139	-[0-7][lmh]
 16140	
 16141	    specify drive and density
 16142	
 16143	tee
 16144	
 16145	Name
 16146	
 16147	tee -- read from standard input and write to standard output and files
 16148	
 16149	Description
 16150	
 16151	The specification for "tee" is as specified in the SUS but with the following
 16152	differences as listed below.
 16153	
 16154	Differences
 16155	
 16156	--append
 16157	
 16158	    equivalent to the -a option
 16159	
 16160	--ignore-interrupts
 16161	
 16162	    equivalent to the -i option
 16163	
 16164	--version
 16165	
 16166	    output version information and exit
 16167	
 16168	test
 16169	
 16170	Name
 16171	
 16172	test -- check file types and compare values
 16173	
 16174	Description
 16175	
 16176	The specification for "test" is as specified in the SUS but with the following
 16177	differences as listed below.
 16178	
 16179	Differences
 16180	
 16181	-G FILE
 16182	
 16183	    FILE exists and is owned by the effective group ID
 16184	
 16185	-k FILE
 16186	
 16187	    FILE exists and has its sticky bit set
 16188	
 16189	-L FILE
 16190	
 16191	    FILE exists and is a symbolic link
 16192	
 16193	-O FILE
 16194	
 16195	    FILE exists and is owned by the effective user ID
 16196	
 16197	-S
 16198	
 16199	    FILE exists and is a socket
 16200	
 16201	time
 16202	
 16203	Name
 16204	
 16205	time -- run programs and summarize system resource usage
 16206	
 16207	Description
 16208	
 16209	The specification for "time" is as specified in the SUS but with the following
 16210	differences as listed below.
 16211	
 16212	Differences
 16213	
 16214	-o FILE, --output=FILE
 16215	
 16216	    Write the resource use statistics to FILE instead of to the standard error
 16217	    stream. By default, this overwrites the file, destroying the file's
 16218	    previous contents.
 16219	
 16220	-a, --append
 16221	
 16222	    Append the resource use information to the output file instead of
 16223	    overwriting it.
 16224	
 16225	-f FORMAT, --=FORMAT
 16226	
 16227	    Use FORMAT as the string that controls the output of time. See the below
 16228	    more information.
 16229	
 16230	--portability
 16231	
 16232	    Equivalent to the -p option
 16233	
 16234	-v, --verbose
 16235	
 16236	    Use the built-in verbose , which displays each available piece of
 16237	    information on the program's resource use on its own line, with an English
 16238	    description of its meaning.
 16239	
 16240	-V, --version
 16241	
 16242	    Print the version number of time and exit.
 16243	
 16244	Formatting the Output
 16245	
 16246	The string FORMAT controls the contents of the time output. The string can be
 16247	set using the -f or --format, -v or --verbose, or -p or --portabili­ ty
 16248	options. If they are not given, but the TIME environ­ ment variable is set, its
 16249	value is used as the string. Otherwise, a built-in default is used.
 16250	
 16251	The default is:
 16252	
 16253	%Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k
 16254	%Iinputs+%Ooutputs (%Fmajor+%Rminor)pagefaults %Wswaps
 16255	
 16256	The string usually consists of resource specifiers interspersed with plain
 16257	text. A percent sign (%) in the string causes the following character to be
 16258	interpreted as a resource specifier, which is similar to the formatting
 16259	characters in the printf(3) function.
 16260	
 16261	A backslash (\) introduces a backslash escape, which is translated into a
 16262	single printing character upon output. \t outputs a tab character, \n outputs a
 16263	newline, and \\ outputs a backslash. A backslash followed by any other
 16264	character outputs a question mark (?) followed by a backslash, to indicate that
 16265	an invalid backslash escape was given.
 16266	
 16267	Other text in the string is copied verbatim to the output. time always prints a
 16268	newline after printing the resource use information, so normally strings do not
 16269	end with a newline character (or 0).
 16270	
 16271	There are many resource specifications. Not all resources are measured by all
 16272	versions of Unix, so some of the values might be reported as zero. Any
 16273	character following a percent sign that is not listed in the table below causes
 16274	a question mark (`?') to be output, followed by that character, to indicate
 16275	that an invalid resource listed in the table below causes a question mark (`?')
 16276	to be output, followed by that character, to indicate that an invalid resource
 16277	specifier was given.
 16278	
 16279	The resource specifiers, which are a superset of those recognized by the tcsh
 16280	(1) builtin `time' command, are:
 16281	
 16282	%
 16283	
 16284	    A literal `%'.
 16285	
 16286	C
 16287	
 16288	    Name and command line arguments of the command being timed.
 16289	
 16290	D
 16291	
 16292	    Average size of the processs unshared data area, in Kilobytes.
 16293	
 16294	E
 16295	
 16296	    Elapsed real (wall clock) time used by the process, in [hours:]minutes:
 16297	    seconds.
 16298	
 16299	F
 16300	
 16301	    Number of major, or I/O-requiring, page faults that occurred while the
 16302	    process was running. These are faults where the page has actually migrated
 16303	    out of primary memory.
 16304	
 16305	I
 16306	
 16307	    Number of file system inputs by the process.
 16308	
 16309	K
 16310	
 16311	    Average total (data+stack+text) memory use of the process, in Kilobytes.
 16312	
 16313	M
 16314	
 16315	    Maximum resident set size of the process during its lifetime, in Kilobytes.
 16316	
 16317	O
 16318	
 16319	    Number of file system outputs by the process.
 16320	
 16321	P
 16322	
 16323	    Percentage of the CPU that this job got. This is just user + system times
 16324	    divided by the total running time.
 16325	
 16326	R
 16327	
 16328	    Number of minor, or recoverable, page faults. These are pages that are not
 16329	    valid (so they fault) but which have not yet been claimed by other virtual
 16330	    pages. Thus the data in the page is still valid but the system tables must
 16331	    be updated.
 16332	
 16333	S
 16334	
 16335	    Total number of CPU-seconds used by the system on behalf of the process (in
 16336	    kernel mode), in seconds.
 16337	
 16338	U
 16339	
 16340	    Total number of CPU-seconds that the process used directly (in user mode),
 16341	    in seconds.
 16342	
 16343	W
 16344	
 16345	    Number of times the process was swapped out of main memory.
 16346	
 16347	X
 16348	
 16349	    Average amount of shared text in the process, in Kilobytes.
 16350	
 16351	Z
 16352	
 16353	    System's page size, in bytes. This is a per-system constant, but varies
 16354	    between systems.
 16355	
 16356	c
 16357	
 16358	    Number of times the process was context-switched involuntarily (because the
 16359	    time slice expired).
 16360	
 16361	e
 16362	
 16363	    Elapsed real (wall clock) time used by the process, in seconds.
 16364	
 16365	k
 16366	
 16367	    Number of signals delivered to the process.
 16368	
 16369	p
 16370	
 16371	    Average unshared stack size of the process, in Kilobytes.
 16372	
 16373	r
 16374	
 16375	    Number of socket messages received by the process.
 16376	
 16377	s
 16378	
 16379	    Number of socket messages sent by the process.
 16380	
 16381	t
 16382	
 16383	    Average resident set size of the process, in Kilobytes.
 16384	
 16385	w
 16386	
 16387	    Number of times that the program was context-switched voluntarily, for
 16388	    instance while waiting for an I/O operation to complete.
 16389	
 16390	x
 16391	
 16392	    Exit status of the command.
 16393	
 16394	touch
 16395	
 16396	Name
 16397	
 16398	touch -- change file access and modification times
 16399	
 16400	Description
 16401	
 16402	The specification for "touch" is as specified in the SUS but with the following
 16403	differences as listed below.
 16404	
 16405	Differences
 16406	
 16407	--no-create
 16408	
 16409	    equivalent to the -c option
 16410	
 16411	-d, --date=STRING
 16412	
 16413	    parse STRING and use it instead of current time
 16414	
 16415	--reference=FILE
 16416	
 16417	    equivalent to the -r option
 16418	
 16419	--time=WORD
 16420	
 16421	    set time given by WORD: access atime use (same as -a) modify mtime (same as
 16422	    -m)
 16423	
 16424	--version
 16425	
 16426	    output version information and exit
 16427	
 16428	tr
 16429	
 16430	Name
 16431	
 16432	tr -- translate or delete characters
 16433	
 16434	Description
 16435	
 16436	The specification for "tr" is as specified in the SUS but with the following
 16437	differences as listed below.
 16438	
 16439	Differences
 16440	
 16441	--complement
 16442	
 16443	    equivalent to the -c option
 16444	
 16445	--delete
 16446	
 16447	    equivalent to the -d option
 16448	
 16449	--squeeze-repeats
 16450	
 16451	    equivalent to the -s option
 16452	
 16453	-t, --truncate-set1
 16454	
 16455	    first truncate SET1 to length of SET2
 16456	
 16457	--version
 16458	
 16459	    output version information and exit
 16460	
 16461	tty
 16462	
 16463	Name
 16464	
 16465	tty -- print the file name of the terminal connected to standard input
 16466	
 16467	Description
 16468	
 16469	The specification for "tty" is as specified in the SUS but with the following
 16470	differences as listed below.
 16471	
 16472	Differences
 16473	
 16474	--silent, --quiet
 16475	
 16476	    equivalent to the -s option
 16477	
 16478	--delete
 16479	
 16480	    equivalent to the -d option
 16481	
 16482	--squeeze-repeats
 16483	
 16484	    equivalent to the -s option
 16485	
 16486	--version
 16487	
 16488	    output version information and exit
 16489	
 16490	umount
 16491	
 16492	Name
 16493	
 16494	umount -- unmount file systems
 16495	
 16496	Synopsis
 16497	
 16498	umount [-hV]
 16499	umount -a [-nrv] [-t vfstype]
 16500	umount [-nrv] device | dir [...]
 16501	
 16502	Description
 16503	
 16504	The umount command detaches the file system(s) mentioned from the file
 16505	hierarchy. A file system is specified by giving the directory where it has been
 16506	mounted.
 16507	
 16508	Standard Options
 16509	
 16510	-V
 16511	
 16512	    Print version and exit.
 16513	
 16514	-v
 16515	
 16516	    Verbose mode.
 16517	
 16518	-n
 16519	
 16520	    Unmount without writing in /etc/mtab.
 16521	
 16522	-r
 16523	
 16524	    In case unmounting fails, try to remount read-only.
 16525	
 16526	-a
 16527	
 16528	    All of the file systems described in /etc/mtab are unmounted except for the
 16529	    proc filesystem.
 16530	
 16531	-t vfstype
 16532	
 16533	    Indicate that the actions should only be taken on file systems of the
 16534	    specified type. More than one type may be specified in a comma separated
 16535	    list. The list of file system types can be prefixed with no to specify the
 16536	    file system types on which no action should be taken.
 16537	
 16538	-f
 16539	
 16540	    Force unmount (in case of an unreachable NFS system).
 16541	
 16542	uname
 16543	
 16544	Name
 16545	
 16546	uname -- return system name
 16547	
 16548	Description
 16549	
 16550	The specification for "uname" is as specified in the SUS but with the following
 16551	differences as listed below.
 16552	
 16553	Differences
 16554	
 16555	-a, --all
 16556	
 16557	    print all information (not just the options specified in the SUS)
 16558	
 16559	--machine
 16560	
 16561	    equivalent to the -m option
 16562	
 16563	--nodename
 16564	
 16565	    equivalent to the -n option
 16566	
 16567	--release
 16568	
 16569	    equivalent to the -r option
 16570	
 16571	-p, --processor
 16572	
 16573	    print the host processor type
 16574	
 16575	--sysname
 16576	
 16577	    equivalent to the -s option
 16578	
 16579	--version
 16580	
 16581	    output version information and exit
 16582	
 16583	unexpand
 16584	
 16585	Name
 16586	
 16587	unexpand -- convert spaces to tabs
 16588	
 16589	Description
 16590	
 16591	The specification for "unexpand" is as specified in the SUS but with the
 16592	following differences as listed below.
 16593	
 16594	Differences
 16595	
 16596	--tabs=NUMBER, -NUMBER
 16597	
 16598	    equivalent to -t NUMBER
 16599	
 16600	--tabs=LIST, -LIST
 16601	
 16602	    equivalent to -t LIST
 16603	
 16604	uniq
 16605	
 16606	Name
 16607	
 16608	uniq -- remove duplicate lines from a sorted file
 16609	
 16610	Description
 16611	
 16612	The specification for "uniq" is as specified in the SUS but with the following
 16613	differences as listed below.
 16614	
 16615	Differences
 16616	
 16617	--count
 16618	
 16619	    equivalent to the -c option
 16620	
 16621	--repeated
 16622	
 16623	    equivalent to the -d option
 16624	
 16625	-D, --all-repeated
 16626	
 16627	    print all duplicate lines
 16628	
 16629	--skip-fields=N
 16630	
 16631	    equivalent to -f fields
 16632	
 16633	-i, --ignore-case
 16634	
 16635	    ignore differences in case when comparing
 16636	
 16637	--skip-chars=N
 16638	
 16639	    equivalent to the -s option
 16640	
 16641	--unique
 16642	
 16643	    equivalent to the -u option
 16644	
 16645	-w, --check-chars=N
 16646	
 16647	    compare no more than N characters in lines
 16648	
 16649	--version
 16650	
 16651	    output version information and exit
 16652	
 16653	useradd
 16654	
 16655	Name
 16656	
 16657	useradd -- Create a new user or update default new user information
 16658	
 16659	Synopsis
 16660	
 16661	useradd [-c comment] [-d home_dir]
 16662	        [-e expire_date] [-f inactive_time]
 16663	        [-g initial_group] [-G group[,...]]
 16664	        [-m [-k skeleton_dir]] [-p passwd] [-r]
 16665	        [-s shell] [-u uid [ -o]] login
 16666	
 16667	useradd -D [-g default_group] [-b default_home]
 16668	           [-f default_inactive] [-e default_expire_date]
 16669	           [-s default_shell]
 16670	
 16671	Description
 16672	
 16673	When invoked without the -D option, the useradd command creates a new user
 16674	account using the values specified on the command line and the default values
 16675	from the system. The new user account will be entered into the system files as
 16676	needed, the home directory will be created, and initial files copied, depending
 16677	on the command line options.
 16678	
 16679	When invoked with the -D option, useradd will either display the current
 16680	default values, or update the default values from the command line. If no
 16681	options are specified, useradd displays the current default values.
 16682	
 16683	Standard Options
 16684	
 16685	-c comment
 16686	
 16687	    The new user's password file comment field.
 16688	
 16689	-d home_dir
 16690	
 16691	    The new user will be created using home_dir as the value for the user's
 16692	    login directory. The default is to append the login name to default_home
 16693	    and use that as the login directory name.
 16694	
 16695	-e expire_date
 16696	
 16697	    The date on which the user account will be disabled. The date is specified
 16698	    in the YYYY-MM-DD.
 16699	
 16700	-f inactive_days
 16701	
 16702	    The number of days after a password expires until the account is
 16703	    permanently disabled. A value of 0 disables the account as soon as the
 16704	    password has expired, and a value of -1 disables the feature. The default
 16705	    value is -1.
 16706	
 16707	-g initial_group
 16708	
 16709	    The group name or number of the user's initial login group. The group name
 16710	    must exist. A group number must refer to an already existing group. The
 16711	    default group number is 1.
 16712	
 16713	-G group,[...]
 16714	
 16715	    A list of supplementary groups which the user is also a member of. Each
 16716	    group is separated from the next by a comma, with no intervening
 16717	    whitespace. The groups are subject to the same restrictions as the group
 16718	    given with the -g option. The default is for the user to belong only to the
 16719	    initial group.
 16720	
 16721	-m [-k skeleton_dir]
 16722	
 16723	    The user's home directory will be created if it does not exist. The files
 16724	    contained in skeleton_dir will be copied to the home directory if the -k
 16725	    option is used, otherwise the files contained in /etc/skel will be used
 16726	    instead. Any directories contained in skeleton_dir or /etc/skel will be
 16727	    created in the user's home directory as well. The -k option is only valid
 16728	    in conjunction with the -m option. The default is to not create the
 16729	    directory and to not copy any files.
 16730	
 16731	-p passwd
 16732	
 16733	    The encrypted password, as returned by crypt(3). The default is to disable
 16734	    the account.
 16735	
 16736	-r
 16737	
 16738	    This flag is used to create a system account. That is, a user with a UID in
 16739	    the range reserved for system account users. If there is not a UID free in
 16740	    the reserved range the command will fail.
 16741	
 16742	-s shell
 16743	
 16744	    The name of the user's login shell. The default is to leave this field
 16745	    blank, which causes the system to select the default login shell.
 16746	
 16747	-u uid [-o]
 16748	
 16749	    The numerical value of the user's ID. This value must be unique, unless the
 16750	    -o option is used. The value must be non-negative. The default is the
 16751	    smallest ID value greater than 499 which is not yet used.
 16752	
 16753	Change Default Options
 16754	
 16755	-b default_home
 16756	
 16757	    The initial path prefix for a new user's home directory. The user's name
 16758	    will be affixed to the end of default_home to create the new directory name
 16759	    if the -d option is not used when creating a new account.
 16760	
 16761	-e default_expire_date
 16762	
 16763	    The date on which the user account is disabled.
 16764	
 16765	-f default_inactive
 16766	
 16767	    The number of days after a password has expired before the account will be
 16768	    disabled.
 16769	
 16770	-g default_group
 16771	
 16772	    The group name or ID for a new user's initial group. The named group must
 16773	    exist, and a numerical group ID must have an existing entry.
 16774	
 16775	-s default_shell
 16776	
 16777	    The name of the new user's login shell. The named program will be used for
 16778	    all future new user accounts.
 16779	
 16780	-c comment
 16781	
 16782	    The new user's password file comment field.
 16783	
 16784	userdel
 16785	
 16786	Name
 16787	
 16788	userdel -- Delete a user account and related files
 16789	
 16790	Synopsis
 16791	
 16792	userdel [-r] login
 16793	
 16794	Options
 16795	
 16796	-r
 16797	
 16798	    Files in the user's home directory will be removed along with the home
 16799	    directory itself. Files located in other file system will have to be
 16800	    searched for and deleted manually.
 16801	
 16802	usermod
 16803	
 16804	Name
 16805	
 16806	usermod -- Modify a user account
 16807	
 16808	Synopsis
 16809	
 16810	usermod [-c comment] [-d home_dir [ -m]]
 16811	        [-e expire_date] [-f inactive_time]
 16812	        [-g initial_group] [-G group[,...]]
 16813	        [-l login_name] [-p passwd]
 16814	        [-s shell] [-u uid [ -o]] login
 16815	
 16816	Options
 16817	
 16818	-c comment
 16819	
 16820	    The new value of the user's password file comment field.
 16821	
 16822	-d home_dir
 16823	
 16824	    The user's new login directory. If the -m option is given the contents of
 16825	    the current home directory will be moved to the new home directory, which
 16826	    is created if it does not already exist.
 16827	
 16828	-e expire_date
 16829	
 16830	    The date on which the user account will be disabled. The date is specified
 16831	    in the YYYY-MM-DD.
 16832	
 16833	-f inactive_days
 16834	
 16835	    The number of days after a password expires until the account is
 16836	    permanently disabled. A value of 0 disables the account as soon as the
 16837	    password has expired, and a value of -1 disables the feature. The default
 16838	    value is -1.
 16839	
 16840	-g initial_group
 16841	
 16842	    The group name or number of the user's new initial login group. The group
 16843	    name must exist. A group number must refer to an already existing group.
 16844	
 16845	-G group,[...]
 16846	
 16847	    A list of supplementary groups which the user is also a member of. Each
 16848	    group is separated from the next by a comma, with no intervening
 16849	    whitespace. The groups are subject to the same restrictions as the group
 16850	    given with the -g option. If the user is currently a member of a group
 16851	    which is not listed, the user will be removed from the group.
 16852	
 16853	-l login_name
 16854	
 16855	    The name of the user will be changed from login to login_name. Nothing else
 16856	    is changed. In particular, the user's home directory name should probably
 16857	    be changed to reflect the new login name.
 16858	
 16859	-p passwd
 16860	
 16861	    The encrypted password, as returned by crypt(3).
 16862	
 16863	-s shell
 16864	
 16865	    The name of the user's new login shell. Setting this field to blank causes
 16866	    the system to select the default login shell.
 16867	
 16868	-u uid [-o]
 16869	
 16870	    The numerical value of the user's ID. This value must be unique, unless the
 16871	    -o option is used. The value must be non-negative. Any files which the user
 16872	    owns and which are located in the directory tree rooted at the user's home
 16873	    directory will have the file user ID changed automatically. Files outside
 16874	    of the user's home directory must be altered manually.
 16875	
 16876	wc
 16877	
 16878	Name
 16879	
 16880	wc -- print the number of bytes, words, and lines in files
 16881	
 16882	Description
 16883	
 16884	The specification for "wc" is as specified in the SUS but with the following
 16885	differences as listed below.
 16886	
 16887	Differences
 16888	
 16889	--bytes, --chars
 16890	
 16891	    equivalent to the -c option
 16892	
 16893	--lines
 16894	
 16895	    equivalent to the -l option
 16896	
 16897	-L, --max-line-length
 16898	
 16899	    print the length of the longest line
 16900	
 16901	-m
 16902	
 16903	    This option as described in the SUS is not supported
 16904	
 16905	--words
 16906	
 16907	    equivalent to the -w option
 16908	
 16909	--version
 16910	
 16911	    output version information and exit
 16912	
 16913	xargs
 16914	
 16915	Name
 16916	
 16917	xargs -- build and execute command lines from standard input
 16918	
 16919	Description
 16920	
 16921	The specification for "xargs" is as specified in the SUS but with the following
 16922	differences as listed below.
 16923	
 16924	Differences
 16925	
 16926	--null, -0
 16927	
 16928	    Input filenames are terminated by a null character instead of by
 16929	    whitespace, and the quotes and backslash are not special (every character
 16930	    is taken literally). Disables the end of file string, which is treated like
 16931	    any other argument. Useful when arguments might contain white space, quote
 16932	    marks, or backslashes. The GNU find -print0 option produces input suitable
 16933	    for this mode.
 16934	
 16935	--eof[=eof-str]
 16936	
 16937	    Equivalent to the -e option
 16938	
 16939	-E
 16940	
 16941	    This option is not supported
 16942	
 16943	--replace[=replace-str]
 16944	
 16945	    Use FORMAT as the string that controls the output of time. See the below
 16946	    more information.
 16947	
 16948	-I
 16949	
 16950	    This option is not supported
 16951	
 16952	--max-lines[=max-lines]
 16953	
 16954	    Equivalent to the the -l option
 16955	
 16956	-L
 16957	
 16958	    This option is not supported
 16959	
 16960	--max-args=max-args
 16961	
 16962	    Equivalent to the -n option
 16963	
 16964	--interactive
 16965	
 16966	    Equivalent to the -p option
 16967	
 16968	--no-run-if-empty, -r
 16969	
 16970	    If the standard input does not contain any nonblanks, do not run the
 16971	    command. Normally, the command is run once even if there is no input.
 16972	
 16973	--max-chars
 16974	
 16975	    Equivalent to the -s option
 16976	
 16977	--verbose
 16978	
 16979	    Equivalent to the -t option
 16980	
 16981	--version
 16982	
 16983	    Print the version number of xargs and exit.
 16984	
 16985	--exit
 16986	
 16987	    Equivalent to the -x option
 16988	
 16989	--max-procs=max-procs, -P max-procs
 16990	
 16991	    Run up to max-procs processes at a time; the default is 1. If max-procs is
 16992	    0, xargs will run as many processes as possible at a time. Use the -n
 16993	    option with -P; otherwise chances are that only one exec will be done.
 16994	
 16995	IX. Standard Shell
 16996	
 16997	Table of Contents
 16998	15. Standard Shell
 16999	
 17000	-------------------------------------------------------------------------------
 17001	
 17002	Chapter 15. Standard Shell
 17003	
 17004	Introduction
 17005	
 17006	The process of identifying a single GNU/Linux shell as a standard requires that
 17007	features intrinsic to the shell be analyzed alongside attributes relating to
 17008	its usability and availability. Among the many shells existing at the time of
 17009	the evaluation, two in particular possessed a favorable array of features --
 17010	Bash and Pdksh.
 17011	
 17012	After careful research and testing, Bash shell was adopted as the standard for
 17013	GNU/Linux. At the time of evaluation, Bash was found mostly compliant with the
 17014	POSIX-1003.2 standard, and its maintainer demonstrated interest in bringing the
 17015	shell to full compliance. Bash already enjoys wide use among shell users, and
 17016	is even included in many distributions as the default shell. Further, the
 17017	abundance of documentation found both on the Internet and in the bookstore
 17018	makes Bash an easy shell to use.
 17019	
 17020	It should be noted that Bash supports many extensions -- features of a
 17021	supplemental nature -- to those explicitly specified in POSIX-1003.2. Such
 17022	extensions to POSIX are not beneficial to the portability of a shell script.
 17023	The use of extensions must be avoided in order for a shell implementation or
 17024	shell script to be considered LSB-compliant.
 17025	
 17026	Provisions of the shell command language standard as documented in Section 3 of
 17027	POSIX-1003.2 are applicable as specified. GNU exceptions to certain standards
 17028	exist, and in such instances, the GNU method is preferred. Either variation,
 17029	however, may be used to achieve LSB-compliance. The exceptions follow.
 17030	
 17031	-------------------------------------------------------------------------------
 17032	
 17033	Standard Shell Exception: pathname of $0
 17034	
 17035	POSIX Standard, section: 3.9.1.1, line: 779-784
 17036	
 17037	When the search for command name using the PATH environment variable succeeds,
 17038	the command is executed with actions equivalent to calling 'execve()' with the
 17039	path argument set to the pathname resulting from the search, 'argv[0]' set to
 17040	the command name and the remaining arguments set to the operands.
 17041	
 17042	if [ $0 = (basename $0) ]; then
 17043	        echo "command name: " $0
 17044	fi
 17045	
 17046	GNU Exception
 17047	
 17048	When the search for command name using the PATH environment variable succeeds,
 17049	the command is executed with actions equivalent to calling 'execve()' with the
 17050	path argument set to the pathname resulting from the search, 'argv[0]' set to
 17051	the full-path command name and the remaining arguments set to the operands.
 17052	
 17053	if [ $0 = (realpath $0) ]; then
 17054	        echo "full pathname: " $0
 17055	fi
 17056	-------------------------------------------------------------------------------
 17057	
 17058	Standard Shell Exception: sourcing non-executable files
 17059	
 17060	POSIX Standard, section: 3.14.4, line: 1493-1498
 17061	
 17062	When PATH is used to locate a file for the dot utility[37] , the file's
 17063	readable bit has to be set. The executable bit is not important. The POSIX
 17064	shell ignores non-readable files.
 17065	
 17066	GNU Exception
 17067	
 17068	When PATH is used to locate a file for the dot utility, the file's readable bit
 17069	has to be set. The executable bit is not important. If file is executable and
 17070	not readable, then the interactive shell displays a diagnostic message to
 17071	standard error, and the non-interactive shell aborts.
 17072	
 17073	X. Users & Groups
 17074	
 17075	Table of Contents
 17076	16. Users & Groups
 17077	
 17078	-------------------------------------------------------------------------------
 17079	
 17080	Chapter 16. Users & Groups
 17081	
 17082	A "user name" is a string that is used to identify a user. A "login name" is a
 17083	user name that is associated with a system login. A "user id" is a non negative
 17084	integer, which can be contained in an object of type uid_t, that is used to
 17085	identify a system user. When the identity of a user is associated with a
 17086	process, a user ID value is referred to as a real user ID, or an effective user
 17087	ID. [POSIX 1.003.1-1996]
 17088	
 17089	A "group name" is a string that is used to identify a set of users. A "group
 17090	id" is a non negative interger, which can be contained in a object of type
 17091	gid_t, that is used to identify a group of system users. Each system user is a
 17092	member of at least one group. When the identity of a group is associated with a
 17093	process, agroup ID value is referred to as a real group ID, or an effective
 17094	group ID. [POSIX 1003.1-1996]
 17095	
 17096	-------------------------------------------------------------------------------
 17097	
 17098	User and Group Database
 17099	
 17100	The format of the User and Group databases is not specified. Programs may only
 17101	read these databases using the provided API. Changes to these databases should
 17102	be made using the provided commands.
 17103	
 17104	-------------------------------------------------------------------------------
 17105	
 17106	User & Group Names
 17107	
 17108	Below is a table of required mnemonic user and group names. This specification
 17109	makes no attempt to numerically assign uid or gid numbers. The exceptions are
 17110	the uid and gid for "root" which is equal to 0, and the uid and gid for "bin"
 17111	which is equal to 1.
 17112	
 17113	Table 16-1. Required User & Group Names
 17114	
 17115	+--------------------------------------------------------+
 17116	|User  |Group |Comments                                  |
 17117	|------+------+------------------------------------------|
 17118	|root  |root  |Administrative user with no restrictions  |
 17119	|------+------+------------------------------------------|
 17120	|bin   |bin   |Administrative user with some restrictions|
 17121	|------+------+------------------------------------------|
 17122	|daemon|daemon|Subprocess special privileges             |
 17123	+--------------------------------------------------------+
 17124	
 17125	Below is a table of optional mnemonic user and group names. This specification
 17126	makes no attempt to numerically assign uid or gid numbers. If the username
 17127	exists on a system, then they should be in the suggested corresponding group.
 17128	
 17129	Table 16-2. Optional User & Group Names
 17130	
 17131	+---------------------------------------------------+
 17132	|User    |Group   |Comments                         |
 17133	|--------+--------+---------------------------------|
 17134	|adm     |adm     |Administrative special privileges|
 17135	|--------+--------+---------------------------------|
 17136	|lp      |lp      |Printer special privileges       |
 17137	|--------+--------+---------------------------------|
 17138	|sync    |sync    |Login to sync the system         |
 17139	|--------+--------+---------------------------------|
 17140	|shutdown|shutdown|Login to shutdown the system     |
 17141	|--------+--------+---------------------------------|
 17142	|halt    |halt    |Login to halt the system         |
 17143	|--------+--------+---------------------------------|
 17144	|mail    |mail    |Mail special privileges          |
 17145	|--------+--------+---------------------------------|
 17146	|news    |news    |News special privileges          |
 17147	|--------+--------+---------------------------------|
 17148	|uucp    |uucp    |UUCP special privileges          |
 17149	|--------+--------+---------------------------------|
 17150	|operator|root    |Operator special privileges      |
 17151	|--------+--------+---------------------------------|
 17152	|man     |man     |Man special privileges           |
 17153	|--------+--------+---------------------------------|
 17154	|nobody  |nobody  |Used by NFS                      |
 17155	+---------------------------------------------------+
 17156	
 17157	The differences in numeric values of the uids and gids between systems on a
 17158	network can be reconciled via NIS, rdist(1), rsync(1), or ugidd(8). Only a
 17159	minimum working set of "user names" and their corresponding "user groups" are
 17160	required. Applications cannot assume non system user or group names will be
 17161	defined.
 17162	
 17163	Applications cannot assume any policy for the default umask or the default
 17164	directory permissions a user may have. Applications should enforce user only
 17165	file permissions on private files such as mailboxes. The location of the users
 17166	home directory is also not defined by policy other than the recommendations of
 17167	the FHS and must be obtained by the *pwnam(3) calls.
 17168	
 17169	-------------------------------------------------------------------------------
 17170	
 17171	UID Ranges
 17172	
 17173	The system UIDs from 0 to 99 should be statically allocated by the system.
 17174	These static assignments should be defined by a common registry.
 17175	
 17176	The system UIDs from 100 to 499 should be reserved for dynamically allocation
 17177	by system administrators and post install scripts using useradd(1).
 17178	
 17179	XI. File System Hierarchy
 17180	
 17181	Table of Contents
 17182	17. FHS
 17183	
 17184	-------------------------------------------------------------------------------
 17185	
 17186	Chapter 17. FHS
 17187	
 17188	An LSB conforming system must adhere to the FHS 2.2.
 17189	
 17190	LSB applications must not access files in /proc.
 17191	
 17192	-------------------------------------------------------------------------------
 17193	
 17194	Minimal granted Directory and File permissions
 17195	
 17196	In this Chapter "System" means a "LSB compliant system" and "application" means
 17197	a "LSB compliant (third party vendor) application".
 17198	
 17199	The system must grant to the application read and execute permissions needed to
 17200	use all system interfaces (ABIs) mentioned in the LSB document and included
 17201	standards.
 17202	
 17203	-------------------------------------------------------------------------------
 17204	
 17205	Recommendations for applications on ownership and permissions
 17206	
 17207	Directory Write Permissions
 17208	
 17209	The application should not depend on having directory write permission outside
 17210	/tmp, /var/tmp, it's home directory and /var/opt/<package>, where <package> is
 17211	the name of the application package.
 17212	
 17213	The application should not depend on owning these directories.
 17214	
 17215	For these directories the application should be able to work with directory
 17216	write permissions restricted by the "sticky bit". (Which prevents the
 17217	application to remove files owned by another user. This is classically done
 17218	with /tmp, to prevent accidental deletion of "foreign" files.)
 17219	
 17220	-------------------------------------------------------------------------------
 17221	
 17222	File Write Permissions
 17223	
 17224	The application should not depend on file write permission on files not owned
 17225	by the user it runs under with the exception of its personal inbox /var/mail/
 17226	<username>
 17227	
 17228	-------------------------------------------------------------------------------
 17229	
 17230	File Read and execute Permissions
 17231	
 17232	The application should not depend on having read permission to every file and
 17233	directory.
 17234	
 17235	-------------------------------------------------------------------------------
 17236	
 17237	Suid and Sgid Permissions
 17238	
 17239	The application should not depend on suid/sgid permissions on a file not
 17240	packaged with the application. Instead, the distribution is responsible for all
 17241	system commands having the required permissions and working correctly.
 17242	
 17243	Rationale: Let us make security officers happy. Lets give them the freedom to
 17244	take sgid/suid perms away, as long as they do not break the systems
 17245	functionality.
 17246	
 17247	-------------------------------------------------------------------------------
 17248	
 17249	Privileged users
 17250	
 17251	"Normal" Applications should not depend on running as a privileged user
 17252	
 17253	Special applications that have a reason to run under a privileged user, should
 17254	outline these reasons clearly in their documentation, if they are not obvious
 17255	as in the case of a backup/restore program. Users of the application should be
 17256	informed, that "this application demands security privileges, which could infer
 17257	with system security".
 17258	
 17259	The application should not contain binary only software which it depends on
 17260	running as root, as this makes security auditing harder or even impossible.
 17261	
 17262	-------------------------------------------------------------------------------
 17263	
 17264	Changing permissions
 17265	
 17266	The application should not change permissions of files and directories not
 17267	being part of their package. To do so without a warning notice in the
 17268	documentation is regarded as unfriendly act.
 17269	
 17270	-------------------------------------------------------------------------------
 17271	
 17272	Removable Media (Cdrom, Floppy,...)
 17273	
 17274	The application should be prepared on removable media being mounted with some
 17275	of the options "noauto", "nouser", "nosuid" or "nodev". Also the mount options
 17276	"uid=X", "gid=X" should be awaited with a non-zero uid/gid value X.
 17277	
 17278	Rationale: System vendors and local system administrators want to run
 17279	applications from removable media, but want the possibility to control what the
 17280	application can do.
 17281	
 17282	Run-from-removable media applications should not depend on logging in as a
 17283	privileged user.
 17284	
 17285	-------------------------------------------------------------------------------
 17286	
 17287	Installable applications
 17288	
 17289	If the Installation of an Applications requires the execution of programmes
 17290	with superuser privileges, then this programmes should be supplied (also) in a
 17291	human readable form.
 17292	
 17293	If not doing so, the local system administrator would have to blindly trust a
 17294	piece of software, he can not check for security.
 17295	
 17296	XII. System Initialization
 17297	
 17298	Table of Contents
 17299	18. System Initialization
 17300	
 17301	-------------------------------------------------------------------------------
 17302	
 17303	Chapter 18. System Initialization
 17304	
 17305	Cron Jobs
 17306	
 17307	Packages may not touch the configuration file /etc/crontab, nor may they modify
 17308	the files in /var/spool/cron/crontabs.
 17309	
 17310	If a package wants to install a job that has to be executed via cron, it shall
 17311	place a file with the name if the package in one of the following directories:
 17312	
 17313	/etc/cron.daily
 17314	/etc/cron.weekly
 17315	/etc/cron.monthly
 17316	
 17317	As these directory names say, the files within them are executed on a daily,
 17318	weekly, or monthly basis, respectively.
 17319	
 17320	 If a certain job has to be executed more frequently than daily, the package
 17321	shall install a file /etc/cron.d/<package-name> tagged as configuration file.
 17322	This file uses the same syntax as /etc/crontab and is processed by cron
 17323	automatically.
 17324	
 17325	It is recommended that files installed in any of these directories be scripts
 17326	(shell scripts, Perl scripts, etc.) so that they may be modified by the local
 17327	system administrator. In addition, they must be registered as configuration
 17328	file.
 17329	
 17330	The scripts in these directories have to check, if all necessary programs are
 17331	installed before they try to execute them. Otherwise, problems will arise when
 17332	a package was removed (but not purged), since the configuration files are kept
 17333	on the system in this situation.
 17334	
 17335	To avoid namespace conflicts in the /etc/cron.* directories, the filenames used
 17336	by LSB-compliant packages in /etc/cron.daily, /etc/cron.weekly, /etc/
 17337	cron.monthly, or /etc/cron.d must come from a managed namespace. These
 17338	filenames may be assigned using one of the following methods:
 17339	
 17340	  * Assigned namespace. This namespace consists of names which only use the
 17341	    character set [a-z0-9]. In order to avoid conflicts these cron script names
 17342	    must be reserved through the Linux Assigned Names and Numbers Authority
 17343	    (LANANA). Information about the LANANA may be found at www.lanana.org.
 17344	
 17345	    Commonly used names shall be reserved in advance; developers for projects
 17346	    should be encouraged reserve names from LANA, so that each distribution can
 17347	    use the same name, and to avoid conflicts with other projects.
 17348	
 17349	  * Hierarchical namespace. This namespace consists of scripts names which look
 17350	    like this: [hier1]-[hier2]-...-[name], where name is again taken the
 17351	    character set [a-z0-9], and where there may be one or more [hier-n]
 17352	    components. [hier1] may either be an LSB provider name assigned by the
 17353	    LANANA, or it may be owners' DNS name in lower case, with at least one '.'.
 17354	    I.e., "debian.org", "staroffice.sun.com", etc. The LSB provider name
 17355	    assigned by LANANA must only consist of the ASCII characters [a-z0-9].
 17356	
 17357	  * Reserved namespace. This namespace consists of script names which begin
 17358	    with the character '_', and is reserved for distribution use only. This
 17359	    namespace should be used for core packages only, and in general use of this
 17360	    namespace is highly discouraged.
 17361	
 17362	-------------------------------------------------------------------------------
 17363	
 17364	Run Levels
 17365	
 17366	0 halt
 17367	1 single user mode
 17368	2 multiuser with no network services exported
 17369	3 normal/full multiuser
 17370	4 reserved for local use, default is normal/full multiuser
 17371	5 multiuser with xdm or equivalent
 17372	6 reboot
 17373	
 17374	-------------------------------------------------------------------------------
 17375	
 17376	Init Script Actions
 17377	
 17378	Init files shall accept one argument, saying what to do:
 17379	
 17380	start        start the service
 17381	stop         stop the service
 17382	restart      stop and restart the service if the service is already running,
 17383	             otherwise start the service
 17384	reload       cause the configuration of the service to be reloaded without
 17385	             actually stopping and restarting the service
 17386	force-reload cause the configuration to be reloaded if the service supports
 17387	             this, otherwise restart the service
 17388	status       print the current status of the service
 17389	
 17390	The start, stop, restart, force-reload, and status commands must be supported
 17391	by all init files; the reload option is optional. Other init script actions may
 17392	be defined by the init script.
 17393	
 17394	Init files must ensure that they will behave sensibly if invoked with start
 17395	when the service is already running, or with stop when it isn't, and that they
 17396	don't kill unfortunately-named user processes. The best way to achieve this is
 17397	to use the init-script functions provided by /lib/lsb/init-functions.
 17398	
 17399	If a service reloads its configuration automatically (as in the case of cron,
 17400	for example), the reload option of the init file must behave as if the
 17401	configuration has been reloaded successfully.
 17402	
 17403	These executable files must not fail obscurely when the configuration files
 17404	remain but the package has been removed, as the default in [the packaging
 17405	system] is to leave configuration files on the system after the package has
 17406	been removed. Only when it is executed with the [purge] option will [the
 17407	packaging system] remove configuration files. Therefore, you should include a
 17408	test statement at the top of the file, like this:
 17409	test -f program-executed-later-in-file || exit 5
 17410	or take the equivalent action if the init file is not a shell script.
 17411	
 17412	If the status command is given, the init script will return the following exit
 17413	status codes.
 17414	
 17415	0       program is running
 17416	1       program is dead and /var/run pid file exists
 17417	2       program is dead and /var/lock lock file exists
 17418	3       program is stopped
 17419	4-100   reserved for future LSB use
 17420	100-149 reserved for distribution use
 17421	150-199 reserved for application use
 17422	200-254 reserved
 17423	
 17424	In the case of init script commands other than "status" (i.e., "start", "stop",
 17425	"restart", "reload", and "force-reload"), the init script must return an exit
 17426	status of zero if the action described by the argument has been successful.
 17427	Otherwise, the exit status shall be non-zero, as defined below. In addition to
 17428	straightforward success, the following situations are also to be considered
 17429	successful:
 17430	
 17431	  * restarting a service (instead of reloading it) with the "force-reload"
 17432	    argument
 17433	
 17434	  * running "start" on a service already running
 17435	
 17436	  * running "stop" on a service already stopped or not running
 17437	
 17438	  * running "restart" on a service already stopped or not running
 17439	
 17440	
 17441	
 17442	In case of an error, while processing any init script action except for
 17443	"status", the init script must print an error message and return one of the
 17444	following non-zero exit status codes.
 17445	
 17446	1       generic or unspecified error (current practice)
 17447	2       invalid or excess argument(s)
 17448	3       unimplemented feature (for example, "reload")
 17449	4       user had insufficient privilege
 17450	5       program is not installed
 17451	6       program is not configured
 17452	7       program is not running
 17453	8-100   reserved for future LSB use
 17454	100-149 reserved for distribution use
 17455	150-199 reserved for application use
 17456	200-254 reserved
 17457	
 17458	All error messages must be printed on standard error. All status messages must
 17459	be printed on standard output.
 17460	
 17461	 Since init files may be run manually by a system administrator with
 17462	non-standard environment variable values for PATH, USER, LOGNAME, etc. init
 17463	files must not depend on the values of these environment variables. They should
 17464	set them to some known/default values if they are needed.
 17465	
 17466	-------------------------------------------------------------------------------
 17467	
 17468	Comment conventions for init scripts
 17469	
 17470	LSB applications which need to execute script(s) at bootup and/or shutdown may
 17471	provide one or more init.d files. These files are installed by the
 17472	install_initd program described below, which copies it into a standard
 17473	directory and makes whatever other adjustments (creation of symlinks, creation
 17474	of entries in a database, etc.) are necessary so that the script can be run at
 17475	boot-time. [38]
 17476	
 17477	In the init.d file, information about the shell script shall be delimited by
 17478	the lines "### BEGIN INIT INFO" and "### END INIT INFO". These delimiter lines
 17479	may containg trailing whitespace, which shall be ignored. Inside this block
 17480	there shall be lines of the form "# {keyword}: [arg1] [arg2] ...". (All lines
 17481	inside this block start with a hash ('#') character in the first column, so
 17482	that shell treats them as comments.) The following keywords, with their
 17483	arguments are defined in this specification:
 17484	
 17485	        # Provides: boot_facility_1 [ boot_facility_2 ...]
 17486	        # Required-Start: boot_facility_1 [ boot_facility_2 ...]
 17487	        # Required-Stop: boot_facility_1 [ boot_facility_2 ...]
 17488	        # Default-Start: run_level_1 [ run_level_2 ...]
 17489	        # Default-Stop: run_level_1 [ run_level_2 ...]
 17490	        # Description: multiline_description
 17491	
 17492	Additional keywords may be defined in future LSB specifications. Distributions
 17493	may define local extensions by using the prefix "X-[distribution name]" --- for
 17494	example, "X-RedHat-foobardecl", or "X-Debian-xyzzydecl".
 17495	
 17496	An init.d shell script may declare using the "Required-Start: " header that it
 17497	must not be run until certain boot facilities are provided. This information is
 17498	used by the installation tool or the boot-time boot-script execution facility
 17499	to assure that init scripts are run in the correct order.
 17500	
 17501	Similarly, the "Required-Stop:" header defines which facilities must still be
 17502	available during the shutdown of that service. Hence, the initscript system
 17503	should avoid stopping shell scripts which provide those facilities until this
 17504	shell script is stopped.
 17505	
 17506	In a multiline description, each continuation line must begin with a '#'
 17507	followed by tab character or a '#' followed by at least two space characters.
 17508	The multiline description is terminated by the first line that does not match
 17509	this criteria.
 17510	
 17511	-------------------------------------------------------------------------------
 17512	
 17513	Installation and removal of init.d files
 17514	
 17515	An init.d file is installed by copying it into /etc/init.d (which may be a
 17516	symlink to another location). This can be done by the package installer. During
 17517	the package's postinstall script, the program "/usr/lib/lsb/install_initd" to
 17518	configure the distribution's boot script system to call the package's init.d
 17519	file at the appropriate time.
 17520	
 17521	The install_initd program takes a single argument, the pathanme to the /etc/
 17522	init.d file. For example:
 17523	
 17524	        /usr/lib/lsb/install_initd /etc/init.d/inet
 17525	
 17526	When a software package is removed, the package's preuninstall script shall
 17527	call /usr/lib/lsb/remove_initd and pass the pathname to the /etc/init.d file.
 17528	The package manager is still responsible for removing the /etc/init.d file; the
 17529	remove_initd program is provided in case the distribution needs to clean up any
 17530	other modifications the distribution's boot script system which might have been
 17531	made by the install_initd program. For example:
 17532	
 17533	        /usr/lib/lsb/remove_initd /etc/init.d/inet
 17534	
 17535	There should be a tool available to the user (ala RedHat's chkconfig) which can
 17536	be used by the system administrator to easily manipulate at which init levels a
 17537	particular init.d script is started or stopped. This specification currently
 17538	does not specify such an interface, however.
 17539	
 17540	-------------------------------------------------------------------------------
 17541	
 17542	Facility names
 17543	
 17544	Facility names that begin with a dollar sign ('$') are system facility names,
 17545	defined by the LSB, and MUST be provided by distributions. LSB applications
 17546	should not provide system facilities. This document defines the following
 17547	system facility names:
 17548	
 17549	$local_fs   all local filesystems are mounted
 17550	$network    low level networking (ethernet card; may imply PCMCIA running)
 17551	$named      named is operational
 17552	            all remote filesystems are mounted (note in some cases /usr may be
 17553	$remote_fs  remote. Most applications that care will probably require both
 17554	            $local_fs and $remote_fs)
 17555	$syslog     system logger is operational
 17556	$netdaemons all network daemons are running
 17557	
 17558	Other system facilities may be defined by other LSB applications.
 17559	
 17560	Facility names may also be init.d script names, although LSB applications
 17561	SHOULD NOT use script names, especially script names which are provided by
 17562	distributions, as these may not necessarily be the same across different
 17563	distributions.
 17564	
 17565	-------------------------------------------------------------------------------
 17566	
 17567	Script names
 17568	
 17569	Since the init.d scripts must live in a single directory, they must come from a
 17570	single namespace. Three means of assigning names from this namespace are
 17571	available:
 17572	
 17573	  * Assigned namespace. This namespace consists of names which only use the
 17574	    character set [a-z0-9]. This space is desirable for scripts which system
 17575	    administrators may often wish to run manually: e.g., "/etc/init.d/named
 17576	    restart" In order to avoid conflicts these init.d names must be reserved
 17577	    through the Linux Assigned Names and Numbers Authority (LANANA).
 17578	    Information about the LANANA may be found at www.lanana.org.
 17579	
 17580	    Commonly used names shall be reserved in advance; developers for projects
 17581	    should be encouraged reserve names from LANA, so that each distribution can
 17582	    use the same name, and to avoid conflicts with other projects.
 17583	
 17584	  * Hierarchical namespace. This namespace consists of scripts names which look
 17585	    like this: [hier1]-[hier2]-...-[name], where name is again taken the
 17586	    character set [a-z0-9], and where there may be one or more [hier-n]
 17587	    components. [hier1] may either be an LSB provider name assigned by the
 17588	    LANANA, or it may be owners' DNS name in lower case, with at least one '.'.
 17589	    I.e., "debian.org", "staroffice.sun.com", etc. The LSB provider name
 17590	    assigned by LANANA must only consist of the ASCII characters [a-z0-9].
 17591	
 17592	  * Reserved namespace. This namespace consists of script names which begin
 17593	    with the character '_', and is reserved for distribution use only. This
 17594	    namespace should be used for core packages only, and in general use of this
 17595	    namespace is highly discouraged.
 17596	
 17597	In general, if a package or some system function is likely to be used on
 17598	multiple systems, the package developers or the distribution SHOULD get a
 17599	registered name through LANA, and distributions should strive to use the same
 17600	name whenever possible. For applications which may not be "core" or may not be
 17601	commonly installed, the hierarchical namespace may be more appropriate. An
 17602	advantage to the hierarchical namespace is that there is no need to consult
 17603	with the LANA before obtaining an assigned name.
 17604	
 17605	Obviously, short names are highly desirable, since many system administrators
 17606	like to use them to manually start and stop services. Given this, they should
 17607	be standardized on a per-package basis. This is the rationale behind having a
 17608	LANA organization to assign these names. The LANA may be called upon to handle
 17609	other namespace issues, such as package/prerequisites naming (which I'm sure
 17610	will be a hot political topic, but essential to make prerequisites to work
 17611	correctly).
 17612	
 17613	This specification shall pre-define the following script names as being
 17614	reserved to the LANA. They reflect names which are commonly in use today by
 17615	distributions to start up various sytem programs/daemons. The behaviour of
 17616	these scripts are not specified here, and not all distributions may use all of
 17617	these script names.
 17618	
 17619	  * autofs
 17620	
 17621	  * apmd
 17622	
 17623	  * atd
 17624	
 17625	  * crond
 17626	
 17627	  * dhclient
 17628	
 17629	  * dhcpcd
 17630	
 17631	  * gpm
 17632	
 17633	  * exim
 17634	
 17635	  * halt
 17636	
 17637	  * identd
 17638	
 17639	  * inet
 17640	
 17641	  * httpd
 17642	
 17643	  * kudzu
 17644	
 17645	  * klogd
 17646	
 17647	  * lpd
 17648	
 17649	  * mcserv
 17650	
 17651	  * named
 17652	
 17653	  * nfs
 17654	
 17655	  * nfslock
 17656	
 17657	  * pcmcia
 17658	
 17659	  * portmap
 17660	
 17661	  * postfix
 17662	
 17663	  * random
 17664	
 17665	  * routed
 17666	
 17667	  * rstatd
 17668	
 17669	  * rusersd
 17670	
 17671	  * rwhod
 17672	
 17673	  * sendmail
 17674	
 17675	  * samba
 17676	
 17677	  * smb
 17678	
 17679	  * snmpd
 17680	
 17681	  * sshd
 17682	
 17683	  * syslog
 17684	
 17685	  * xfs
 17686	
 17687	  * xntpd
 17688	
 17689	  * ypbind
 17690	
 17691	-------------------------------------------------------------------------------
 17692	
 17693	Init script Functions
 17694	
 17695	Each LSB compliant init.d script must source the file /lib/lsb/init-functions.
 17696	This file must cause the following shell script commands to be defined. This
 17697	can be done either by adding a directory to the PATH variable which defines
 17698	these commands, or by defining sh aliases. While the distribution-provided
 17699	aliases may choose to use bash extensions (at the distribution's option), the
 17700	LSB init.d files themselves should only depend in /bin/sh features as defined
 17701	by POSIX.2.
 17702	
 17703	start_daemon    This runs the specified program as a daemon. start_daemon will
 17704	[-f] [-n        check to see if there is a program named "daemon" already
 17705	nicelevel]      running. If so, it will not start another copy of the daemon
 17706	pathname [args] unless the -f option is given. The -n option specifies a nice
 17707	                level. See nice(1).
 17708	killproc        This stops the specified program. The program is found using
 17709	basename        the algorithm given by pidofproc. If a signal is specified, the
 17710	[signal]        program is sent that signal. Otherwise, a SIGTERM followed by a
 17711	                SIGKILL after some number of seconds is sent.
 17712	                This function returns one or more pid(s) for a particular
 17713	                daemon. If an entry is found in /var/run/basename.pid, then
 17714	                that value is returned. Compliant implementations of the LSB
 17715	                may attempt other mechanisms for determining the pid(s),
 17716	pidofproc       although this is not required. (And not recommended, since a
 17717	basename        user can trick startup scripts by creating processes that
 17718	                appear to be system programs in the process list thus creating
 17719	                a potential security exposure.) Hence, LSB complaint
 17720	                applications who wish to use the pidofproc function in their
 17721	                init scripts must store the pid in /var/run/basename.pid.
 17722	log_success_msg This requests the distribution to print a success message. The
 17723	"message"       message should be relatively short; no More than 60 characters
 17724	                is highly desirable.
 17725	log_failure_msg This requests the distribution to print a failure message. The
 17726	"message"       message should be relatively short; no more than 60 characters
 17727	                is highly desirable.
 17728	log_warning_msg This requests the distribution to print a warning message. The
 17729	"message"       message should be relatively short; no more than 60 characters
 17730	                is highly desirable.
 17731	
 17732	-------------------------------------------------------------------------------
 17733	
 17734	Appendix A. Alphabetical Listing of Interfaces
 17735	
 17736	libX11
 17737	
 17738	The behaviour of the interfaces in this library is specified by the following
 17739	Standards.
 17740	
 17741	X11R6.4 Xlib - C library
 17742	
 17743	Table A-1. libX11 Function Interfaces
 17744	
 17745	+-----------------------------------------------------------------------------------------+
 17746	|XActivateScreenSaver[21]    |XInitExtension[21]              |XcmsCIELuvClipL[21]        |
 17747	|----------------------------+--------------------------------+---------------------------|
 17748	|XAddConnectionWatch[21]     |XInitImage[21]                  |XcmsCIELuvClipLuv[21]      |
 17749	|----------------------------+--------------------------------+---------------------------|
 17750	|XAddExtension[21]           |XInitThreads[21]                |XcmsCIELuvClipuv[21]       |
 17751	|----------------------------+--------------------------------+---------------------------|
 17752	|XAddHost[21]                |XInsertModifiermapEntry[21]     |XcmsCIELuvQueryMaxC[21]    |
 17753	|----------------------------+--------------------------------+---------------------------|
 17754	|XAddHosts[21]               |XInstallColormap[21]            |XcmsCIELuvQueryMaxL[21]    |
 17755	|----------------------------+--------------------------------+---------------------------|
 17756	|XAddPixel[21]               |XInternAtom[21]                 |XcmsCIELuvQueryMaxLC[21]   |
 17757	|----------------------------+--------------------------------+---------------------------|
 17758	|XAddToExtensionList[21]     |XInternAtoms[21]                |XcmsCIELuvQueryMinL[21]    |
 17759	|----------------------------+--------------------------------+---------------------------|
 17760	|XAddToSaveSet[21]           |XInternalConnectionNumbers[21]  |XcmsCIELuvToCIEuvY[21]     |
 17761	|----------------------------+--------------------------------+---------------------------|
 17762	|XAllPlanes[21]              |XIntersectRegion[21]            |XcmsCIELuvWhiteShiftColors |
 17763	|                            |                                |[21]                       |
 17764	|----------------------------+--------------------------------+---------------------------|
 17765	|XAllocClassHint[21]         |XKeycodeToKeysym[21]            |XcmsCIEXYZToCIELab[21]     |
 17766	|----------------------------+--------------------------------+---------------------------|
 17767	|XAllocColor[21]             |XKeysymToKeycode[21]            |XcmsCIEXYZToCIEuvY[21]     |
 17768	|----------------------------+--------------------------------+---------------------------|
 17769	|XAllocColorCells[21]        |XKeysymToString[21]             |XcmsCIEXYZToCIExyY[21]     |
 17770	|----------------------------+--------------------------------+---------------------------|
 17771	|XAllocColorPlanes[21]       |XKillClient[21]                 |XcmsCIEXYZToRGBi[21]       |
 17772	|----------------------------+--------------------------------+---------------------------|
 17773	|XAllocIconSize[21]          |XLastKnownRequestProcessed[21]  |XcmsCIEuvYToCIELuv[21]     |
 17774	|----------------------------+--------------------------------+---------------------------|
 17775	|XAllocNamedColor[21]        |XListDepths[21]                 |XcmsCIEuvYToCIEXYZ[21]     |
 17776	|----------------------------+--------------------------------+---------------------------|
 17777	|XAllocSizeHints[21]         |XListExtensions[21]             |XcmsCIEuvYToTekHVC[21]     |
 17778	|----------------------------+--------------------------------+---------------------------|
 17779	|XAllocStandardColormap[21]  |XListFonts[21]                  |XcmsCIExyYToCIEXYZ[21]     |
 17780	|----------------------------+--------------------------------+---------------------------|
 17781	|XAllocWMHints[21]           |XListFontsWithInfo[21]          |XcmsClientWhitePointOfCCC  |
 17782	|                            |                                |[21]                       |
 17783	|----------------------------+--------------------------------+---------------------------|
 17784	|XAllowEvents[21]            |XListHosts[21]                  |XcmsConvertColors[21]      |
 17785	|----------------------------+--------------------------------+---------------------------|
 17786	|XAutoRepeatOff[21]          |XListInstalledColormaps[21]     |XcmsCreateCCC[21]          |
 17787	|----------------------------+--------------------------------+---------------------------|
 17788	|XAutoRepeatOn[21]           |XListPixmapFormats[21]          |XcmsDefaultCCC[21]         |
 17789	|----------------------------+--------------------------------+---------------------------|
 17790	|XBaseFontNameListOfFontSet  |XListProperties[21]             |XcmsDisplayOfCCC[21]       |
 17791	|[21]                        |                                |                           |
 17792	|----------------------------+--------------------------------+---------------------------|
 17793	|XBell[21]                   |XLoadFont[21]                   |XcmsFormatOfPrefix[21]     |
 17794	|----------------------------+--------------------------------+---------------------------|
 17795	|XBitmapBitOrder[21]         |XLoadQueryFont[21]              |XcmsFreeCCC[21]            |
 17796	|----------------------------+--------------------------------+---------------------------|
 17797	|XBitmapPad[21]              |XLocaleOfFontSet[21]            |XcmsLookupColor[21]        |
 17798	|----------------------------+--------------------------------+---------------------------|
 17799	|XBitmapUnit[21]             |XLocaleOfIM[21]                 |XcmsPrefixOfFormat[21]     |
 17800	|----------------------------+--------------------------------+---------------------------|
 17801	|XBlackPixel[21]             |XLocaleOfOM[21]                 |XcmsQueryBlack[21]         |
 17802	|----------------------------+--------------------------------+---------------------------|
 17803	|XBlackPixelOfScreen[21]     |XLockDisplay[21]                |XcmsQueryBlue[21]          |
 17804	|----------------------------+--------------------------------+---------------------------|
 17805	|XCellsOfScreen[21]          |XLookupColor[21]                |XcmsQueryColor[21]         |
 17806	|----------------------------+--------------------------------+---------------------------|
 17807	|XChangeActivePointerGrab[21]|XLookupKeysym[21]               |XcmsQueryColors[21]        |
 17808	|----------------------------+--------------------------------+---------------------------|
 17809	|XChangeGC[21]               |XLookupString[21]               |XcmsQueryGreen[21]         |
 17810	|----------------------------+--------------------------------+---------------------------|
 17811	|XChangeKeyboardControl[21]  |XLowerWindow[21]                |XcmsQueryRed[21]           |
 17812	|----------------------------+--------------------------------+---------------------------|
 17813	|XChangeKeyboardMapping[21]  |XMapRaised[21]                  |XcmsQueryWhite[21]         |
 17814	|----------------------------+--------------------------------+---------------------------|
 17815	|XChangePointerControl[21]   |XMapSubwindows[21]              |XcmsRGBToRGBi[21]          |
 17816	|----------------------------+--------------------------------+---------------------------|
 17817	|XChangeProperty[21]         |XMapWindow[21]                  |XcmsRGBiToCIEXYZ[21]       |
 17818	|----------------------------+--------------------------------+---------------------------|
 17819	|XChangeSaveSet[21]          |XMaskEvent[21]                  |XcmsRGBiToRGB[21]          |
 17820	|----------------------------+--------------------------------+---------------------------|
 17821	|XChangeWindowAttributes[21] |XMatchVisualInfo[21]            |XcmsScreenNumberOfCCC[21]  |
 17822	|----------------------------+--------------------------------+---------------------------|
 17823	|XCheckIfEvent[21]           |XMaxCmapsOfScreen[21]           |XcmsScreenWhitePointOfCCC  |
 17824	|                            |                                |[21]                       |
 17825	|----------------------------+--------------------------------+---------------------------|
 17826	|XCheckMaskEvent[21]         |XMaxRequestSize[21]             |XcmsSetCCCOfColormap[21]   |
 17827	|----------------------------+--------------------------------+---------------------------|
 17828	|XCheckTypedEvent[21]        |XMinCmapsOfScreen[21]           |XcmsSetCompressionProc[21] |
 17829	|----------------------------+--------------------------------+---------------------------|
 17830	|XCheckTypedWindowEvent[21]  |XMoveResizeWindow[21]           |XcmsSetWhiteAdjustProc[21] |
 17831	|----------------------------+--------------------------------+---------------------------|
 17832	|XCheckWindowEvent[21]       |XMoveWindow[21]                 |XcmsSetWhitePoint[21]      |
 17833	|----------------------------+--------------------------------+---------------------------|
 17834	|XCirculateSubwindows[21]    |XNewModifiermap[21]             |XcmsStoreColor[21]         |
 17835	|----------------------------+--------------------------------+---------------------------|
 17836	|XCirculateSubwindowsDown[21]|XNextEvent[21]                  |XcmsStoreColors[21]        |
 17837	|----------------------------+--------------------------------+---------------------------|
 17838	|XCirculateSubwindowsUp[21]  |XNextRequest[21]                |XcmsTekHVCClipC[21]        |
 17839	|----------------------------+--------------------------------+---------------------------|
 17840	|XClearArea[21]              |XNoOp[21]                       |XcmsTekHVCClipV[21]        |
 17841	|----------------------------+--------------------------------+---------------------------|
 17842	|XClearWindow[21]            |XOMOfOC[21]                     |XcmsTekHVCClipVC[21]       |
 17843	|----------------------------+--------------------------------+---------------------------|
 17844	|XClipBox[21]                |XOffsetRegion[21]               |XcmsTekHVCQueryMaxC[21]    |
 17845	|----------------------------+--------------------------------+---------------------------|
 17846	|XCloseDisplay[21]           |XOpenDisplay[21]                |XcmsTekHVCQueryMaxV[21]    |
 17847	|----------------------------+--------------------------------+---------------------------|
 17848	|XCloseIM[21]                |XOpenIM[21]                     |XcmsTekHVCQueryMaxVC[21]   |
 17849	|----------------------------+--------------------------------+---------------------------|
 17850	|XCloseOM[21]                |XOpenOM[21]                     |XcmsTekHVCQueryMaxVSamples |
 17851	|                            |                                |[21]                       |
 17852	|----------------------------+--------------------------------+---------------------------|
 17853	|XConfigureWindow[21]        |XParseColor[21]                 |XcmsTekHVCQueryMinV[21]    |
 17854	|----------------------------+--------------------------------+---------------------------|
 17855	|XConnectionNumber[21]       |XParseGeometry[21]              |XcmsTekHVCToCIEuvY[21]     |
 17856	|----------------------------+--------------------------------+---------------------------|
 17857	|XContextDependentDrawing[21]|XPeekEvent[21]                  |XcmsTekHVCWhiteShiftColors |
 17858	|                            |                                |[21]                       |
 17859	|----------------------------+--------------------------------+---------------------------|
 17860	|XContextualDrawing[21]      |XPeekIfEvent[21]                |XcmsVisualOfCCC[21]        |
 17861	|----------------------------+--------------------------------+---------------------------|
 17862	|XConvertCase[21]            |XPending[21]                    |XkbAllocClientMap[21]      |
 17863	|----------------------------+--------------------------------+---------------------------|
 17864	|XConvertSelection[21]       |XPlanesOfScreen[21]             |XkbAllocCompatMap[21]      |
 17865	|----------------------------+--------------------------------+---------------------------|
 17866	|XCopyArea[21]               |XPointInRegion[21]              |XkbAllocControls[21]       |
 17867	|----------------------------+--------------------------------+---------------------------|
 17868	|XCopyColormapAndFree[21]    |XPolygonRegion[21]              |XkbAllocGeomColors[21]     |
 17869	|----------------------------+--------------------------------+---------------------------|
 17870	|XCopyGC[21]                 |XProcessInternalConnection[21]  |XkbAllocGeomDoodads[21]    |
 17871	|----------------------------+--------------------------------+---------------------------|
 17872	|XCopyPlane[21]              |XProtocolRevision[21]           |XkbAllocGeomKeyAliases[21] |
 17873	|----------------------------+--------------------------------+---------------------------|
 17874	|XCreateBitmapFromData[21]   |XProtocolVersion[21]            |XkbAllocGeomKeys[21]       |
 17875	|----------------------------+--------------------------------+---------------------------|
 17876	|XCreateColormap[21]         |XPutBackEvent[21]               |XkbAllocGeomOutlines[21]   |
 17877	|----------------------------+--------------------------------+---------------------------|
 17878	|XCreateFontCursor[21]       |XPutImage[21]                   |XkbAllocGeomOverlayKeys[21]|
 17879	|----------------------------+--------------------------------+---------------------------|
 17880	|XCreateFontSet[21]          |XPutPixel[21]                   |XkbAllocGeomOverlayRows[21]|
 17881	|----------------------------+--------------------------------+---------------------------|
 17882	|XCreateGC[21]               |XQLength[21]                    |XkbAllocGeomOverlays[21]   |
 17883	|----------------------------+--------------------------------+---------------------------|
 17884	|XCreateGlyphCursor[21]      |XQueryBestCursor[21]            |XkbAllocGeomPoints[21]     |
 17885	|----------------------------+--------------------------------+---------------------------|
 17886	|XCreateIC[21]               |XQueryBestSize[21]              |XkbAllocGeomProps[21]      |
 17887	|----------------------------+--------------------------------+---------------------------|
 17888	|XCreateImage[21]            |XQueryBestStipple[21]           |XkbAllocGeomRows[21]       |
 17889	|----------------------------+--------------------------------+---------------------------|
 17890	|XCreateOC[21]               |XQueryBestTile[21]              |XkbAllocGeomSectionDoodads |
 17891	|                            |                                |[21]                       |
 17892	|----------------------------+--------------------------------+---------------------------|
 17893	|XCreatePixmap[21]           |XQueryColor[21]                 |XkbAllocGeomSections[21]   |
 17894	|----------------------------+--------------------------------+---------------------------|
 17895	|XCreatePixmapCursor[21]     |XQueryColors[21]                |XkbAllocGeomShapes[21]     |
 17896	|----------------------------+--------------------------------+---------------------------|
 17897	|XCreatePixmapFromBitmapData |XQueryExtension[21]             |XkbAllocGeometry[21]       |
 17898	|[21]                        |                                |                           |
 17899	|----------------------------+--------------------------------+---------------------------|
 17900	|XCreateRegion[21]           |XQueryFont[21]                  |XkbAllocIndicatorMaps[21]  |
 17901	|----------------------------+--------------------------------+---------------------------|
 17902	|XCreateSimpleWindow[21]     |XQueryKeymap[21]                |XkbAllocKeyboard[21]       |
 17903	|----------------------------+--------------------------------+---------------------------|
 17904	|XCreateWindow[21]           |XQueryPointer[21]               |XkbAllocNames[21]          |
 17905	|----------------------------+--------------------------------+---------------------------|
 17906	|XDefaultColormap[21]        |XQueryTextExtents[21]           |XkbAllocServerMap[21]      |
 17907	|----------------------------+--------------------------------+---------------------------|
 17908	|XDefaultColormapOfScreen[21]|XQueryTextExtents16[21]         |XkbApplyCompatMapToKey[21] |
 17909	|----------------------------+--------------------------------+---------------------------|
 17910	|XDefaultDepth[21]           |XQueryTree[21]                  |XkbApplyVirtualModChanges  |
 17911	|                            |                                |[21]                       |
 17912	|----------------------------+--------------------------------+---------------------------|
 17913	|XDefaultDepthOfScreen[21]   |XRaiseWindow[21]                |XkbBell[21]                |
 17914	|----------------------------+--------------------------------+---------------------------|
 17915	|XDefaultGC[21]              |XReadBitmapFile[21]             |XkbBellEvent[21]           |
 17916	|----------------------------+--------------------------------+---------------------------|
 17917	|XDefaultGCOfScreen[21]      |XReadBitmapFileData[21]         |XkbChangeEnabledControls   |
 17918	|                            |                                |[21]                       |
 17919	|----------------------------+--------------------------------+---------------------------|
 17920	|XDefaultRootWindow[21]      |XRebindKeysym[21]               |XkbChangeKeycodeRange[21]  |
 17921	|----------------------------+--------------------------------+---------------------------|
 17922	|XDefaultScreen[21]          |XRecolorCursor[21]              |XkbChangeMap[21]           |
 17923	|----------------------------+--------------------------------+---------------------------|
 17924	|XDefaultScreenOfDisplay[21] |XReconfigureWMWindow[21]        |XkbChangeNames[21]         |
 17925	|----------------------------+--------------------------------+---------------------------|
 17926	|XDefaultString[21]          |XRectInRegion[21]               |XkbChangeTypesOfKey[21]    |
 17927	|----------------------------+--------------------------------+---------------------------|
 17928	|XDefaultVisual[21]          |XRefreshKeyboardMapping[21]     |XkbComputeEffectiveMap[21] |
 17929	|----------------------------+--------------------------------+---------------------------|
 17930	|XDefaultVisualOfScreen[21]  |XRegisterIMInstantiateCallback  |XkbComputeRowBounds[21]    |
 17931	|                            |[21]                            |                           |
 17932	|----------------------------+--------------------------------+---------------------------|
 17933	|XDefineCursor[21]           |XRemoveConnectionWatch[21]      |XkbComputeSectionBounds[21]|
 17934	|----------------------------+--------------------------------+---------------------------|
 17935	|XDeleteContext[21]          |XRemoveFromSaveSet[21]          |XkbComputeShapeBounds[21]  |
 17936	|----------------------------+--------------------------------+---------------------------|
 17937	|XDeleteModifiermapEntry[21] |XRemoveHost[21]                 |XkbComputeShapeTop[21]     |
 17938	|----------------------------+--------------------------------+---------------------------|
 17939	|XDeleteProperty[21]         |XRemoveHosts[21]                |XkbCopyKeyType[21]         |
 17940	|----------------------------+--------------------------------+---------------------------|
 17941	|XDestroyIC[21]              |XReparentWindow[21]             |XkbCopyKeyTypes[21]        |
 17942	|----------------------------+--------------------------------+---------------------------|
 17943	|XDestroyImage[21]           |XResetScreenSaver[21]           |XkbFindOverlayForKey[21]   |
 17944	|----------------------------+--------------------------------+---------------------------|
 17945	|XDestroyOC[21]              |XResizeWindow[21]               |XkbForceBell[21]           |
 17946	|----------------------------+--------------------------------+---------------------------|
 17947	|XDestroyRegion[21]          |XResourceManagerString[21]      |XkbFreeClientMap[21]       |
 17948	|----------------------------+--------------------------------+---------------------------|
 17949	|XDestroySubwindows[21]      |XRestackWindows[21]             |XkbFreeCompatMap[21]       |
 17950	|----------------------------+--------------------------------+---------------------------|
 17951	|XDestroyWindow[21]          |XRootWindow[21]                 |XkbFreeComponentList[21]   |
 17952	|----------------------------+--------------------------------+---------------------------|
 17953	|XDirectionalDependentDrawing|XRootWindowOfScreen[21]         |XkbFreeControls[21]        |
 17954	|[21]                        |                                |                           |
 17955	|----------------------------+--------------------------------+---------------------------|
 17956	|XDisableAccessControl[21]   |XRotateBuffers[21]              |XkbFreeGeomColors[21]      |
 17957	|----------------------------+--------------------------------+---------------------------|
 17958	|XDisplayCells[21]           |XRotateWindowProperties[21]     |XkbFreeGeomDoodads[21]     |
 17959	|----------------------------+--------------------------------+---------------------------|
 17960	|XDisplayHeight[21]          |XSaveContext[21]                |XkbFreeGeomKeyAliases[21]  |
 17961	|----------------------------+--------------------------------+---------------------------|
 17962	|XDisplayHeightMM[21]        |XScreenCount[21]                |XkbFreeGeomKeys[21]        |
 17963	|----------------------------+--------------------------------+---------------------------|
 17964	|XDisplayKeycodes[21]        |XScreenNumberOfScreen[21]       |XkbFreeGeomOutlines[21]    |
 17965	|----------------------------+--------------------------------+---------------------------|
 17966	|XDisplayMotionBufferSize[21]|XScreenOfDisplay[21]            |XkbFreeGeomOverlayKeys[21] |
 17967	|----------------------------+--------------------------------+---------------------------|
 17968	|XDisplayName[21]            |XScreenResourceString[21]       |XkbFreeGeomOverlayRows[21] |
 17969	|----------------------------+--------------------------------+---------------------------|
 17970	|XDisplayOfIM[21]            |XSelectInput[21]                |XkbFreeGeomOverlays[21]    |
 17971	|----------------------------+--------------------------------+---------------------------|
 17972	|XDisplayOfOM[21]            |XSendEvent[21]                  |XkbFreeGeomPoints[21]      |
 17973	|----------------------------+--------------------------------+---------------------------|
 17974	|XDisplayOfScreen[21]        |XServerVendor[21]               |XkbFreeGeomProperties[21]  |
 17975	|----------------------------+--------------------------------+---------------------------|
 17976	|XDisplayPlanes[21]          |XSetAccessControl[21]           |XkbFreeGeomRows[21]        |
 17977	|----------------------------+--------------------------------+---------------------------|
 17978	|XDisplayString[21]          |XSetAfterFunction[21]           |XkbFreeGeomSections[21]    |
 17979	|----------------------------+--------------------------------+---------------------------|
 17980	|XDisplayWidth[21]           |XSetArcMode[21]                 |XkbFreeGeomShapes[21]      |
 17981	|----------------------------+--------------------------------+---------------------------|
 17982	|XDisplayWidthMM[21]         |XSetAuthorization[21]           |XkbFreeGeometry[21]        |
 17983	|----------------------------+--------------------------------+---------------------------|
 17984	|XDoesBackingStore[21]       |XSetBackground[21]              |XkbFreeIndicatorMaps[21]   |
 17985	|----------------------------+--------------------------------+---------------------------|
 17986	|XDoesSaveUnders[21]         |XSetClassHint[21]               |XkbFreeKeyboard[21]        |
 17987	|----------------------------+--------------------------------+---------------------------|
 17988	|XDrawArc[21]                |XSetClipMask[21]                |XkbFreeNames[21]           |
 17989	|----------------------------+--------------------------------+---------------------------|
 17990	|XDrawArcs[21]               |XSetClipOrigin[21]              |XkbFreeServerMap[21]       |
 17991	|----------------------------+--------------------------------+---------------------------|
 17992	|XDrawImageString[21]        |XSetClipRectangles[21]          |XkbGetAutoRepeatRate[21]   |
 17993	|----------------------------+--------------------------------+---------------------------|
 17994	|XDrawImageString16[21]      |XSetCloseDownMode[21]           |XkbGetCompatMap[21]        |
 17995	|----------------------------+--------------------------------+---------------------------|
 17996	|XDrawLine[21]               |XSetCommand[21]                 |XkbGetControls[21]         |
 17997	|----------------------------+--------------------------------+---------------------------|
 17998	|XDrawLines[21]              |XSetDashes[21]                  |XkbGetGeometry[21]         |
 17999	|----------------------------+--------------------------------+---------------------------|
 18000	|XDrawPoint[21]              |XSetErrorHandler[21]            |XkbGetIndicatorMap[21]     |
 18001	|----------------------------+--------------------------------+---------------------------|
 18002	|XDrawPoints[21]             |XSetFillRule[21]                |XkbGetIndicatorState[21]   |
 18003	|----------------------------+--------------------------------+---------------------------|
 18004	|XDrawRectangle[21]          |XSetFillStyle[21]               |XkbGetKeyActions[21]       |
 18005	|----------------------------+--------------------------------+---------------------------|
 18006	|XDrawRectangles[21]         |XSetFont[21]                    |XkbGetKeyBehaviors[21]     |
 18007	|----------------------------+--------------------------------+---------------------------|
 18008	|XDrawSegments[21]           |XSetFontPath[21]                |XkbGetKeyExplicitComponents|
 18009	|                            |                                |[21]                       |
 18010	|----------------------------+--------------------------------+---------------------------|
 18011	|XDrawString[21]             |XSetForeground[21]              |XkbGetKeyModifierMap[21]   |
 18012	|----------------------------+--------------------------------+---------------------------|
 18013	|XDrawString16[21]           |XSetFunction[21]                |XkbGetKeySyms[21]          |
 18014	|----------------------------+--------------------------------+---------------------------|
 18015	|XDrawText[21]               |XSetGraphicsExposures[21]       |XkbGetKeyTypes[21]         |
 18016	|----------------------------+--------------------------------+---------------------------|
 18017	|XDrawText16[21]             |XSetICFocus[21]                 |XkbGetKeyVirtualModMap[21] |
 18018	|----------------------------+--------------------------------+---------------------------|
 18019	|XEHeadOfExtensionList[21]   |XSetICValues[21]                |XkbGetKeyboard[21]         |
 18020	|----------------------------+--------------------------------+---------------------------|
 18021	|XESetBeforeFlush[21]        |XSetIMValues[21]                |XkbGetKeyboardByName[21]   |
 18022	|----------------------------+--------------------------------+---------------------------|
 18023	|XESetCloseDisplay[21]       |XSetIOErrorHandler[21]          |XkbGetMap[21]              |
 18024	|----------------------------+--------------------------------+---------------------------|
 18025	|XESetCopyGC[21]             |XSetIconName[21]                |XkbGetMapChanges[21]       |
 18026	|----------------------------+--------------------------------+---------------------------|
 18027	|XESetCreateFont[21]         |XSetIconSizes[21]               |XkbGetNamedGeometry[21]    |
 18028	|----------------------------+--------------------------------+---------------------------|
 18029	|XESetCreateGC[21]           |XSetInputFocus[21]              |XkbGetNamedIndicator[21]   |
 18030	|----------------------------+--------------------------------+---------------------------|
 18031	|XESetError[21]              |XSetLineAttributes[21]          |XkbGetNames[21]            |
 18032	|----------------------------+--------------------------------+---------------------------|
 18033	|XESetErrorString[21]        |XSetLocaleModifiers[21]         |XkbGetState[21]            |
 18034	|----------------------------+--------------------------------+---------------------------|
 18035	|XESetEventToWire[21]        |XSetModifierMapping[21]         |XkbGetUpdatedMap[21]       |
 18036	|----------------------------+--------------------------------+---------------------------|
 18037	|XESetFreeFont[21]           |XSetNormalHints[21]             |XkbGetVirtualMods[21]      |
 18038	|----------------------------+--------------------------------+---------------------------|
 18039	|XESetFreeGC[21]             |XSetOCValues[21]                |XkbGetXlibControls[21]     |
 18040	|----------------------------+--------------------------------+---------------------------|
 18041	|XESetPrintErrorValues[21]   |XSetOMValues[21]                |XkbIgnoreExtension[21]     |
 18042	|----------------------------+--------------------------------+---------------------------|
 18043	|XESetWireToError[21]        |XSetPlaneMask[21]               |XkbInitCanonicalKeyTypes   |
 18044	|                            |                                |[21]                       |
 18045	|----------------------------+--------------------------------+---------------------------|
 18046	|XESetWireToEvent[21]        |XSetPointerMapping[21]          |XkbKeyTypesForCoreSymbols  |
 18047	|                            |                                |[21]                       |
 18048	|----------------------------+--------------------------------+---------------------------|
 18049	|XEmptyRegion[21]            |XSetRGBColormaps[21]            |XkbKeycodeToKeysym[21]     |
 18050	|----------------------------+--------------------------------+---------------------------|
 18051	|XEnableAccessControl[21]    |XSetRegion[21]                  |XkbKeysymToModifiers[21]   |
 18052	|----------------------------+--------------------------------+---------------------------|
 18053	|XEqualRegion[21]            |XSetScreenSaver[21]             |XkbLatchGroup[21]          |
 18054	|----------------------------+--------------------------------+---------------------------|
 18055	|XEventMaskOfScreen[21]      |XSetSelectionOwner[21]          |XkbLatchModifiers[21]      |
 18056	|----------------------------+--------------------------------+---------------------------|
 18057	|XEventsQueued[21]           |XSetSizeHints[21]               |XkbLibraryVersion[21]      |
 18058	|----------------------------+--------------------------------+---------------------------|
 18059	|XExtendedMaxRequestSize[21] |XSetStandardColormap[21]        |XkbListComponents[21]      |
 18060	|----------------------------+--------------------------------+---------------------------|
 18061	|XExtentsOfFontSet[21]       |XSetStandardProperties[21]      |XkbLockGroup[21]           |
 18062	|----------------------------+--------------------------------+---------------------------|
 18063	|XFetchBuffer[21]            |XSetState[21]                   |XkbLockModifiers[21]       |
 18064	|----------------------------+--------------------------------+---------------------------|
 18065	|XFetchBytes[21]             |XSetStipple[21]                 |XkbLookupKeyBinding[21]    |
 18066	|----------------------------+--------------------------------+---------------------------|
 18067	|XFetchName[21]              |XSetSubwindowMode[21]           |XkbLookupKeySym[21]        |
 18068	|----------------------------+--------------------------------+---------------------------|
 18069	|XFillArc[21]                |XSetTSOrigin[21]                |XkbNoteControlsChanges[21] |
 18070	|----------------------------+--------------------------------+---------------------------|
 18071	|XFillArcs[21]               |XSetTextProperty[21]            |XkbNoteMapChanges[21]      |
 18072	|----------------------------+--------------------------------+---------------------------|
 18073	|XFillPolygon[21]            |XSetTile[21]                    |XkbNoteNameChanges[21]     |
 18074	|----------------------------+--------------------------------+---------------------------|
 18075	|XFillRectangle[21]          |XSetTransientForHint[21]        |XkbOpenDisplay[21]         |
 18076	|----------------------------+--------------------------------+---------------------------|
 18077	|XFillRectangles[21]         |XSetWMClientMachine[21]         |XkbQueryExtension[21]      |
 18078	|----------------------------+--------------------------------+---------------------------|
 18079	|XFilterEvent[21]            |XSetWMColormapWindows[21]       |XkbRefreshKeyboardMapping  |
 18080	|                            |                                |[21]                       |
 18081	|----------------------------+--------------------------------+---------------------------|
 18082	|XFindContext[21]            |XSetWMHints[21]                 |XkbResizeKeyActions[21]    |
 18083	|----------------------------+--------------------------------+---------------------------|
 18084	|XFindOnExtensionList[21]    |XSetWMIconName[21]              |XkbResizeKeySyms[21]       |
 18085	|----------------------------+--------------------------------+---------------------------|
 18086	|XFlush[21]                  |XSetWMName[21]                  |XkbResizeKeyType[21]       |
 18087	|----------------------------+--------------------------------+---------------------------|
 18088	|XFlushGC[21]                |XSetWMNormalHints[21]           |XkbSelectEventDetails[21]  |
 18089	|----------------------------+--------------------------------+---------------------------|
 18090	|XFontsOfFontSet[21]         |XSetWMProperties[21]            |XkbSelectEvents[21]        |
 18091	|----------------------------+--------------------------------+---------------------------|
 18092	|XForceScreenSaver[21]       |XSetWMProtocols[21]             |XkbSetAtomFuncs[21]        |
 18093	|----------------------------+--------------------------------+---------------------------|
 18094	|XFree[21]                   |XSetWMSizeHints[21]             |XkbSetAutoRepeatRate[21]   |
 18095	|----------------------------+--------------------------------+---------------------------|
 18096	|XFreeColormap[21]           |XSetWindowBackground[21]        |XkbSetAutoResetControls[21]|
 18097	|----------------------------+--------------------------------+---------------------------|
 18098	|XFreeColors[21]             |XSetWindowBackgroundPixmap[21]  |XkbSetCompatMap[21]        |
 18099	|----------------------------+--------------------------------+---------------------------|
 18100	|XFreeCursor[21]             |XSetWindowBorder[21]            |XkbSetControls[21]         |
 18101	|----------------------------+--------------------------------+---------------------------|
 18102	|XFreeExtensionList[21]      |XSetWindowBorderPixmap[21]      |XkbSetDebuggingFlags[21]   |
 18103	|----------------------------+--------------------------------+---------------------------|
 18104	|XFreeFont[21]               |XSetWindowBorderWidth[21]       |XkbSetDetectableAutoRepeat |
 18105	|                            |                                |[21]                       |
 18106	|----------------------------+--------------------------------+---------------------------|
 18107	|XFreeFontInfo[21]           |XSetWindowColormap[21]          |XkbSetGeometry[21]         |
 18108	|----------------------------+--------------------------------+---------------------------|
 18109	|XFreeFontNames[21]          |XSetZoomHints[21]               |XkbSetIgnoreLockMods[21]   |
 18110	|----------------------------+--------------------------------+---------------------------|
 18111	|XFreeFontPath[21]           |XShrinkRegion[21]               |XkbSetIndicatorMap[21]     |
 18112	|----------------------------+--------------------------------+---------------------------|
 18113	|XFreeFontSet[21]            |XStoreBuffer[21]                |XkbSetMap[21]              |
 18114	|----------------------------+--------------------------------+---------------------------|
 18115	|XFreeGC[21]                 |XStoreBytes[21]                 |XkbSetNamedIndicator[21]   |
 18116	|----------------------------+--------------------------------+---------------------------|
 18117	|XFreeModifiermap[21]        |XStoreColor[21]                 |XkbSetNames[21]            |
 18118	|----------------------------+--------------------------------+---------------------------|
 18119	|XFreePixmap[21]             |XStoreColors[21]                |XkbSetServerInternalMods   |
 18120	|                            |                                |[21]                       |
 18121	|----------------------------+--------------------------------+---------------------------|
 18122	|XFreeStringList[21]         |XStoreName[21]                  |XkbSetXlibControls[21]     |
 18123	|----------------------------+--------------------------------+---------------------------|
 18124	|XGContextFromGC[21]         |XStoreNamedColor[21]            |XkbToControl[21]           |
 18125	|----------------------------+--------------------------------+---------------------------|
 18126	|XGeometry[21]               |XStringListToTextProperty[21]   |XkbTranslateKey[21]        |
 18127	|----------------------------+--------------------------------+---------------------------|
 18128	|XGetAtomName[21]            |XStringToKeysym[21]             |XkbTranslateKeyCode[21]    |
 18129	|----------------------------+--------------------------------+---------------------------|
 18130	|XGetAtomNames[21]           |XSubImage[21]                   |XkbTranslateKeySym[21]     |
 18131	|----------------------------+--------------------------------+---------------------------|
 18132	|XGetClassHint[21]           |XSubtractRegion[21]             |XkbUpdateActionVirtualMods |
 18133	|                            |                                |[21]                       |
 18134	|----------------------------+--------------------------------+---------------------------|
 18135	|XGetCommand[21]             |XSupportsLocale[21]             |XkbUpdateKeyTypeVirtualMods|
 18136	|                            |                                |[21]                       |
 18137	|----------------------------+--------------------------------+---------------------------|
 18138	|XGetDefault[21]             |XSync[21]                       |XkbUpdateMapFromCore[21]   |
 18139	|----------------------------+--------------------------------+---------------------------|
 18140	|XGetErrorDatabaseText[21]   |XSynchronize[21]                |XkbUseExtension[21]        |
 18141	|----------------------------+--------------------------------+---------------------------|
 18142	|XGetErrorText[21]           |XTextExtents[21]                |XkbVirtualModsToReal[21]   |
 18143	|----------------------------+--------------------------------+---------------------------|
 18144	|XGetFontPath[21]            |XTextExtents16[21]              |XkbXlibControlsImplemented |
 18145	|                            |                                |[21]                       |
 18146	|----------------------------+--------------------------------+---------------------------|
 18147	|XGetFontProperty[21]        |XTextPropertyToStringList[21]   |XmbDrawImageString[21]     |
 18148	|----------------------------+--------------------------------+---------------------------|
 18149	|XGetGCValues[21]            |XTextWidth[21]                  |XmbDrawString[21]          |
 18150	|----------------------------+--------------------------------+---------------------------|
 18151	|XGetGeometry[21]            |XTextWidth16[21]                |XmbDrawText[21]            |
 18152	|----------------------------+--------------------------------+---------------------------|
 18153	|XGetICValues[21]            |XTranslateCoordinates[21]       |XmbLookupString[21]        |
 18154	|----------------------------+--------------------------------+---------------------------|
 18155	|XGetIMValues[21]            |XUndefineCursor[21]             |XmbResetIC[21]             |
 18156	|----------------------------+--------------------------------+---------------------------|
 18157	|XGetIconName[21]            |XUngrabButton[21]               |XmbSetWMProperties[21]     |
 18158	|----------------------------+--------------------------------+---------------------------|
 18159	|XGetIconSizes[21]           |XUngrabKey[21]                  |XmbTextEscapement[21]      |
 18160	|----------------------------+--------------------------------+---------------------------|
 18161	|XGetImage[21]               |XUngrabKeyboard[21]             |XmbTextExtents[21]         |
 18162	|----------------------------+--------------------------------+---------------------------|
 18163	|XGetInputFocus[21]          |XUngrabPointer[21]              |XmbTextListToTextProperty  |
 18164	|                            |                                |[21]                       |
 18165	|----------------------------+--------------------------------+---------------------------|
 18166	|XGetKeyboardControl[21]     |XUngrabServer[21]               |XmbTextPerCharExtents[21]  |
 18167	|----------------------------+--------------------------------+---------------------------|
 18168	|XGetKeyboardMapping[21]     |XUninstallColormap[21]          |XmbTextPropertyToTextList  |
 18169	|                            |                                |[21]                       |
 18170	|----------------------------+--------------------------------+---------------------------|
 18171	|XGetModifierMapping[21]     |XUnionRectWithRegion[21]        |XrmCombineDatabase[21]     |
 18172	|----------------------------+--------------------------------+---------------------------|
 18173	|XGetMotionEvents[21]        |XUnionRegion[21]                |XrmCombineFileDatabase[21] |
 18174	|----------------------------+--------------------------------+---------------------------|
 18175	|XGetNormalHints[21]         |XUnloadFont[21]                 |XrmDestroyDatabase[21]     |
 18176	|----------------------------+--------------------------------+---------------------------|
 18177	|XGetOCValues[21]            |XUnlockDisplay[21]              |XrmEnumerateDatabase[21]   |
 18178	|----------------------------+--------------------------------+---------------------------|
 18179	|XGetOMValues[21]            |XUnmapSubwindows[21]            |XrmGetDatabase[21]         |
 18180	|----------------------------+--------------------------------+---------------------------|
 18181	|XGetPixel[21]               |XUnmapWindow[21]                |XrmGetFileDatabase[21]     |
 18182	|----------------------------+--------------------------------+---------------------------|
 18183	|XGetPointerControl[21]      |XUnregisterIMInstantiateCallback|XrmGetResource[21]         |
 18184	|                            |[21]                            |                           |
 18185	|----------------------------+--------------------------------+---------------------------|
 18186	|XGetPointerMapping[21]      |XUnsetICFocus[21]               |XrmGetStringDatabase[21]   |
 18187	|----------------------------+--------------------------------+---------------------------|
 18188	|XGetRGBColormaps[21]        |XVaCreateNestedList[21]         |XrmInitialize[21]          |
 18189	|----------------------------+--------------------------------+---------------------------|
 18190	|XGetScreenSaver[21]         |XVendorRelease[21]              |XrmLocaleOfDatabase[21]    |
 18191	|----------------------------+--------------------------------+---------------------------|
 18192	|XGetSelectionOwner[21]      |XVisualIDFromVisual[21]         |XrmMergeDatabases[21]      |
 18193	|----------------------------+--------------------------------+---------------------------|
 18194	|XGetSizeHints[21]           |XWMGeometry[21]                 |XrmParseCommand[21]        |
 18195	|----------------------------+--------------------------------+---------------------------|
 18196	|XGetStandardColormap[21]    |XWarpPointer[21]                |XrmPermStringToQuark[21]   |
 18197	|----------------------------+--------------------------------+---------------------------|
 18198	|XGetSubImage[21]            |XWhitePixel[21]                 |XrmPutFileDatabase[21]     |
 18199	|----------------------------+--------------------------------+---------------------------|
 18200	|XGetTextProperty[21]        |XWhitePixelOfScreen[21]         |XrmPutLineResource[21]     |
 18201	|----------------------------+--------------------------------+---------------------------|
 18202	|XGetTransientForHint[21]    |XWidthMMOfScreen[21]            |XrmPutResource[21]         |
 18203	|----------------------------+--------------------------------+---------------------------|
 18204	|XGetVisualInfo[21]          |XWidthOfScreen[21]              |XrmPutStringResource[21]   |
 18205	|----------------------------+--------------------------------+---------------------------|
 18206	|XGetWMClientMachine[21]     |XWindowEvent[21]                |XrmQGetResource[21]        |
 18207	|----------------------------+--------------------------------+---------------------------|
 18208	|XGetWMColormapWindows[21]   |XWithdrawWindow[21]             |XrmQGetSearchList[21]      |
 18209	|----------------------------+--------------------------------+---------------------------|
 18210	|XGetWMHints[21]             |XWriteBitmapFile[21]            |XrmQGetSearchResource[21]  |
 18211	|----------------------------+--------------------------------+---------------------------|
 18212	|XGetWMIconName[21]          |XXorRegion[21]                  |XrmQPutResource[21]        |
 18213	|----------------------------+--------------------------------+---------------------------|
 18214	|XGetWMName[21]              |XauDisposeAuth[21]              |XrmQPutStringResource[21]  |
 18215	|----------------------------+--------------------------------+---------------------------|
 18216	|XGetWMNormalHints[21]       |XauFileName[21]                 |XrmQuarkToString[21]       |
 18217	|----------------------------+--------------------------------+---------------------------|
 18218	|XGetWMProtocols[21]         |XauGetBestAuthByAddr[21]        |XrmSetDatabase[21]         |
 18219	|----------------------------+--------------------------------+---------------------------|
 18220	|XGetWMSizeHints[21]         |XauReadAuth[21]                 |XrmStringToBindingQuarkList|
 18221	|                            |                                |[21]                       |
 18222	|----------------------------+--------------------------------+---------------------------|
 18223	|XGetWindowAttributes[21]    |XcmsAddColorSpace[21]           |XrmStringToQuark[21]       |
 18224	|----------------------------+--------------------------------+---------------------------|
 18225	|XGetWindowProperty[21]      |XcmsAddFunctionSet[21]          |XrmStringToQuarkList[21]   |
 18226	|----------------------------+--------------------------------+---------------------------|
 18227	|XGetZoomHints[21]           |XcmsAllocColor[21]              |XrmUniqueQuark[21]         |
 18228	|----------------------------+--------------------------------+---------------------------|
 18229	|XGrabButton[21]             |XcmsAllocNamedColor[21]         |XwcDrawImageString[21]     |
 18230	|----------------------------+--------------------------------+---------------------------|
 18231	|XGrabKey[21]                |XcmsCCCOfColormap[21]           |XwcDrawString[21]          |
 18232	|----------------------------+--------------------------------+---------------------------|
 18233	|XGrabKeyboard[21]           |XcmsCIELabClipL[21]             |XwcDrawText[21]            |
 18234	|----------------------------+--------------------------------+---------------------------|
 18235	|XGrabPointer[21]            |XcmsCIELabClipLab[21]           |XwcFreeStringList[21]      |
 18236	|----------------------------+--------------------------------+---------------------------|
 18237	|XGrabServer[21]             |XcmsCIELabClipab[21]            |XwcLookupString[21]        |
 18238	|----------------------------+--------------------------------+---------------------------|
 18239	|XHeightMMOfScreen[21]       |XcmsCIELabQueryMaxC[21]         |XwcResetIC[21]             |
 18240	|----------------------------+--------------------------------+---------------------------|
 18241	|XHeightOfScreen[21]         |XcmsCIELabQueryMaxL[21]         |XwcTextEscapement[21]      |
 18242	|----------------------------+--------------------------------+---------------------------|
 18243	|XIMOfIC[21]                 |XcmsCIELabQueryMaxLC[21]        |XwcTextExtents[21]         |
 18244	|----------------------------+--------------------------------+---------------------------|
 18245	|XIconifyWindow[21]          |XcmsCIELabQueryMinL[21]         |XwcTextListToTextProperty  |
 18246	|                            |                                |[21]                       |
 18247	|----------------------------+--------------------------------+---------------------------|
 18248	|XIfEvent[21]                |XcmsCIELabToCIEXYZ[21]          |XwcTextPerCharExtents[21]  |
 18249	|----------------------------+--------------------------------+---------------------------|
 18250	|XImageByteOrder[21]         |XcmsCIELabWhiteShiftColors[21]  |XwcTextPropertyToTextList  |
 18251	|                            |                                |[21]                       |
 18252	+-----------------------------------------------------------------------------------------+
 18253	-------------------------------------------------------------------------------
 18254	
 18255	libXt
 18256	
 18257	The behaviour of the interfaces in this library is specified by the following
 18258	Standards.
 18259	
 18260	Linux Standard Base
 18261	X11R.4 X Toolkit Intrinsics
 18262	
 18263	Table A-2. libXt Function Interfaces
 18264	
 18265	+-------------------------------------------------------------------------------------------+
 18266	|XtAddActions[31]             |XtCvtStringToInt[31]            |XtParseAcceleratorTable[31] |
 18267	|-----------------------------+--------------------------------+----------------------------|
 18268	|XtAddCallback[31]            |XtCvtStringToPixel[31]          |XtParseTranslationTable[31] |
 18269	|-----------------------------+--------------------------------+----------------------------|
 18270	|XtAddCallbacks[31]           |XtCvtStringToRestartStyle[31]   |XtPeekEvent[31]             |
 18271	|-----------------------------+--------------------------------+----------------------------|
 18272	|XtAddConverter[31]           |XtCvtStringToShort[31]          |XtPending[31]               |
 18273	|-----------------------------+--------------------------------+----------------------------|
 18274	|XtAddEventHandler[31]        |XtCvtStringToTranslationTable   |XtPopdown[31]               |
 18275	|                             |[31]                            |                            |
 18276	|-----------------------------+--------------------------------+----------------------------|
 18277	|XtAddExposureToRegion[31]    |XtCvtStringToUnsignedChar[31]   |XtPopup[31]                 |
 18278	|-----------------------------+--------------------------------+----------------------------|
 18279	|XtAddGrab[31]                |XtCvtStringToVisual[31]         |XtPopupSpringLoaded[31]     |
 18280	|-----------------------------+--------------------------------+----------------------------|
 18281	|XtAddInput[31]               |XtDatabase[31]                  |XtProcessEvent[31]          |
 18282	|-----------------------------+--------------------------------+----------------------------|
 18283	|XtAddRawEventHandler[31]     |XtDestroyApplicationContext[31] |XtProcessLock[31]           |
 18284	|-----------------------------+--------------------------------+----------------------------|
 18285	|XtAddSignal[31]              |XtDestroyGC[31]                 |XtProcessUnlock[31]         |
 18286	|-----------------------------+--------------------------------+----------------------------|
 18287	|XtAddTimeOut[31]             |XtDestroyWidget[31]             |XtQueryGeometry[31]         |
 18288	|-----------------------------+--------------------------------+----------------------------|
 18289	|XtAddWorkProc[31]            |XtDirectConvert[31]             |XtRealizeWidget[31]         |
 18290	|-----------------------------+--------------------------------+----------------------------|
 18291	|XtAllocateGC[31]             |XtDisownSelection[31]           |XtRealloc[31]               |
 18292	|-----------------------------+--------------------------------+----------------------------|
 18293	|XtAppAddActionHook[31]       |XtDispatchEvent[31]             |XtRegisterCaseConverter[31] |
 18294	|-----------------------------+--------------------------------+----------------------------|
 18295	|XtAppAddActions[31]          |XtDispatchEventToWidget[31]     |XtRegisterDrawable[31]      |
 18296	|-----------------------------+--------------------------------+----------------------------|
 18297	|XtAppAddBlockHook[31]        |XtDisplay[31]                   |XtRegisterExtensionSelector |
 18298	|                             |                                |[31]                        |
 18299	|-----------------------------+--------------------------------+----------------------------|
 18300	|XtAppAddConverter[31]        |XtDisplayInitialize[31]         |XtRegisterGrabAction[31]    |
 18301	|-----------------------------+--------------------------------+----------------------------|
 18302	|XtAppAddInput[31]            |XtDisplayOfObject[31]           |XtReleaseGC[31]             |
 18303	|-----------------------------+--------------------------------+----------------------------|
 18304	|XtAppAddSignal[31]           |XtDisplayStringConversionWarning|XtReleasePropertyAtom[31]   |
 18305	|                             |[31]                            |                            |
 18306	|-----------------------------+--------------------------------+----------------------------|
 18307	|XtAppAddTimeOut[31]          |XtDisplayToApplicationContext   |XtRemoveActionHook[31]      |
 18308	|                             |[31]                            |                            |
 18309	|-----------------------------+--------------------------------+----------------------------|
 18310	|XtAppAddWorkProc[31]         |XtError[31]                     |XtRemoveAllCallbacks[31]    |
 18311	|-----------------------------+--------------------------------+----------------------------|
 18312	|XtAppCreateShell[31]         |XtErrorMsg[31]                  |XtRemoveBlockHook[31]       |
 18313	|-----------------------------+--------------------------------+----------------------------|
 18314	|XtAppError[31]               |XtFindFile[31]                  |XtRemoveCallback[31]        |
 18315	|-----------------------------+--------------------------------+----------------------------|
 18316	|XtAppErrorMsg[31]            |XtFree[31]                      |XtRemoveCallbacks[31]       |
 18317	|-----------------------------+--------------------------------+----------------------------|
 18318	|XtAppGetErrorDatabase[31]    |XtGetActionKeysym[31]           |XtRemoveEventHandler[31]    |
 18319	|-----------------------------+--------------------------------+----------------------------|
 18320	|XtAppGetErrorDatabaseText[31]|XtGetActionList[31]             |XtRemoveEventTypeHandler[31]|
 18321	|-----------------------------+--------------------------------+----------------------------|
 18322	|XtAppGetExitFlag[31]         |XtGetApplicationNameAndClass[31]|XtRemoveGrab[31]            |
 18323	|-----------------------------+--------------------------------+----------------------------|
 18324	|XtAppGetSelectionTimeout[31] |XtGetApplicationResources[31]   |XtRemoveInput[31]           |
 18325	|-----------------------------+--------------------------------+----------------------------|
 18326	|XtAppInitialize[31]          |XtGetClassExtension[31]         |XtRemoveRawEventHandler[31] |
 18327	|-----------------------------+--------------------------------+----------------------------|
 18328	|XtAppLock[31]                |XtGetConstraintResourceList[31] |XtRemoveSignal[31]          |
 18329	|-----------------------------+--------------------------------+----------------------------|
 18330	|XtAppMainLoop[31]            |XtGetDisplays[31]               |XtRemoveTimeOut[31]         |
 18331	|-----------------------------+--------------------------------+----------------------------|
 18332	|XtAppNextEvent[31]           |XtGetErrorDatabase[31]          |XtRemoveWorkProc[31]        |
 18333	|-----------------------------+--------------------------------+----------------------------|
 18334	|XtAppPeekEvent[31]           |XtGetErrorDatabaseText[31]      |XtReservePropertyAtom[31]   |
 18335	|-----------------------------+--------------------------------+----------------------------|
 18336	|XtAppPending[31]             |XtGetGC[31]                     |XtResizeWidget[31]          |
 18337	|-----------------------------+--------------------------------+----------------------------|
 18338	|XtAppProcessEvent[31]        |XtGetKeyboardFocusWidget[31]    |XtResizeWindow[31]          |
 18339	|-----------------------------+--------------------------------+----------------------------|
 18340	|XtAppReleaseCacheRefs[31]    |XtGetKeysymTable[31]            |XtResolvePathname[31]       |
 18341	|-----------------------------+--------------------------------+----------------------------|
 18342	|XtAppSetErrorHandler[31]     |XtGetMultiClickTime[31]         |XtScreen[31]                |
 18343	|-----------------------------+--------------------------------+----------------------------|
 18344	|XtAppSetErrorMsgHandler[31]  |XtGetResourceList[31]           |XtScreenDatabase[31]        |
 18345	|-----------------------------+--------------------------------+----------------------------|
 18346	|XtAppSetExitFlag[31]         |XtGetSelectionParameters[31]    |XtScreenOfObject[31]        |
 18347	|-----------------------------+--------------------------------+----------------------------|
 18348	|XtAppSetFallbackResources[31]|XtGetSelectionRequest[31]       |XtSendSelectionRequest[31]  |
 18349	|-----------------------------+--------------------------------+----------------------------|
 18350	|XtAppSetSelectionTimeout[31] |XtGetSelectionTimeout[31]       |XtSessionGetToken[31]       |
 18351	|-----------------------------+--------------------------------+----------------------------|
 18352	|XtAppSetTypeConverter[31]    |XtGetSelectionValue[31]         |XtSessionReturnToken[31]    |
 18353	|-----------------------------+--------------------------------+----------------------------|
 18354	|XtAppSetWarningHandler[31]   |XtGetSelectionValueIncremental  |XtSetErrorHandler[31]       |
 18355	|                             |[31]                            |                            |
 18356	|-----------------------------+--------------------------------+----------------------------|
 18357	|XtAppSetWarningMsgHandler[31]|XtGetSelectionValues[31]        |XtSetErrorMsgHandler[31]    |
 18358	|-----------------------------+--------------------------------+----------------------------|
 18359	|XtAppUnlock[31]              |XtGetSelectionValuesIncremental |XtSetEventDispatcher[31]    |
 18360	|                             |[31]                            |                            |
 18361	|-----------------------------+--------------------------------+----------------------------|
 18362	|XtAppWarning[31]             |XtGetSubresources[31]           |XtSetKeyTranslator[31]      |
 18363	|-----------------------------+--------------------------------+----------------------------|
 18364	|XtAppWarningMsg[31]          |XtGetSubvalues[31]              |XtSetKeyboardFocus[31]      |
 18365	|-----------------------------+--------------------------------+----------------------------|
 18366	|XtAugmentTranslations[31]    |XtGetValues[31]                 |XtSetLanguageProc[31]       |
 18367	|-----------------------------+--------------------------------+----------------------------|
 18368	|XtBuildEventMask[31]         |XtGrabButton[31]                |XtSetMappedWhenManaged[31]  |
 18369	|-----------------------------+--------------------------------+----------------------------|
 18370	|XtCallAcceptFocus[31]        |XtGrabKey[31]                   |XtSetMultiClickTime[31]     |
 18371	|-----------------------------+--------------------------------+----------------------------|
 18372	|XtCallActionProc[31]         |XtGrabKeyboard[31]              |XtSetSelectionParameters[31]|
 18373	|-----------------------------+--------------------------------+----------------------------|
 18374	|XtCallCallbackList[31]       |XtGrabPointer[31]               |XtSetSelectionTimeout[31]   |
 18375	|-----------------------------+--------------------------------+----------------------------|
 18376	|XtCallCallbacks[31]          |XtHasCallbacks[31]              |XtSetSensitive[31]          |
 18377	|-----------------------------+--------------------------------+----------------------------|
 18378	|XtCallConverter[31]          |XtHooksOfDisplay[31]            |XtSetSubvalues[31]          |
 18379	|-----------------------------+--------------------------------+----------------------------|
 18380	|XtCallbackExclusive[31]      |XtInitialize[31]                |XtSetTypeConverter[31]      |
 18381	|-----------------------------+--------------------------------+----------------------------|
 18382	|XtCallbackNone[31]           |XtInitializeWidgetClass[31]     |XtSetValues[31]             |
 18383	|-----------------------------+--------------------------------+----------------------------|
 18384	|XtCallbackNonexclusive[31]   |XtInsertEventHandler[31]        |XtSetWMColormapWindows[31]  |
 18385	|-----------------------------+--------------------------------+----------------------------|
 18386	|XtCallbackPopdown[31]        |XtInsertEventTypeHandler[31]    |XtSetWarningHandler[31]     |
 18387	|-----------------------------+--------------------------------+----------------------------|
 18388	|XtCallbackReleaseCacheRef[31]|XtInsertRawEventHandler[31]     |XtSetWarningMsgHandler[31]  |
 18389	|-----------------------------+--------------------------------+----------------------------|
 18390	|XtCallbackReleaseCacheRefList|XtInstallAccelerators[31]       |XtShellStrings[31]          |
 18391	|[31]                         |                                |                            |
 18392	|-----------------------------+--------------------------------+----------------------------|
 18393	|XtCalloc[31]                 |XtInstallAllAccelerators[31]    |XtStringConversionWarning   |
 18394	|                             |                                |[31]                        |
 18395	|-----------------------------+--------------------------------+----------------------------|
 18396	|XtCancelSelectionRequest[31] |XtIsApplicationShell[31]        |XtStrings[31]               |
 18397	|-----------------------------+--------------------------------+----------------------------|
 18398	|XtChangeManagedSet[31]       |XtIsComposite[31]               |XtSuperclass[31]            |
 18399	|-----------------------------+--------------------------------+----------------------------|
 18400	|XtClass[31]                  |XtIsConstraint[31]              |XtToolkitInitialize[31]     |
 18401	|-----------------------------+--------------------------------+----------------------------|
 18402	|XtCloseDisplay[31]           |XtIsManaged[31]                 |XtToolkitThreadInitialize   |
 18403	|                             |                                |[31]                        |
 18404	|-----------------------------+--------------------------------+----------------------------|
 18405	|XtConfigureWidget[31]        |XtIsObject[31]                  |XtTranslateCoords[31]       |
 18406	|-----------------------------+--------------------------------+----------------------------|
 18407	|XtConvert[31]                |XtIsOverrideShell[31]           |XtTranslateKey[31]          |
 18408	|-----------------------------+--------------------------------+----------------------------|
 18409	|XtConvertAndStore[31]        |XtIsRealized[31]                |XtTranslateKeycode[31]      |
 18410	|-----------------------------+--------------------------------+----------------------------|
 18411	|XtConvertCase[31]            |XtIsRectObj[31]                 |XtUngrabButton[31]          |
 18412	|-----------------------------+--------------------------------+----------------------------|
 18413	|XtCreateApplicationContext   |XtIsSensitive[31]               |XtUngrabKey[31]             |
 18414	|[31]                         |                                |                            |
 18415	|-----------------------------+--------------------------------+----------------------------|
 18416	|XtCreateApplicationShell[31] |XtIsSessionShell[31]            |XtUngrabKeyboard[31]        |
 18417	|-----------------------------+--------------------------------+----------------------------|
 18418	|XtCreateManagedWidget[31]    |XtIsShell[31]                   |XtUngrabPointer[31]         |
 18419	|-----------------------------+--------------------------------+----------------------------|
 18420	|XtCreatePopupShell[31]       |XtIsSubclass[31]                |XtUninstallTranslations[31] |
 18421	|-----------------------------+--------------------------------+----------------------------|
 18422	|XtCreateSelectionRequest[31] |XtIsTopLevelShell[31]           |XtUnmanageChild[31]         |
 18423	|-----------------------------+--------------------------------+----------------------------|
 18424	|XtCreateWidget[31]           |XtIsTransientShell[31]          |XtUnmanageChildren[31]      |
 18425	|-----------------------------+--------------------------------+----------------------------|
 18426	|XtCreateWindow[31]           |XtIsVendorShell[31]             |XtUnmapWidget[31]           |
 18427	|-----------------------------+--------------------------------+----------------------------|
 18428	|XtCvtColorToPixel[31]        |XtIsWMShell[31]                 |XtUnrealizeWidget[31]       |
 18429	|-----------------------------+--------------------------------+----------------------------|
 18430	|XtCvtIntToBool[31]           |XtIsWidget[31]                  |XtUnregisterDrawable[31]    |
 18431	|-----------------------------+--------------------------------+----------------------------|
 18432	|XtCvtIntToBoolean[31]        |XtKeysymToKeycodeList[31]       |XtVaAppCreateShell[31]      |
 18433	|-----------------------------+--------------------------------+----------------------------|
 18434	|XtCvtIntToColor[31]          |XtLastEventProcessed[31]        |XtVaAppInitialize[31]       |
 18435	|-----------------------------+--------------------------------+----------------------------|
 18436	|XtCvtIntToFloat[31]          |XtLastTimestampProcessed[31]    |XtVaCreateArgsList[31]      |
 18437	|-----------------------------+--------------------------------+----------------------------|
 18438	|XtCvtIntToFont[31]           |XtMainLoop[31]                  |XtVaCreateManagedWidget[31] |
 18439	|-----------------------------+--------------------------------+----------------------------|
 18440	|XtCvtIntToPixel[31]          |XtMakeGeometryRequest[31]       |XtVaCreatePopupShell[31]    |
 18441	|-----------------------------+--------------------------------+----------------------------|
 18442	|XtCvtIntToPixmap[31]         |XtMakeResizeRequest[31]         |XtVaCreateWidget[31]        |
 18443	|-----------------------------+--------------------------------+----------------------------|
 18444	|XtCvtIntToShort[31]          |XtMalloc[31]                    |XtVaGetApplicationResources |
 18445	|                             |                                |[31]                        |
 18446	|-----------------------------+--------------------------------+----------------------------|
 18447	|XtCvtIntToUnsignedChar[31]   |XtManageChild[31]               |XtVaGetSubresources[31]     |
 18448	|-----------------------------+--------------------------------+----------------------------|
 18449	|XtCvtStringToAcceleratorTable|XtManageChildren[31]            |XtVaGetSubvalues[31]        |
 18450	|[31]                         |                                |                            |
 18451	|-----------------------------+--------------------------------+----------------------------|
 18452	|XtCvtStringToAtom[31]        |XtMapWidget[31]                 |XtVaGetValues[31]           |
 18453	|-----------------------------+--------------------------------+----------------------------|
 18454	|XtCvtStringToBool[31]        |XtMenuPopupAction[31]           |XtVaOpenApplication[31]     |
 18455	|-----------------------------+--------------------------------+----------------------------|
 18456	|XtCvtStringToBoolean[31]     |XtMergeArgLists[31]             |XtVaSetSubvalues[31]        |
 18457	|-----------------------------+--------------------------------+----------------------------|
 18458	|XtCvtStringToCommandArgArray |XtMoveWidget[31]                |XtVaSetValues[31]           |
 18459	|[31]                         |                                |                            |
 18460	|-----------------------------+--------------------------------+----------------------------|
 18461	|XtCvtStringToCursor[31]      |XtName[31]                      |XtWarning[31]               |
 18462	|-----------------------------+--------------------------------+----------------------------|
 18463	|XtCvtStringToDimension[31]   |XtNameToWidget[31]              |XtWarningMsg[31]            |
 18464	|-----------------------------+--------------------------------+----------------------------|
 18465	|XtCvtStringToDirectoryString |XtNewString[31]                 |XtWidgetToApplicationContext|
 18466	|[31]                         |                                |[31]                        |
 18467	|-----------------------------+--------------------------------+----------------------------|
 18468	|XtCvtStringToDisplay[31]     |XtNextEvent[31]                 |XtWindow[31]                |
 18469	|-----------------------------+--------------------------------+----------------------------|
 18470	|XtCvtStringToFile[31]        |XtNoticeSignal[31]              |XtWindowOfObject[31]        |
 18471	|-----------------------------+--------------------------------+----------------------------|
 18472	|XtCvtStringToFloat[31]       |XtOpenApplication[31]           |XtWindowToWidget[31]        |
 18473	|-----------------------------+--------------------------------+----------------------------|
 18474	|XtCvtStringToFont[31]        |XtOpenDisplay[31]               |_XtCopyFromArg[30]          |
 18475	|-----------------------------+--------------------------------+----------------------------|
 18476	|XtCvtStringToFontSet[31]     |XtOverrideTranslations[31]      |_XtInherit[30]              |
 18477	|-----------------------------+--------------------------------+----------------------------|
 18478	|XtCvtStringToFontStruct[31]  |XtOwnSelection[31]              |_XtIsSubclassOf[30]         |
 18479	|-----------------------------+--------------------------------+----------------------------|
 18480	|XtCvtStringToGravity[31]     |XtOwnSelectionIncremental[31]   |                            |
 18481	|-----------------------------+--------------------------------+----------------------------|
 18482	|XtCvtStringToInitialState[31]|XtParent[31]                    |                            |
 18483	+-------------------------------------------------------------------------------------------+
 18484	
 18485	Table A-3. libXt Data Interfaces
 18486	
 18487	+------------------------------------------------------------------------------+
 18488	|XtCXtToolkitError[31]      |objectClassRec[31]      |topLevelShellClassRec[31]|
 18489	|---------------------------+------------------------+-------------------------|
 18490	|_XtInheritTranslations[30] |overrideShellClassRec   |topLevelShellWidgetClass |
 18491	|                           |[31]                    |[31]                     |
 18492	|---------------------------+------------------------+-------------------------|
 18493	|applicationShellWidgetClass|overrideShellWidgetClass|transientShellClassRec   |
 18494	|[31]                       |[31]                    |[31]                     |
 18495	|---------------------------+------------------------+-------------------------|
 18496	|compositeClassRec[31]      |rectObjClass[31]        |transientShellWidgetClass|
 18497	|                           |                        |[31]                     |
 18498	|---------------------------+------------------------+-------------------------|
 18499	|compositeWidgetClass[31]   |rectObjClassRec[31]     |widgetClass[31]          |
 18500	|---------------------------+------------------------+-------------------------|
 18501	|constraintClassRec[31]     |sessionShellClassRec[31]|widgetClassRec[31]       |
 18502	|---------------------------+------------------------+-------------------------|
 18503	|constraintWidgetClass[31]  |sessionShellWidgetClass |wmShellClassRec[31]      |
 18504	|                           |[31]                    |                         |
 18505	|---------------------------+------------------------+-------------------------|
 18506	|coreWidgetClass[31]        |shellClassRec[31]       |wmShellWidgetClass[31]   |
 18507	|---------------------------+------------------------+-------------------------|
 18508	|objectClass[31]            |shellWidgetClass[31]    |                         |
 18509	+------------------------------------------------------------------------------+
 18510	-------------------------------------------------------------------------------
 18511	
 18512	libm
 18513	
 18514	The behaviour of the interfaces in this library is specified by the following
 18515	Standards.
 18516	
 18517	ISO/IEC 9899: 1999, Programming Languages --C
 18518	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
 18519	(ISBN: 1-85912-181-0, C606)
 18520	
 18521	Table A-4. libm Function Interfaces
 18522	
 18523	+-----------------------------------------------------------------------------+
 18524	|acos(GLIBC_2.0)[10]   |csinhf(GLIBC_2.0)[9]        |llroundf(GLIBC_2.0)[9]   |
 18525	|----------------------+----------------------------+-------------------------|
 18526	|acosf(GLIBC_2.0)[9]   |csinhl(GLIBC_2.0)[9]        |llroundl(GLIBC_2.0)[9]   |
 18527	|----------------------+----------------------------+-------------------------|
 18528	|acosh(GLIBC_2.0)[10]  |csinl(GLIBC_2.0)[9]         |log(GLIBC_2.0)[10]       |
 18529	|----------------------+----------------------------+-------------------------|
 18530	|acoshf(GLIBC_2.0)[9]  |csqrt(GLIBC_2.0)[9]         |log10(GLIBC_2.0)[10]     |
 18531	|----------------------+----------------------------+-------------------------|
 18532	|acoshl(GLIBC_2.0)[9]  |csqrtf(GLIBC_2.0)[9]        |log1p(GLIBC_2.0)[10]     |
 18533	|----------------------+----------------------------+-------------------------|
 18534	|acosl(GLIBC_2.0)[9]   |csqrtl(GLIBC_2.0)[9]        |logb(GLIBC_2.0)[10]      |
 18535	|----------------------+----------------------------+-------------------------|
 18536	|asin(GLIBC_2.0)[10]   |ctan(GLIBC_2.0)[9]          |lrint(GLIBC_2.0)[9]      |
 18537	|----------------------+----------------------------+-------------------------|
 18538	|asinf(GLIBC_2.0)[9]   |ctanf(GLIBC_2.0)[9]         |lrintf(GLIBC_2.0)[9]     |
 18539	|----------------------+----------------------------+-------------------------|
 18540	|asinh(GLIBC_2.0)[10]  |ctanh(GLIBC_2.0)[9]         |lrintl(GLIBC_2.0)[9]     |
 18541	|----------------------+----------------------------+-------------------------|
 18542	|asinhf(GLIBC_2.0)[9]  |ctanhf(GLIBC_2.0)[9]        |lround(GLIBC_2.0)[9]     |
 18543	|----------------------+----------------------------+-------------------------|
 18544	|asinhl(GLIBC_2.0)[9]  |ctanhl(GLIBC_2.0)[9]        |lroundf(GLIBC_2.0)[9]    |
 18545	|----------------------+----------------------------+-------------------------|
 18546	|asinl(GLIBC_2.0)[9]   |ctanl(GLIBC_2.0)[9]         |lroundl(GLIBC_2.0)[9]    |
 18547	|----------------------+----------------------------+-------------------------|
 18548	|atan(GLIBC_2.0)[10]   |dremf(GLIBC_2.0)[9]         |matherr(GLIBC_2.0)[9]    |
 18549	|----------------------+----------------------------+-------------------------|
 18550	|atan2(GLIBC_2.0)[10]  |dreml(GLIBC_2.0)[9]         |modf(GLIBC_2.0)[10]      |
 18551	|----------------------+----------------------------+-------------------------|
 18552	|atan2f(GLIBC_2.0)[9]  |erf(GLIBC_2.0)[10]          |modff(GLIBC_2.0)[9]      |
 18553	|----------------------+----------------------------+-------------------------|
 18554	|atan2l(GLIBC_2.0)[9]  |erfc(GLIBC_2.0)[10]         |modfl(GLIBC_2.0)[9]      |
 18555	|----------------------+----------------------------+-------------------------|
 18556	|atanf(GLIBC_2.0)[9]   |erfcf(GLIBC_2.0)[9]         |nan(GLIBC_2.0)[9]        |
 18557	|----------------------+----------------------------+-------------------------|
 18558	|atanh(GLIBC_2.0)[10]  |erfcl(GLIBC_2.0)[9]         |nanf(GLIBC_2.0)[9]       |
 18559	|----------------------+----------------------------+-------------------------|
 18560	|atanhf(GLIBC_2.0)[9]  |erff(GLIBC_2.0)[9]          |nanl(GLIBC_2.0)[9]       |
 18561	|----------------------+----------------------------+-------------------------|
 18562	|atanhl(GLIBC_2.0)[9]  |erfl(GLIBC_2.0)[9]          |nearbyint(GLIBC_2.0)[9]  |
 18563	|----------------------+----------------------------+-------------------------|
 18564	|atanl(GLIBC_2.0)[9]   |exp(GLIBC_2.0)[10]          |nearbyintf(GLIBC_2.0)[9] |
 18565	|----------------------+----------------------------+-------------------------|
 18566	|cabs(GLIBC_2.1)[10]   |expm1(GLIBC_2.1)[10]        |nearbyintl(GLIBC_2.1)[9] |
 18567	|----------------------+----------------------------+-------------------------|
 18568	|cabsf(GLIBC_2.1)[9]   |fabs(GLIBC_2.1)[10]         |nextafter(GLIBC_2.1)[10] |
 18569	|----------------------+----------------------------+-------------------------|
 18570	|cabsl(GLIBC_2.1)[9]   |fabsf(GLIBC_2.1)[9]         |nextafterf(GLIBC_2.1)[9] |
 18571	|----------------------+----------------------------+-------------------------|
 18572	|cacos(GLIBC_2.1)[9]   |fabsl(GLIBC_2.1)[9]         |nextafterl(GLIBC_2.1)[9] |
 18573	|----------------------+----------------------------+-------------------------|
 18574	|cacosf(GLIBC_2.1)[9]  |fdim(GLIBC_2.1)[9]          |nexttoward(GLIBC_2.1)[9] |
 18575	|----------------------+----------------------------+-------------------------|
 18576	|cacosh(GLIBC_2.1)[9]  |fdimf(GLIBC_2.1)[9]         |nexttowardf(GLIBC_2.1)[9]|
 18577	|----------------------+----------------------------+-------------------------|
 18578	|cacoshf(GLIBC_2.1)[9] |fdiml(GLIBC_2.1)[9]         |nexttowardl(GLIBC_2.1)[9]|
 18579	|----------------------+----------------------------+-------------------------|
 18580	|cacoshl(GLIBC_2.1)[9] |feclearexcept(GLIBC_2.1)[9] |pow(GLIBC_2.1)[10]       |
 18581	|----------------------+----------------------------+-------------------------|
 18582	|cacosl(GLIBC_2.1)[9]  |fegetenv(GLIBC_2.1)[9]      |pow10(GLIBC_2.1)[9]      |
 18583	|----------------------+----------------------------+-------------------------|
 18584	|carg(GLIBC_2.1)[9]    |fegetexceptflag(GLIBC_2.1)  |pow10f(GLIBC_2.1)[9]     |
 18585	|                      |[9]                         |                         |
 18586	|----------------------+----------------------------+-------------------------|
 18587	|cargf(GLIBC_2.1)[9]   |fegetround(GLIBC_2.1)[9]    |pow10l(GLIBC_2.1)[9]     |
 18588	|----------------------+----------------------------+-------------------------|
 18589	|cargl(GLIBC_2.1)[9]   |feholdexcept(GLIBC_2.1)[9]  |powf(GLIBC_2.1)[9]       |
 18590	|----------------------+----------------------------+-------------------------|
 18591	|casin(GLIBC_2.1)[9]   |feraiseexcept(GLIBC_2.1)[9] |powl(GLIBC_2.1)[9]       |
 18592	|----------------------+----------------------------+-------------------------|
 18593	|casinf(GLIBC_2.1)[9]  |fesetenv(GLIBC_2.1)[9]      |remainder(GLIBC_2.1)[10] |
 18594	|----------------------+----------------------------+-------------------------|
 18595	|casinh(GLIBC_2.1)[9]  |fesetexceptflag(GLIBC_2.1)  |remainderf(GLIBC_2.1)[9] |
 18596	|                      |[9]                         |                         |
 18597	|----------------------+----------------------------+-------------------------|
 18598	|casinhf(GLIBC_2.1)[9] |fesetround(GLIBC_2.1)[9]    |remainderl(GLIBC_2.1)[9] |
 18599	|----------------------+----------------------------+-------------------------|
 18600	|casinhl(GLIBC_2.1)[9] |fetestexcept(GLIBC_2.1)[9]  |remquo(GLIBC_2.1)[9]     |
 18601	|----------------------+----------------------------+-------------------------|
 18602	|casinl(GLIBC_2.1)[9]  |feupdateenv(GLIBC_2.1)[9]   |remquof(GLIBC_2.1)[9]    |
 18603	|----------------------+----------------------------+-------------------------|
 18604	|catan(GLIBC_2.1)[9]   |finite(GLIBC_2.1)[10]       |remquol(GLIBC_2.1)[9]    |
 18605	|----------------------+----------------------------+-------------------------|
 18606	|catanf(GLIBC_2.1)[9]  |finitef(GLIBC_2.1)[9]       |rint(GLIBC_2.1)[10]      |
 18607	|----------------------+----------------------------+-------------------------|
 18608	|catanh(GLIBC_2.1)[9]  |finitel(GLIBC_2.1)[9]       |rintf(GLIBC_2.1)[9]      |
 18609	|----------------------+----------------------------+-------------------------|
 18610	|catanhf(GLIBC_2.1)[9] |floor(GLIBC_2.1)[10]        |rintl(GLIBC_2.1)[9]      |
 18611	|----------------------+----------------------------+-------------------------|
 18612	|catanhl(GLIBC_2.1)[9] |floorf(GLIBC_2.1)[9]        |round(GLIBC_2.1)[9]      |
 18613	|----------------------+----------------------------+-------------------------|
 18614	|catanl(GLIBC_2.1)[9]  |floorl(GLIBC_2.1)[9]        |roundf(GLIBC_2.1)[9]     |
 18615	|----------------------+----------------------------+-------------------------|
 18616	|cbrt(GLIBC_2.0)[10]   |fma(GLIBC_2.0)[9]           |roundl(GLIBC_2.0)[9]     |
 18617	|----------------------+----------------------------+-------------------------|
 18618	|cbrtf(GLIBC_2.0)[9]   |fmaf(GLIBC_2.0)[9]          |scalb(GLIBC_2.0)[10]     |
 18619	|----------------------+----------------------------+-------------------------|
 18620	|cbrtl(GLIBC_2.0)[9]   |fmal(GLIBC_2.0)[9]          |scalbf(GLIBC_2.0)[9]     |
 18621	|----------------------+----------------------------+-------------------------|
 18622	|ccos(GLIBC_2.1)[9]    |fmax(GLIBC_2.1)[9]          |scalbl(GLIBC_2.1)[9]     |
 18623	|----------------------+----------------------------+-------------------------|
 18624	|ccosf(GLIBC_2.1)[9]   |fmaxf(GLIBC_2.1)[9]         |scalbln(GLIBC_2.1)[9]    |
 18625	|----------------------+----------------------------+-------------------------|
 18626	|ccosh(GLIBC_2.1)[9]   |fmaxl(GLIBC_2.1)[9]         |scalblnf(GLIBC_2.1)[9]   |
 18627	|----------------------+----------------------------+-------------------------|
 18628	|ccoshf(GLIBC_2.1)[9]  |fmin(GLIBC_2.1)[9]          |scalblnl(GLIBC_2.1)[9]   |
 18629	|----------------------+----------------------------+-------------------------|
 18630	|ccoshl(GLIBC_2.1)[9]  |fminf(GLIBC_2.1)[9]         |scalbn(GLIBC_2.1)[9]     |
 18631	|----------------------+----------------------------+-------------------------|
 18632	|ccosl(GLIBC_2.1)[9]   |fminl(GLIBC_2.1)[9]         |scalbnf(GLIBC_2.1)[9]    |
 18633	|----------------------+----------------------------+-------------------------|
 18634	|ceil(GLIBC_2.0)[10]   |fmod(GLIBC_2.0)[10]         |scalbnl(GLIBC_2.0)[9]    |
 18635	|----------------------+----------------------------+-------------------------|
 18636	|ceilf(GLIBC_2.0)[9]   |fmodf(GLIBC_2.0)[9]         |significand(GLIBC_2.0)[9]|
 18637	|----------------------+----------------------------+-------------------------|
 18638	|ceill(GLIBC_2.0)[9]   |fmodl(GLIBC_2.0)[9]         |significandf(GLIBC_2.0)  |
 18639	|                      |                            |[9]                      |
 18640	|----------------------+----------------------------+-------------------------|
 18641	|cexp(GLIBC_2.1)[9]    |frexp(GLIBC_2.1)[10]        |significandl(GLIBC_2.1)  |
 18642	|                      |                            |[9]                      |
 18643	|----------------------+----------------------------+-------------------------|
 18644	|cexpf(GLIBC_2.1)[9]   |frexpf(GLIBC_2.1)[9]        |sin(GLIBC_2.1)[10]       |
 18645	|----------------------+----------------------------+-------------------------|
 18646	|cexpl(GLIBC_2.1)[9]   |frexpl(GLIBC_2.1)[9]        |sincos(GLIBC_2.1)[9]     |
 18647	|----------------------+----------------------------+-------------------------|
 18648	|cimag(GLIBC_2.1)[9]   |gamma(GLIBC_2.1)[10]        |sincosf(GLIBC_2.1)[9]    |
 18649	|----------------------+----------------------------+-------------------------|
 18650	|cimagf(GLIBC_2.1)[9]  |gammaf(GLIBC_2.1)[9]        |sincosl(GLIBC_2.1)[9]    |
 18651	|----------------------+----------------------------+-------------------------|
 18652	|cimagl(GLIBC_2.1)[9]  |gammal(GLIBC_2.1)[9]        |sinf(GLIBC_2.1)[9]       |
 18653	|----------------------+----------------------------+-------------------------|
 18654	|clog10(GLIBC_2.1)[9]  |hypot(GLIBC_2.1)[10]        |sinh(GLIBC_2.1)[10]      |
 18655	|----------------------+----------------------------+-------------------------|
 18656	|clog10f(GLIBC_2.1)[9] |hypotf(GLIBC_2.1)[9]        |sinhf(GLIBC_2.1)[9]      |
 18657	|----------------------+----------------------------+-------------------------|
 18658	|clog10l(GLIBC_2.1)[9] |hypotl(GLIBC_2.1)[9]        |sinhl(GLIBC_2.1)[9]      |
 18659	|----------------------+----------------------------+-------------------------|
 18660	|clogf(GLIBC_2.1)[9]   |ilogb(GLIBC_2.1)[10]        |sinl(GLIBC_2.1)[9]       |
 18661	|----------------------+----------------------------+-------------------------|
 18662	|clogl(GLIBC_2.1)[9]   |ilogbf(GLIBC_2.1)[9]        |sqrt(GLIBC_2.1)[10]      |
 18663	|----------------------+----------------------------+-------------------------|
 18664	|conj(GLIBC_2.1)[9]    |ilogbl(GLIBC_2.1)[9]        |sqrtf(GLIBC_2.1)[9]      |
 18665	|----------------------+----------------------------+-------------------------|
 18666	|conjf(GLIBC_2.1)[9]   |j0(GLIBC_2.1)[10]           |sqrtl(GLIBC_2.1)[9]      |
 18667	|----------------------+----------------------------+-------------------------|
 18668	|conjl(GLIBC_2.1)[9]   |j0f(GLIBC_2.1)[9]           |tan(GLIBC_2.1)[10]       |
 18669	|----------------------+----------------------------+-------------------------|
 18670	|copysign(GLIBC_2.0)[9]|j0l(GLIBC_2.0)[9]           |tanf(GLIBC_2.0)[9]       |
 18671	|----------------------+----------------------------+-------------------------|
 18672	|copysignf(GLIBC_2.0)  |j1(GLIBC_2.0)[10]           |tanh(GLIBC_2.0)[10]      |
 18673	|[9]                   |                            |                         |
 18674	|----------------------+----------------------------+-------------------------|
 18675	|copysignl(GLIBC_2.0)  |j1f(GLIBC_2.0)[9]           |tanhf(GLIBC_2.0)[9]      |
 18676	|[9]                   |                            |                         |
 18677	|----------------------+----------------------------+-------------------------|
 18678	|cos(GLIBC_2.0)[10]    |j1l(GLIBC_2.0)[9]           |tanhl(GLIBC_2.0)[9]      |
 18679	|----------------------+----------------------------+-------------------------|
 18680	|cosf(GLIBC_2.0)[9]    |jn(GLIBC_2.0)[10]           |tanl(GLIBC_2.0)[9]       |
 18681	|----------------------+----------------------------+-------------------------|
 18682	|cosh(GLIBC_2.0)[10]   |jnf(GLIBC_2.0)[9]           |tgamma(GLIBC_2.0)[9]     |
 18683	|----------------------+----------------------------+-------------------------|
 18684	|coshf(GLIBC_2.0)[9]   |jnl(GLIBC_2.0)[9]           |tgammaf(GLIBC_2.0)[9]    |
 18685	|----------------------+----------------------------+-------------------------|
 18686	|coshl(GLIBC_2.0)[9]   |ldexp(GLIBC_2.0)[10]        |tgammal(GLIBC_2.0)[9]    |
 18687	|----------------------+----------------------------+-------------------------|
 18688	|cosl(GLIBC_2.0)[9]    |ldexpf(GLIBC_2.0)[9]        |trunc(GLIBC_2.0)[9]      |
 18689	|----------------------+----------------------------+-------------------------|
 18690	|cpow(GLIBC_2.1)[9]    |ldexpl(GLIBC_2.1)[9]        |truncf(GLIBC_2.1)[9]     |
 18691	|----------------------+----------------------------+-------------------------|
 18692	|cpowf(GLIBC_2.1)[9]   |lgamma(GLIBC_2.1)[10]       |truncl(GLIBC_2.1)[9]     |
 18693	|----------------------+----------------------------+-------------------------|
 18694	|cpowl(GLIBC_2.1)[9]   |lgamma_r(GLIBC_2.1)[9]      |y0(GLIBC_2.1)[10]        |
 18695	|----------------------+----------------------------+-------------------------|
 18696	|cproj(GLIBC_2.1)[9]   |lgammaf(GLIBC_2.1)[9]       |y0f(GLIBC_2.1)[9]        |
 18697	|----------------------+----------------------------+-------------------------|
 18698	|cprojf(GLIBC_2.1)[9]  |lgammaf_r(GLIBC_2.1)[9]     |y0l(GLIBC_2.1)[9]        |
 18699	|----------------------+----------------------------+-------------------------|
 18700	|cprojl(GLIBC_2.1)[9]  |lgammal(GLIBC_2.1)[9]       |y1(GLIBC_2.1)[10]        |
 18701	|----------------------+----------------------------+-------------------------|
 18702	|creal(GLIBC_2.1)[9]   |lgammal_r(GLIBC_2.1)[9]     |y1f(GLIBC_2.1)[9]        |
 18703	|----------------------+----------------------------+-------------------------|
 18704	|creall(GLIBC_2.1)[9]  |llrint(GLIBC_2.1)[9]        |y1l(GLIBC_2.1)[9]        |
 18705	|----------------------+----------------------------+-------------------------|
 18706	|csin(GLIBC_2.1)[9]    |llrintf(GLIBC_2.1)[9]       |yn(GLIBC_2.1)[10]        |
 18707	|----------------------+----------------------------+-------------------------|
 18708	|csinf(GLIBC_2.1)[9]   |llrintl(GLIBC_2.1)[9]       |ynf(GLIBC_2.1)[9]        |
 18709	|----------------------+----------------------------+-------------------------|
 18710	|csinh(GLIBC_2.1)[9]   |llround(GLIBC_2.1)[9]       |ynl(GLIBC_2.1)[9]        |
 18711	+-----------------------------------------------------------------------------+
 18712	
 18713	Table A-5. libm Data Interfaces
 18714	
 18715	+----------------------+
 18716	|clog[9]|signgam[10] | |
 18717	+----------------------+
 18718	-------------------------------------------------------------------------------
 18719	
 18720	libGL
 18721	
 18722	The behaviour of the interfaces in this library is specified by the following
 18723	Standards.
 18724	
 18725	OpenGL® Application Binary Interface for Linux
 18726	
 18727	Table A-6. libGL Function Interfaces
 18728	
 18729	+------------------------------------------------------------------------------+
 18730	|glAccum[32]                |glGetSeparableFilter[32]|glRasterPos4iv[32]       |
 18731	|---------------------------+------------------------+-------------------------|
 18732	|glActiveTextureARB[32]     |glGetString[32]         |glRasterPos4s[32]        |
 18733	|---------------------------+------------------------+-------------------------|
 18734	|glAlphaFunc[32]            |glGetTexEnvfv[32]       |glRasterPos4sv[32]       |
 18735	|---------------------------+------------------------+-------------------------|
 18736	|glAreTexturesResident[32]  |glGetTexEnviv[32]       |glReadBuffer[32]         |
 18737	|---------------------------+------------------------+-------------------------|
 18738	|glArrayElement[32]         |glGetTexGendv[32]       |glReadPixels[32]         |
 18739	|---------------------------+------------------------+-------------------------|
 18740	|glBegin[32]                |glGetTexGenfv[32]       |glRectd[32]              |
 18741	|---------------------------+------------------------+-------------------------|
 18742	|glBindTexture[32]          |glGetTexGeniv[32]       |glRectdv[32]             |
 18743	|---------------------------+------------------------+-------------------------|
 18744	|glBitmap[32]               |glGetTexImage[32]       |glRectf[32]              |
 18745	|---------------------------+------------------------+-------------------------|
 18746	|glBlendColor[32]           |glGetTexLevelParameterfv|glRectfv[32]             |
 18747	|                           |[32]                    |                         |
 18748	|---------------------------+------------------------+-------------------------|
 18749	|glBlendColorEXT[32]        |glGetTexLevelParameteriv|glRecti[32]              |
 18750	|                           |[32]                    |                         |
 18751	|---------------------------+------------------------+-------------------------|
 18752	|glBlendEquation[32]        |glGetTexParameterfv[32] |glRectiv[32]             |
 18753	|---------------------------+------------------------+-------------------------|
 18754	|glBlendEquationEXT[32]     |glGetTexParameteriv[32] |glRects[32]              |
 18755	|---------------------------+------------------------+-------------------------|
 18756	|glBlendFunc[32]            |glHint[32]              |glRectsv[32]             |
 18757	|---------------------------+------------------------+-------------------------|
 18758	|glCallList[32]             |glHistogram[32]         |glRenderMode[32]         |
 18759	|---------------------------+------------------------+-------------------------|
 18760	|glCallLists[32]            |glIndexMask[32]         |glResetHistogram[32]     |
 18761	|---------------------------+------------------------+-------------------------|
 18762	|glClear[32]                |glIndexPointer[32]      |glResetMinmax[32]        |
 18763	|---------------------------+------------------------+-------------------------|
 18764	|glClearAccum[32]           |glIndexd[32]            |glRotated[32]            |
 18765	|---------------------------+------------------------+-------------------------|
 18766	|glClearColor[32]           |glIndexdv[32]           |glRotatef[32]            |
 18767	|---------------------------+------------------------+-------------------------|
 18768	|glClearDepth[32]           |glIndexf[32]            |glScaled[32]             |
 18769	|---------------------------+------------------------+-------------------------|
 18770	|glClearIndex[32]           |glIndexfv[32]           |glScalef[32]             |
 18771	|---------------------------+------------------------+-------------------------|
 18772	|glClearStencil[32]         |glIndexi[32]            |glScissor[32]            |
 18773	|---------------------------+------------------------+-------------------------|
 18774	|glClientActiveTextureARB   |glIndexiv[32]           |glSelectBuffer[32]       |
 18775	|[32]                       |                        |                         |
 18776	|---------------------------+------------------------+-------------------------|
 18777	|glClipPlane[32]            |glIndexs[32]            |glSeparableFilter2D[32]  |
 18778	|---------------------------+------------------------+-------------------------|
 18779	|glColor3b[32]              |glIndexsv[32]           |glShadeModel[32]         |
 18780	|---------------------------+------------------------+-------------------------|
 18781	|glColor3bv[32]             |glIndexub[32]           |glStencilFunc[32]        |
 18782	|---------------------------+------------------------+-------------------------|
 18783	|glColor3d[32]              |glIndexubv[32]          |glStencilMask[32]        |
 18784	|---------------------------+------------------------+-------------------------|
 18785	|glColor3dv[32]             |glInitNames[32]         |glStencilOp[32]          |
 18786	|---------------------------+------------------------+-------------------------|
 18787	|glColor3f[32]              |glInterleavedArrays[32] |glTexCoord1d[32]         |
 18788	|---------------------------+------------------------+-------------------------|
 18789	|glColor3fv[32]             |glIsEnabled[32]         |glTexCoord1dv[32]        |
 18790	|---------------------------+------------------------+-------------------------|
 18791	|glColor3i[32]              |glIsList[32]            |glTexCoord1f[32]         |
 18792	|---------------------------+------------------------+-------------------------|
 18793	|glColor3iv[32]             |glIsTexture[32]         |glTexCoord1fv[32]        |
 18794	|---------------------------+------------------------+-------------------------|
 18795	|glColor3s[32]              |glLightModelf[32]       |glTexCoord1i[32]         |
 18796	|---------------------------+------------------------+-------------------------|
 18797	|glColor3sv[32]             |glLightModelfv[32]      |glTexCoord1iv[32]        |
 18798	|---------------------------+------------------------+-------------------------|
 18799	|glColor3ub[32]             |glLightModeli[32]       |glTexCoord1s[32]         |
 18800	|---------------------------+------------------------+-------------------------|
 18801	|glColor3ubv[32]            |glLightModeliv[32]      |glTexCoord1sv[32]        |
 18802	|---------------------------+------------------------+-------------------------|
 18803	|glColor3ui[32]             |glLightf[32]            |glTexCoord2d[32]         |
 18804	|---------------------------+------------------------+-------------------------|
 18805	|glColor3uiv[32]            |glLightfv[32]           |glTexCoord2dv[32]        |
 18806	|---------------------------+------------------------+-------------------------|
 18807	|glColor3us[32]             |glLighti[32]            |glTexCoord2f[32]         |
 18808	|---------------------------+------------------------+-------------------------|
 18809	|glColor3usv[32]            |glLightiv[32]           |glTexCoord2fv[32]        |
 18810	|---------------------------+------------------------+-------------------------|
 18811	|glColor4b[32]              |glLineStipple[32]       |glTexCoord2i[32]         |
 18812	|---------------------------+------------------------+-------------------------|
 18813	|glColor4bv[32]             |glLineWidth[32]         |glTexCoord2iv[32]        |
 18814	|---------------------------+------------------------+-------------------------|
 18815	|glColor4d[32]              |glListBase[32]          |glTexCoord2s[32]         |
 18816	|---------------------------+------------------------+-------------------------|
 18817	|glColor4dv[32]             |glLoadIdentity[32]      |glTexCoord2sv[32]        |
 18818	|---------------------------+------------------------+-------------------------|
 18819	|glColor4f[32]              |glLoadMatrixd[32]       |glTexCoord3d[32]         |
 18820	|---------------------------+------------------------+-------------------------|
 18821	|glColor4fv[32]             |glLoadMatrixf[32]       |glTexCoord3dv[32]        |
 18822	|---------------------------+------------------------+-------------------------|
 18823	|glColor4i[32]              |glLoadName[32]          |glTexCoord3f[32]         |
 18824	|---------------------------+------------------------+-------------------------|
 18825	|glColor4iv[32]             |glLogicOp[32]           |glTexCoord3fv[32]        |
 18826	|---------------------------+------------------------+-------------------------|
 18827	|glColor4s[32]              |glMap1d[32]             |glTexCoord3i[32]         |
 18828	|---------------------------+------------------------+-------------------------|
 18829	|glColor4sv[32]             |glMap1f[32]             |glTexCoord3iv[32]        |
 18830	|---------------------------+------------------------+-------------------------|
 18831	|glColor4ub[32]             |glMap2d[32]             |glTexCoord3s[32]         |
 18832	|---------------------------+------------------------+-------------------------|
 18833	|glColor4ubv[32]            |glMap2f[32]             |glTexCoord3sv[32]        |
 18834	|---------------------------+------------------------+-------------------------|
 18835	|glColor4ui[32]             |glMapGrid1d[32]         |glTexCoord4d[32]         |
 18836	|---------------------------+------------------------+-------------------------|
 18837	|glColor4uiv[32]            |glMapGrid1f[32]         |glTexCoord4dv[32]        |
 18838	|---------------------------+------------------------+-------------------------|
 18839	|glColor4us[32]             |glMapGrid2d[32]         |glTexCoord4f[32]         |
 18840	|---------------------------+------------------------+-------------------------|
 18841	|glColor4usv[32]            |glMapGrid2f[32]         |glTexCoord4fv[32]        |
 18842	|---------------------------+------------------------+-------------------------|
 18843	|glColorMask[32]            |glMaterialf[32]         |glTexCoord4i[32]         |
 18844	|---------------------------+------------------------+-------------------------|
 18845	|glColorMaterial[32]        |glMaterialfv[32]        |glTexCoord4iv[32]        |
 18846	|---------------------------+------------------------+-------------------------|
 18847	|glColorPointer[32]         |glMateriali[32]         |glTexCoord4s[32]         |
 18848	|---------------------------+------------------------+-------------------------|
 18849	|glColorSubTable[32]        |glMaterialiv[32]        |glTexCoord4sv[32]        |
 18850	|---------------------------+------------------------+-------------------------|
 18851	|glColorTable[32]           |glMatrixMode[32]        |glTexCoordPointer[32]    |
 18852	|---------------------------+------------------------+-------------------------|
 18853	|glColorTableParameterfv[32]|glMinmax[32]            |glTexEnvf[32]            |
 18854	|---------------------------+------------------------+-------------------------|
 18855	|glColorTableParameteriv[32]|glMultMatrixd[32]       |glTexEnvfv[32]           |
 18856	|---------------------------+------------------------+-------------------------|
 18857	|glConvolutionFilter1D[32]  |glMultMatrixf[32]       |glTexEnvi[32]            |
 18858	|---------------------------+------------------------+-------------------------|
 18859	|glConvolutionFilter2D[32]  |glMultiTexCoord1dARB[32]|glTexEnviv[32]           |
 18860	|---------------------------+------------------------+-------------------------|
 18861	|glConvolutionParameterf[32]|glMultiTexCoord1dvARB   |glTexGend[32]            |
 18862	|                           |[32]                    |                         |
 18863	|---------------------------+------------------------+-------------------------|
 18864	|glConvolutionParameterfv   |glMultiTexCoord1fARB[32]|glTexGendv[32]           |
 18865	|[32]                       |                        |                         |
 18866	|---------------------------+------------------------+-------------------------|
 18867	|glConvolutionParameteri[32]|glMultiTexCoord1fvARB   |glTexGenf[32]            |
 18868	|                           |[32]                    |                         |
 18869	|---------------------------+------------------------+-------------------------|
 18870	|glConvolutionParameteriv   |glMultiTexCoord1iARB[32]|glTexGenfv[32]           |
 18871	|[32]                       |                        |                         |
 18872	|---------------------------+------------------------+-------------------------|
 18873	|glCopyColorSubTable[32]    |glMultiTexCoord1ivARB   |glTexGeni[32]            |
 18874	|                           |[32]                    |                         |
 18875	|---------------------------+------------------------+-------------------------|
 18876	|glCopyColorTable[32]       |glMultiTexCoord1sARB[32]|glTexGeniv[32]           |
 18877	|---------------------------+------------------------+-------------------------|
 18878	|glCopyConvolutionFilter1D  |glMultiTexCoord1svARB   |glTexImage1D[32]         |
 18879	|[32]                       |[32]                    |                         |
 18880	|---------------------------+------------------------+-------------------------|
 18881	|glCopyConvolutionFilter2D  |glMultiTexCoord2dARB[32]|glTexImage2D[32]         |
 18882	|[32]                       |                        |                         |
 18883	|---------------------------+------------------------+-------------------------|
 18884	|glCopyPixels[32]           |glMultiTexCoord2dvARB   |glTexImage3D[32]         |
 18885	|                           |[32]                    |                         |
 18886	|---------------------------+------------------------+-------------------------|
 18887	|glCopyTexImage1D[32]       |glMultiTexCoord2fARB[32]|glTexParameterf[32]      |
 18888	|---------------------------+------------------------+-------------------------|
 18889	|glCopyTexImage2D[32]       |glMultiTexCoord2fvARB   |glTexParameterfv[32]     |
 18890	|                           |[32]                    |                         |
 18891	|---------------------------+------------------------+-------------------------|
 18892	|glCopyTexSubImage1D[32]    |glMultiTexCoord2iARB[32]|glTexParameteri[32]      |
 18893	|---------------------------+------------------------+-------------------------|
 18894	|glCopyTexSubImage2D[32]    |glMultiTexCoord2ivARB   |glTexParameteriv[32]     |
 18895	|                           |[32]                    |                         |
 18896	|---------------------------+------------------------+-------------------------|
 18897	|glCopyTexSubImage3D[32]    |glMultiTexCoord2sARB[32]|glTexSubImage1D[32]      |
 18898	|---------------------------+------------------------+-------------------------|
 18899	|glCullFace[32]             |glMultiTexCoord2svARB   |glTexSubImage2D[32]      |
 18900	|                           |[32]                    |                         |
 18901	|---------------------------+------------------------+-------------------------|
 18902	|glDeleteLists[32]          |glMultiTexCoord3dARB[32]|glTexSubImage3D[32]      |
 18903	|---------------------------+------------------------+-------------------------|
 18904	|glDeleteTextures[32]       |glMultiTexCoord3dvARB   |glTranslated[32]         |
 18905	|                           |[32]                    |                         |
 18906	|---------------------------+------------------------+-------------------------|
 18907	|glDepthFunc[32]            |glMultiTexCoord3fARB[32]|glTranslatef[32]         |
 18908	|---------------------------+------------------------+-------------------------|
 18909	|glDepthMask[32]            |glMultiTexCoord3fvARB   |glVertex2d[32]           |
 18910	|                           |[32]                    |                         |
 18911	|---------------------------+------------------------+-------------------------|
 18912	|glDepthRange[32]           |glMultiTexCoord3iARB[32]|glVertex2dv[32]          |
 18913	|---------------------------+------------------------+-------------------------|
 18914	|glDisable[32]              |glMultiTexCoord3ivARB   |glVertex2f[32]           |
 18915	|                           |[32]                    |                         |
 18916	|---------------------------+------------------------+-------------------------|
 18917	|glDisableClientState[32]   |glMultiTexCoord3sARB[32]|glVertex2fv[32]          |
 18918	|---------------------------+------------------------+-------------------------|
 18919	|glDrawArrays[32]           |glMultiTexCoord3svARB   |glVertex2i[32]           |
 18920	|                           |[32]                    |                         |
 18921	|---------------------------+------------------------+-------------------------|
 18922	|glDrawBuffer[32]           |glMultiTexCoord4dARB[32]|glVertex2iv[32]          |
 18923	|---------------------------+------------------------+-------------------------|
 18924	|glDrawElements[32]         |glMultiTexCoord4dvARB   |glVertex2s[32]           |
 18925	|                           |[32]                    |                         |
 18926	|---------------------------+------------------------+-------------------------|
 18927	|glDrawPixels[32]           |glMultiTexCoord4fARB[32]|glVertex2sv[32]          |
 18928	|---------------------------+------------------------+-------------------------|
 18929	|glDrawRangeElements[32]    |glMultiTexCoord4fvARB   |glVertex3d[32]           |
 18930	|                           |[32]                    |                         |
 18931	|---------------------------+------------------------+-------------------------|
 18932	|glEdgeFlag[32]             |glMultiTexCoord4iARB[32]|glVertex3dv[32]          |
 18933	|---------------------------+------------------------+-------------------------|
 18934	|glEdgeFlagPointer[32]      |glMultiTexCoord4ivARB   |glVertex3f[32]           |
 18935	|                           |[32]                    |                         |
 18936	|---------------------------+------------------------+-------------------------|
 18937	|glEdgeFlagv[32]            |glMultiTexCoord4sARB[32]|glVertex3fv[32]          |
 18938	|---------------------------+------------------------+-------------------------|
 18939	|glEnable[32]               |glMultiTexCoord4svARB   |glVertex3i[32]           |
 18940	|                           |[32]                    |                         |
 18941	|---------------------------+------------------------+-------------------------|
 18942	|glEnableClientState[32]    |glNewList[32]           |glVertex3iv[32]          |
 18943	|---------------------------+------------------------+-------------------------|
 18944	|glEnd[32]                  |glNormal3b[32]          |glVertex3s[32]           |
 18945	|---------------------------+------------------------+-------------------------|
 18946	|glEndList[32]              |glNormal3bv[32]         |glVertex3sv[32]          |
 18947	|---------------------------+------------------------+-------------------------|
 18948	|glEvalCoord1d[32]          |glNormal3d[32]          |glVertex4d[32]           |
 18949	|---------------------------+------------------------+-------------------------|
 18950	|glEvalCoord1dv[32]         |glNormal3dv[32]         |glVertex4dv[32]          |
 18951	|---------------------------+------------------------+-------------------------|
 18952	|glEvalCoord1f[32]          |glNormal3f[32]          |glVertex4f[32]           |
 18953	|---------------------------+------------------------+-------------------------|
 18954	|glEvalCoord1fv[32]         |glNormal3fv[32]         |glVertex4fv[32]          |
 18955	|---------------------------+------------------------+-------------------------|
 18956	|glEvalCoord2d[32]          |glNormal3i[32]          |glVertex4i[32]           |
 18957	|---------------------------+------------------------+-------------------------|
 18958	|glEvalCoord2dv[32]         |glNormal3iv[32]         |glVertex4iv[32]          |
 18959	|---------------------------+------------------------+-------------------------|
 18960	|glEvalCoord2f[32]          |glNormal3s[32]          |glVertex4s[32]           |
 18961	|---------------------------+------------------------+-------------------------|
 18962	|glEvalCoord2fv[32]         |glNormal3sv[32]         |glVertex4sv[32]          |
 18963	|---------------------------+------------------------+-------------------------|
 18964	|glEvalMesh1[32]            |glNormalPointer[32]     |glVertexPointer[32]      |
 18965	|---------------------------+------------------------+-------------------------|
 18966	|glEvalMesh2[32]            |glOrtho[32]             |glViewport[32]           |
 18967	|---------------------------+------------------------+-------------------------|
 18968	|glEvalPoint1[32]           |glPassThrough[32]       |glXChooseFBConfig[32]    |
 18969	|---------------------------+------------------------+-------------------------|
 18970	|glEvalPoint2[32]           |glPixelMapfv[32]        |glXChooseVisual[32]      |
 18971	|---------------------------+------------------------+-------------------------|
 18972	|glFeedbackBuffer[32]       |glPixelMapuiv[32]       |glXCopyContext[32]       |
 18973	|---------------------------+------------------------+-------------------------|
 18974	|glFinish[32]               |glPixelMapusv[32]       |glXCreateContext[32]     |
 18975	|---------------------------+------------------------+-------------------------|
 18976	|glFlush[32]                |glPixelStoref[32]       |glXCreateGLXPixmap[32]   |
 18977	|---------------------------+------------------------+-------------------------|
 18978	|glFogf[32]                 |glPixelStorei[32]       |glXCreateNewContext[32]  |
 18979	|---------------------------+------------------------+-------------------------|
 18980	|glFogfv[32]                |glPixelTransferf[32]    |glXCreatePbuffer[32]     |
 18981	|---------------------------+------------------------+-------------------------|
 18982	|glFogi[32]                 |glPixelTransferi[32]    |glXCreatePixmap[32]      |
 18983	|---------------------------+------------------------+-------------------------|
 18984	|glFogiv[32]                |glPixelZoom[32]         |glXCreateWindow[32]      |
 18985	|---------------------------+------------------------+-------------------------|
 18986	|glFrontFace[32]            |glPointSize[32]         |glXDestroyContext[32]    |
 18987	|---------------------------+------------------------+-------------------------|
 18988	|glFrustum[32]              |glPolygonMode[32]       |glXDestroyGLXPixmap[32]  |
 18989	|---------------------------+------------------------+-------------------------|
 18990	|glGenLists[32]             |glPolygonOffset[32]     |glXDestroyPbuffer[32]    |
 18991	|---------------------------+------------------------+-------------------------|
 18992	|glGenTextures[32]          |glPolygonStipple[32]    |glXDestroyPixmap[32]     |
 18993	|---------------------------+------------------------+-------------------------|
 18994	|glGetBooleanv[32]          |glPopAttrib[32]         |glXDestroyWindow[32]     |
 18995	|---------------------------+------------------------+-------------------------|
 18996	|glGetClipPlane[32]         |glPopClientAttrib[32]   |glXFreeContextEXT[32]    |
 18997	|---------------------------+------------------------+-------------------------|
 18998	|glGetColorTable[32]        |glPopMatrix[32]         |glXGetClientString[32]   |
 18999	|---------------------------+------------------------+-------------------------|
 19000	|glGetColorTableParameterfv |glPopName[32]           |glXGetConfig[32]         |
 19001	|[32]                       |                        |                         |
 19002	|---------------------------+------------------------+-------------------------|
 19003	|glGetColorTableParameteriv |glPrioritizeTextures[32]|glXGetContextIDEXT[32]   |
 19004	|[32]                       |                        |                         |
 19005	|---------------------------+------------------------+-------------------------|
 19006	|glGetConvolutionFilter[32] |glPushAttrib[32]        |glXGetCurrentContext[32] |
 19007	|---------------------------+------------------------+-------------------------|
 19008	|glGetConvolutionParameterfv|glPushClientAttrib[32]  |glXGetCurrentDisplay[32] |
 19009	|[32]                       |                        |                         |
 19010	|---------------------------+------------------------+-------------------------|
 19011	|glGetConvolutionParameteriv|glPushMatrix[32]        |glXGetCurrentDrawable[32]|
 19012	|[32]                       |                        |                         |
 19013	|---------------------------+------------------------+-------------------------|
 19014	|glGetDoublev[32]           |glPushName[32]          |glXGetCurrentReadDrawable|
 19015	|                           |                        |[32]                     |
 19016	|---------------------------+------------------------+-------------------------|
 19017	|glGetError[32]             |glRasterPos2d[32]       |glXGetFBConfigAttrib[32] |
 19018	|---------------------------+------------------------+-------------------------|
 19019	|glGetFloatv[32]            |glRasterPos2dv[32]      |glXGetSelectedEvent[32]  |
 19020	|---------------------------+------------------------+-------------------------|
 19021	|glGetHistogram[32]         |glRasterPos2f[32]       |glXGetVisualFromFBConfig |
 19022	|                           |                        |[32]                     |
 19023	|---------------------------+------------------------+-------------------------|
 19024	|glGetHistogramParameterfv  |glRasterPos2fv[32]      |glXImportContextEXT[32]  |
 19025	|[32]                       |                        |                         |
 19026	|---------------------------+------------------------+-------------------------|
 19027	|glGetHistogramParameteriv  |glRasterPos2i[32]       |glXIsDirect[32]          |
 19028	|[32]                       |                        |                         |
 19029	|---------------------------+------------------------+-------------------------|
 19030	|glGetIntegerv[32]          |glRasterPos2iv[32]      |glXMakeContextCurrent[32]|
 19031	|---------------------------+------------------------+-------------------------|
 19032	|glGetLightfv[32]           |glRasterPos2s[32]       |glXMakeCurrent[32]       |
 19033	|---------------------------+------------------------+-------------------------|
 19034	|glGetLightiv[32]           |glRasterPos2sv[32]      |glXQueryContext[32]      |
 19035	|---------------------------+------------------------+-------------------------|
 19036	|glGetMapdv[32]             |glRasterPos3d[32]       |glXQueryContextInfoEXT   |
 19037	|                           |                        |[32]                     |
 19038	|---------------------------+------------------------+-------------------------|
 19039	|glGetMapfv[32]             |glRasterPos3dv[32]      |glXQueryDrawable[32]     |
 19040	|---------------------------+------------------------+-------------------------|
 19041	|glGetMapiv[32]             |glRasterPos3f[32]       |glXQueryExtension[32]    |
 19042	|---------------------------+------------------------+-------------------------|
 19043	|glGetMaterialfv[32]        |glRasterPos3fv[32]      |glXQueryExtensionsString |
 19044	|                           |                        |[32]                     |
 19045	|---------------------------+------------------------+-------------------------|
 19046	|glGetMaterialiv[32]        |glRasterPos3i[32]       |glXQueryServerString[32] |
 19047	|---------------------------+------------------------+-------------------------|
 19048	|glGetMinmax[32]            |glRasterPos3iv[32]      |glXQueryVersion[32]      |
 19049	|---------------------------+------------------------+-------------------------|
 19050	|glGetMinmaxParameterfv[32] |glRasterPos3s[32]       |glXSelectEvent[32]       |
 19051	|---------------------------+------------------------+-------------------------|
 19052	|glGetMinmaxParameteriv[32] |glRasterPos3sv[32]      |glXSwapBuffers[32]       |
 19053	|---------------------------+------------------------+-------------------------|
 19054	|glGetPixelMapfv[32]        |glRasterPos4d[32]       |glXUseXFont[32]          |
 19055	|---------------------------+------------------------+-------------------------|
 19056	|glGetPixelMapuiv[32]       |glRasterPos4dv[32]      |glXWaitGL[32]            |
 19057	|---------------------------+------------------------+-------------------------|
 19058	|glGetPixelMapusv[32]       |glRasterPos4f[32]       |glXWaitX[32]             |
 19059	|---------------------------+------------------------+-------------------------|
 19060	|glGetPointerv[32]          |glRasterPos4fv[32]      |                         |
 19061	|---------------------------+------------------------+-------------------------|
 19062	|glGetPolygonStipple[32]    |glRasterPos4i[32]       |                         |
 19063	+------------------------------------------------------------------------------+
 19064	-------------------------------------------------------------------------------
 19065	
 19066	libXext
 19067	
 19068	The behaviour of the interfaces in this library is specified by the following
 19069	Standards.
 19070	
 19071	Double Buffer Extension Library
 19072	X Display Power Management Signaling (DPMS) Extension, Library Specification
 19073	Security Extension Specification, Version 7.1
 19074	X Nonrectangular Window Shape Extension Library Version 1.0
 19075	MIT-SHM--The MIT Shared Memory Extension
 19076	X Synchronization Extension Library
 19077	
 19078	Table A-7. libXext Function Interfaces
 19079	
 19080	+--------------------------------------------------------------------------------------+
 19081	|DPMSCapable[23]               |XShmCreateImage[26]       |XSyncQueryExtension[27]     |
 19082	|------------------------------+--------------------------+----------------------------|
 19083	|DPMSDisable[23]               |XShmCreatePixmap[26]      |XSyncSetCounter[27]         |
 19084	|------------------------------+--------------------------+----------------------------|
 19085	|DPMSEnable[23]                |XShmDetach[26]            |XSyncSetPriority[27]        |
 19086	|------------------------------+--------------------------+----------------------------|
 19087	|DPMSForceLevel[23]            |XShmGetEventBase[26]      |XSyncValueAdd[27]           |
 19088	|------------------------------+--------------------------+----------------------------|
 19089	|DPMSGetTimeouts[23]           |XShmGetImage[26]          |XSyncValueEqual[27]         |
 19090	|------------------------------+--------------------------+----------------------------|
 19091	|DPMSGetVersion[23]            |XShmPixmapFormat[26]      |XSyncValueGreaterOrEqual[27]|
 19092	|------------------------------+--------------------------+----------------------------|
 19093	|DPMSInfo[23]                  |XShmPutImage[26]          |XSyncValueGreaterThan[27]   |
 19094	|------------------------------+--------------------------+----------------------------|
 19095	|DPMSQueryExtension[23]        |XShmQueryExtension[26]    |XSyncValueHigh32[27]        |
 19096	|------------------------------+--------------------------+----------------------------|
 19097	|DPMSSetTimeouts[23]           |XShmQueryVersion[26]      |XSyncValueIsNegative[27]    |
 19098	|------------------------------+--------------------------+----------------------------|
 19099	|XSecurityAllocXauth[24]       |XSyncAwait[27]            |XSyncValueIsPositive[27]    |
 19100	|------------------------------+--------------------------+----------------------------|
 19101	|XSecurityFreeXauth[24]        |XSyncChangeAlarm[27]      |XSyncValueIsZero[27]        |
 19102	|------------------------------+--------------------------+----------------------------|
 19103	|XSecurityGenerateAuthorization|XSyncChangeCounter[27]    |XSyncValueLessOrEqual[27]   |
 19104	|[24]                          |                          |                            |
 19105	|------------------------------+--------------------------+----------------------------|
 19106	|XSecurityQueryExtension[24]   |XSyncCreateAlarm[27]      |XSyncValueLessThan[27]      |
 19107	|------------------------------+--------------------------+----------------------------|
 19108	|XSecurityRevokeAuthorization  |XSyncCreateCounter[27]    |XSyncValueLow32[27]         |
 19109	|[24]                          |                          |                            |
 19110	|------------------------------+--------------------------+----------------------------|
 19111	|XShapeCombineMask[25]         |XSyncDestroyAlarm[27]     |XSyncValueSubtract[27]      |
 19112	|------------------------------+--------------------------+----------------------------|
 19113	|XShapeCombineRectangles[25]   |XSyncDestroyCounter[27]   |XdbeAllocateBackBufferName  |
 19114	|                              |                          |[22]                        |
 19115	|------------------------------+--------------------------+----------------------------|
 19116	|XShapeCombineRegion[25]       |XSyncFreeSystemCounterList|XdbeBeginIdiom[22]          |
 19117	|                              |[27]                      |                            |
 19118	|------------------------------+--------------------------+----------------------------|
 19119	|XShapeCombineShape[25]        |XSyncGetPriority[27]      |XdbeDeallocateBackBufferName|
 19120	|                              |                          |[22]                        |
 19121	|------------------------------+--------------------------+----------------------------|
 19122	|XShapeGetRectangles[25]       |XSyncInitialize[27]       |XdbeEndIdiom[22]            |
 19123	|------------------------------+--------------------------+----------------------------|
 19124	|XShapeInputSelected[25]       |XSyncIntToValue[27]       |XdbeFreeVisualInfo[22]      |
 19125	|------------------------------+--------------------------+----------------------------|
 19126	|XShapeOffsetShape[25]         |XSyncIntsToValue[27]      |XdbeGetBackBufferAttributes |
 19127	|                              |                          |[22]                        |
 19128	|------------------------------+--------------------------+----------------------------|
 19129	|XShapeQueryExtension[25]      |XSyncListSystemCounters   |XdbeGetVisualInfo[22]       |
 19130	|                              |[27]                      |                            |
 19131	|------------------------------+--------------------------+----------------------------|
 19132	|XShapeQueryExtents[25]        |XSyncMaxValue[27]         |XdbeQueryExtension[22]      |
 19133	|------------------------------+--------------------------+----------------------------|
 19134	|XShapeQueryVersion[25]        |XSyncMinValue[27]         |XdbeSwapBuffers[22]         |
 19135	|------------------------------+--------------------------+----------------------------|
 19136	|XShapeSelectInput[25]         |XSyncQueryAlarm[27]       |                            |
 19137	|------------------------------+--------------------------+----------------------------|
 19138	|XShmAttach[26]                |XSyncQueryCounter[27]     |                            |
 19139	+--------------------------------------------------------------------------------------+
 19140	-------------------------------------------------------------------------------
 19141	
 19142	libICE
 19143	
 19144	The behaviour of the interfaces in this library is specified by the following
 19145	Standards.
 19146	
 19147	X11R6.4 X Inter-Client Exchange (ICE) Protocol
 19148	
 19149	Table A-8. libICE Function Interfaces
 19150	
 19151	+----------------------------------------------------------------------------------------+
 19152	|IceAcceptConnection[29]    |IceGetConnectionContext[29]     |IceProtocolVersion[29]     |
 19153	|---------------------------+--------------------------------+---------------------------|
 19154	|IceAddConnectionWatch[29]  |IceGetInBufSize[29]             |IceReadAuthFileEntry[29]   |
 19155	|---------------------------+--------------------------------+---------------------------|
 19156	|IceAllocScratch[29]        |IceGetListenConnectionNumber[29]|IceRegisterForProtocolReply|
 19157	|                           |                                |[29]                       |
 19158	|---------------------------+--------------------------------+---------------------------|
 19159	|IceAppLockConn[29]         |IceGetListenConnectionString[29]|IceRegisterForProtocolSetup|
 19160	|                           |                                |[29]                       |
 19161	|---------------------------+--------------------------------+---------------------------|
 19162	|IceAppUnlockConn[29]       |IceGetOutBufSize[29]            |IceRelease[29]             |
 19163	|---------------------------+--------------------------------+---------------------------|
 19164	|IceAuthFileName[29]        |IceInitThreads[29]              |IceRemoveConnectionWatch   |
 19165	|                           |                                |[29]                       |
 19166	|---------------------------+--------------------------------+---------------------------|
 19167	|IceCheckShutdownNegotiation|IceLastReceivedSequenceNumber   |IceSetErrorHandler[29]     |
 19168	|[29]                       |[29]                            |                           |
 19169	|---------------------------+--------------------------------+---------------------------|
 19170	|IceCloseConnection[29]     |IceLastSentSequenceNumber[29]   |IceSetHostBasedAuthProc[29]|
 19171	|---------------------------+--------------------------------+---------------------------|
 19172	|IceComposeNetworkIdList[29]|IceListenForConnections[29]     |IceSetIOErrorHandler[29]   |
 19173	|---------------------------+--------------------------------+---------------------------|
 19174	|IceConnectionNumber[29]    |IceListenForWellKnownConnections|IceSetPaAuthData[29]       |
 19175	|                           |[29]                            |                           |
 19176	|---------------------------+--------------------------------+---------------------------|
 19177	|IceConnectionStatus[29]    |IceLockAuthFile[29]             |IceSetShutdownNegotiation  |
 19178	|                           |                                |[29]                       |
 19179	|---------------------------+--------------------------------+---------------------------|
 19180	|IceConnectionString[29]    |IceOpenConnection[29]           |IceSwapping[29]            |
 19181	|---------------------------+--------------------------------+---------------------------|
 19182	|IceFlush[29]               |IcePing[29]                     |IceUnlockAuthFile[29]      |
 19183	|---------------------------+--------------------------------+---------------------------|
 19184	|IceFreeAuthFileEntry[29]   |IceProcessMessages[29]          |IceVendor[29]              |
 19185	|---------------------------+--------------------------------+---------------------------|
 19186	|IceFreeListenObjs[29]      |IceProtocolRevision[29]         |IceWriteAuthFileEntry[29]  |
 19187	|---------------------------+--------------------------------+---------------------------|
 19188	|IceGenerateMagicCookie[29] |IceProtocolSetup[29]            |                           |
 19189	|---------------------------+--------------------------------+---------------------------|
 19190	|IceGetAuthFileEntry[29]    |IceProtocolShutdown[29]         |                           |
 19191	+----------------------------------------------------------------------------------------+
 19192	-------------------------------------------------------------------------------
 19193	
 19194	libSM
 19195	
 19196	The behaviour of the interfaces in this library is specified by the following
 19197	Standards.
 19198	
 19199	X11R6.4 X Session Management Library
 19200	
 19201	Table A-9. libSM Function Interfaces
 19202	
 19203	+-----------------------------------------------------------------------------+
 19204	|SmFreeProperty[28]   |SmcRelease[28]                |SmsInitialize[28]       |
 19205	|---------------------+------------------------------+------------------------|
 19206	|SmFreeReasons[28]    |SmcRequestSaveYourself[28]    |SmsInteract[28]         |
 19207	|---------------------+------------------------------+------------------------|
 19208	|SmcClientID[28]      |SmcRequestSaveYourselfPhase2  |SmsProtocolRevision[28] |
 19209	|                     |[28]                          |                        |
 19210	|---------------------+------------------------------+------------------------|
 19211	|SmcCloseConnection   |SmcSaveYourselfDone[28]       |SmsProtocolVersion[28]  |
 19212	|[28]                 |                              |                        |
 19213	|---------------------+------------------------------+------------------------|
 19214	|SmcDeleteProperties  |SmcSetErrorHandler[28]        |SmsRegisterClientReply  |
 19215	|[28]                 |                              |[28]                    |
 19216	|---------------------+------------------------------+------------------------|
 19217	|SmcGetIceConnection  |SmcSetProperties[28]          |SmsReturnProperties[28] |
 19218	|[28]                 |                              |                        |
 19219	|---------------------+------------------------------+------------------------|
 19220	|SmcGetProperties[28] |SmcVendor[28]                 |SmsSaveComplete[28]     |
 19221	|---------------------+------------------------------+------------------------|
 19222	|SmcInteractDone[28]  |SmsCleanUp[28]                |SmsSaveYourself[28]     |
 19223	|---------------------+------------------------------+------------------------|
 19224	|SmcInteractRequest   |SmsClientHostName[28]         |SmsSaveYourselfPhase2   |
 19225	|[28]                 |                              |[28]                    |
 19226	|---------------------+------------------------------+------------------------|
 19227	|SmcModifyCallbacks   |SmsClientID[28]               |SmsSetErrorHandler[28]  |
 19228	|[28]                 |                              |                        |
 19229	|---------------------+------------------------------+------------------------|
 19230	|SmcOpenConnection[28]|SmsDie[28]                    |SmsShutdownCancelled[28]|
 19231	|---------------------+------------------------------+------------------------|
 19232	|SmcProtocolRevision  |SmsGenerateClientID[28]       |                        |
 19233	|[28]                 |                              |                        |
 19234	|---------------------+------------------------------+------------------------|
 19235	|SmcProtocolVersion   |SmsGetIceConnection[28]       |                        |
 19236	|[28]                 |                              |                        |
 19237	+-----------------------------------------------------------------------------+
 19238	-------------------------------------------------------------------------------
 19239	
 19240	libdl
 19241	
 19242	The behaviour of the interfaces in this library is specified by the following
 19243	Standards.
 19244	
 19245	Linux Standard Base
 19246	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
 19247	(ISBN: 1-85912-181-0, C606)
 19248	
 19249	Table A-10. libdl Function Interfaces
 19250	
 19251	+------------------------------------------------------------------+
 19252	|dladdr(GLIBC_2.0)[13] |dlerror(GLIBC_2.0)[14]|dlsym(GLIBC_2.0)[14]|
 19253	|----------------------+----------------------+--------------------|
 19254	|dlclose(GLIBC_2.0)[14]|dlopen(GLIBC_2.0)[14] |                    |
 19255	+------------------------------------------------------------------+
 19256	-------------------------------------------------------------------------------
 19257	
 19258	libcrypt
 19259	
 19260	The behaviour of the interfaces in this library is specified by the following
 19261	Standards.
 19262	
 19263	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
 19264	(ISBN: 1-85912-181-0, C606)
 19265	
 19266	Table A-11. libcrypt Function Interfaces
 19267	
 19268	+-----------------------------------------------------------------+
 19269	|crypt(GLIBC_2.0)[15]|encrypt(GLIBC_2.0)[15]|setkey(GLIBC_2.0)[15]|
 19270	+-----------------------------------------------------------------+
 19271	-------------------------------------------------------------------------------
 19272	
 19273	libz
 19274	
 19275	The behaviour of the interfaces in this library is specified by the following
 19276	Standards.
 19277	
 19278	zlib 1.1.3 Manual
 19279	
 19280	Table A-12. libz Function Interfaces
 19281	
 19282	+-----------------------------------------------------------------+
 19283	|adler32[18]             |gzdopen[18]    |gztell[18]              |
 19284	|------------------------+---------------+------------------------|
 19285	|compress[18]            |gzeof[18]      |gzwrite[18]             |
 19286	|------------------------+---------------+------------------------|
 19287	|compress2[18]           |gzerror[18]    |inflate[18]             |
 19288	|------------------------+---------------+------------------------|
 19289	|crc32[18]               |gzflush[18]    |inflateEnd[18]          |
 19290	|------------------------+---------------+------------------------|
 19291	|deflate[18]             |gzgetc[18]     |inflateInit2_[18]       |
 19292	|------------------------+---------------+------------------------|
 19293	|deflateCopy[18]         |gzgets[18]     |inflateInit_[18]        |
 19294	|------------------------+---------------+------------------------|
 19295	|deflateEnd[18]          |gzopen[18]     |inflateReset[18]        |
 19296	|------------------------+---------------+------------------------|
 19297	|deflateInit2_[18]       |gzprintf[18]   |inflateSetDictionary[18]|
 19298	|------------------------+---------------+------------------------|
 19299	|deflateInit_[18]        |gzputc[18]     |inflateSync[18]         |
 19300	|------------------------+---------------+------------------------|
 19301	|deflateParams[18]       |gzputs[18]     |inflateSyncPoint[18]    |
 19302	|------------------------+---------------+------------------------|
 19303	|deflateReset[18]        |gzread[18]     |uncompress[18]          |
 19304	|------------------------+---------------+------------------------|
 19305	|deflateSetDictionary[18]|gzrewind[18]   |zError[18]              |
 19306	|------------------------+---------------+------------------------|
 19307	|get_crc_table[18]       |gzseek[18]     |                        |
 19308	|------------------------+---------------+------------------------|
 19309	|gzclose[18]             |gzsetparams[18]|                        |
 19310	+-----------------------------------------------------------------+
 19311	-------------------------------------------------------------------------------
 19312	
 19313	libncurses
 19314	
 19315	The behaviour of the interfaces in this library is specified by the following
 19316	Standards.
 19317	
 19318	CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:
 19319	1-85912-171-3, C610), plus Corrigendum U018
 19320	
 19321	Table A-13. libncurses Function Interfaces
 19322	
 19323	+----------------------------------------------------------+
 19324	|addch[19]           |mvcur[19]           |slk_refresh[19] |
 19325	|--------------------+--------------------+----------------|
 19326	|addchnstr[19]       |mvdelch[19]         |slk_restore[19] |
 19327	|--------------------+--------------------+----------------|
 19328	|addchstr[19]        |mvderwin[19]        |slk_set[19]     |
 19329	|--------------------+--------------------+----------------|
 19330	|addnstr[19]         |mvgetch[19]         |slk_touch[19]   |
 19331	|--------------------+--------------------+----------------|
 19332	|addstr[19]          |mvgetnstr[19]       |standend[19]    |
 19333	|--------------------+--------------------+----------------|
 19334	|attr_get[19]        |mvgetstr[19]        |standout[19]    |
 19335	|--------------------+--------------------+----------------|
 19336	|attr_off[19]        |mvhline[19]         |start_color[19] |
 19337	|--------------------+--------------------+----------------|
 19338	|attr_on[19]         |mvinch[19]          |subpad[19]      |
 19339	|--------------------+--------------------+----------------|
 19340	|attr_set[19]        |mvinchnstr[19]      |subwin[19]      |
 19341	|--------------------+--------------------+----------------|
 19342	|attroff[19]         |mvinchstr[19]       |syncok[19]      |
 19343	|--------------------+--------------------+----------------|
 19344	|attron[19]          |mvinnstr[19]        |termattrs[19]   |
 19345	|--------------------+--------------------+----------------|
 19346	|attrset[19]         |mvinsch[19]         |termname[19]    |
 19347	|--------------------+--------------------+----------------|
 19348	|baudrate[19]        |mvinsnstr[19]       |tgetent[19]     |
 19349	|--------------------+--------------------+----------------|
 19350	|beep[19]            |mvinsstr[19]        |tgetflag[19]    |
 19351	|--------------------+--------------------+----------------|
 19352	|bkgd[19]            |mvinstr[19]         |tgetnum[19]     |
 19353	|--------------------+--------------------+----------------|
 19354	|bkgdset[19]         |mvprintw[19]        |tgetstr[19]     |
 19355	|--------------------+--------------------+----------------|
 19356	|border[19]          |mvscanw[19]         |tgoto[19]       |
 19357	|--------------------+--------------------+----------------|
 19358	|box[19]             |mvvline[19]         |tigetflag[19]   |
 19359	|--------------------+--------------------+----------------|
 19360	|can_change_color[19]|mvwaddch[19]        |tigetnum[19]    |
 19361	|--------------------+--------------------+----------------|
 19362	|cbreak[19]          |mvwaddchnstr[19]    |tigetstr[19]    |
 19363	|--------------------+--------------------+----------------|
 19364	|chgat[19]           |mvwaddchstr[19]     |timeout[19]     |
 19365	|--------------------+--------------------+----------------|
 19366	|clear[19]           |mvwaddnstr[19]      |tparm[19]       |
 19367	|--------------------+--------------------+----------------|
 19368	|clearok[19]         |mvwaddstr[19]       |tputs[19]       |
 19369	|--------------------+--------------------+----------------|
 19370	|clrtobot[19]        |mvwchgat[19]        |typeahead[19]   |
 19371	|--------------------+--------------------+----------------|
 19372	|clrtoeol[19]        |mvwdelch[19]        |ungetch[19]     |
 19373	|--------------------+--------------------+----------------|
 19374	|color_content[19]   |mvwgetch[19]        |untouchwin[19]  |
 19375	|--------------------+--------------------+----------------|
 19376	|color_set[19]       |mvwgetnstr[19]      |use_env[19]     |
 19377	|--------------------+--------------------+----------------|
 19378	|copywin[19]         |mvwgetstr[19]       |vidattr[19]     |
 19379	|--------------------+--------------------+----------------|
 19380	|curs_set[19]        |mvwhline[19]        |vidputs[19]     |
 19381	|--------------------+--------------------+----------------|
 19382	|def_prog_mode[19]   |mvwin[19]           |vline[19]       |
 19383	|--------------------+--------------------+----------------|
 19384	|def_shell_mode[19]  |mvwinch[19]         |vw_printw[19]   |
 19385	|--------------------+--------------------+----------------|
 19386	|delay_output[19]    |mvwinchnstr[19]     |vw_scanw[19]    |
 19387	|--------------------+--------------------+----------------|
 19388	|delch[19]           |mvwinchstr[19]      |vwprintw[19]    |
 19389	|--------------------+--------------------+----------------|
 19390	|deleteln[19]        |mvwinnstr[19]       |vwscanw[19]     |
 19391	|--------------------+--------------------+----------------|
 19392	|delscreen[19]       |mvwinsch[19]        |waddch[19]      |
 19393	|--------------------+--------------------+----------------|
 19394	|delwin[19]          |mvwinsnstr[19]      |waddchnstr[19]  |
 19395	|--------------------+--------------------+----------------|
 19396	|derwin[19]          |mvwinsstr[19]       |waddchstr[19]   |
 19397	|--------------------+--------------------+----------------|
 19398	|doupdate[19]        |mvwinstr[19]        |waddnstr[19]    |
 19399	|--------------------+--------------------+----------------|
 19400	|dupwin[19]          |mvwprintw[19]       |waddstr[19]     |
 19401	|--------------------+--------------------+----------------|
 19402	|echo[19]            |mvwscanw[19]        |wattr_get[19]   |
 19403	|--------------------+--------------------+----------------|
 19404	|echochar[19]        |mvwvline[19]        |wattr_off[19]   |
 19405	|--------------------+--------------------+----------------|
 19406	|endwin[19]          |napms[19]           |wattr_on[19]    |
 19407	|--------------------+--------------------+----------------|
 19408	|erase[19]           |newpad[19]          |wattr_set[19]   |
 19409	|--------------------+--------------------+----------------|
 19410	|erasechar[19]       |newterm[19]         |wattroff[19]    |
 19411	|--------------------+--------------------+----------------|
 19412	|filter[19]          |newwin[19]          |wattron[19]     |
 19413	|--------------------+--------------------+----------------|
 19414	|flash[19]           |nl[19]              |wattrset[19]    |
 19415	|--------------------+--------------------+----------------|
 19416	|flushinp[19]        |nocbreak[19]        |wbkgd[19]       |
 19417	|--------------------+--------------------+----------------|
 19418	|getbkgd[19]         |nodelay[19]         |wbkgdset[19]    |
 19419	|--------------------+--------------------+----------------|
 19420	|getch[19]           |noecho[19]          |wborder[19]     |
 19421	|--------------------+--------------------+----------------|
 19422	|getnstr[19]         |nonl[19]            |wchgat[19]      |
 19423	|--------------------+--------------------+----------------|
 19424	|getstr[19]          |noqiflush[19]       |wclear[19]      |
 19425	|--------------------+--------------------+----------------|
 19426	|getwin[19]          |noraw[19]           |wclrtobot[19]   |
 19427	|--------------------+--------------------+----------------|
 19428	|halfdelay[19]       |notimeout[19]       |wclrtoeol[19]   |
 19429	|--------------------+--------------------+----------------|
 19430	|has_colors[19]      |overlay[19]         |wcolor_set[19]  |
 19431	|--------------------+--------------------+----------------|
 19432	|has_ic[19]          |overwrite[19]       |wcursyncup[19]  |
 19433	|--------------------+--------------------+----------------|
 19434	|has_il[19]          |pair_content[19]    |wdelch[19]      |
 19435	|--------------------+--------------------+----------------|
 19436	|hline[19]           |pechochar[19]       |wdeleteln[19]   |
 19437	|--------------------+--------------------+----------------|
 19438	|idcok[19]           |pnoutrefresh[19]    |wechochar[19]   |
 19439	|--------------------+--------------------+----------------|
 19440	|idlok[19]           |prefresh[19]        |werase[19]      |
 19441	|--------------------+--------------------+----------------|
 19442	|immedok[19]         |printw[19]          |wgetch[19]      |
 19443	|--------------------+--------------------+----------------|
 19444	|inch[19]            |putp[19]            |wgetnstr[19]    |
 19445	|--------------------+--------------------+----------------|
 19446	|inchnstr[19]        |putwin[19]          |wgetstr[19]     |
 19447	|--------------------+--------------------+----------------|
 19448	|inchstr[19]         |qiflush[19]         |whline[19]      |
 19449	|--------------------+--------------------+----------------|
 19450	|init_color[19]      |raw[19]             |winch[19]       |
 19451	|--------------------+--------------------+----------------|
 19452	|init_pair[19]       |redrawwin[19]       |winchnstr[19]   |
 19453	|--------------------+--------------------+----------------|
 19454	|initscr[19]         |refresh[19]         |winchstr[19]    |
 19455	|--------------------+--------------------+----------------|
 19456	|innstr[19]          |reset_prog_mode[19] |winnstr[19]     |
 19457	|--------------------+--------------------+----------------|
 19458	|insch[19]           |reset_shell_mode[19]|winsch[19]      |
 19459	|--------------------+--------------------+----------------|
 19460	|insdelln[19]        |resetty[19]         |winsdelln[19]   |
 19461	|--------------------+--------------------+----------------|
 19462	|insertln[19]        |ripoffline[19]      |winsertln[19]   |
 19463	|--------------------+--------------------+----------------|
 19464	|insnstr[19]         |savetty[19]         |winsnstr[19]    |
 19465	|--------------------+--------------------+----------------|
 19466	|insstr[19]          |scanw[19]           |winsstr[19]     |
 19467	|--------------------+--------------------+----------------|
 19468	|instr[19]           |scr_dump[19]        |winstr[19]      |
 19469	|--------------------+--------------------+----------------|
 19470	|intrflush[19]       |scr_init[19]        |wmove[19]       |
 19471	|--------------------+--------------------+----------------|
 19472	|is_linetouched[19]  |scr_restore[19]     |wnoutrefresh[19]|
 19473	|--------------------+--------------------+----------------|
 19474	|is_wintouched[19]   |scr_set[19]         |wprintw[19]     |
 19475	|--------------------+--------------------+----------------|
 19476	|isendwin[19]        |scrl[19]            |wredrawln[19]   |
 19477	|--------------------+--------------------+----------------|
 19478	|keyname[19]         |scroll[19]          |wrefresh[19]    |
 19479	|--------------------+--------------------+----------------|
 19480	|keypad[19]          |scrollok[19]        |wscanw[19]      |
 19481	|--------------------+--------------------+----------------|
 19482	|killchar[19]        |set_term[19]        |wscrl[19]       |
 19483	|--------------------+--------------------+----------------|
 19484	|leaveok[19]         |setscrreg[19]       |wsetscrreg[19]  |
 19485	|--------------------+--------------------+----------------|
 19486	|longname[19]        |slk_attr_set[19]    |wstandend[19]   |
 19487	|--------------------+--------------------+----------------|
 19488	|meta[19]            |slk_attroff[19]     |wstandout[19]   |
 19489	|--------------------+--------------------+----------------|
 19490	|move[19]            |slk_attron[19]      |wsyncdown[19]   |
 19491	|--------------------+--------------------+----------------|
 19492	|mvaddch[19]         |slk_attrset[19]     |wsyncup[19]     |
 19493	|--------------------+--------------------+----------------|
 19494	|mvaddchnstr[19]     |slk_clear[19]       |wtimeout[19]    |
 19495	|--------------------+--------------------+----------------|
 19496	|mvaddchstr[19]      |slk_color[19]       |wtouchln[19]    |
 19497	|--------------------+--------------------+----------------|
 19498	|mvaddnstr[19]       |slk_init[19]        |wvline[19]      |
 19499	|--------------------+--------------------+----------------|
 19500	|mvaddstr[19]        |slk_label[19]       |                |
 19501	|--------------------+--------------------+----------------|
 19502	|mvchgat[19]         |slk_noutrefresh[19] |                |
 19503	+----------------------------------------------------------+
 19504	
 19505	Table A-14. libncurses Data Interfaces
 19506	
 19507	+-----------------------+
 19508	|curscr[19]|stdscr[19]| |
 19509	+-----------------------+
 19510	-------------------------------------------------------------------------------
 19511	
 19512	libutil
 19513	
 19514	The behaviour of the interfaces in this library is specified by the following
 19515	Standards.
 19516	
 19517	Linux Standard Base
 19518	
 19519	Table A-15. libutil Function Interfaces
 19520	
 19521	+-------------------------------------+
 19522	|forkpty[20]|login_tty[20]|logwtmp[20]|
 19523	|-----------+-------------+-----------|
 19524	|login[20]  |logout[20]   |openpty[20]|
 19525	+-------------------------------------+
 19526	-------------------------------------------------------------------------------
 19527	
 19528	libc
 19529	
 19530	The behaviour of the interfaces in this library is specified by the following
 19531	Standards.
 19532	
 19533	ISO/IEC 9899: 1999, Programming Languages --C
 19534	Large File Support
 19535	Linux Standard Base
 19536	IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996]
 19537	CAE Specification, February 1997, Networking Services (XNS), Issue 5 (ISBN:
 19538	1-85912-165-9, C523)
 19539	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
 19540	(ISBN: 1-85912-181-0, C606)
 19541	
 19542	Table A-16. libc Function Interfaces
 19543	
 19544	+-----------------------------------------------------------------------------+
 19545	|_Exit(GLIBC_2.1.1)[3]       |getprotobynumber           |setnetent           |
 19546	|                            |(GLIBC_2.1.1)[7]           |(GLIBC_2.1.1)[7]    |
 19547	|----------------------------+---------------------------+--------------------|
 19548	|_IO_feof(GLIBC_2.0)[5]      |getprotoent(GLIBC_2.0)[5]  |setpgid(GLIBC_2.0)  |
 19549	|                            |                           |[8]                 |
 19550	|----------------------------+---------------------------+--------------------|
 19551	|_IO_getc(GLIBC_2.0)[5]      |getpwent(GLIBC_2.0)[8]     |setpgrp(GLIBC_2.0)  |
 19552	|                            |                           |[8]                 |
 19553	|----------------------------+---------------------------+--------------------|
 19554	|_IO_putc(GLIBC_2.0)[5]      |getpwnam(GLIBC_2.0)[8]     |setpriority         |
 19555	|                            |                           |(GLIBC_2.0)[8]      |
 19556	|----------------------------+---------------------------+--------------------|
 19557	|_IO_puts(GLIBC_2.0)[5]      |getpwuid(GLIBC_2.0)[8]     |setprotoent         |
 19558	|                            |                           |(GLIBC_2.0)[7]      |
 19559	|----------------------------+---------------------------+--------------------|
 19560	|__assert_fail(GLIBC_2.0)[5] |getrlimit(GLIBC_2.0)[8]    |setpwent(GLIBC_2.0) |
 19561	|                            |                           |[8]                 |
 19562	|----------------------------+---------------------------+--------------------|
 19563	|__bzero(GLIBC_2.0)[5]       |getrlimit64(GLIBC_2.0)[4]  |setregid(GLIBC_2.0) |
 19564	|                            |                           |[8]                 |
 19565	|----------------------------+---------------------------+--------------------|
 19566	|__ctype_get_mb_cur_max      |getrusage(GLIBC_2.0)[8]    |setreuid(GLIBC_2.0) |
 19567	|(GLIBC_2.0)[5]              |                           |[8]                 |
 19568	|----------------------------+---------------------------+--------------------|
 19569	|__cxa_atexit(GLIBC_2.1.3)[5]|gets(GLIBC_2.1.3)[8]       |setrlimit           |
 19570	|                            |                           |(GLIBC_2.1.3)[8]    |
 19571	|----------------------------+---------------------------+--------------------|
 19572	|__dcgettext(GLIBC_2.0)[5]   |getservbyname(GLIBC_2.0)[5]|setservent          |
 19573	|                            |                           |(GLIBC_2.0)[7]      |
 19574	|----------------------------+---------------------------+--------------------|
 19575	|__errno_location(GLIBC_2.0) |getservbyport(GLIBC_2.0)[7]|setsid(GLIBC_2.0)[8]|
 19576	|[5]                         |                           |                    |
 19577	|----------------------------+---------------------------+--------------------|
 19578	|__fpending(GLIBC_2.2)[5]    |getservent(GLIBC_2.2)[5]   |setsockopt          |
 19579	|                            |                           |(GLIBC_2.2)[7]      |
 19580	|----------------------------+---------------------------+--------------------|
 19581	|__fxstat(GLIBC_2.0)[5]      |getsid(GLIBC_2.0)[8]       |setstate(GLIBC_2.0) |
 19582	|                            |                           |[8]                 |
 19583	|----------------------------+---------------------------+--------------------|
 19584	|__fxstat64(GLIBC_2.2)[5]    |getsockname(GLIBC_2.2)[7]  |setuid(GLIBC_2.2)[8]|
 19585	|----------------------------+---------------------------+--------------------|
 19586	|__getpgid(GLIBC_2.0)[5]     |getsockopt(GLIBC_2.0)[7]   |setutent(GLIBC_2.0) |
 19587	|                            |                           |[5]                 |
 19588	|----------------------------+---------------------------+--------------------|
 19589	|__libc_current_sigrtmax     |getsubopt(GLIBC_2.1)[8]    |setutxent(GLIBC_2.1)|
 19590	|(GLIBC_2.1)[5]              |                           |[8]                 |
 19591	|----------------------------+---------------------------+--------------------|
 19592	|__libc_current_sigrtmin     |gettext(GLIBC_2.1)[5]      |setvbuf(GLIBC_2.1)  |
 19593	|(GLIBC_2.1)[5]              |                           |[8]                 |
 19594	|----------------------------+---------------------------+--------------------|
 19595	|__lxstat(GLIBC_2.0)[5]      |gettimeofday(GLIBC_2.0)[8] |shmat(GLIBC_2.0)[8] |
 19596	|----------------------------+---------------------------+--------------------|
 19597	|__lxstat64(GLIBC_2.2)[5]    |getuid(GLIBC_2.2)[8]       |shmctl(GLIBC_2.2)[8]|
 19598	|----------------------------+---------------------------+--------------------|
 19599	|__mbrlen(GLIBC_2.0)[5]      |getutent(GLIBC_2.0)[5]     |shmdt(GLIBC_2.0)[8] |
 19600	|----------------------------+---------------------------+--------------------|
 19601	|__mempcpy(GLIBC_2.0)[5]     |getutxent(GLIBC_2.0)[8]    |shmget(GLIBC_2.0)[8]|
 19602	|----------------------------+---------------------------+--------------------|
 19603	|__rawmemchr(GLIBC_2.1)[5]   |getutxid(GLIBC_2.1)[8]     |shutdown(GLIBC_2.1) |
 19604	|                            |                           |[7]                 |
 19605	|----------------------------+---------------------------+--------------------|
 19606	|__secure_getenv(GLIBC_2.0)  |getutxline(GLIBC_2.0)[8]   |sigaction(GLIBC_2.0)|
 19607	|[5]                         |                           |[8]                 |
 19608	|----------------------------+---------------------------+--------------------|
 19609	|__sigpause(GLIBC_2.0)[5]    |getw(GLIBC_2.0)[8]         |sigaddset(GLIBC_2.0)|
 19610	|                            |                           |[8]                 |
 19611	|----------------------------+---------------------------+--------------------|
 19612	|__sigsetjmp(GLIBC_2.0)[5]   |getwd(GLIBC_2.0)[8]        |sigaltstack         |
 19613	|                            |                           |(GLIBC_2.0)[8]      |
 19614	|----------------------------+---------------------------+--------------------|
 19615	|__stpcpy(GLIBC_2.0)[5]      |glob(GLIBC_2.0)[8]         |sigandset(GLIBC_2.0)|
 19616	|                            |                           |[5]                 |
 19617	|----------------------------+---------------------------+--------------------|
 19618	|__strdup(GLIBC_2.0)[5]      |glob64(GLIBC_2.0)[5]       |sigblock(GLIBC_2.0) |
 19619	|                            |                           |[5]                 |
 19620	|----------------------------+---------------------------+--------------------|
 19621	|__strtod_internal(GLIBC_2.0)|globfree(GLIBC_2.0)[8]     |sigdelset(GLIBC_2.0)|
 19622	|[5]                         |                           |[8]                 |
 19623	|----------------------------+---------------------------+--------------------|
 19624	|__strtof_internal(GLIBC_2.0)|globfree64(GLIBC_2.0)[5]   |sigemptyset         |
 19625	|[5]                         |                           |(GLIBC_2.0)[8]      |
 19626	|----------------------------+---------------------------+--------------------|
 19627	|__strtok_r(GLIBC_2.0)[5]    |gmtime(GLIBC_2.0)[8]       |sigfillset          |
 19628	|                            |                           |(GLIBC_2.0)[8]      |
 19629	|----------------------------+---------------------------+--------------------|
 19630	|__strtol_internal(GLIBC_2.0)|grantpt(GLIBC_2.0)[8]      |siggetmask          |
 19631	|[5]                         |                           |(GLIBC_2.0)[5]      |
 19632	|----------------------------+---------------------------+--------------------|
 19633	|__strtold_internal          |hcreate(GLIBC_2.0)[8]      |sighold(GLIBC_2.0)  |
 19634	|(GLIBC_2.0)[5]              |                           |[8]                 |
 19635	|----------------------------+---------------------------+--------------------|
 19636	|__strtoll_internal          |hdestroy(GLIBC_2.0)[8]     |sigignore(GLIBC_2.0)|
 19637	|(GLIBC_2.0)[5]              |                           |[8]                 |
 19638	|----------------------------+---------------------------+--------------------|
 19639	|__strtoul_internal          |hsearch(GLIBC_2.0)[8]      |siginterrupt        |
 19640	|(GLIBC_2.0)[5]              |                           |(GLIBC_2.0)[8]      |
 19641	|----------------------------+---------------------------+--------------------|
 19642	|__strtoull_internal         |htonl(GLIBC_2.0)[7]        |sigisemptyset       |
 19643	|(GLIBC_2.0)[5]              |                           |(GLIBC_2.0)[5]      |
 19644	|----------------------------+---------------------------+--------------------|
 19645	|__sysconf(GLIBC_2.2)[5]     |htons(GLIBC_2.2)[7]        |sigismember         |
 19646	|                            |                           |(GLIBC_2.2)[8]      |
 19647	|----------------------------+---------------------------+--------------------|
 19648	|__sysv_signal(GLIBC_2.0)[5] |iconv(GLIBC_2.0)[8]        |siglongjmp          |
 19649	|                            |                           |(GLIBC_2.0)[8]      |
 19650	|----------------------------+---------------------------+--------------------|
 19651	|__wcstod_internal(GLIBC_2.0)|iconv_close(GLIBC_2.0)[8]  |signal(GLIBC_2.0)[8]|
 19652	|[5]                         |                           |                    |
 19653	|----------------------------+---------------------------+--------------------|
 19654	|__wcstof_internal(GLIBC_2.0)|iconv_open(GLIBC_2.0)[8]   |sigorset(GLIBC_2.0) |
 19655	|[5]                         |                           |[5]                 |
 19656	|----------------------------+---------------------------+--------------------|
 19657	|__wcstol_internal(GLIBC_2.0)|imaxabs(GLIBC_2.0)[3]      |sigpause(GLIBC_2.0) |
 19658	|[5]                         |                           |[8]                 |
 19659	|----------------------------+---------------------------+--------------------|
 19660	|__wcstold_internal          |imaxdiv(GLIBC_2.0)[3]      |sigpending          |
 19661	|(GLIBC_2.0)[5]              |                           |(GLIBC_2.0)[8]      |
 19662	|----------------------------+---------------------------+--------------------|
 19663	|__wcstoll_internal          |index(GLIBC_2.0)[8]        |sigprocmask         |
 19664	|(GLIBC_2.0)[5]              |                           |(GLIBC_2.0)[8]      |
 19665	|----------------------------+---------------------------+--------------------|
 19666	|__wcstoul_internal          |inet_addr(GLIBC_2.0)[7]    |sigqueue(GLIBC_2.0) |
 19667	|(GLIBC_2.0)[5]              |                           |[8]                 |
 19668	|----------------------------+---------------------------+--------------------|
 19669	|__wcstoull_internal         |inet_aton(GLIBC_2.0)[7]    |sigrelse(GLIBC_2.0) |
 19670	|(GLIBC_2.0)[5]              |                           |[8]                 |
 19671	|----------------------------+---------------------------+--------------------|
 19672	|__xmknod(GLIBC_2.0)[5]      |inet_ntoa(GLIBC_2.0)[7]    |sigreturn(GLIBC_2.0)|
 19673	|                            |                           |[5]                 |
 19674	|----------------------------+---------------------------+--------------------|
 19675	|__xstat(GLIBC_2.0)[5]       |initgroups(GLIBC_2.0)[5]   |sigset(GLIBC_2.0)[8]|
 19676	|----------------------------+---------------------------+--------------------|
 19677	|__xstat64(GLIBC_2.2)[5]     |initstate(GLIBC_2.2)[8]    |sigstack(GLIBC_2.2) |
 19678	|                            |                           |[8]                 |
 19679	|----------------------------+---------------------------+--------------------|
 19680	|_exit(GLIBC_2.0)[8]         |insque(GLIBC_2.0)[8]       |sigsuspend          |
 19681	|                            |                           |(GLIBC_2.0)[8]      |
 19682	|----------------------------+---------------------------+--------------------|
 19683	|_h_errno(GLIBC_2.0)[8]      |ioctl(GLIBC_2.0)[8]        |sigtimedwait        |
 19684	|                            |                           |(GLIBC_2.0)[8]      |
 19685	|----------------------------+---------------------------+--------------------|
 19686	|_longjmp(GLIBC_2.0)[8]      |isalnum(GLIBC_2.0)[8]      |sigwait(GLIBC_2.0)  |
 19687	|                            |                           |[8]                 |
 19688	|----------------------------+---------------------------+--------------------|
 19689	|_obstack_begin(GLIBC_2.0)[5]|isalpha(GLIBC_2.0)[8]      |sigwaitinfo         |
 19690	|                            |                           |(GLIBC_2.0)[8]      |
 19691	|----------------------------+---------------------------+--------------------|
 19692	|_obstack_newchunk(GLIBC_2.0)|isascii(GLIBC_2.0)[8]      |sleep(GLIBC_2.0)[8] |
 19693	|[5]                         |                           |                    |
 19694	|----------------------------+---------------------------+--------------------|
 19695	|_setjmp(GLIBC_2.0)[8]       |isatty(GLIBC_2.0)[8]       |snprintf(GLIBC_2.0) |
 19696	|                            |                           |[8]                 |
 19697	|----------------------------+---------------------------+--------------------|
 19698	|_tolower(GLIBC_2.0)[8]      |isblank(GLIBC_2.0)[3]      |socket(GLIBC_2.0)[7]|
 19699	|----------------------------+---------------------------+--------------------|
 19700	|_toupper(GLIBC_2.0)[8]      |iscntrl(GLIBC_2.0)[8]      |socketpair          |
 19701	|                            |                           |(GLIBC_2.0)[7]      |
 19702	|----------------------------+---------------------------+--------------------|
 19703	|a64l(GLIBC_2.0)[8]          |isdigit(GLIBC_2.0)[8]      |sprintf(GLIBC_2.0)  |
 19704	|                            |                           |[8]                 |
 19705	|----------------------------+---------------------------+--------------------|
 19706	|abort(GLIBC_2.0)[8]         |isgraph(GLIBC_2.0)[8]      |srand(GLIBC_2.0)[8] |
 19707	|----------------------------+---------------------------+--------------------|
 19708	|abs(GLIBC_2.0)[8]           |isinf(GLIBC_2.0)[3]        |srand48(GLIBC_2.0)  |
 19709	|                            |                           |[8]                 |
 19710	|----------------------------+---------------------------+--------------------|
 19711	|accept(GLIBC_2.0)[7]        |isinfl(GLIBC_2.0)[3]       |srandom(GLIBC_2.0)  |
 19712	|                            |                           |[8]                 |
 19713	|----------------------------+---------------------------+--------------------|
 19714	|access(GLIBC_2.0)[8]        |islower(GLIBC_2.0)[8]      |sscanf(GLIBC_2.0)[8]|
 19715	|----------------------------+---------------------------+--------------------|
 19716	|acct(GLIBC_2.0)[5]          |isnan(GLIBC_2.0)[3]        |statfs(GLIBC_2.0)[5]|
 19717	|----------------------------+---------------------------+--------------------|
 19718	|adjtime(GLIBC_2.0)[5]       |isnanf(GLIBC_2.0)[3]       |statvfs(GLIBC_2.0)  |
 19719	|                            |                           |[8]                 |
 19720	|----------------------------+---------------------------+--------------------|
 19721	|adjtimex(GLIBC_2.0)[5]      |isnanl(GLIBC_2.0)[3]       |step(GLIBC_2.0)[8]  |
 19722	|----------------------------+---------------------------+--------------------|
 19723	|advance(GLIBC_2.0)[8]       |isprint(GLIBC_2.0)[8]      |stime(GLIBC_2.0)[5] |
 19724	|----------------------------+---------------------------+--------------------|
 19725	|alarm(GLIBC_2.0)[8]         |ispunct(GLIBC_2.0)[8]      |stpcpy(GLIBC_2.0)[5]|
 19726	|----------------------------+---------------------------+--------------------|
 19727	|alphasort(GLIBC_2.0)[5]     |isspace(GLIBC_2.0)[8]      |stpncpy(GLIBC_2.0)  |
 19728	|                            |                           |[5]                 |
 19729	|----------------------------+---------------------------+--------------------|
 19730	|alphasort64(GLIBC_2.1)[5]   |isupper(GLIBC_2.1)[8]      |strcasecmp          |
 19731	|                            |                           |(GLIBC_2.1)[8]      |
 19732	|----------------------------+---------------------------+--------------------|
 19733	|asctime(GLIBC_2.0)[8]       |iswalnum(GLIBC_2.0)[8]     |strcasestr          |
 19734	|                            |                           |(GLIBC_2.0)[5]      |
 19735	|----------------------------+---------------------------+--------------------|
 19736	|atexit(GLIBC_2.0)[8]        |iswalpha(GLIBC_2.0)[8]     |strcat(GLIBC_2.0)[8]|
 19737	|----------------------------+---------------------------+--------------------|
 19738	|atof(GLIBC_2.0)[8]          |iswblank(GLIBC_2.0)[5]     |strchr(GLIBC_2.0)[8]|
 19739	|----------------------------+---------------------------+--------------------|
 19740	|atoi(GLIBC_2.0)[8]          |iswcntrl(GLIBC_2.0)[8]     |strcmp(GLIBC_2.0)[8]|
 19741	|----------------------------+---------------------------+--------------------|
 19742	|atol(GLIBC_2.0)[8]          |iswctype(GLIBC_2.0)[5]     |strcoll(GLIBC_2.0)  |
 19743	|                            |                           |[8]                 |
 19744	|----------------------------+---------------------------+--------------------|
 19745	|basename(GLIBC_2.0)[8]      |iswdigit(GLIBC_2.0)[8]     |strcpy(GLIBC_2.0)[8]|
 19746	|----------------------------+---------------------------+--------------------|
 19747	|bcmp(GLIBC_2.0)[8]          |iswgraph(GLIBC_2.0)[8]     |strcspn(GLIBC_2.0)  |
 19748	|                            |                           |[8]                 |
 19749	|----------------------------+---------------------------+--------------------|
 19750	|bcopy(GLIBC_2.0)[8]         |iswlower(GLIBC_2.0)[8]     |strdup(GLIBC_2.0)[8]|
 19751	|----------------------------+---------------------------+--------------------|
 19752	|bind(GLIBC_2.0)[7]          |iswprint(GLIBC_2.0)[8]     |strerror(GLIBC_2.0) |
 19753	|                            |                           |[8]                 |
 19754	|----------------------------+---------------------------+--------------------|
 19755	|bindresvport(GLIBC_2.0)[5]  |iswpunct(GLIBC_2.0)[8]     |strerror_r          |
 19756	|                            |                           |(GLIBC_2.0)[5]      |
 19757	|----------------------------+---------------------------+--------------------|
 19758	|bindtextdomain(GLIBC_2.0)[5]|iswspace(GLIBC_2.0)[8]     |strfmon(GLIBC_2.0)  |
 19759	|                            |                           |[8]                 |
 19760	|----------------------------+---------------------------+--------------------|
 19761	|brk(GLIBC_2.0)[8]           |iswupper(GLIBC_2.0)[8]     |strfry(GLIBC_2.0)[5]|
 19762	|----------------------------+---------------------------+--------------------|
 19763	|bsd_signal(GLIBC_2.0)[8]    |iswxdigit(GLIBC_2.0)[8]    |strftime(GLIBC_2.0) |
 19764	|                            |                           |[8]                 |
 19765	|----------------------------+---------------------------+--------------------|
 19766	|bsearch(GLIBC_2.0)[8]       |isxdigit(GLIBC_2.0)[8]     |strlen(GLIBC_2.0)[8]|
 19767	|----------------------------+---------------------------+--------------------|
 19768	|btowc(GLIBC_2.0)[8]         |jrand48(GLIBC_2.0)[8]      |strncasecmp         |
 19769	|                            |                           |(GLIBC_2.0)[8]      |
 19770	|----------------------------+---------------------------+--------------------|
 19771	|bzero(GLIBC_2.0)[8]         |kill(GLIBC_2.0)[8]         |strncat(GLIBC_2.0)  |
 19772	|                            |                           |[8]                 |
 19773	|----------------------------+---------------------------+--------------------|
 19774	|calloc(GLIBC_2.0)[8]        |killpg(GLIBC_2.0)[8]       |strncmp(GLIBC_2.0)  |
 19775	|                            |                           |[8]                 |
 19776	|----------------------------+---------------------------+--------------------|
 19777	|catclose(GLIBC_2.0)[8]      |l64a(GLIBC_2.0)[8]         |strncpy(GLIBC_2.0)  |
 19778	|                            |                           |[8]                 |
 19779	|----------------------------+---------------------------+--------------------|
 19780	|catgets(GLIBC_2.0)[8]       |labs(GLIBC_2.0)[8]         |strndup(GLIBC_2.0)  |
 19781	|                            |                           |[5]                 |
 19782	|----------------------------+---------------------------+--------------------|
 19783	|catopen(GLIBC_2.0)[8]       |lchown(GLIBC_2.0)[8]       |strnlen(GLIBC_2.0)  |
 19784	|                            |                           |[5]                 |
 19785	|----------------------------+---------------------------+--------------------|
 19786	|cfgetispeed(GLIBC_2.0)[8]   |ldiv(GLIBC_2.0)[8]         |strpbrk(GLIBC_2.0)  |
 19787	|                            |                           |[8]                 |
 19788	|----------------------------+---------------------------+--------------------|
 19789	|cfgetospeed(GLIBC_2.0)[8]   |lfind(GLIBC_2.0)[8]        |strptime(GLIBC_2.0) |
 19790	|                            |                           |[8]                 |
 19791	|----------------------------+---------------------------+--------------------|
 19792	|cfmakeraw(GLIBC_2.0)[5]     |link(GLIBC_2.0)[8]         |strrchr(GLIBC_2.0)  |
 19793	|                            |                           |[8]                 |
 19794	|----------------------------+---------------------------+--------------------|
 19795	|cfsetispeed(GLIBC_2.0)[8]   |listen(GLIBC_2.0)[7]       |strsep(GLIBC_2.0)[5]|
 19796	|----------------------------+---------------------------+--------------------|
 19797	|cfsetospeed(GLIBC_2.0)[8]   |llabs(GLIBC_2.0)[3]        |strsignal(GLIBC_2.0)|
 19798	|                            |                           |[5]                 |
 19799	|----------------------------+---------------------------+--------------------|
 19800	|cfsetspeed(GLIBC_2.0)[5]    |lldiv(GLIBC_2.0)[3]        |strspn(GLIBC_2.0)[8]|
 19801	|----------------------------+---------------------------+--------------------|
 19802	|chdir(GLIBC_2.0)[8]         |localeconv(GLIBC_2.0)[8]   |strstr(GLIBC_2.0)[8]|
 19803	|----------------------------+---------------------------+--------------------|
 19804	|chmod(GLIBC_2.0)[8]         |localtime(GLIBC_2.0)[8]    |strtod(GLIBC_2.0)[8]|
 19805	|----------------------------+---------------------------+--------------------|
 19806	|chown(GLIBC_2.1)[8]         |lockf(GLIBC_2.1)[8]        |strtof(GLIBC_2.1)[3]|
 19807	|----------------------------+---------------------------+--------------------|
 19808	|chroot(GLIBC_2.0)[8]        |lockf64(GLIBC_2.0)[4]      |strtoimax(GLIBC_2.0)|
 19809	|                            |                           |[3]                 |
 19810	|----------------------------+---------------------------+--------------------|
 19811	|clearerr(GLIBC_2.0)[8]      |longjmp(GLIBC_2.0)[8]      |strtok(GLIBC_2.0)[8]|
 19812	|----------------------------+---------------------------+--------------------|
 19813	|clock(GLIBC_2.0)[8]         |lrand48(GLIBC_2.0)[8]      |strtok_r(GLIBC_2.0) |
 19814	|                            |                           |[5]                 |
 19815	|----------------------------+---------------------------+--------------------|
 19816	|close(GLIBC_2.0)[8]         |lsearch(GLIBC_2.0)[8]      |strtol(GLIBC_2.0)[8]|
 19817	|----------------------------+---------------------------+--------------------|
 19818	|closedir(GLIBC_2.0)[8]      |lseek(GLIBC_2.0)[8]        |strtold(GLIBC_2.0)  |
 19819	|                            |                           |[3]                 |
 19820	|----------------------------+---------------------------+--------------------|
 19821	|closelog(GLIBC_2.0)[8]      |lseek64(GLIBC_2.0)[4]      |strtoll(GLIBC_2.0)  |
 19822	|                            |                           |[3]                 |
 19823	|----------------------------+---------------------------+--------------------|
 19824	|confstr(GLIBC_2.0)[8]       |makecontext(GLIBC_2.0)[8]  |strtoq(GLIBC_2.0)[5]|
 19825	|----------------------------+---------------------------+--------------------|
 19826	|connect(GLIBC_2.0)[7]       |malloc(GLIBC_2.0)[8]       |strtoul(GLIBC_2.0)  |
 19827	|                            |                           |[8]                 |
 19828	|----------------------------+---------------------------+--------------------|
 19829	|creat(GLIBC_2.0)[8]         |mblen(GLIBC_2.0)[8]        |strtoull(GLIBC_2.0) |
 19830	|                            |                           |[3]                 |
 19831	|----------------------------+---------------------------+--------------------|
 19832	|creat64(GLIBC_2.1)[4]       |mbrlen(GLIBC_2.1)[8]       |strtoumax(GLIBC_2.1)|
 19833	|                            |                           |[3]                 |
 19834	|----------------------------+---------------------------+--------------------|
 19835	|ctermid(GLIBC_2.0)[8]       |mbrtowc(GLIBC_2.0)[8]      |strtouq(GLIBC_2.0)  |
 19836	|                            |                           |[5]                 |
 19837	|----------------------------+---------------------------+--------------------|
 19838	|ctime(GLIBC_2.0)[8]         |mbsinit(GLIBC_2.0)[8]      |strverscmp          |
 19839	|                            |                           |(GLIBC_2.0)[5]      |
 19840	|----------------------------+---------------------------+--------------------|
 19841	|cuserid(GLIBC_2.0)[8]       |mbsnrtowcs(GLIBC_2.0)[5]   |strxfrm(GLIBC_2.0)  |
 19842	|                            |                           |[8]                 |
 19843	|----------------------------+---------------------------+--------------------|
 19844	|daemon(GLIBC_2.0)[5]        |mbsrtowcs(GLIBC_2.0)[8]    |swab(GLIBC_2.0)[8]  |
 19845	|----------------------------+---------------------------+--------------------|
 19846	|daylight(GLIBC_2.0)[8]      |mbstowcs(GLIBC_2.0)[8]     |swapcontext         |
 19847	|                            |                           |(GLIBC_2.0)[8]      |
 19848	|----------------------------+---------------------------+--------------------|
 19849	|dcgettext(GLIBC_2.0)[5]     |mbtowc(GLIBC_2.0)[8]       |swprintf(GLIBC_2.0) |
 19850	|                            |                           |[8]                 |
 19851	|----------------------------+---------------------------+--------------------|
 19852	|difftime(GLIBC_2.0)[8]      |memccpy(GLIBC_2.0)[8]      |swscanf(GLIBC_2.0)  |
 19853	|                            |                           |[3]                 |
 19854	|----------------------------+---------------------------+--------------------|
 19855	|dirname(GLIBC_2.0)[8]       |memchr(GLIBC_2.0)[8]       |symlink(GLIBC_2.0)  |
 19856	|                            |                           |[8]                 |
 19857	|----------------------------+---------------------------+--------------------|
 19858	|div(GLIBC_2.0)[8]           |memcmp(GLIBC_2.0)[8]       |sync(GLIBC_2.0)[8]  |
 19859	|----------------------------+---------------------------+--------------------|
 19860	|drand48(GLIBC_2.0)[8]       |memcpy(GLIBC_2.0)[8]       |sysconf(GLIBC_2.0)  |
 19861	|                            |                           |[8]                 |
 19862	|----------------------------+---------------------------+--------------------|
 19863	|dup(GLIBC_2.0)[8]           |memmem(GLIBC_2.0)[5]       |syslog(GLIBC_2.0)[8]|
 19864	|----------------------------+---------------------------+--------------------|
 19865	|dup2(GLIBC_2.0)[8]          |memmove(GLIBC_2.0)[8]      |system(GLIBC_2.0)[8]|
 19866	|----------------------------+---------------------------+--------------------|
 19867	|ecvt(GLIBC_2.0)[8]          |memrchr(GLIBC_2.0)[5]      |tcdrain(GLIBC_2.0)  |
 19868	|                            |                           |[8]                 |
 19869	|----------------------------+---------------------------+--------------------|
 19870	|endgrent(GLIBC_2.0)[8]      |memset(GLIBC_2.0)[8]       |tcflow(GLIBC_2.0)[8]|
 19871	|----------------------------+---------------------------+--------------------|
 19872	|endhostent(GLIBC_2.0)[7]    |mkdir(GLIBC_2.0)[8]        |tcflush(GLIBC_2.0)  |
 19873	|                            |                           |[8]                 |
 19874	|----------------------------+---------------------------+--------------------|
 19875	|endnetent(GLIBC_2.0)[7]     |mkfifo(GLIBC_2.0)[5]       |tcgetattr(GLIBC_2.0)|
 19876	|                            |                           |[8]                 |
 19877	|----------------------------+---------------------------+--------------------|
 19878	|endprotoent(GLIBC_2.0)[7]   |mkstemp(GLIBC_2.0)[8]      |tcgetpgrp(GLIBC_2.0)|
 19879	|                            |                           |[8]                 |
 19880	|----------------------------+---------------------------+--------------------|
 19881	|endpwent(GLIBC_2.0)[8]      |mkstemp64(GLIBC_2.0)[4]    |tcgetsid(GLIBC_2.0) |
 19882	|                            |                           |[8]                 |
 19883	|----------------------------+---------------------------+--------------------|
 19884	|endservent(GLIBC_2.0)[7]    |mktemp(GLIBC_2.0)[8]       |tcsendbreak         |
 19885	|                            |                           |(GLIBC_2.0)[8]      |
 19886	|----------------------------+---------------------------+--------------------|
 19887	|endutent(GLIBC_2.0)[8]      |mktime(GLIBC_2.0)[8]       |tcsetattr(GLIBC_2.0)|
 19888	|                            |                           |[8]                 |
 19889	|----------------------------+---------------------------+--------------------|
 19890	|endutxent(GLIBC_2.1)[8]     |mlock(GLIBC_2.1)[8]        |tcsetpgrp(GLIBC_2.1)|
 19891	|                            |                           |[8]                 |
 19892	|----------------------------+---------------------------+--------------------|
 19893	|erand48(GLIBC_2.0)[8]       |mlockall(GLIBC_2.0)[8]     |telldir(GLIBC_2.0)  |
 19894	|                            |                           |[8]                 |
 19895	|----------------------------+---------------------------+--------------------|
 19896	|err(GLIBC_2.0)[5]           |mmap(GLIBC_2.0)[8]         |tempnam(GLIBC_2.0)  |
 19897	|                            |                           |[8]                 |
 19898	|----------------------------+---------------------------+--------------------|
 19899	|error(GLIBC_2.0)[5]         |mmap64(GLIBC_2.0)[4]       |textdomain          |
 19900	|                            |                           |(GLIBC_2.0)[5]      |
 19901	|----------------------------+---------------------------+--------------------|
 19902	|errx(GLIBC_2.0)[5]          |mprotect(GLIBC_2.0)[8]     |tfind(GLIBC_2.0)[8] |
 19903	|----------------------------+---------------------------+--------------------|
 19904	|execl(GLIBC_2.0)[8]         |mrand48(GLIBC_2.0)[8]      |time(GLIBC_2.0)[8]  |
 19905	|----------------------------+---------------------------+--------------------|
 19906	|execle(GLIBC_2.0)[8]        |msgctl(GLIBC_2.0)[8]       |times(GLIBC_2.0)[8] |
 19907	|----------------------------+---------------------------+--------------------|
 19908	|execlp(GLIBC_2.0)[8]        |msgget(GLIBC_2.0)[8]       |tmpfile(GLIBC_2.0)  |
 19909	|                            |                           |[8]                 |
 19910	|----------------------------+---------------------------+--------------------|
 19911	|execv(GLIBC_2.0)[8]         |msgrcv(GLIBC_2.0)[8]       |tmpfile64(GLIBC_2.0)|
 19912	|                            |                           |[4]                 |
 19913	|----------------------------+---------------------------+--------------------|
 19914	|execve(GLIBC_2.0)[8]        |msgsnd(GLIBC_2.0)[8]       |tmpnam(GLIBC_2.0)[8]|
 19915	|----------------------------+---------------------------+--------------------|
 19916	|execvp(GLIBC_2.0)[8]        |msync(GLIBC_2.0)[8]        |toascii(GLIBC_2.0)  |
 19917	|                            |                           |[8]                 |
 19918	|----------------------------+---------------------------+--------------------|
 19919	|exit(GLIBC_2.0)[8]          |munlock(GLIBC_2.0)[8]      |tolower(GLIBC_2.0)  |
 19920	|                            |                           |[8]                 |
 19921	|----------------------------+---------------------------+--------------------|
 19922	|fchdir(GLIBC_2.0)[8]        |munlockall(GLIBC_2.0)[8]   |toupper(GLIBC_2.0)  |
 19923	|                            |                           |[8]                 |
 19924	|----------------------------+---------------------------+--------------------|
 19925	|fchmod(GLIBC_2.0)[8]        |munmap(GLIBC_2.0)[8]       |towctrans(GLIBC_2.0)|
 19926	|                            |                           |[8]                 |
 19927	|----------------------------+---------------------------+--------------------|
 19928	|fchown(GLIBC_2.0)[8]        |nanosleep(GLIBC_2.0)[8]    |towlower(GLIBC_2.0) |
 19929	|                            |                           |[3]                 |
 19930	|----------------------------+---------------------------+--------------------|
 19931	|fclose(GLIBC_2.1)[8]        |nftw(GLIBC_2.1)[8]         |towupper(GLIBC_2.1) |
 19932	|                            |                           |[8]                 |
 19933	|----------------------------+---------------------------+--------------------|
 19934	|fcntl(GLIBC_2.0)[8]         |nftw64(GLIBC_2.0)[4]       |truncate(GLIBC_2.0) |
 19935	|                            |                           |[8]                 |
 19936	|----------------------------+---------------------------+--------------------|
 19937	|fcvt(GLIBC_2.0)[8]          |nice(GLIBC_2.0)[8]         |truncate64          |
 19938	|                            |                           |(GLIBC_2.0)[4]      |
 19939	|----------------------------+---------------------------+--------------------|
 19940	|fdatasync(GLIBC_2.0)[8]     |nl_langinfo(GLIBC_2.0)[8]  |tsearch(GLIBC_2.0)  |
 19941	|                            |                           |[8]                 |
 19942	|----------------------------+---------------------------+--------------------|
 19943	|fdetach(GLIBC_2.1)[8]       |nrand48(GLIBC_2.1)[8]      |ttyname(GLIBC_2.1)  |
 19944	|                            |                           |[8]                 |
 19945	|----------------------------+---------------------------+--------------------|
 19946	|fdopen(GLIBC_2.1)[8]        |ntohl(GLIBC_2.1)[7]        |ttyname_r(GLIBC_2.1)|
 19947	|                            |                           |[8]                 |
 19948	|----------------------------+---------------------------+--------------------|
 19949	|feof(GLIBC_2.0)[8]          |ntohs(GLIBC_2.0)[7]        |twalk(GLIBC_2.0)[8] |
 19950	|----------------------------+---------------------------+--------------------|
 19951	|ferror(GLIBC_2.0)[8]        |obstack_free(GLIBC_2.0)[5] |tzname(GLIBC_2.0)[8]|
 19952	|----------------------------+---------------------------+--------------------|
 19953	|fflush(GLIBC_2.0)[8]        |open(GLIBC_2.0)[8]         |tzset(GLIBC_2.0)[8] |
 19954	|----------------------------+---------------------------+--------------------|
 19955	|fflush_unlocked(GLIBC_2.0)  |open64(GLIBC_2.0)[4]       |ualarm(GLIBC_2.0)[8]|
 19956	|[8]                         |                           |                    |
 19957	|----------------------------+---------------------------+--------------------|
 19958	|ffs(GLIBC_2.0)[8]           |opendir(GLIBC_2.0)[8]      |ulimit(GLIBC_2.0)[8]|
 19959	|----------------------------+---------------------------+--------------------|
 19960	|fgetc(GLIBC_2.0)[8]         |openlog(GLIBC_2.0)[8]      |umask(GLIBC_2.0)[8] |
 19961	|----------------------------+---------------------------+--------------------|
 19962	|fgetpos(GLIBC_2.0)[8]       |pathconf(GLIBC_2.0)[8]     |uname(GLIBC_2.0)[8] |
 19963	|----------------------------+---------------------------+--------------------|
 19964	|fgetpos64(GLIBC_2.1)[4]     |pause(GLIBC_2.1)[8]        |ungetc(GLIBC_2.1)[8]|
 19965	|----------------------------+---------------------------+--------------------|
 19966	|fgets(GLIBC_2.0)[8]         |pclose(GLIBC_2.0)[8]       |ungetwc(GLIBC_2.0)  |
 19967	|                            |                           |[3]                 |
 19968	|----------------------------+---------------------------+--------------------|
 19969	|fgetws(GLIBC_2.2)[3]        |perror(GLIBC_2.2)[8]       |unlink(GLIBC_2.2)[8]|
 19970	|----------------------------+---------------------------+--------------------|
 19971	|fileno(GLIBC_2.0)[8]        |pipe(GLIBC_2.0)[8]         |unlockpt(GLIBC_2.0) |
 19972	|                            |                           |[8]                 |
 19973	|----------------------------+---------------------------+--------------------|
 19974	|flock(GLIBC_2.0)[5]         |poll(GLIBC_2.0)[8]         |usleep(GLIBC_2.0)[8]|
 19975	|----------------------------+---------------------------+--------------------|
 19976	|flockfile(GLIBC_2.0)[8]     |popen(GLIBC_2.0)[8]        |utime(GLIBC_2.0)[8] |
 19977	|----------------------------+---------------------------+--------------------|
 19978	|fmtmsg(GLIBC_2.1)[8]        |pread(GLIBC_2.1)[8]        |utimes(GLIBC_2.1)[8]|
 19979	|----------------------------+---------------------------+--------------------|
 19980	|fnmatch(GLIBC_2.2.3)[8]     |printf(GLIBC_2.2.3)[8]     |vasprintf           |
 19981	|                            |                           |(GLIBC_2.2.3)[5]    |
 19982	|----------------------------+---------------------------+--------------------|
 19983	|fopen(GLIBC_2.1)[8]         |psignal(GLIBC_2.1)[5]      |vdprintf(GLIBC_2.1) |
 19984	|                            |                           |[5]                 |
 19985	|----------------------------+---------------------------+--------------------|
 19986	|fopen64(GLIBC_2.1)[4]       |ptsname(GLIBC_2.1)[8]      |verrx(GLIBC_2.1)[5] |
 19987	|----------------------------+---------------------------+--------------------|
 19988	|fork(GLIBC_2.0)[8]          |putc(GLIBC_2.0)[8]         |vfork(GLIBC_2.0)[8] |
 19989	|----------------------------+---------------------------+--------------------|
 19990	|fpathconf(GLIBC_2.0)[8]     |putc_unlocked(GLIBC_2.0)[8]|vfprintf(GLIBC_2.0) |
 19991	|                            |                           |[8]                 |
 19992	|----------------------------+---------------------------+--------------------|
 19993	|fprintf(GLIBC_2.0)[8]       |putchar(GLIBC_2.0)[8]      |vfwprintf(GLIBC_2.0)|
 19994	|                            |                           |[3]                 |
 19995	|----------------------------+---------------------------+--------------------|
 19996	|fputc(GLIBC_2.0)[8]         |putchar_unlocked(GLIBC_2.0)|vprintf(GLIBC_2.0)  |
 19997	|                            |[8]                        |[8]                 |
 19998	|----------------------------+---------------------------+--------------------|
 19999	|fputs(GLIBC_2.0)[8]         |putenv(GLIBC_2.0)[8]       |vsnprintf(GLIBC_2.0)|
 20000	|                            |                           |[8]                 |
 20001	|----------------------------+---------------------------+--------------------|
 20002	|fputwc(GLIBC_2.2)[3]        |putmsg(GLIBC_2.2)[8]       |vsprintf(GLIBC_2.2) |
 20003	|                            |                           |[8]                 |
 20004	|----------------------------+---------------------------+--------------------|
 20005	|fputws(GLIBC_2.2)[3]        |puts(GLIBC_2.2)[8]         |vswscanf(GLIBC_2.2) |
 20006	|                            |                           |[3]                 |
 20007	|----------------------------+---------------------------+--------------------|
 20008	|fread(GLIBC_2.0)[8]         |pututxline(GLIBC_2.0)[8]   |vwprintf(GLIBC_2.0) |
 20009	|                            |                           |[3]                 |
 20010	|----------------------------+---------------------------+--------------------|
 20011	|free(GLIBC_2.0)[8]          |putw(GLIBC_2.0)[8]         |vwscanf(GLIBC_2.0)  |
 20012	|                            |                           |[3]                 |
 20013	|----------------------------+---------------------------+--------------------|
 20014	|freopen(GLIBC_2.0)[8]       |putwc(GLIBC_2.0)[3]        |wait(GLIBC_2.0)[8]  |
 20015	|----------------------------+---------------------------+--------------------|
 20016	|freopen64(GLIBC_2.1)[4]     |putwchar(GLIBC_2.1)[3]     |wait3(GLIBC_2.1)[8] |
 20017	|----------------------------+---------------------------+--------------------|
 20018	|fscanf(GLIBC_2.0)[8]        |pwrite(GLIBC_2.0)[8]       |wait4(GLIBC_2.0)[5] |
 20019	|----------------------------+---------------------------+--------------------|
 20020	|fseek(GLIBC_2.0)[8]         |pwrite64(GLIBC_2.0)[4]     |waitid(GLIBC_2.0)[8]|
 20021	|----------------------------+---------------------------+--------------------|
 20022	|fseeko(GLIBC_2.1)[8]        |qsort(GLIBC_2.1)[8]        |waitpid(GLIBC_2.1)  |
 20023	|                            |                           |[8]                 |
 20024	|----------------------------+---------------------------+--------------------|
 20025	|fseeko64(GLIBC_2.1)[4]      |raise(GLIBC_2.1)[8]        |warn(GLIBC_2.1)[5]  |
 20026	|----------------------------+---------------------------+--------------------|
 20027	|fsetpos(GLIBC_2.0)[8]       |rand(GLIBC_2.0)[8]         |warnx(GLIBC_2.0)[5] |
 20028	|----------------------------+---------------------------+--------------------|
 20029	|fsetpos64(GLIBC_2.1)[4]     |random(GLIBC_2.1)[8]       |wcpcpy(GLIBC_2.1)[5]|
 20030	|----------------------------+---------------------------+--------------------|
 20031	|fstatfs(GLIBC_2.0)[5]       |re_comp(GLIBC_2.0)[8]      |wcpncpy(GLIBC_2.0)  |
 20032	|                            |                           |[5]                 |
 20033	|----------------------------+---------------------------+--------------------|
 20034	|fstatfs64(GLIBC_2.1)[4]     |re_exec(GLIBC_2.1)[8]      |wcrtomb(GLIBC_2.1)  |
 20035	|                            |                           |[8]                 |
 20036	|----------------------------+---------------------------+--------------------|
 20037	|fstatvfs(GLIBC_2.1)[8]      |read(GLIBC_2.1)[8]         |wcscasecmp          |
 20038	|                            |                           |(GLIBC_2.1)[5]      |
 20039	|----------------------------+---------------------------+--------------------|
 20040	|fstatvfs64(GLIBC_2.1)[4]    |readdir(GLIBC_2.1)[8]      |wcscat(GLIBC_2.1)[8]|
 20041	|----------------------------+---------------------------+--------------------|
 20042	|fsync(GLIBC_2.0)[8]         |readdir64(GLIBC_2.0)[4]    |wcschr(GLIBC_2.0)[8]|
 20043	|----------------------------+---------------------------+--------------------|
 20044	|ftell(GLIBC_2.0)[8]         |readlink(GLIBC_2.0)[8]     |wcscmp(GLIBC_2.0)[8]|
 20045	|----------------------------+---------------------------+--------------------|
 20046	|ftello(GLIBC_2.1)[8]        |readv(GLIBC_2.1)[8]        |wcscoll(GLIBC_2.1)  |
 20047	|                            |                           |[8]                 |
 20048	|----------------------------+---------------------------+--------------------|
 20049	|ftello64(GLIBC_2.1)[4]      |realloc(GLIBC_2.1)[8]      |wcscpy(GLIBC_2.1)[8]|
 20050	|----------------------------+---------------------------+--------------------|
 20051	|ftime(GLIBC_2.0)[8]         |realpath(GLIBC_2.0)[8]     |wcscspn(GLIBC_2.0)  |
 20052	|                            |                           |[8]                 |
 20053	|----------------------------+---------------------------+--------------------|
 20054	|ftok(GLIBC_2.0)[8]          |recv(GLIBC_2.0)[7]         |wcsdup(GLIBC_2.0)[5]|
 20055	|----------------------------+---------------------------+--------------------|
 20056	|ftruncate(GLIBC_2.0)[8]     |recvfrom(GLIBC_2.0)[7]     |wcsftime(GLIBC_2.0) |
 20057	|                            |                           |[3]                 |
 20058	|----------------------------+---------------------------+--------------------|
 20059	|ftruncate64(GLIBC_2.1)[4]   |recvmsg(GLIBC_2.1)[7]      |wcslen(GLIBC_2.1)[8]|
 20060	|----------------------------+---------------------------+--------------------|
 20061	|ftrylockfile(GLIBC_2.0)[8]  |regcomp(GLIBC_2.0)[8]      |wcsncasecmp         |
 20062	|                            |                           |(GLIBC_2.0)[5]      |
 20063	|----------------------------+---------------------------+--------------------|
 20064	|ftw(GLIBC_2.0)[8]           |regerror(GLIBC_2.0)[8]     |wcsncat(GLIBC_2.0)  |
 20065	|                            |                           |[8]                 |
 20066	|----------------------------+---------------------------+--------------------|
 20067	|ftw64(GLIBC_2.1)[4]         |regexec(GLIBC_2.1)[8]      |wcsncmp(GLIBC_2.1)  |
 20068	|                            |                           |[8]                 |
 20069	|----------------------------+---------------------------+--------------------|
 20070	|funlockfile(GLIBC_2.0)[8]   |regfree(GLIBC_2.0)[8]      |wcsncpy(GLIBC_2.0)  |
 20071	|                            |                           |[8]                 |
 20072	|----------------------------+---------------------------+--------------------|
 20073	|fwide(GLIBC_2.2)[3]         |remove(GLIBC_2.2)[8]       |wcsnlen(GLIBC_2.2)  |
 20074	|                            |                           |[5]                 |
 20075	|----------------------------+---------------------------+--------------------|
 20076	|fwprintf(GLIBC_2.2)[3]      |remque(GLIBC_2.2)[8]       |wcsnrtombs          |
 20077	|                            |                           |(GLIBC_2.2)[5]      |
 20078	|----------------------------+---------------------------+--------------------|
 20079	|fwrite(GLIBC_2.0)[8]        |rename(GLIBC_2.0)[8]       |wcspbrk(GLIBC_2.0)  |
 20080	|                            |                           |[3]                 |
 20081	|----------------------------+---------------------------+--------------------|
 20082	|fwscanf(GLIBC_2.2)[3]       |rewind(GLIBC_2.2)[8]       |wcsrchr(GLIBC_2.2)  |
 20083	|                            |                           |[8]                 |
 20084	|----------------------------+---------------------------+--------------------|
 20085	|gcvt(GLIBC_2.0)[8]          |rewinddir(GLIBC_2.0)[8]    |wcsrtombs(GLIBC_2.0)|
 20086	|                            |                           |[8]                 |
 20087	|----------------------------+---------------------------+--------------------|
 20088	|getc(GLIBC_2.0)[8]          |rindex(GLIBC_2.0)[8]       |wcsspn(GLIBC_2.0)[8]|
 20089	|----------------------------+---------------------------+--------------------|
 20090	|getc_unlocked(GLIBC_2.0)[8] |rmdir(GLIBC_2.0)[8]        |wcsstr(GLIBC_2.0)[8]|
 20091	|----------------------------+---------------------------+--------------------|
 20092	|getchar(GLIBC_2.0)[8]       |sbrk(GLIBC_2.0)[8]         |wcstod(GLIBC_2.0)[8]|
 20093	|----------------------------+---------------------------+--------------------|
 20094	|getchar_unlocked(GLIBC_2.0) |scanf(GLIBC_2.0)[8]        |wcstof(GLIBC_2.0)[3]|
 20095	|[8]                         |                           |                    |
 20096	|----------------------------+---------------------------+--------------------|
 20097	|getcontext(GLIBC_2.1)[8]    |sched_get_priority_max     |wcstoimax(GLIBC_2.1)|
 20098	|                            |(GLIBC_2.1)[8]             |[3]                 |
 20099	|----------------------------+---------------------------+--------------------|
 20100	|getcwd(GLIBC_2.0)[8]        |sched_get_priority_min     |wcstok(GLIBC_2.0)[8]|
 20101	|                            |(GLIBC_2.0)[8]             |                    |
 20102	|----------------------------+---------------------------+--------------------|
 20103	|getdate(GLIBC_2.1)[8]       |sched_getparam(GLIBC_2.1)  |wcstol(GLIBC_2.1)[8]|
 20104	|                            |[8]                        |                    |
 20105	|----------------------------+---------------------------+--------------------|
 20106	|getegid(GLIBC_2.0)[8]       |sched_getscheduler         |wcstold(GLIBC_2.0)  |
 20107	|                            |(GLIBC_2.0)[8]             |[3]                 |
 20108	|----------------------------+---------------------------+--------------------|
 20109	|getenv(GLIBC_2.0)[8]        |sched_rr_get_interval      |wcstoll(GLIBC_2.0)  |
 20110	|                            |(GLIBC_2.0)[8]             |[3]                 |
 20111	|----------------------------+---------------------------+--------------------|
 20112	|geteuid(GLIBC_2.0)[8]       |sched_setparam(GLIBC_2.0)  |wcstombs(GLIBC_2.0) |
 20113	|                            |[8]                        |[8]                 |
 20114	|----------------------------+---------------------------+--------------------|
 20115	|getgid(GLIBC_2.0)[8]        |sched_setscheduler         |wcstoq(GLIBC_2.0)[5]|
 20116	|                            |(GLIBC_2.0)[8]             |                    |
 20117	|----------------------------+---------------------------+--------------------|
 20118	|getgrent(GLIBC_2.0)[8]      |sched_yield(GLIBC_2.0)[8]  |wcstoul(GLIBC_2.0)  |
 20119	|                            |                           |[8]                 |
 20120	|----------------------------+---------------------------+--------------------|
 20121	|getgrgid(GLIBC_2.0)[8]      |seed48(GLIBC_2.0)[8]       |wcstoull(GLIBC_2.0) |
 20122	|                            |                           |[3]                 |
 20123	|----------------------------+---------------------------+--------------------|
 20124	|getgrnam(GLIBC_2.0)[8]      |seekdir(GLIBC_2.0)[8]      |wcstoumax(GLIBC_2.0)|
 20125	|                            |                           |[3]                 |
 20126	|----------------------------+---------------------------+--------------------|
 20127	|getgroups(GLIBC_2.0)[8]     |select(GLIBC_2.0)[7]       |wcstouq(GLIBC_2.0)  |
 20128	|                            |                           |[5]                 |
 20129	|----------------------------+---------------------------+--------------------|
 20130	|gethostbyaddr(GLIBC_2.0)[7] |semctl(GLIBC_2.0)[8]       |wcswcs(GLIBC_2.0)[8]|
 20131	|----------------------------+---------------------------+--------------------|
 20132	|gethostbyname(GLIBC_2.0)[5] |semget(GLIBC_2.0)[8]       |wcswidth(GLIBC_2.0) |
 20133	|                            |                           |[8]                 |
 20134	|----------------------------+---------------------------+--------------------|
 20135	|gethostid(GLIBC_2.0)[8]     |semop(GLIBC_2.0)[8]        |wcsxfrm(GLIBC_2.0)  |
 20136	|                            |                           |[8]                 |
 20137	|----------------------------+---------------------------+--------------------|
 20138	|gethostname(GLIBC_2.0)[7]   |send(GLIBC_2.0)[7]         |wctob(GLIBC_2.0)[8] |
 20139	|----------------------------+---------------------------+--------------------|
 20140	|getitimer(GLIBC_2.0)[8]     |sendmsg(GLIBC_2.0)[7]      |wctomb(GLIBC_2.0)[8]|
 20141	|----------------------------+---------------------------+--------------------|
 20142	|getloadavg(GLIBC_2.2)[5]    |sendto(GLIBC_2.2)[7]       |wctrans(GLIBC_2.2)  |
 20143	|                            |                           |[8]                 |
 20144	|----------------------------+---------------------------+--------------------|
 20145	|getlogin(GLIBC_2.0)[8]      |setbuf(GLIBC_2.0)[8]       |wctype(GLIBC_2.0)[8]|
 20146	|----------------------------+---------------------------+--------------------|
 20147	|getmsg(GLIBC_2.1)[8]        |setbuffer(GLIBC_2.1)[5]    |wcwidth(GLIBC_2.1)  |
 20148	|                            |                           |[8]                 |
 20149	|----------------------------+---------------------------+--------------------|
 20150	|getnetbyaddr(GLIBC_2.0)[7]  |setcontext(GLIBC_2.0)[8]   |wmemchr(GLIBC_2.0)  |
 20151	|                            |                           |[8]                 |
 20152	|----------------------------+---------------------------+--------------------|
 20153	|getopt(GLIBC_2.0)[8]        |setegid(GLIBC_2.0)[5]      |wmemcmp(GLIBC_2.0)  |
 20154	|                            |                           |[8]                 |
 20155	|----------------------------+---------------------------+--------------------|
 20156	|getopt_long(GLIBC_2.0)[5]   |seteuid(GLIBC_2.0)[5]      |wmemcpy(GLIBC_2.0)  |
 20157	|                            |                           |[8]                 |
 20158	|----------------------------+---------------------------+--------------------|
 20159	|getopt_long_only(GLIBC_2.0) |setgid(GLIBC_2.0)[8]       |wmemmove(GLIBC_2.0) |
 20160	|[5]                         |                           |[8]                 |
 20161	|----------------------------+---------------------------+--------------------|
 20162	|getpagesize(GLIBC_2.0)[8]   |setgrent(GLIBC_2.0)[8]     |wmemset(GLIBC_2.0)  |
 20163	|                            |                           |[8]                 |
 20164	|----------------------------+---------------------------+--------------------|
 20165	|getpeername(GLIBC_2.0)[7]   |setgroups(GLIBC_2.0)[5]    |wordexp(GLIBC_2.0)  |
 20166	|                            |                           |[8]                 |
 20167	|----------------------------+---------------------------+--------------------|
 20168	|getpgid(GLIBC_2.0)[8]       |sethostent(GLIBC_2.0)[7]   |wordfree(GLIBC_2.0) |
 20169	|                            |                           |[8]                 |
 20170	|----------------------------+---------------------------+--------------------|
 20171	|getpgrp(GLIBC_2.0)[8]       |sethostid(GLIBC_2.0)[5]    |wprintf(GLIBC_2.0)  |
 20172	|                            |                           |[3]                 |
 20173	|----------------------------+---------------------------+--------------------|
 20174	|getpid(GLIBC_2.0)[8]        |sethostname(GLIBC_2.0)[5]  |write(GLIBC_2.0)[8] |
 20175	|----------------------------+---------------------------+--------------------|
 20176	|getppid(GLIBC_2.0)[8]       |setitimer(GLIBC_2.0)[8]    |writev(GLIBC_2.0)[8]|
 20177	|----------------------------+---------------------------+--------------------|
 20178	|getpriority(GLIBC_2.0)[8]   |setlocale(GLIBC_2.0)[8]    |wscanf(GLIBC_2.0)[3]|
 20179	|----------------------------+---------------------------+--------------------|
 20180	|getprotobyname(GLIBC_2.0)[5]|setmntent(GLIBC_2.0)[5]    |                    |
 20181	+-----------------------------------------------------------------------------+
 20182	
 20183	Table A-17. libc Data Interfaces
 20184	
 20185	+-----------------------------------------------+
 20186	|_IO_2_1_stderr_[5] |_sys_errlist[5]|optarg[8]  |
 20187	|-------------------+---------------+-----------|
 20188	|_IO_2_1_stdin_[5]  |_sys_siglist[5]|opterr[5]  |
 20189	|-------------------+---------------+-----------|
 20190	|_IO_2_1_stdout_[5] |environ[8]     |optind[5]  |
 20191	|-------------------+---------------+-----------|
 20192	|__ctype_b[5]       |errno[8]       |optopt[5]  |
 20193	|-------------------+---------------+-----------|
 20194	|__ctype_tolower[5] |getdate_err[8] |stderr[8]  |
 20195	|-------------------+---------------+-----------|
 20196	|__ctype_toupper[5] |h_errno[7]     |stdin[8]   |
 20197	|-------------------+---------------+-----------|
 20198	|__environ[5]       |loc1[8]        |stdout[8]  |
 20199	|-------------------+---------------+-----------|
 20200	|_environ[5]        |loc2[8]        |timezone[8]|
 20201	|-------------------+---------------+-----------|
 20202	|_nl_msg_cat_cntr[5]|locs[8]        |           |
 20203	+-----------------------------------------------+
 20204	-------------------------------------------------------------------------------
 20205	
 20206	libpthread
 20207	
 20208	The behaviour of the interfaces in this library is specified by the following
 20209	Standards.
 20210	
 20211	Linux Standard Base
 20212	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
 20213	(ISBN: 1-85912-181-0, C606)
 20214	
 20215	Table A-18. libpthread Function Interfaces
 20216	
 20217	+------------------------------------------------------------------------------------+
 20218	|pthread_attr_destroy        |pthread_condattr_destroy |pthread_rwlock_tryrdlock     |
 20219	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |
 20220	|----------------------------+-------------------------+-----------------------------|
 20221	|pthread_attr_getdetachstate |pthread_condattr_init    |pthread_rwlock_trywrlock     |
 20222	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |
 20223	|----------------------------+-------------------------+-----------------------------|
 20224	|pthread_attr_getguardsize   |pthread_create(GLIBC_2.1)|pthread_rwlock_unlock        |
 20225	|(GLIBC_2.1)[12]             |[12]                     |(GLIBC_2.1)[12]              |
 20226	|----------------------------+-------------------------+-----------------------------|
 20227	|pthread_attr_getinheritsched|pthread_detach(GLIBC_2.0)|pthread_rwlock_wrlock        |
 20228	|(GLIBC_2.0)[12]             |[12]                     |(GLIBC_2.0)[12]              |
 20229	|----------------------------+-------------------------+-----------------------------|
 20230	|pthread_attr_getschedparam  |pthread_equal(GLIBC_2.0) |pthread_rwlockattr_destroy   |
 20231	|(GLIBC_2.0)[12]             |[12]                     |(GLIBC_2.0)[12]              |
 20232	|----------------------------+-------------------------+-----------------------------|
 20233	|pthread_attr_getschedpolicy |pthread_exit(GLIBC_2.0)  |pthread_rwlockattr_getpshared|
 20234	|(GLIBC_2.0)[12]             |[12]                     |(GLIBC_2.0)[12]              |
 20235	|----------------------------+-------------------------+-----------------------------|
 20236	|pthread_attr_getscope       |pthread_getschedparam    |pthread_rwlockattr_init      |
 20237	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |
 20238	|----------------------------+-------------------------+-----------------------------|
 20239	|pthread_attr_getstackaddr   |pthread_getspecific      |pthread_rwlockattr_setpshared|
 20240	|(GLIBC_2.1)[12]             |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]              |
 20241	|----------------------------+-------------------------+-----------------------------|
 20242	|pthread_attr_getstacksize   |pthread_join(GLIBC_2.1)  |pthread_self(GLIBC_2.1)[12]  |
 20243	|(GLIBC_2.1)[12]             |[12]                     |                             |
 20244	|----------------------------+-------------------------+-----------------------------|
 20245	|pthread_attr_init(GLIBC_2.1)|pthread_key_create       |pthread_setcancelstate       |
 20246	|[12]                        |(GLIBC_2.1)[12]          |(GLIBC_2.1)[12]              |
 20247	|----------------------------+-------------------------+-----------------------------|
 20248	|pthread_attr_setdetachstate |pthread_key_delete       |pthread_setcanceltype        |
 20249	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |
 20250	|----------------------------+-------------------------+-----------------------------|
 20251	|pthread_attr_setguardsize   |pthread_kill(GLIBC_2.1)  |pthread_setschedparam        |
 20252	|(GLIBC_2.1)[12]             |[12]                     |(GLIBC_2.1)[12]              |
 20253	|----------------------------+-------------------------+-----------------------------|
 20254	|pthread_attr_setinheritsched|pthread_mutex_destroy    |pthread_setspecific          |
 20255	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |(GLIBC_2.0)[12]              |
 20256	|----------------------------+-------------------------+-----------------------------|
 20257	|pthread_attr_setschedparam  |pthread_mutex_init       |pthread_sigmask(GLIBC_2.0)   |
 20258	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |[12]                         |
 20259	|----------------------------+-------------------------+-----------------------------|
 20260	|pthread_attr_setschedpolicy |pthread_mutex_lock       |pthread_testcancel(GLIBC_2.0)|
 20261	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |[12]                         |
 20262	|----------------------------+-------------------------+-----------------------------|
 20263	|pthread_attr_setscope       |pthread_mutex_trylock    |sem_close(GLIBC_2.0)[12]     |
 20264	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |                             |
 20265	|----------------------------+-------------------------+-----------------------------|
 20266	|pthread_attr_setstackaddr   |pthread_mutex_unlock     |sem_destroy(GLIBC_2.1)[12]   |
 20267	|(GLIBC_2.1)[12]             |(GLIBC_2.1)[12]          |                             |
 20268	|----------------------------+-------------------------+-----------------------------|
 20269	|pthread_attr_setstacksize   |pthread_mutexattr_destroy|sem_getvalue(GLIBC_2.1)[12]  |
 20270	|(GLIBC_2.1)[12]             |(GLIBC_2.1)[12]          |                             |
 20271	|----------------------------+-------------------------+-----------------------------|
 20272	|pthread_cancel(GLIBC_2.0)   |pthread_mutexattr_gettype|sem_init(GLIBC_2.0)[12]      |
 20273	|[12]                        |(GLIBC_2.0)[12]          |                             |
 20274	|----------------------------+-------------------------+-----------------------------|
 20275	|pthread_cond_broadcast      |pthread_mutexattr_init   |sem_open(GLIBC_2.0)[12]      |
 20276	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |                             |
 20277	|----------------------------+-------------------------+-----------------------------|
 20278	|pthread_cond_destroy        |pthread_mutexattr_settype|sem_post(GLIBC_2.0)[12]      |
 20279	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |                             |
 20280	|----------------------------+-------------------------+-----------------------------|
 20281	|pthread_cond_init(GLIBC_2.0)|pthread_once(GLIBC_2.0)  |sem_timedwait(GLIBC_2.0)[11] |
 20282	|[12]                        |[12]                     |                             |
 20283	|----------------------------+-------------------------+-----------------------------|
 20284	|pthread_cond_signal         |pthread_rwlock_destroy   |sem_trywait(GLIBC_2.0)[12]   |
 20285	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |                             |
 20286	|----------------------------+-------------------------+-----------------------------|
 20287	|pthread_cond_timedwait      |pthread_rwlock_init      |sem_unlink(GLIBC_2.0)[12]    |
 20288	|(GLIBC_2.0)[12]             |(GLIBC_2.0)[12]          |                             |
 20289	|----------------------------+-------------------------+-----------------------------|
 20290	|pthread_cond_wait(GLIBC_2.0)|pthread_rwlock_rdlock    |sem_wait(GLIBC_2.0)[12]      |
 20291	|[12]                        |(GLIBC_2.0)[12]          |                             |
 20292	+------------------------------------------------------------------------------------+
 20293	-------------------------------------------------------------------------------
 20294	
 20295	librt
 20296	
 20297	The behaviour of the interfaces in this library is specified by the following
 20298	Standards.
 20299	
 20300	Large File Support
 20301	CAE Specification, January 1997, System Interfaces and Headers (XSH), Issue 5
 20302	(ISBN: 1-85912-181-0, C606)
 20303	
 20304	Table A-19. librt Function Interfaces
 20305	
 20306	+-----------------------------------------------------------------------------+
 20307	|aio_cancel(GLIBC_2.1) |aio_return(GLIBC_2.1)[17]   |clock_gettime(GLIBC_2.1) |
 20308	|[17]                  |                            |[17]                     |
 20309	|----------------------+----------------------------+-------------------------|
 20310	|aio_cancel64          |aio_return64(GLIBC_2.1)[16] |clock_nanosleep          |
 20311	|(GLIBC_2.1)[16]       |                            |(GLIBC_2.1)[17]          |
 20312	|----------------------+----------------------------+-------------------------|
 20313	|aio_error(GLIBC_2.1)  |aio_suspend(GLIBC_2.1)[17]  |clock_settime(GLIBC_2.1) |
 20314	|[17]                  |                            |[17]                     |
 20315	|----------------------+----------------------------+-------------------------|
 20316	|aio_error64(GLIBC_2.1)|aio_suspend64(GLIBC_2.1)[16]|lio_listio(GLIBC_2.1)[17]|
 20317	|[16]                  |                            |                         |
 20318	|----------------------+----------------------------+-------------------------|
 20319	|aio_fsync(GLIBC_2.1)  |aio_write(GLIBC_2.1)[17]    |lio_listio64(GLIBC_2.1)  |
 20320	|[17]                  |                            |[16]                     |
 20321	|----------------------+----------------------------+-------------------------|
 20322	|aio_fsync64(GLIBC_2.1)|aio_write64(GLIBC_2.1)[16]  |shm_open(GLIBC_2.1)[17]  |
 20323	|[16]                  |                            |                         |
 20324	|----------------------+----------------------------+-------------------------|
 20325	|aio_read(GLIBC_2.1)   |clock_getcpuclockid         |shm_unlink(GLIBC_2.1)[17]|
 20326	|[17]                  |(GLIBC_2.1)[17]             |                         |
 20327	|----------------------+----------------------------+-------------------------|
 20328	|aio_read64(GLIBC_2.1) |clock_getres(GLIBC_2.1)[17] |                         |
 20329	|[16]                  |                            |                         |
 20330	+-----------------------------------------------------------------------------+
 20331	-------------------------------------------------------------------------------
 20332	
 20333	Appendix B. How To Create An LSB Compliant Application
 20334	
 20335	Application Binary Interface
 20336	
 20337	The Linux Standard Base (LSB) defines and tests a Binary Application Interface
 20338	(ABI) for the GNU/Linux operating system. This ABI protects an application from
 20339	the intricacies of the operating system by providing a consistent layer of APIs
 20340	& libraries for an application to interface instead of the system primitives.
 20341	
 20342	This ABI definition, testing, and certification is what comprises the LSB
 20343	standard.
 20344	
 20345	Table B-1. ABI: High Level View
 20346	
 20347	+--------------------------------------------------+
 20348	|+------------------------------------------------+|
 20349	||Application[1]|Application[2]|...|Application[N]||
 20350	|+------------------------------------------------+|
 20351	|--------------------------------------------------|
 20352	|           Application Binary Interface           |
 20353	|--------------------------------------------------|
 20354	|                   Linux Kernel                   |
 20355	|--------------------------------------------------|
 20356	|                Hardware Platform                 |
 20357	+--------------------------------------------------+
 20358	
 20359	Table B-2. ABI: Component View
 20360	
 20361	+------------------------------------------------------------+
 20362	|+------------------------------------------------+          |
 20363	||Application[1]|Application[2]|...|Application[N]|          |
 20364	|+------------------------------------------------+          |
 20365	|------------------------------------------------------------|
 20366	|+----------------------------------------------------------+|
 20367	||System Interfaces|Auxiliary Interfaces|Graphics Interfaces||
 20368	|+----------------------------------------------------------+|
 20369	|------------------------------------------------------------|
 20370	|                        Linux Kernel                        |
 20371	|------------------------------------------------------------|
 20372	|                     Hardware Platform                      |
 20373	+------------------------------------------------------------+
 20374	
 20375	-------------------------------------------------------------------------------
 20376	
 20377	Application Programming Interface
 20378	
 20379	The LSB's ABI defines a set of Application Programming Interfaces (APIs) that
 20380	are grouped into reusable modular libraries. This set of LSB defined libraries
 20381	provide the working set of APIs for applications to use to access the operating
 20382	system.
 20383	
 20384	System Interfaces
 20385	
 20386	  * System Interfaces (libc)
 20387	
 20388	  * Math (libm)
 20389	
 20390	  * Dynamic Loader (libdl)
 20391	
 20392	  * Encryption (libcrypt)
 20393	
 20394	  * pThreads (libpthreads)
 20395	
 20396	  * Asynchronous I/O (librt)
 20397	
 20398	Auxiliary Interfaces
 20399	
 20400	  * Compression (libz)
 20401	
 20402	  * Utility Functions (libutil)
 20403	
 20404	  * Curses (libcurses)
 20405	
 20406	Graphics Interfaces
 20407	
 20408	  * X Window System (libX11)
 20409	
 20410	  * X11 Extension (libXext)
 20411	
 20412	  * X11 Intrinsics (libXt)
 20413	
 20414	  * X11 Session Mgnt. (libSM)
 20415	
 20416	  * X11 Inter-Client Exchange (libICE)
 20417	
 20418	  * GL 3D Graphics (libGL)
 20419	
 20420	-------------------------------------------------------------------------------
 20421	
 20422	LSB Compliance
 20423	
 20424	Programmers who wish to produce binary applications that will run on any
 20425	LSB-conforming implementation should follow this procedure:
 20426	
 20427	 1. Link your binary application with the LSB's stub libraries found in /usr/
 20428	    lsb/lib to determine at compile time if your application is using only LSB
 20429	    defined APIs.
 20430	
 20431	 2. Link your binary application with the LSB /lib/ld-lsb.so.1 dynamic linker/
 20432	    loader.
 20433	
 20434	 3. Verify your binary application with the LSB's /usr/bin/lsbappchk tool to
 20435	    determine at runtime if your application is using only LSB defined APIs.
 20436	
 20437	-------------------------------------------------------------------------------
 20438	
 20439	LSB Setup and Environment
 20440	
 20441	There is an LSB development environment, lsbdev, with compile time stub
 20442	libraries, and there is an LSB loader, ld-lsb.so.1, that needs to be installed.
 20443	Follow the example below to install these LSB tools.
 20444	
 20445	$ rpm -i ftp://lsb.sourceforge.net/pub/lsb/lsbdev/lsbdev-1.0.i386.rpm
 20446	
 20447	Download LSB-addon-newest.tar.gz from http://www.linuxbase.org/impl/ (for
 20448	example) in the /tmp directory and install it:
 20449	
 20450	$ cd  /
 20451	$ tar xzvf /tmp/LSB-addon-newest.tar.gz
 20452	-------------------------------------------------------------------------------
 20453	
 20454	LSB Compliance Example
 20455	
 20456	Create a simple "hello world" program.
 20457	
 20458	cat > hw.c << FILE
 20459	
 20460	&include <stdio.h>
 20461	
 20462	int
 20463	main(int argc, char *argv[]) {
 20464	        printf("Hello World\n");
 20465	}
 20466	
 20467	FILE
 20468	
 20469	Compile the "hello world" program and link it with the LSB loader and
 20470	libraries.
 20471	
 20472	$ gcc -o hw -Wall hw.c -L/usr/lib/lsb -Wl,--dynamic-linker=/lib/ld-lsb.so.1
 20473	
 20474	Test to see if the "hello world" program works.
 20475	
 20476	$ ./hw
 20477	
 20478	  Hello World
 20479	
 20480	Test to see if the "hello world" program is using the LSB loader and libraries.
 20481	
 20482	$ ldd hw
 20483	
 20484	  libc.so.6 => /lib/lsb/libc.so.6
 20485	  /lib/ld-lsb.so.1 => /lib/ld-lsb.so.1
 20486	
 20487	Test of see if the "hello world" program is LSB compliant.
 20488	
 20489	$ lsbappchk hw
 20490	
 20491	If there is any output from lsbappchk, then it detected API calls that are not
 20492	specified by the LSB.
 20493	
 20494	To correct this, the programmer has the following options:
 20495	
 20496	To satisfy this API calls link these functions statically (last resort for SUID
 20497	/SGID programms). To make this less annoying, we recommend to concentrate the
 20498	privileged activity (e.g. opening port 80 for a web server) on a small binary,
 20499	which is called by a non privileged binary and can do its work after the small
 20500	SUID/GID binary has done its job.
 20501	
 20502	Supply a vendor private dynamic library. When linking, explicitly add this
 20503	library path with the -rpath linker option. Applications should be aware that
 20504	using -rpath makes it difficult/impossible to ship a package which can be
 20505	installed in more than one location.
 20506	
 20507	Supply a vendor private dynamic library and get it loaded at runtime by setting
 20508	the Environment variable LD_LIBRARY_PATH. This will not work with SUID/SGID
 20509	programms.
 20510	
 20511	-------------------------------------------------------------------------------
 20512	
 20513	LSB Non-Compliance Example
 20514	
 20515	Create a simple "domain name" program.
 20516	
 20517	cat > dn.c << FILE
 20518	
 20519	&include <stdio.h>
 20520	&include <unistd.h>
 20521	
 20522	int
 20523	main(int argc, char *argv[]) {
 20524	        char domain[BUFSIZ];
 20525	        int rc;
 20526	
 20527	        rc = call_my_non_lsb_getdomainname((char *)&domain, BUFSIZ);
 20528	
 20529	        if (0 == rc) {
 20530	                printf("domainname is: %s\n", domain);
 20531	        }
 20532	
 20533	}
 20534	
 20535	FILE
 20536	
 20537	Compile the "domain name" program and link it with the LSB loader and
 20538	libraries.
 20539	
 20540	$ gcc -o dn -Wall dn.c -L/usr/lib/lsb -Wl,--dynamic-linker=/lib/ld-lsb.so.1
 20541	
 20542	  domain.c: In function `main':
 20543	  domain.c:14: warning: control reaches end of non-void function
 20544	  /tmp/ccHpOeFD.o: In function `main':
 20545	  /tmp/ccHpOeFD.o(.text+0x16): undefined reference to `call_my_non_lsb_getdomainname'
 20546	  collect2: ld returned 1 exit status
 20547	
 20548	The dn.c failed to link with the LSB filters libraries, because the API
 20549	call_my_non_lsb_getdomainname is not defined.
 20550	
 20551	Let's assume that we were able to compile & link some libraries, and be using
 20552	the correct LSB loader. Test to verify with lsbappchk if the domain name
 20553	application is using only LSB specified APIs.
 20554	
 20555	$ lsbappchk hw
 20556	
 20557	  call_my_non_lsb_getdomainname
 20558	
 20559	The LSB's lsbappchk outputed call_my_non_lsb_getdomainname, so it detected an
 20560	API call that is not specified by the LSB. To correct this, the application
 20561	should discontinue the use of those APIs, or a trouble report should be sent to
 20562	the LSB.
 20563	
 20564	Notes
 20565	
 20566	[1]  It seems to be possible, using existing Linux development tools, to write
 20567	     an application in C++ which complies with this rule by linking statically
 20568	     with libstdc++ and all other libraries containing C++. The following
 20569	     command illustrates how this may be accomplished:
 20570	
 20571	     g++ example.cc -Wl,-Bdynamic,-lc,-Bstatic
 20572	
 20573	[2]  Symbol versions are unique for each architecture. In release 1.0 of this
 20574	     specification, the versions for only the IA32 architecture are specified.
 20575	     Versions will be correctly specified on a per achitecture basis in future
 20576	     releases of the specification.
 20577	
 20578	[3]  ISO/IEC 9899: 1999, Programming Languages --C
 20579	
 20580	[4]  Large File Support
 20581	
 20582	[5]  Linux Standard Base
 20583	
 20584	[6]  IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996]
 20585	
 20586	[7]  CAE Specification, February 1997, Networking Services (XNS), Issue 5
 20587	     (ISBN: 1-85912-165-9, C523)
 20588	
 20589	[8]  CAE Specification, January 1997, System Interfaces and Headers (XSH),
 20590	     Issue 5 (ISBN: 1-85912-181-0, C606)
 20591	
 20592	[9]  ISO/IEC 9899: 1999, Programming Languages --C
 20593	
 20594	[10] CAE Specification, January 1997, System Interfaces and Headers (XSH),
 20595	     Issue 5 (ISBN: 1-85912-181-0, C606)
 20596	
 20597	[11] Linux Standard Base
 20598	
 20599	[12] CAE Specification, January 1997, System Interfaces and Headers (XSH),
 20600	     Issue 5 (ISBN: 1-85912-181-0, C606)
 20601	
 20602	[13] Linux Standard Base
 20603	
 20604	[14] CAE Specification, January 1997, System Interfaces and Headers (XSH),
 20605	     Issue 5 (ISBN: 1-85912-181-0, C606)
 20606	
 20607	[15] CAE Specification, January 1997, System Interfaces and Headers (XSH),
 20608	     Issue 5 (ISBN: 1-85912-181-0, C606)
 20609	
 20610	[16] Large File Support
 20611	
 20612	[17] CAE Specification, January 1997, System Interfaces and Headers (XSH),
 20613	     Issue 5 (ISBN: 1-85912-181-0, C606)
 20614	
 20615	[18] zlib 1.1.3 Manual
 20616	
 20617	[19] CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:
 20618	     1-85912-171-3, C610), plus Corrigendum U018
 20619	
 20620	[20] Linux Standard Base
 20621	
 20622	[21] X11R6.4 Xlib - C library
 20623	
 20624	[22] Double Buffer Extension Library
 20625	
 20626	[23] X Display Power Management Signaling (DPMS) Extension, Library
 20627	     Specification
 20628	
 20629	[24] Security Extension Specification, Version 7.1
 20630	
 20631	[25] X Nonrectangular Window Shape Extension Library Version 1.0
 20632	
 20633	[26] MIT-SHM--The MIT Shared Memory Extension
 20634	
 20635	[27] X Synchronization Extension Library
 20636	
 20637	[28] X11R6.4 X Session Management Library
 20638	
 20639	[29] X11R6.4 X Inter-Client Exchange (ICE) Protocol
 20640	
 20641	[30] Linux Standard Base
 20642	
 20643	[31] X11R.4 X Toolkit Intrinsics
 20644	
 20645	[32] OpenGL® Application Binary Interface for Linux
 20646	
 20647	[33] Some versions of RPM may produce packages which contain extensions or
 20648	     modifications to the RPM package format beyond what has been documented in
 20649	     the appendix of the Maximum RPM book. An LSB conformant package must not
 20650	     contain any of these extensions, in order to assure interoperability with
 20651	     the largest number of versions of RPM and packaging systems which
 20652	     understand how to import RPM format packages.
 20653	
 20654	[34] The distribution itself may use a different packaging format for its own
 20655	     packages, and of course it may use any mechanism for installing the LSB
 20656	     conformant packages that is available.
 20657	
 20658	[35] Linux Standard Base
 20659	
 20660	[36] CAE Specification, January 1997, Commands and Utilities (XCU), Issue 5
 20661	     (ISBN: 1-85912-191-8, C604)
 20662	
 20663	[37] dot is a special built-in utility
 20664	
 20665	[38] This specification does not require, but is designed to allow, the
 20666	     development of a system which runs boot scripts in parallel. Hence,
 20667	     enforced serialization of scripts are avoided unless they are explicitly
 20668	     necessary.
 20669	
