Linux Standard Base Common Definitions

   LSB Common 5.0 Edition

   Copyright © 2015 Linux Foundation

   Permission is granted to copy, distribute and/or modify this
   document under the terms of the GNU Free Documentation License,
   Version 1.1; with no Invariant Sections, with no Front-Cover
   Texts, and with no Back-Cover Texts. A copy of the license is
   included in the section entitled "GNU Free Documentation
   License".

   Portions of the text may be copyrighted by the following
   parties:

     * The Regents of the University of California
     * Free Software Foundation
     * Ian F. Darwin
     * Paul Vixie
     * BSDI (now Wind River)
     * Jean-loup Gailly and Mark Adler
     * Massachusetts Institute of Technology
     * Apple Inc.
     * Easy Software Products
     * artofcode LLC
     * Till Kamppeter
     * Manfred Wassman
     * Python Software Foundation

   These excerpts are being used in accordance with their
   respective licenses.

   Linux is the registered trademark of Linus Torvalds in the U.S.
   and other countries.

   UNIX is a registered trademark of The Open Group.

   LSB is a trademark of the Linux Foundation in the United States
   and other countries.

   AMD is a trademark of Advanced Micro Devices, Inc.

   Intel and Itanium are registered trademarks and Intel386 is a
   trademark of Intel Corporation.

   PowerPC is a registered trademark and PowerPC Architecture is a
   trademark of the IBM Corporation.

   S/390 is a registered trademark of the IBM Corporation.

   OpenGL is a registered trademark of Silicon Graphics, Inc.

   PAM documentation is Copyright (C) Andrew G. Morgan 1996-9. All
   rights reserved. Used under the following conditions:

    1. Redistributions of source code must retain the above
       copyright notice, and the entire permission notice in its
       entirety, including the disclaimer of warranties.
    2. Redistributions in binary form must reproduce the above
       copyright notice, this list of conditions and the following
       disclaimer in the documentation and/or other materials
       provided with the distribution.
    3. The name of the author may not be used to endorse or
       promote products derived from this software without
       specific prior written permission.
     __________________________________________________________
     __________________________________________________________

Dedication

   This release is dedicated to the memory of Christopher Yeoh, a
   long-time friend and colleague, and a contributor to LSB from
   the earliest days. Without his dedication this work would not
   have been possible.

   Table of Contents
   Foreword
   Status of this Document
   Introduction
   I. Introductory Elements

        1. Scope

              1.1. General

        2. Requirements

              2.1. Relevant Libraries
              2.2. Relevant Commands
              2.3. LSB Implementation Conformance
              2.4. LSB Application Conformance

        3. Terms and Definitions
        4. Documentation Conventions
        5. Relationship To ISO/IEC 9945 POSIX
        6. Relationship To Other Linux Foundation Specifications

   A. GNU Free Documentation License (Informative)

        A.1. PREAMBLE
        A.2. APPLICABILITY AND DEFINITIONS
        A.3. VERBATIM COPYING
        A.4. COPYING IN QUANTITY
        A.5. MODIFICATIONS
        A.6. COMBINING DOCUMENTS
        A.7. COLLECTIONS OF DOCUMENTS
        A.8. AGGREGATION WITH INDEPENDENT WORKS
        A.9. TRANSLATION
        A.10. TERMINATION
        A.11. FUTURE REVISIONS OF THIS LICENSE
        A.12. How to use this License for your documents

   List of Tables
   2-1. LSB Core Module Library Names
   2-2. LSB Core Module Library Names which vary by architecture
   2-3. LSB Desktop Module Library Names
   2-4. LSB Imaging Module Library Names
   2-5. LSB Languages Module Library Names
   2-6. LSB Core Module Command Names
   2-7. LSB Desktop Module Command Names
   2-8. LSB Imaging Module Command Names
   2-9. LSB Languages Module Command Names
     __________________________________________________________

Foreword

   This is version 5.0 of the Linux Standard Base Common
   Definitions. This specification is one of a series of volumes
   under the collective title Linux Standard Base:

     * Common
     * Core
     * Desktop
     * Languages
     * Imaging

   Note that the Core and Desktop volumes consist of a generic
   volume augmented by an architecture-specific volume.
     __________________________________________________________

Status of this Document

   This is a released specification, version 5.0. Other documents
   may supersede or augment this specification.

   A list of current released Linux Standard Base (LSB)
   specifications is available at http://refspecs.linuxbase.org.

   If you wish to make comments regarding this document in a
   manner that is tracked by the LSB project, please submit them
   using our public bug database at http://bugs.linuxbase.org.
   Please enter your feedback, carefully indicating the title of
   the section for which you are submitting feedback, and the
   volume and version of the specification where you found the
   problem, quoting the incorrect text if appropriate. If you are
   suggesting a new feature, please indicate what the problem you
   are trying to solve is. That is more important than the
   solution, in fact.

   If you do not have or wish to create a bug database account
   then you can also e-mail feedback to
   <lsb-discuss@lists.linuxfoundation.org> (subscribe, archives),
   and arrangements will be made to transpose the comments to our
   public bug database.
     __________________________________________________________

Introduction

   The LSB defines a binary interface for application programs
   that are compiled and packaged for LSB-conforming
   implementations on many different hardware architectures. A
   binary specification must include information specific to the
   computer processor architecture for which it is intended. To
   avoid the complexity of conditional descriptions, the
   specification has instead been divided into generic parts which
   are augmented by one of several architecture-specific parts,
   depending on the target processor architecture; the generic
   part will indicate when reference must be made to the
   architecture part, and vice versa.

   This document should be used in conjunction with the documents
   it references. This document enumerates the system components
   it includes, but descriptions of those components may be
   included entirely or partly in this document, partly in other
   documents, or entirely in other reference documents. For
   example, the section that describes system service routines
   includes a list of the system routines supported in this
   interface, formal declarations of the data structures they use
   that are visible to applications, and a pointer to the
   underlying referenced specification for information about the
   syntax and semantics of each call. Only those routines not
   described in standards referenced by this document, or
   extensions to those standards, are described in the detail.
   Information referenced in this way is as much a part of this
   document as is the information explicitly included here.

   The specification carries a version number of either the form
   x.y or x.y.z. This version number carries the following
   meaning:

    1. The first number (x) is the major version number. Versions
       sharing the same major version number shall be compatible
       in a backwards direction; that is, a newer version shall be
       compatible with an older version. Any deletion of a library
       results in a new major version number. Interfaces marked as
       deprecated may be removed from the specification at a major
       version change.
    2. The second number (y) is the minor version number.
       Libraries and individual interfaces may be added, but not
       removed. Interfaces may be marked as deprecated at a minor
       version change. Other minor changes may be permitted at the
       discretion of the LSB workgroup.
    3. The third number (z), if present, is the editorial level.
       Only editorial changes should be included in such versions.

   Since this specification is a descriptive Application Binary
   Interface, and not a source level API specification, it is not
   possible to make a guarantee of 100% backward compatibility
   between major releases. However, it is the intent that those
   parts of the binary interface that are visible in the source
   level API will remain backward compatible from version to
   version, except where a feature marked as "Deprecated" in one
   release may be removed from a future release. Implementors are
   strongly encouraged to make use of symbol versioning to permit
   simultaneous support of applications conforming to different
   releases of this specification.

   LSB is a trademark of the Linux Foundation. Developers of
   applications or implementations interested in using the
   trademark should see the Linux Foundation Certification Policy
   for details.

I. Introductory Elements

   Table of Contents
   1. Scope

        1.1. General

   2. Requirements

        2.1. Relevant Libraries
        2.2. Relevant Commands
        2.3. LSB Implementation Conformance
        2.4. LSB Application Conformance

   3. Terms and Definitions
   4. Documentation Conventions
   5. Relationship To ISO/IEC 9945 POSIX
   6. Relationship To Other Linux Foundation Specifications
     __________________________________________________________

Chapter 1. Scope

1.1. General

   The Linux Standard Base (LSB) defines a system interface for
   compiled applications and a minimal environment for support of
   installation scripts. Its purpose is to enable a uniform
   industry standard environment for high-volume applications
   conforming to the LSB.

   The LSB specification set is divided into modules, each of
   which provides fundamental system interfaces, libraries, and
   runtime environment upon which all conforming applications and
   libraries using that module depend.

   The modules of the Linux Standard Base are:

     * LSB Core - core components
     * LSB Desktop - desktop related components
     * LSB Languages - runtime languages
     * LSB Imaging - printing and scanning
     * LSB Trial Use - components that are not yet mandatory

   Interfaces described in the LSB Core module specification are
   supplemented by other LSB module specifications. All other
   modules depend on the presence of LSB Core.

   These specifications are composed of two basic parts: a common
   part describing those parts of the interface that remain
   constant across all implementations of the LSB, and an
   architecture-specific part describing the parts of the
   interface that vary by processor architecture. Together, the
   common part and the relevant architecture-specific part for a
   single hardware architecture provide a complete interface
   specification for compiled application programs on systems that
   share a common hardware architecture. Whenever a section of the
   common part is supplemented by architecture-specific
   information, the common part includes a reference to the
   architecture-specific part. Architecture-specific parts of of
   an LSB module specification may also contain additional
   information that is not referenced in the common part.

   The LSB contains both a set of Application Program Interfaces
   (APIs) and Application Binary Interfaces (ABIs). APIs may
   appear in the source code of portable applications, while the
   compiled binary of that application may use the larger set of
   ABIs. A conforming implementation provides all of the ABIs
   listed here. The compilation system may replace (e.g. by macro
   definition) certain APIs with calls to one or more of the
   underlying binary interfaces, and may insert calls to binary
   interfaces as needed.

   The LSB is primarily a binary interface definition. Not all of
   the source level APIs available to applications may be
   contained in this specification.
     __________________________________________________________

Chapter 2. Requirements

2.1. Relevant Libraries

   The libraries listed in the following tables shall be available
   on a Linux Standard Base system, with the specified runtime
   names. The libraries listed in Table 2-2 are architecture
   specific, but shall be available on all LSB conforming systems
   under a name specified in each Architecture Specific Part of
   the LSB Core module.

   Table 2-1. LSB Core Module Library Names
     Library     Runtime Name
   libcrypt    libcrypt.so.1
   libdl       libdl.so.2
   libgcc_s    libgcc_s.so.1
   libncurses  libncurses.so.5
   libncursesw libncursesw.so.5
   libnspr4    libnspr4.so
   libnss3     libnss3.so
   libpam      libpam.so.0
   libpthread  libpthread.so.0
   librt       librt.so.1
   libssl3     libssl3.so
   libstdcxx   libstdc++.so.6
   libutil     libutil.so.1
   libz        libz.so.1

   Table 2-2. LSB Core Module Library Names which vary by
   architecture
    Library            Runtime Name
   libc       See architecture specific part.
   libm       See architecture specific part.
   proginterp See architecture specific part.

   Table 2-3. LSB Desktop Module Library Names
             Library                     Runtime Name
   libGL                       libGL.so.1
   libGLU                      libGLU.so.1
   libICE                      libICE.so.6
   libQtCore                   libQtCore.so.4
   libQtGui                    libQtGui.so.4
   libQtNetwork                libQtNetwork.so.4
   libQtOpenGL                 libQtOpenGL.so.4
   libQtSql                    libQtSql.so.4
   libQtSvg                    libQtSvg.so.4
   libQtXml                    libQtXml.so.4
   libSM                       libSM.so.6
   libX11                      libX11.so.6
   libXext                     libXext.so.6
   libXft                      libXft.so.2
   libXi                       libXi.so.6
   libXrender                  libXrender.so.1
   libXt                       libXt.so.6
   libXtst                     libXtst.so.6
   libasound                   libasound.so.2
   libatk-1.0                  libatk-1.0.so.0
   libcairo                    libcairo.so.2
   libcairo-gobject            libcairo-gobject.so.2
   libcairo-script-interpreter libcairo-script-interpreter.so.2
   libfontconfig               libfontconfig.so.1
   libfreetype                 libfreetype.so.6
   libgdk-x11-2.0              libgdk-x11-2.0.so.0
   libgdk_pixbuf-2.0           libgdk_pixbuf-2.0.so.0
   libgdk_pixbuf_xlib-2.0      libgdk_pixbuf_xlib-2.0.so.0
   libgio-2.0                  libgio-2.0.so.0
   libglib-2.0                 libglib-2.0.so.0
   libgmodule-2.0              libgmodule-2.0.so.0
   libgobject-2.0              libgobject-2.0.so.0
   libgthread-2.0              libgthread-2.0.so.0
   libgtk-x11-2.0              libgtk-x11-2.0.so.0
   libjpeg                     libjpeg.so.62
   libpango-1.0                libpango-1.0.so.0
   libpangocairo-1.0           libpangocairo-1.0.so.0
   libpangoft2-1.0             libpangoft2-1.0.so.0
   libpangoxft-1.0             libpangoxft-1.0.so.0
   libpng12                    libpng12.so.0
   libtiff                     libtiff.so.5
   libxcb                      libxcb.so.1

   Table 2-4. LSB Imaging Module Library Names
     Library      Runtime Name
   libcups      libcups.so.2
   libcupsimage libcupsimage.so.2
   libsane      libsane.so.1

   Table 2-5. LSB Languages Module Library Names
   Library Runtime Name
   libxml2 libxml2.so.2
   libxslt libxslt.so.1
     __________________________________________________________

2.2. Relevant Commands

   The commands listed in the following tables shall be available
   on a Linux Standard Base system, with the specified runtime
   names.

   Table 2-6. LSB Core Module Command Names
   [        du       install       mv           strings
   ar       echo     install_initd newgrp       strip
   at       ed       ipcrm         nice         stty
   awk      egrep    ipcs          nl           su
   basename env      join          nohup        sync
   batch    expand   kill          od           tail
   bc       expr     killall       passwd       tar
   cat      false    ln            paste        tee
   chfn     fgrep    locale        patch        test
   chgrp    file     localedef     pathchk      tic
   chmod    find     logger        pax          time
   chown    fold     logname       pidof        touch
   chsh     fuser    lp            pr           tput
   cksum    gencat   lpr           printf       tr
   cmp      getconf  ls            ps           true
   col      gettext  lsb_release   pwd          tsort
   comm     grep     m4            remove_initd tty
   cp       groupadd mailx         renice       umount
   cpio     groupdel make          rm           uname
   crontab  groupmod man           rmdir        unexpand
   csplit   groups   md5sum        sed          uniq
   cut      gunzip   mkdir         sendmail     useradd
   date     gzip     mkfifo        seq          userdel
   dd       head     mknod         sh           usermod
   df       hostname mktemp        shutdown     wc
   diff     iconv    more          sleep        xargs
   dirname  id       mount         sort         zcat
   dmesg    infocmp  msgfmt        split

   Table 2-7. LSB Desktop Module Command Names
   fc-cache fc-match xdg-desktop-menu xdg-icon-resource xdg-open
   fc-list xdg-desktop-icon xdg-email xdg-mime xdg-screensaver

   Table 2-8. LSB Imaging Module Command Names
   foomatic-rip gs

   Table 2-9. LSB Languages Module Command Names
   perl python
     __________________________________________________________

2.3. LSB Implementation Conformance

   A conforming implementation is necessarily architecture
   specific, and must provide the interfaces specified by both the
   generic LSB specifications and the applicable architecture
   specific part.

     Rationale: An implementation must provide at least the
     interfaces specified in these specifications. It may also
     provide additional interfaces.

   A conforming implementation shall satisfy the following
   requirements:

     * A processor architecture represents a family of related
       processors which may not have identical feature sets. The
       architecture specific part of the LSB Core Specification
       for a given target processor architecture describes a
       minimum acceptable processor. The implementation shall
       provide all features of this processor, whether in hardware
       or through emulation transparent to the application.
     * The implementation shall be capable of executing compiled
       applications having the format and using the system
       interfaces described in this specification.
     * The implementation shall provide libraries containing the
       interfaces specified by this specification, and shall
       provide a dynamic linking mechanism that allows these
       interfaces to be attached to applications at runtime. All
       the interfaces shall behave as specified in this
       specification.
     * The map of virtual memory provided by the implementation
       shall conform to the requirements of this specification.
     * The implementation's low-level behavior with respect to
       function call linkage, system traps, signals, and other
       such activities shall conform to the formats described in
       this specification.
     * The implementation shall provide all of the mandatory
       interfaces in their entirety.
     * The implementation may provide one or more of the optional
       interfaces. Each optional interface that is provided shall
       be provided in its entirety. The product documentation
       shall state which optional interfaces are provided.
     * The implementation shall provide all files and utilities
       specified as part of this specification in the format
       defined here and in other documents normatively included by
       reference. All commands and utilities shall behave as
       required by this specification. The implementation shall
       also provide all mandatory components of an application's
       runtime environment that are included or referenced in this
       specification.
     * The implementation, when provided with standard data
       formats and values at a named interface, shall provide the
       behavior defined for those values and data formats at that
       interface. However, a conforming implementation may consist
       of components which are separately packaged and/or sold.
       For example, a vendor of a conforming implementation might
       sell the hardware, operating system, and windowing system
       as separately packaged items.
     * The implementation may provide additional interfaces with
       different names. It may also provide additional behavior
       corresponding to data values outside the standard ranges,
       for standard named interfaces.
     * The implementation shall report whether supports for each
       of the modules constituting this specification is currently
       available, with the exception of the Trial Use module,
       which need not be reported. At a minimum, this reporting
       shall be performed using the lsb_release command described
       in the LSB Core module specification.

     Rationale: An implementation must support all modules
     described as mandatory in this specification. However,
     excepting the LSB Core module, which is always required, the
     support for a module may not be installed or enabled. The
     intent of this clause is to indicate a run-time query
     mechanism to determine the status of module support.
     __________________________________________________________

2.4. LSB Application Conformance

   A conforming application containing object files is necessarily
   architecture specific, and must conform to both the generic LSB
   Core module specification (LSB Core - Generic) and the relevant
   architecture specific part of the LSB Core Specification. A
   conforming application which contains no object files may be
   architecture neutral. Architecture neutral applications shall
   conform only to the requirements of the generic LSB Core module
   specification (LSB Core - Generic).

   In addition, the application may optionally conform to one or
   more additional LSB module specifications.

   A conforming application shall satisfy the following
   requirements:

     * Executable files shall be either object files in the format
       defined in the Object Format section of this specification,
       or script files in a scripting language where the
       interpreter is required by this specification.
     * Object files shall participate in dynamic linking as
       defined in the Program Loading and Linking section of this
       specification.
     * Object files shall employ only the instructions, traps, and
       other low-level facilities defined as being for use by
       applications in the Low-Level System Information section of
       this specification
     * If the application requires any optional interface defined
       in this specification in order to be installed or to
       execute successfully, the requirement for that optional
       interface shall be stated in the application's
       documentation.
     * The application shall not use any interface or data format
       that is not required to be provided by a conforming
       implementation, unless such an interface or data format is
       supplied by another application through direct invocation
       of that application during execution. The other application
       must also be a conforming application, and the use of such
       interface or data format, as well as its source (in other
       words, the other conforming application), shall be
       identified in the documentation of the application.
     * The application shall not use any values for a named
       interface that are reserved for vendor extensions.

   A strictly conforming application shall not require or use any
   interface, facility, or implementation-defined extension not
   defined in this specification in order to be installed or to
   execute successfully.

   Applications distributed using the packaging specification
   described in the generic LSB Core specification (LSB Core -
   Generic) may, in addition to other package dependencies
   described in this specification, declare a dependency on "lsb"
   with a version of 5.0.

     Implementation Note: Application dependencies should
     generally be as limited as possible. For example, if a
     64-bit POWER application only depends on items from the core
     specification, a dependency on "lsb-core-ppc64" may be more
     appropriate than a dependency on "lsb". The latter
     dependency could cause an implementation to install a number
     of other modules that may not be necessary to execute this
     application.
     __________________________________________________________

Chapter 3. Terms and Definitions

   For the purposes of this document, the terms given in ISO/IEC
   Directives, Part 2, Annex H and the following apply.

   archLSB
          Some LSB specification documents have both a generic,
          architecture-neutral part and an architecture-specific
          part. The latter describes elements whose definitions
          may be unique to a particular processor architecture.
          The term archLSB may be used in the generic part to
          refer to the corresponding section of the
          architecture-specific part.

   Binary Standard, ABI
          The total set of interfaces that are available to be
          used in the compiled binary code of a conforming
          application, including the run-time details such as
          calling conventions, binary format, C++ name mangling,
          etc.

   Implementation-defined
          Describes a value or behavior that is not defined by
          this document but is selected by an implementor. The
          value or behavior may vary among implementations that
          conform to this document. An application should not rely
          on the existence of the value or behavior. An
          application that relies on such a value or behavior
          cannot be assured to be portable across conforming
          implementations. The implementor shall document such a
          value or behavior so that it can be used correctly by an
          application.

   Shell Script
          A file that is read by an interpreter (e.g., awk). The
          first line of the shell script includes a reference to
          its interpreter binary.

   Source Standard, API
          The total set of interfaces that are available to be
          used in the source code of a conforming application. Due
          to translations, the Binary Standard and the Source
          Standard may contain some different interfaces.

   Undefined
          Describes the nature of a value or behavior not defined
          by this document which results from use of an invalid
          program construct or invalid data input. The value or
          behavior may vary among implementations that conform to
          this document. An application should not rely on the
          existence or validity of the value or behavior. An
          application that relies on any particular value or
          behavior cannot be assured to be portable across
          conforming implementations.

   Unspecified
          Describes the nature of a value or behavior not
          specified by this document which results from use of a
          valid program construct or valid data input. The value
          or behavior may vary among implementations that conform
          to this document. An application should not rely on the
          existence or validity of the value or behavior. An
          application that relies on any particular value or
          behavior cannot be assured to be portable across
          conforming implementations.

   In addition, for the portions of this specification which build
   on IEEE Std 1003.1-2001, the definitions given in IEEE Std
   1003.1-2001, Base Definitions, Chapter 3 apply.
     __________________________________________________________

Chapter 4. Documentation Conventions

   Throughout this document, the following typographic conventions
   are used:

   function()

   the name of a function
   command

   the name of a command or utility
   CONSTANT

   a constant value
   parameter

   a parameter
   variable

   a variable

   Throughout this specification, several tables of interfaces are
   presented. Each entry in these tables has the following format:

   name

   the name of the interface
   (symver)

   An optional symbol version identifier, if required.
   [refno]

   A reference number indexing the table of referenced
   specifications that follows this table.

   For example,

   forkpty(GLIBC_2.0) [SUSv4]

   refers to the interface named forkpty() with symbol version
   GLIBC_2.0 that is defined in the reference indicated by the tag
   SUSv4.

     Note: For symbols with versions which differ between
     architectures, the symbol versions are defined in the
     architecture specific parts of of this module specification
     only. In the generic part, they will appear without symbol
     versions.
     __________________________________________________________

Chapter 5. Relationship To ISO/IEC 9945 POSIX

   The LSB Core module of the LSB includes many interfaces
   described in the POSIX specification. For more details on this
   relationship, please see the LSB Core Generic volume.

   The LSB Specification Authority is responsible for deciding the
   meaning of conformance to normative referenced standards in the
   LSB context. Problem reports regarding underlying or referenced
   standards in any other context will be referred to the relevant
   maintenance body for that standard.
     __________________________________________________________

Chapter 6. Relationship To Other Linux Foundation Specifications

   The LSB is foundation of several other specification projects
   under the umbrella of the Linux Foundation (LF), which build on
   the interfaces defined here. However, beyond those
   specifications listed as Normative References in the various
   LSB specification volumes, this specification has no
   dependencies on other LF projects.
     __________________________________________________________

Appendix A. GNU Free Documentation License (Informative)

   This specification is published under the terms of the GNU Free
   Documentation License, Version 1.1, March 2000

     Copyright (C) 2000 Free Software Foundation, Inc. 59 Temple
     Place, Suite 330, Boston, MA 02111-1307 USA Everyone is
     permitted to copy and distribute verbatim copies of this
     license document, but changing it is not allowed.
     __________________________________________________________

A.1. PREAMBLE

   The purpose of this License is to make a manual, textbook, or
   other written document "free" in the sense of freedom: to
   assure everyone the effective freedom to copy and redistribute
   it, with or without modifying it, either commercially or
   noncommercially. Secondarily, this License preserves for the
   author and publisher a way to get credit for their work, while
   not being considered responsible for modifications made by
   others.

   This License is a kind of "copyleft", which means that
   derivative works of the document must themselves be free in the
   same sense. It complements the GNU General Public License,
   which is a copyleft license designed for free software.

   We have designed this License in order to use it for manuals
   for free software, because free software needs free
   documentation: a free program should come with manuals
   providing the same freedoms that the software does. But this
   License is not limited to software manuals; it can be used for
   any textual work, regardless of subject matter or whether it is
   published as a printed book. We recommend this License
   principally for works whose purpose is instruction or
   reference.
     __________________________________________________________

A.2. APPLICABILITY AND DEFINITIONS

   This License applies to any manual or other work that contains
   a notice placed by the copyright holder saying it can be
   distributed under the terms of this License. The "Document",
   below, refers to any such manual or work. Any member of the
   public is a licensee, and is addressed as "you".

   A "Modified Version" of the Document means any work containing
   the Document or a portion of it, either copied verbatim, or
   with modifications and/or translated into another language.

   A "Secondary Section" is a named appendix or a front-matter
   section of the Document that deals exclusively with the
   relationship of the publishers or authors of the Document to
   the Document's overall subject (or to related matters) and
   contains nothing that could fall directly within that overall
   subject. (For example, if the Document is in part a textbook of
   mathematics, a Secondary Section may not explain any
   mathematics.) The relationship could be a matter of historical
   connection with the subject or with related matters, or of
   legal, commercial, philosophical, ethical or political position
   regarding them.

   The "Invariant Sections" are certain Secondary Sections whose
   titles are designated, as being those of Invariant Sections, in
   the notice that says that the Document is released under this
   License.

   The "Cover Texts" are certain short passages of text that are
   listed, as Front-Cover Texts or Back-Cover Texts, in the notice
   that says that the Document is released under this License.

   A "Transparent" copy of the Document means a machine-readable
   copy, represented in a format whose specification is available
   to the general public, whose contents can be viewed and edited
   directly and straightforwardly with generic text editors or
   (for images composed of pixels) generic paint programs or (for
   drawings) some widely available drawing editor, and that is
   suitable for input to text formatters or for automatic
   translation to a variety of formats suitable for input to text
   formatters. A copy made in an otherwise Transparent file format
   whose markup has been designed to thwart or discourage
   subsequent modification by readers is not Transparent. A copy
   that is not "Transparent" is called "Opaque".

   Examples of suitable formats for Transparent copies include
   plain ASCII without markup, Texinfo input format, LaTeX input
   format, SGML or XML using a publicly available DTD, and
   standard-conforming simple HTML designed for human
   modification. Opaque formats include PostScript, PDF,
   proprietary formats that can be read and edited only by
   proprietary word processors, SGML or XML for which the DTD
   and/or processing tools are not generally available, and the
   machine-generated HTML produced by some word processors for
   output purposes only.

   The "Title Page" means, for a printed book, the title page
   itself, plus such following pages as are needed to hold,
   legibly, the material this License requires to appear in the
   title page. For works in formats which do not have any title
   page as such, "Title Page" means the text near the most
   prominent appearance of the work's title, preceding the
   beginning of the body of the text.
     __________________________________________________________

A.3. VERBATIM COPYING

   You may copy and distribute the Document in any medium, either
   commercially or noncommercially, provided that this License,
   the copyright notices, and the license notice saying this
   License applies to the Document are reproduced in all copies,
   and that you add no other conditions whatsoever to those of
   this License. You may not use technical measures to obstruct or
   control the reading or further copying of the copies you make
   or distribute. However, you may accept compensation in exchange
   for copies. If you distribute a large enough number of copies
   you must also follow the conditions in section 3.

   You may also lend copies, under the same conditions stated
   above, and you may publicly display copies.
     __________________________________________________________

A.4. COPYING IN QUANTITY

   If you publish printed copies of the Document numbering more
   than 100, and the Document's license notice requires Cover
   Texts, you must enclose the copies in covers that carry,
   clearly and legibly, all these Cover Texts: Front-Cover Texts
   on the front cover, and Back-Cover Texts on the back cover.
   Both covers must also clearly and legibly identify you as the
   publisher of these copies. The front cover must present the
   full title with all words of the title equally prominent and
   visible. You may add other material on the covers in addition.
   Copying with changes limited to the covers, as long as they
   preserve the title of the Document and satisfy these
   conditions, can be treated as verbatim copying in other
   respects.

   If the required texts for either cover are too voluminous to
   fit legibly, you should put the first ones listed (as many as
   fit reasonably) on the actual cover, and continue the rest onto
   adjacent pages.

   If you publish or distribute Opaque copies of the Document
   numbering more than 100, you must either include a
   machine-readable Transparent copy along with each Opaque copy,
   or state in or with each Opaque copy a publicly-accessible
   computer-network location containing a complete Transparent
   copy of the Document, free of added material, which the general
   network-using public has access to download anonymously at no
   charge using public-standard network protocols. If you use the
   latter option, you must take reasonably prudent steps, when you
   begin distribution of Opaque copies in quantity, to ensure that
   this Transparent copy will remain thus accessible at the stated
   location until at least one year after the last time you
   distribute an Opaque copy (directly or through your agents or
   retailers) of that edition to the public.

   It is requested, but not required, that you contact the authors
   of the Document well before redistributing any large number of
   copies, to give them a chance to provide you with an updated
   version of the Document.
     __________________________________________________________

A.5. MODIFICATIONS

   You may copy and distribute a Modified Version of the Document
   under the conditions of sections 2 and 3 above, provided that
   you release the Modified Version under precisely this License,
   with the Modified Version filling the role of the Document,
   thus licensing distribution and modification of the Modified
   Version to whoever possesses a copy of it. In addition, you
   must do these things in the Modified Version:

    A. Use in the Title Page (and on the covers, if any) a title
       distinct from that of the Document, and from those of
       previous versions (which should, if there were any, be
       listed in the History section of the Document). You may use
       the same title as a previous version if the original
       publisher of that version gives permission.
    B. List on the Title Page, as authors, one or more persons or
       entities responsible for authorship of the modifications in
       the Modified Version, together with at least five of the
       principal authors of the Document (all of its principal
       authors, if it has less than five).
    C. State on the Title page the name of the publisher of the
       Modified Version, as the publisher.
    D. Preserve all the copyright notices of the Document.
    E. Add an appropriate copyright notice for your modifications
       adjacent to the other copyright notices.
    F. Include, immediately after the copyright notices, a license
       notice giving the public permission to use the Modified
       Version under the terms of this License, in the form shown
       in the Addendum below.
    G. Preserve in that license notice the full lists of Invariant
       Sections and required Cover Texts given in the Document's
       license notice.
    H. Include an unaltered copy of this License.
    I. Preserve the section entitled "History", and its title, and
       add to it an item stating at least the title, year, new
       authors, and publisher of the Modified Version as given on
       the Title Page. If there is no section entitled "History"
       in the Document, create one stating the title, year,
       authors, and publisher of the Document as given on its
       Title Page, then add an item describing the Modified
       Version as stated in the previous sentence.
    J. Preserve the network location, if any, given in the
       Document for public access to a Transparent copy of the
       Document, and likewise the network locations given in the
       Document for previous versions it was based on. These may
       be placed in the "History" section. You may omit a network
       location for a work that was published at least four years
       before the Document itself, or if the original publisher of
       the version it refers to gives permission.
    K. In any section entitled "Acknowledgements" or
       "Dedications", preserve the section's title, and preserve
       in the section all the substance and tone of each of the
       contributor acknowledgements and/or dedications given
       therein.
    L. Preserve all the Invariant Sections of the Document,
       unaltered in their text and in their titles. Section
       numbers or the equivalent are not considered part of the
       section titles.
    M. Delete any section entitled "Endorsements". Such a section
       may not be included in the Modified Version.
    N. Do not retitle any existing section as "Endorsements" or to
       conflict in title with any Invariant Section.

   If the Modified Version includes new front-matter sections or
   appendices that qualify as Secondary Sections and contain no
   material copied from the Document, you may at your option
   designate some or all of these sections as invariant. To do
   this, add their titles to the list of Invariant Sections in the
   Modified Version's license notice. These titles must be
   distinct from any other section titles.

   You may add a section entitled "Endorsements", provided it
   contains nothing but endorsements of your Modified Version by
   various parties--for example, statements of peer review or that
   the text has been approved by an organization as the
   authoritative definition of a standard.

   You may add a passage of up to five words as a Front-Cover
   Text, and a passage of up to 25 words as a Back-Cover Text, to
   the end of the list of Cover Texts in the Modified Version.
   Only one passage of Front-Cover Text and one of Back-Cover Text
   may be added by (or through arrangements made by) any one
   entity. If the Document already includes a cover text for the
   same cover, previously added by you or by arrangement made by
   the same entity you are acting on behalf of, you may not add
   another; but you may replace the old one, on explicit
   permission from the previous publisher that added the old one.

   The author(s) and publisher(s) of the Document do not by this
   License give permission to use their names for publicity for or
   to assert or imply endorsement of any Modified Version.
     __________________________________________________________

A.6. COMBINING DOCUMENTS

   You may combine the Document with other documents released
   under this License, under the terms defined in section 4 above
   for modified versions, provided that you include in the
   combination all of the Invariant Sections of all of the
   original documents, unmodified, and list them all as Invariant
   Sections of your combined work in its license notice.

   The combined work need only contain one copy of this License,
   and multiple identical Invariant Sections may be replaced with
   a single copy. If there are multiple Invariant Sections with
   the same name but different contents, make the title of each
   such section unique by adding at the end of it, in parentheses,
   the name of the original author or publisher of that section if
   known, or else a unique number. Make the same adjustment to the
   section titles in the list of Invariant Sections in the license
   notice of the combined work.

   In the combination, you must combine any sections entitled
   "History" in the various original documents, forming one
   section entitled "History"; likewise combine any sections
   entitled "Acknowledgements", and any sections entitled
   "Dedications". You must delete all sections entitled
   "Endorsements."
     __________________________________________________________

A.7. COLLECTIONS OF DOCUMENTS

   You may make a collection consisting of the Document and other
   documents released under this License, and replace the
   individual copies of this License in the various documents with
   a single copy that is included in the collection, provided that
   you follow the rules of this License for verbatim copying of
   each of the documents in all other respects.

   You may extract a single document from such a collection, and
   distribute it individually under this License, provided you
   insert a copy of this License into the extracted document, and
   follow this License in all other respects regarding verbatim
   copying of that document.
     __________________________________________________________

A.8. AGGREGATION WITH INDEPENDENT WORKS

   A compilation of the Document or its derivatives with other
   separate and independent documents or works, in or on a volume
   of a storage or distribution medium, does not as a whole count
   as a Modified Version of the Document, provided no compilation
   copyright is claimed for the compilation. Such a compilation is
   called an "aggregate", and this License does not apply to the
   other self-contained works thus compiled with the Document, on
   account of their being thus compiled, if they are not
   themselves derivative works of the Document.

   If the Cover Text requirement of section 3 is applicable to
   these copies of the Document, then if the Document is less than
   one quarter of the entire aggregate, the Document's Cover Texts
   may be placed on covers that surround only the Document within
   the aggregate. Otherwise they must appear on covers around the
   whole aggregate.
     __________________________________________________________

A.9. TRANSLATION

   Translation is considered a kind of modification, so you may
   distribute translations of the Document under the terms of
   section 4. Replacing Invariant Sections with translations
   requires special permission from their copyright holders, but
   you may include translations of some or all Invariant Sections
   in addition to the original versions of these Invariant
   Sections. You may include a translation of this License
   provided that you also include the original English version of
   this License. In case of a disagreement between the translation
   and the original English version of this License, the original
   English version will prevail.
     __________________________________________________________

A.10. TERMINATION

   You may not copy, modify, sublicense, or distribute the
   Document except as expressly provided for under this License.
   Any other attempt to copy, modify, sublicense or distribute the
   Document is void, and will automatically terminate your rights
   under this License. However, parties who have received copies,
   or rights, from you under this License will not have their
   licenses terminated so long as such parties remain in full
   compliance.
     __________________________________________________________

A.11. FUTURE REVISIONS OF THIS LICENSE

   The Free Software Foundation may publish new, revised versions
   of the GNU Free Documentation License from time to time. Such
   new versions will be similar in spirit to the present version,
   but may differ in detail to address new problems or concerns.
   See http://www.gnu.org/copyleft/.

   Each version of the License is given a distinguishing version
   number. If the Document specifies that a particular numbered
   version of this License "or any later version" applies to it,
   you have the option of following the terms and conditions
   either of that specified version or of any later version that
   has been published (not as a draft) by the Free Software
   Foundation. If the Document does not specify a version number
   of this License, you may choose any version ever published (not
   as a draft) by the Free Software Foundation.
     __________________________________________________________

A.12. How to use this License for your documents

   To use this License in a document you have written, include a
   copy of the License in the document and put the following
   copyright and license notices just after the title page:

     Copyright (c) YEAR YOUR NAME. Permission is granted to copy,
     distribute and/or modify this document under the terms of
     the GNU Free Documentation License, Version 1.1 or any later
     version published by the Free Software Foundation; with the
     Invariant Sections being LIST THEIR TITLES, with the
     Front-Cover Texts being LIST, and with the Back-Cover Texts
     being LIST. A copy of the license is included in the section
     entitled "GNU Free Documentation License".

   If you have no Invariant Sections, write "with no Invariant
   Sections" instead of saying which ones are invariant. If you
   have no Front-Cover Texts, write "no Front-Cover Texts" instead
   of "Front-Cover Texts being LIST"; likewise for Back-Cover
   Texts.

   If your document contains nontrivial examples of program code,
   we recommend releasing these examples in parallel under your
   choice of free software license, such as the GNU General Public
   License, to permit their use in free software.
