Linux Standard Base Desktop Specification for X86

   LSB Desktop - X86 5.0 Edition

   Copyright © 2015 Linux Foundation

   Permission is granted to copy, distribute and/or modify this
   document under the terms of the GNU Free Documentation License,
   Version 1.1; with no Invariant Sections, with no Front-Cover
   Texts, and with no Back-Cover Texts. A copy of the license is
   included in the section entitled "GNU Free Documentation
   License".

   Portions of the text may be copyrighted by the following
   parties:

     * The Regents of the University of California
     * Free Software Foundation
     * Ian F. Darwin
     * Paul Vixie
     * BSDI (now Wind River)
     * Jean-loup Gailly and Mark Adler
     * Massachusetts Institute of Technology
     * Apple Inc.
     * Easy Software Products
     * artofcode LLC
     * Till Kamppeter
     * Manfred Wassman
     * Python Software Foundation

   These excerpts are being used in accordance with their
   respective licenses.

   Linux is the registered trademark of Linus Torvalds in the U.S.
   and other countries.

   UNIX is a registered trademark of The Open Group.

   LSB is a trademark of the Linux Foundation in the United States
   and other countries.

   AMD is a trademark of Advanced Micro Devices, Inc.

   Intel and Itanium are registered trademarks and Intel386 is a
   trademark of Intel Corporation.

   PowerPC is a registered trademark and PowerPC Architecture is a
   trademark of the IBM Corporation.

   S/390 is a registered trademark of the IBM Corporation.

   OpenGL is a registered trademark of Silicon Graphics, Inc.

   PAM documentation is Copyright (C) Andrew G. Morgan 1996-9. All
   rights reserved. Used under the following conditions:

    1. Redistributions of source code must retain the above
       copyright notice, and the entire permission notice in its
       entirety, including the disclaimer of warranties.
    2. Redistributions in binary form must reproduce the above
       copyright notice, this list of conditions and the following
       disclaimer in the documentation and/or other materials
       provided with the distribution.
    3. The name of the author may not be used to endorse or
       promote products derived from this software without
       specific prior written permission.
     __________________________________________________________

   Table of Contents
   Foreword
   Status of this Document
   Introduction
   I. Introductory Elements

        1. Scope

              1.1. General
              1.2. Module Specific Scope

        2. References

              2.1. Normative References
              2.2. Informative References/Bibliography

        3. Requirements

              3.1. Relevant Libraries

        4. Terms and Definitions
        5. Documentation Conventions

   II. GTK+ Stack Libraries

        6. Libraries

              6.1. Introduction
              6.2. Interfaces for libglib-2.0
              6.3. Data Definitions for libglib-2.0
              6.4. Interfaces for libgmodule-2.0
              6.5. Data Definitions for libgmodule-2.0
              6.6. Interfaces for libgobject-2.0
              6.7. Data Definitions for libgobject-2.0
              6.8. Interfaces for libgthread-2.0
              6.9. Interfaces for libgio-2.0
              6.10. Data Definitions for libgio-2.0
              6.11. Interfaces for libatk-1.0
              6.12. Data Definitions for libatk-1.0
              6.13. Interfaces for libpango-1.0
              6.14. Data Definitions for libpango-1.0
              6.15. Interfaces for libpangocairo-1.0
              6.16. Data Definitions for libpangocairo-1.0
              6.17. Interfaces for libpangoxft-1.0
              6.18. Data Definitions for libpangoxft-1.0
              6.19. Interfaces for libpangoft2-1.0
              6.20. Data Definitions for libpangoft2-1.0
              6.21. Interfaces for libgdk_pixbuf-2.0
              6.22. Data Definitions for libgdk_pixbuf-2.0
              6.23. Interfaces for libgdk_pixbuf_xlib-2.0
              6.24. Data Definitions for libgdk_pixbuf_xlib-2.0
              6.25. Interfaces for libgdk-x11-2.0
              6.26. Data Definitions for libgdk-x11-2.0
              6.27. Interfaces for libgtk-x11-2.0
              6.28. Data Definitions for libgtk-x11-2.0

   III. Qt Libraries

        7. Libraries

              7.1. Introduction
              7.2. Interfaces for libQtCore
              7.3. Data Definitions for libQtCore
              7.4. Interface Definitions for libQtCore
              7.5. Interfaces for libQtGui
              7.6. Data Definitions for libQtGui
              7.7. Interfaces for libQtXml
              7.8. Data Definitions for libQtXml
              7.9. Interfaces for libQtOpenGL
              7.10. Data Definitions for libQtOpenGL
              7.11. Interfaces for libQtSql
              7.12. Data Definitions for libQtSql
              7.13. Interfaces for libQtSvg
              7.14. Data Definitions for libQtSvg
              7.15. Interfaces for libQtNetwork
              7.16. Data Definitions for libQtNetwork

   IV. Package Format and Installation

        8. Software Installation

              8.1. Package Dependencies

   A. Alphabetical Listing of Interfaces by Library

        A.1. libGL
        A.2. libGLU
        A.3. libICE
        A.4. libSM
        A.5. libX11
        A.6. libXext
        A.7. libXft
        A.8. libXi
        A.9. libXrender
        A.10. libXt
        A.11. libXtst
        A.12. libcairo
        A.13. libcairo-gobject
        A.14. libcairo-script-interpreter
        A.15. libfontconfig
        A.16. libfreetype
        A.17. libjpeg
        A.18. libpng12
        A.19. libtiff
        A.20. libxcb
        A.21. libQtCore
        A.22. libQtGui
        A.23. libQtOpenGL
        A.24. libQtSql
        A.25. libQtSvg
        A.26. libQtXml
        A.27. libasound

   B. GNU Free Documentation License (Informative)

        B.1. PREAMBLE
        B.2. APPLICABILITY AND DEFINITIONS
        B.3. VERBATIM COPYING
        B.4. COPYING IN QUANTITY
        B.5. MODIFICATIONS
        B.6. COMBINING DOCUMENTS
        B.7. COLLECTIONS OF DOCUMENTS
        B.8. AGGREGATION WITH INDEPENDENT WORKS
        B.9. TRANSLATION
        B.10. TERMINATION
        B.11. FUTURE REVISIONS OF THIS LICENSE
        B.12. How to use this License for your documents

   List of Tables
   2-1. Normative References
   2-2. Other References
   3-1. Standard Library Names
   6-1. libglib-2.0 Definition
   6-2. libgmodule-2.0 Definition
   6-3. libgobject-2.0 Definition
   6-4. libgthread-2.0 Definition
   6-5. libgio-2.0 Definition
   6-6. libatk-1.0 Definition
   6-7. libpango-1.0 Definition
   6-8. libpangocairo-1.0 Definition
   6-9. libpangoxft-1.0 Definition
   6-10. libpangoft2-1.0 Definition
   6-11. libgdk_pixbuf-2.0 Definition
   6-12. libgdk_pixbuf_xlib-2.0 Definition
   6-13. libgdk-x11-2.0 Definition
   6-14. libgtk-x11-2.0 Definition
   7-1. libQtCore Definition
   7-2. libQtCore - Qt4 Core Functions Function Interfaces
   7-3. typeinfo for QAbstractItemModel
   7-4. typeinfo for QAbstractTableModel
   7-5. typeinfo for QAbstractListModel
   7-6. typeinfo for QTextCodec
   7-7. typeinfo for QTextCodecFactoryInterface
   7-8. typeinfo for QTranslator
   7-9. typeinfo for QMimeData
   7-10. typeinfo for QEventLoop
   7-11. typeinfo for QEvent
   7-12. typeinfo for QTimerEvent
   7-13. typeinfo for QChildEvent
   7-14. typeinfo for QCustomEvent
   7-15. typeinfo for QAbstractEventDispatcher
   7-16. Primary vtable for QTextCodecPlugin
   7-17. Secondary vtable for QTextCodecPlugin
   7-18. typeinfo for QTextCodecPlugin
   7-19. typeinfo for QPluginLoader
   7-20. typeinfo for QLibrary
   7-21. libQtCore - Qt4 Plugins Function Interfaces
   7-22. typeinfo for QTimer
   7-23. typeinfo for QFactoryInterface
   7-24. libQtCore - Qt4 Text Function Interfaces
   7-25. typeinfo for QIODevice
   7-26. typeinfo for QDataStream
   7-27. typeinfo for QTextStream
   7-28. typeinfo for QFile
   7-29. typeinfo for QTemporaryFile
   7-30. typeinfo for QAbstractFileEngine
   7-31. typeinfo for QAbstractFileEngineHandler
   7-32. typeinfo for QFSFileEngine
   7-33. typeinfo for QProcess
   7-34. typeinfo for QBuffer
   7-35. typeinfo for QSettings
   7-36. typeinfo for QSignalMapper
   7-37. typeinfo for QSocketNotifier
   7-38. typeinfo for QCoreApplication
   7-39. typeinfo for QObject
   7-40. typeinfo for QObjectUserData
   7-41. typeinfo for QObjectCleanupHandler
   7-42. typeinfo for QThread
   7-43. libQtGui Definition
   7-44. libQtGui - Qt4 GUI Functions Function Interfaces
   7-45. typeinfo for QButtonGroup
   7-46. Primary vtable for QGroupBox
   7-47. Secondary vtable for QGroupBox
   7-48. typeinfo for QGroupBox
   7-49. Primary vtable for QSplitter
   7-50. Secondary vtable for QSplitter
   7-51. typeinfo for QSplitter
   7-52. Primary vtable for QSplitterHandle
   7-53. Secondary vtable for QSplitterHandle
   7-54. typeinfo for QSplitterHandle
   7-55. libQtGui - Qt4 Organizers Function Interfaces
   7-56. typeinfo for QInputEvent
   7-57. typeinfo for QMouseEvent
   7-58. typeinfo for QHoverEvent
   7-59. typeinfo for QWheelEvent
   7-60. typeinfo for QTabletEvent
   7-61. typeinfo for QKeyEvent
   7-62. typeinfo for QFocusEvent
   7-63. typeinfo for QPaintEvent
   7-64. typeinfo for QMoveEvent
   7-65. typeinfo for QResizeEvent
   7-66. typeinfo for QCloseEvent
   7-67. typeinfo for QIconDragEvent
   7-68. typeinfo for QShowEvent
   7-69. typeinfo for QHideEvent
   7-70. typeinfo for QContextMenuEvent
   7-71. typeinfo for QInputMethodEvent
   7-72. typeinfo for QHelpEvent
   7-73. typeinfo for QStatusTipEvent
   7-74. typeinfo for QWhatsThisClickedEvent
   7-75. typeinfo for QActionEvent
   7-76. typeinfo for QFileOpenEvent
   7-77. typeinfo for QToolBarChangeEvent
   7-78. typeinfo for QShortcutEvent
   7-79. typeinfo for QClipboardEvent
   7-80. typeinfo for QWindowStateChangeEvent
   7-81. typeinfo for QMenubarUpdatedEvent
   7-82. typeinfo for QAccessibleBridgeFactoryInterface
   7-83. Primary vtable for QAccessibleBridgePlugin
   7-84. Secondary vtable for QAccessibleBridgePlugin
   7-85. typeinfo for QAccessibleBridgePlugin
   7-86. typeinfo for QAccessibleInterface
   7-87. typeinfo for QAccessibleObject
   7-88. typeinfo for QAccessibleApplication
   7-89. typeinfo for QAccessibleWidget
   7-90. typeinfo for QAccessibleFactoryInterface
   7-91. Primary vtable for QAccessiblePlugin
   7-92. Secondary vtable for QAccessiblePlugin
   7-93. typeinfo for QAccessiblePlugin
   7-94. libQtGui - Qt4 Accessibility Function Interfaces
   7-95. typeinfo for QValidator
   7-96. typeinfo for QIntValidator
   7-97. typeinfo for QDoubleValidator
   7-98. typeinfo for QRegExpValidator
   7-99. Primary vtable for QImageIOPlugin
   7-100. Secondary vtable for QImageIOPlugin
   7-101. typeinfo for QImageIOPlugin
   7-102. Primary vtable for QIconEnginePlugin
   7-103. Secondary vtable for QIconEnginePlugin
   7-104. typeinfo for QIconEnginePlugin
   7-105. Primary vtable for QPictureFormatPlugin
   7-106. Secondary vtable for QPictureFormatPlugin
   7-107. typeinfo for QPictureFormatPlugin
   7-108. Primary vtable for QStylePlugin
   7-109. Secondary vtable for QStylePlugin
   7-110. typeinfo for QStylePlugin
   7-111. Primary vtable for QInputContextPlugin
   7-112. Secondary vtable for QInputContextPlugin
   7-113. typeinfo for QInputContextPlugin
   7-114. libQtGui - Qt4 Plugins Function Interfaces
   7-115. typeinfo for QAbstractTextDocumentLayout
   7-116. Primary vtable for QAbstractPageSetupDialog
   7-117. Secondary vtable for QAbstractPageSetupDialog
   7-118. typeinfo for QAbstractPageSetupDialog
   7-119. Primary vtable for QAbstractPrintDialog
   7-120. Secondary vtable for QAbstractPrintDialog
   7-121. typeinfo for QAbstractPrintDialog
   7-122. typeinfo for QItemSelectionModel
   7-123. Primary vtable for QAbstractScrollArea
   7-124. Secondary vtable for QAbstractScrollArea
   7-125. typeinfo for QAbstractScrollArea
   7-126. Primary vtable for QAbstractSpinBox
   7-127. Secondary vtable for QAbstractSpinBox
   7-128. typeinfo for QAbstractSpinBox
   7-129. Primary vtable for QAbstractSlider
   7-130. Secondary vtable for QAbstractSlider
   7-131. typeinfo for QAbstractSlider
   7-132. typeinfo for QAbstractItemDelegate
   7-133. Primary vtable for QAbstractItemView
   7-134. Secondary vtable for QAbstractItemView
   7-135. typeinfo for QAbstractItemView
   7-136. typeinfo for QStringListModel
   7-137. typeinfo for QDirModel
   7-138. typeinfo for QStandardItemModel
   7-139. typeinfo for QAbstractProxyModel
   7-140. typeinfo for QSortFilterProxyModel
   7-141. typeinfo for QItemDelegate
   7-142. Primary vtable for QTableView
   7-143. Secondary vtable for QTableView
   7-144. typeinfo for QTableView
   7-145. typeinfo for QTableWidgetItem
   7-146. Primary vtable for QTableWidget
   7-147. Secondary vtable for QTableWidget
   7-148. typeinfo for QTableWidget
   7-149. Primary vtable for QTreeView
   7-150. Secondary vtable for QTreeView
   7-151. typeinfo for QTreeView
   7-152. typeinfo for QProxyModel
   7-153. Primary vtable for QHeaderView
   7-154. Secondary vtable for QHeaderView
   7-155. typeinfo for QHeaderView
   7-156. typeinfo for QItemEditorFactory
   7-157. typeinfo for QTreeWidgetItem
   7-158. Primary vtable for QTreeWidget
   7-159. Secondary vtable for QTreeWidget
   7-160. typeinfo for QTreeWidget
   7-161. Primary vtable for QAbstractButton
   7-162. Secondary vtable for QAbstractButton
   7-163. typeinfo for QAbstractButton
   7-164. libQtGui - Qt4 Models and Views Function Interfaces
   7-165. Primary vtable for QDialog
   7-166. Secondary vtable for QDialog
   7-167. typeinfo for QDialog
   7-168. Primary vtable for QColorDialog
   7-169. Secondary vtable for QColorDialog
   7-170. typeinfo for QColorDialog
   7-171. Primary vtable for QFontDialog
   7-172. Secondary vtable for QFontDialog
   7-173. typeinfo for QFontDialog
   7-174. Primary vtable for QMessageBox
   7-175. Secondary vtable for QMessageBox
   7-176. typeinfo for QMessageBox
   7-177. Primary vtable for QProgressDialog
   7-178. Secondary vtable for QProgressDialog
   7-179. typeinfo for QProgressDialog
   7-180. Primary vtable for QErrorMessage
   7-181. Secondary vtable for QErrorMessage
   7-182. typeinfo for QErrorMessage
   7-183. Primary vtable for QFileDialog
   7-184. Secondary vtable for QFileDialog
   7-185. typeinfo for QFileDialog
   7-186. Primary vtable for QPrintDialog
   7-187. Secondary vtable for QPrintDialog
   7-188. typeinfo for QPrintDialog
   7-189. Primary vtable for QPageSetupDialog
   7-190. Secondary vtable for QPageSetupDialog
   7-191. typeinfo for QPageSetupDialog
   7-192. Primary vtable for QInputDialog
   7-193. Secondary vtable for QInputDialog
   7-194. typeinfo for QInputDialog
   7-195. typeinfo for QFileIconProvider
   7-196. libQtGui - Qt4 Dialogs Function Interfaces
   7-197. Primary vtable for QDateTimeEdit
   7-198. Secondary vtable for QDateTimeEdit
   7-199. typeinfo for QDateTimeEdit
   7-200. Primary vtable for QTimeEdit
   7-201. Secondary vtable for QTimeEdit
   7-202. typeinfo for QTimeEdit
   7-203. Primary vtable for QDateEdit
   7-204. Secondary vtable for QDateEdit
   7-205. typeinfo for QDateEdit
   7-206. Primary vtable for QRubberBand
   7-207. Secondary vtable for QRubberBand
   7-208. typeinfo for QRubberBand
   7-209. typeinfo for QShortcut
   7-210. Primary vtable for QSplashScreen
   7-211. Secondary vtable for QSplashScreen
   7-212. typeinfo for QSplashScreen
   7-213. libQtGui - Qt4 Miscellaneous Function Interfaces
   7-214. typeinfo for QPaintDevice
   7-215. typeinfo for QPixmap
   7-216. typeinfo for QPicture
   7-217. typeinfo for QBitmap
   7-218. typeinfo for QPictureFormatInterface
   7-219. typeinfo for QPrinter
   7-220. typeinfo for QPrintEngine
   7-221. typeinfo for QImage
   7-222. typeinfo for QImageIOHandler
   7-223. typeinfo for QImageIOHandlerFactoryInterface
   7-224. typeinfo for QMovie
   7-225. typeinfo for QSound
   7-226. typeinfo for QLayoutItem
   7-227. typeinfo for QSpacerItem
   7-228. typeinfo for QWidgetItem
   7-229. Primary vtable for QLayout
   7-230. Secondary vtable for QLayout
   7-231. typeinfo for QLayout
   7-232. Primary vtable for QGridLayout
   7-233. Secondary vtable for QGridLayout
   7-234. typeinfo for QGridLayout
   7-235. Primary vtable for QBoxLayout
   7-236. Secondary vtable for QBoxLayout
   7-237. typeinfo for QBoxLayout
   7-238. Primary vtable for QHBoxLayout
   7-239. Secondary vtable for QHBoxLayout
   7-240. typeinfo for QHBoxLayout
   7-241. Primary vtable for QVBoxLayout
   7-242. Secondary vtable for QVBoxLayout
   7-243. typeinfo for QVBoxLayout
   7-244. Primary vtable for QStackedLayout
   7-245. Secondary vtable for QStackedLayout
   7-246. typeinfo for QStackedLayout
   7-247. libQtGui - Qt4 Layouts Function Interfaces
   7-248. typeinfo for QStyle
   7-249. typeinfo for QCommonStyle
   7-250. typeinfo for QMotifStyle
   7-251. typeinfo for QStyleFactoryInterface
   7-252. typeinfo for QWindowsStyle
   7-253. typeinfo for QCDEStyle
   7-254. typeinfo for QPlastiqueStyle
   7-255. typeinfo for QTextObject
   7-256. typeinfo for QTextBlockGroup
   7-257. typeinfo for QTextFrameLayoutData
   7-258. typeinfo for QTextFrame
   7-259. typeinfo for QTextBlockUserData
   7-260. typeinfo for QTextDocument
   7-261. typeinfo for QTextTable
   7-262. typeinfo for QTextList
   7-263. typeinfo for QTextObjectInterface
   7-264. typeinfo for QSyntaxHighlighter
   7-265. typeinfo for QClipboard
   7-266. typeinfo for QSessionManager
   7-267. typeinfo for QApplication
   7-268. typeinfo for QAction
   7-269. typeinfo for QActionGroup
   7-270. Primary vtable for QWorkspace
   7-271. Secondary vtable for QWorkspace
   7-272. typeinfo for QWorkspace
   7-273. Primary vtable for QSizeGrip
   7-274. Secondary vtable for QSizeGrip
   7-275. typeinfo for QSizeGrip
   7-276. Primary vtable for QStatusBar
   7-277. Secondary vtable for QStatusBar
   7-278. typeinfo for QStatusBar
   7-279. Primary vtable for QToolBar
   7-280. Secondary vtable for QToolBar
   7-281. typeinfo for QToolBar
   7-282. typeinfo for QWidgetAction
   7-283. libQtGui - Qt4 Main Window and Application Function
          Interfaces

   7-284. Primary vtable for QMenu
   7-285. Secondary vtable for QMenu
   7-286. typeinfo for QMenu
   7-287. typeinfo for QMenuItem
   7-288. Primary vtable for QMenuBar
   7-289. Secondary vtable for QMenuBar
   7-290. typeinfo for QMenuBar
   7-291. libQtGui - Qt4 Menus Function Interfaces
   7-292. Primary vtable for QWidget
   7-293. Secondary vtable for QWidget
   7-294. typeinfo for QWidget
   7-295. Primary vtable for QFrame
   7-296. Secondary vtable for QFrame
   7-297. typeinfo for QFrame
   7-298. Primary vtable for QLineEdit
   7-299. Secondary vtable for QLineEdit
   7-300. typeinfo for QLineEdit
   7-301. Primary vtable for QSlider
   7-302. Secondary vtable for QSlider
   7-303. typeinfo for QSlider
   7-304. Primary vtable for QTabBar
   7-305. Secondary vtable for QTabBar
   7-306. typeinfo for QTabBar
   7-307. Primary vtable for QTabWidget
   7-308. Secondary vtable for QTabWidget
   7-309. typeinfo for QTabWidget
   7-310. Primary vtable for QListView
   7-311. Secondary vtable for QListView
   7-312. typeinfo for QListView
   7-313. typeinfo for QListWidgetItem
   7-314. Primary vtable for QListWidget
   7-315. Secondary vtable for QListWidget
   7-316. typeinfo for QListWidget
   7-317. Primary vtable for QDesktopWidget
   7-318. Secondary vtable for QDesktopWidget
   7-319. typeinfo for QDesktopWidget
   7-320. typeinfo for QInputContextFactoryInterface
   7-321. typeinfo for QInputContext
   7-322. Primary vtable for QCheckBox
   7-323. Secondary vtable for QCheckBox
   7-324. typeinfo for QCheckBox
   7-325. Primary vtable for QSpinBox
   7-326. Secondary vtable for QSpinBox
   7-327. typeinfo for QSpinBox
   7-328. Primary vtable for QDoubleSpinBox
   7-329. Secondary vtable for QDoubleSpinBox
   7-330. typeinfo for QDoubleSpinBox
   7-331. Primary vtable for QLCDNumber
   7-332. Secondary vtable for QLCDNumber
   7-333. typeinfo for QLCDNumber
   7-334. Primary vtable for QStackedWidget
   7-335. Secondary vtable for QStackedWidget
   7-336. typeinfo for QStackedWidget
   7-337. Primary vtable for QPushButton
   7-338. Secondary vtable for QPushButton
   7-339. typeinfo for QPushButton
   7-340. Primary vtable for QLabel
   7-341. Secondary vtable for QLabel
   7-342. typeinfo for QLabel
   7-343. Primary vtable for QDockWidget
   7-344. Secondary vtable for QDockWidget
   7-345. typeinfo for QDockWidget
   7-346. Primary vtable for QMainWindow
   7-347. Secondary vtable for QMainWindow
   7-348. typeinfo for QMainWindow
   7-349. Primary vtable for QTextEdit
   7-350. Secondary vtable for QTextEdit
   7-351. typeinfo for QTextEdit
   7-352. Primary vtable for QProgressBar
   7-353. Secondary vtable for QProgressBar
   7-354. typeinfo for QProgressBar
   7-355. Primary vtable for QScrollBar
   7-356. Secondary vtable for QScrollBar
   7-357. typeinfo for QScrollBar
   7-358. Primary vtable for QTextBrowser
   7-359. Secondary vtable for QTextBrowser
   7-360. typeinfo for QTextBrowser
   7-361. Primary vtable for QScrollArea
   7-362. Secondary vtable for QScrollArea
   7-363. typeinfo for QScrollArea
   7-364. Primary vtable for QToolButton
   7-365. Secondary vtable for QToolButton
   7-366. typeinfo for QToolButton
   7-367. Primary vtable for QComboBox
   7-368. Secondary vtable for QComboBox
   7-369. typeinfo for QComboBox
   7-370. Primary vtable for QRadioButton
   7-371. Secondary vtable for QRadioButton
   7-372. typeinfo for QRadioButton
   7-373. Primary vtable for QFocusFrame
   7-374. Secondary vtable for QFocusFrame
   7-375. typeinfo for QFocusFrame
   7-376. Primary vtable for QToolBox
   7-377. Secondary vtable for QToolBox
   7-378. typeinfo for QToolBox
   7-379. Primary vtable for QDial
   7-380. Secondary vtable for QDial
   7-381. typeinfo for QDial
   7-382. libQtGui - Qt4 Widgets Function Interfaces
   7-383. typeinfo for QMimeSource
   7-384. typeinfo for QDrag
   7-385. Primary vtable for QDropEvent
   7-386. Secondary vtable for QDropEvent
   7-387. typeinfo for QDropEvent
   7-388. Primary vtable for QDragMoveEvent
   7-389. Secondary vtable for QDragMoveEvent
   7-390. typeinfo for QDragMoveEvent
   7-391. Primary vtable for QDragEnterEvent
   7-392. Secondary vtable for QDragEnterEvent
   7-393. typeinfo for QDragEnterEvent
   7-394. typeinfo for QDragResponseEvent
   7-395. typeinfo for QDragLeaveEvent
   7-396. libQtGui - Qt4 Drag and Drop Function Interfaces
   7-397. typeinfo for QIconEngineFactoryInterface
   7-398. typeinfo for QIconEngine
   7-399. typeinfo for QPaintEngine
   7-400. typeinfo for QGraphicsScene
   7-401. libQtGui - Qt4 2D Graphics Function Interfaces
   7-402. libQtXml Definition
   7-403. typeinfo for QXmlAttributes
   7-404. typeinfo for QXmlInputSource
   7-405. typeinfo for QXmlReader
   7-406. typeinfo for QXmlSimpleReader
   7-407. typeinfo for QXmlLocator
   7-408. typeinfo for QXmlContentHandler
   7-409. typeinfo for QXmlErrorHandler
   7-410. typeinfo for QXmlDTDHandler
   7-411. typeinfo for QXmlEntityResolver
   7-412. typeinfo for QXmlLexicalHandler
   7-413. typeinfo for QXmlDeclHandler
   7-414. Primary vtable for QXmlDefaultHandler
   7-415. Secondary vtable for QXmlDefaultHandler
   7-416. Secondary vtable for QXmlDefaultHandler
   7-417. Secondary vtable for QXmlDefaultHandler
   7-418. Secondary vtable for QXmlDefaultHandler
   7-419. Secondary vtable for QXmlDefaultHandler
   7-420. typeinfo for QXmlDefaultHandler
   7-421. libQtXml - Qt4 XML Function Interfaces
   7-422. libQtOpenGL Definition
   7-423. typeinfo for QGLContext
   7-424. Primary vtable for QGLWidget
   7-425. Secondary vtable for QGLWidget
   7-426. typeinfo for QGLWidget
   7-427. typeinfo for QGLPixelBuffer
   7-428. typeinfo for QGLFramebufferObject
   7-429. libQtOpenGL - Qt4 OpenGL Function Interfaces
   7-430. libQtSql Definition
   7-431. typeinfo for QSqlResult
   7-432. typeinfo for QSqlDriverFactoryInterface
   7-433. Primary vtable for QSqlDriverPlugin
   7-434. Secondary vtable for QSqlDriverPlugin
   7-435. typeinfo for QSqlDriverPlugin
   7-436. typeinfo for QSqlDriver
   7-437. typeinfo for QSqlQueryModel
   7-438. typeinfo for QSqlTableModel
   7-439. typeinfo for QSqlRelationalTableModel
   7-440. libQtSql - Qt4 SQL Function Interfaces
   7-441. libQtSvg Definition
   7-442. typeinfo for QSvgRenderer
   7-443. Primary vtable for QSvgWidget
   7-444. Secondary vtable for QSvgWidget
   7-445. typeinfo for QSvgWidget
   7-446. libQtSvg - Qt4 Svg Function Interfaces
   7-447. libQtNetwork Definition
   7-448. typeinfo for QHttpHeader
   7-449. typeinfo for QHttpResponseHeader
   7-450. typeinfo for QHttpRequestHeader
   7-451. typeinfo for QHttp
   7-452. typeinfo for QAbstractSocket
   7-453. typeinfo for QUrlInfo
   7-454. typeinfo for QFtp
   7-455. typeinfo for QTcpServer
   7-456. typeinfo for QUdpSocket
   7-457. typeinfo for QTcpSocket
   A-1. libGL Function Interfaces
   A-2. libGLU Function Interfaces
   A-3. libICE Function Interfaces
   A-4. libSM Function Interfaces
   A-5. libX11 Function Interfaces
   A-6. libXext Function Interfaces
   A-7. libXft Function Interfaces
   A-8. libXi Function Interfaces
   A-9. libXrender Function Interfaces
   A-10. libXt Function Interfaces
   A-11. libXt Data Interfaces
   A-12. libXtst Function Interfaces
   A-13. libcairo Function Interfaces
   A-14. libcairo-gobject Function Interfaces
   A-15. libcairo-script-interpreter Function Interfaces
   A-16. libfontconfig Function Interfaces
   A-17. libfreetype Function Interfaces
   A-18. libjpeg Function Interfaces
   A-19. libpng12 Function Interfaces
   A-20. libpng12 Data Interfaces
   A-21. libtiff Function Interfaces
   A-22. libxcb Function Interfaces
   A-23. libxcb Data Interfaces
   A-24. libQtCore Function Interfaces
   A-25. libQtGui Function Interfaces
   A-26. libQtOpenGL Function Interfaces
   A-27. libQtSql Function Interfaces
   A-28. libQtSvg Function Interfaces
   A-29. libQtXml Function Interfaces
   A-30. libasound Function Interfaces
   A-31. libasound Data Interfaces
     __________________________________________________________

Foreword

   This is version 5.0 of the Linux Standard Base Desktop
   Specification for X86. This specification is one of a series of
   volumes under the collective title Linux Standard Base:

     * Common
     * Core
     * Desktop
     * Languages
     * Imaging

   Note that the Core and Desktop volumes consist of a generic
   volume augmented by an architecture-specific volume.
     __________________________________________________________

Status of this Document

   This is a released specification, version 5.0. Other documents
   may supersede or augment this specification.

   A list of current released Linux Standard Base (LSB)
   specifications is available at http://refspecs.linuxbase.org.

   If you wish to make comments regarding this document in a
   manner that is tracked by the LSB project, please submit them
   using our public bug database at http://bugs.linuxbase.org.
   Please enter your feedback, carefully indicating the title of
   the section for which you are submitting feedback, and the
   volume and version of the specification where you found the
   problem, quoting the incorrect text if appropriate. If you are
   suggesting a new feature, please indicate what the problem you
   are trying to solve is. That is more important than the
   solution, in fact.

   If you do not have or wish to create a bug database account
   then you can also e-mail feedback to
   <lsb-discuss@lists.linuxfoundation.org> (subscribe, archives),
   and arrangements will be made to transpose the comments to our
   public bug database.
     __________________________________________________________

Introduction

   The LSB defines a binary interface for application programs
   that are compiled and packaged for LSB-conforming
   implementations on many different hardware architectures. A
   binary specification must include information specific to the
   computer processor architecture for which it is intended. To
   avoid the complexity of conditional descriptions, the
   specification has instead been divided into generic parts which
   are augmented by one of several architecture-specific parts,
   depending on the target processor architecture; the generic
   part will indicate when reference must be made to the
   architecture part, and vice versa.

   This document should be used in conjunction with the documents
   it references. This document enumerates the system components
   it includes, but descriptions of those components may be
   included entirely or partly in this document, partly in other
   documents, or entirely in other reference documents. For
   example, the section that describes system service routines
   includes a list of the system routines supported in this
   interface, formal declarations of the data structures they use
   that are visible to applications, and a pointer to the
   underlying referenced specification for information about the
   syntax and semantics of each call. Only those routines not
   described in standards referenced by this document, or
   extensions to those standards, are described in the detail.
   Information referenced in this way is as much a part of this
   document as is the information explicitly included here.

   The specification carries a version number of either the form
   x.y or x.y.z. This version number carries the following
   meaning:

    1. The first number (x) is the major version number. Versions
       sharing the same major version number shall be compatible
       in a backwards direction; that is, a newer version shall be
       compatible with an older version. Any deletion of a library
       results in a new major version number. Interfaces marked as
       deprecated may be removed from the specification at a major
       version change.
    2. The second number (y) is the minor version number.
       Libraries and individual interfaces may be added, but not
       removed. Interfaces may be marked as deprecated at a minor
       version change. Other minor changes may be permitted at the
       discretion of the LSB workgroup.
    3. The third number (z), if present, is the editorial level.
       Only editorial changes should be included in such versions.

   Since this specification is a descriptive Application Binary
   Interface, and not a source level API specification, it is not
   possible to make a guarantee of 100% backward compatibility
   between major releases. However, it is the intent that those
   parts of the binary interface that are visible in the source
   level API will remain backward compatible from version to
   version, except where a feature marked as "Deprecated" in one
   release may be removed from a future release. Implementors are
   strongly encouraged to make use of symbol versioning to permit
   simultaneous support of applications conforming to different
   releases of this specification.

   LSB is a trademark of the Linux Foundation. Developers of
   applications or implementations interested in using the
   trademark should see the Linux Foundation Certification Policy
   for details.

I. Introductory Elements

   Table of Contents
   1. Scope

        1.1. General
        1.2. Module Specific Scope

   2. References

        2.1. Normative References
        2.2. Informative References/Bibliography

   3. Requirements

        3.1. Relevant Libraries

   4. Terms and Definitions
   5. Documentation Conventions
     __________________________________________________________

Chapter 1. Scope

1.1. General

   The Linux Standard Base (LSB) defines a system interface for
   compiled applications and a minimal environment for support of
   installation scripts. Its purpose is to enable a uniform
   industry standard environment for high-volume applications
   conforming to the LSB.

   These specifications are composed of two basic parts: a common
   part describing those parts of the interface that remain
   constant across all implementations of the LSB, and an
   architecture-specific part describing the parts of the
   interface that vary by processor architecture. Together, the
   common part and the relevant architecture-specific part for a
   single hardware architecture provide a complete interface
   specification for compiled application programs on systems that
   share a common hardware architecture.

   The LSB contains both a set of Application Program Interfaces
   (APIs) and Application Binary Interfaces (ABIs). APIs may
   appear in the source code of portable applications, while the
   compiled binary of that application may use the larger set of
   ABIs. A conforming implementation provides all of the ABIs
   listed here. The compilation system may replace (e.g. by macro
   definition) certain APIs with calls to one or more of the
   underlying binary interfaces, and may insert calls to binary
   interfaces as needed.

   The LSB is primarily a binary interface definition. Not all of
   the source level APIs available to applications may be
   contained in this specification.
     __________________________________________________________

1.2. Module Specific Scope

   This is the X86 architecture specific part of the Desktop
   module of the Linux Standard Base (LSB). This part supplements
   the common part of the LSB Desktop module with those interfaces
   that differ between architectures.

   This part should be used in conjunction with the common part of
   LSB Desktop. Whenever a section of the common part is
   supplemented by architecture-specific information, the common
   part includes a reference to the architecture-specific part.
   This part may also contain additional information that is not
   referenced in the common part.

   Interfaces described in this part of LSB Desktop are mandatory
   except where explicitly listed otherwise. Interfaces described
   in the LSB Desktop module supplement those described in the LSB
   Core module. They do not depend on other LSB modules.
     __________________________________________________________

Chapter 2. References

2.1. Normative References

   The specifications listed below are referenced in whole or in
   part by the LSB Desktop specification. Such references may be
   normative or informative; a reference to specification shall
   only be considered normative if it is explicitly cited as such.
   The LSB Desktop specification may make normative references to
   a portion of these specifications (that is, to define a
   specific function or group of functions); in such cases, only
   the explicitly referenced portion of the specification is to be
   considered normative.

   Table 2-1. Normative References
   Name Title URL
   ATK 2.2.0 Reference Manual ATK 2.2.0 Reference Manual
   http://developer.gnome.org/atk/2.2/index.html
   Double Buffer Extension Library Double Buffer Extension Library
   - Protocol Version 1.0
   http://refspecs.linux-foundation.org/X11/dbelib.pdf
   Fontconfig Developers Reference Fontconfig Developers
   Reference, Version 2.6.0
   http://refspecs.linuxfoundation.org/fontconfig-2.6.0
   Gdk 2.10.14 Reference Manual Gdk 2.10.14 Reference Manual
   http://library.gnome.org/devel/gdk/2.10/
   Gdk-pixbuf 2.26.0 Reference Manual Gdk-pixbuf 2.26.0 Reference
   Manual http://developer.gnome.org/gdk-pixbuf/2.26
   Gio 2.32 Reference Manual Gio 2.32 Reference Manual
   http://developer.gnome.org/gio/2.32
   Glib 2.32 Reference Manual Glib 2.32 Reference Manual
   http://developer.gnome.org/glib/2.32
   Gobject 2.32 Reference Manual Gobject 2.32 Reference Manual
   http://developer.gnome.org/gobject/2.32
   Gtk+ 2.10.14 Reference Manual Gtk+ 2.10.14 Reference Manual
   http://library.gnome.org/devel/gtk/2.10/
   ISO C (1999) ISO/IEC 9899:1999 - Programming Languages -- C
   ISO/IEC 14882: 2003 C++ Language ISO/IEC 14882: 2003
   Programming languages --C++
   Itanium(TM) C++ ABI Itanium(TM) C++ ABI (Revision 1.86)
   http://refspecs.linuxfoundation.org/cxxabi-1.86.html
   Libtiff 4.0.2 Reference Manual Libtiff 4.0.2 Reference Manual
   http://www.libtiff.org/man/index.html
   Libxcb API Libxcb API http://xcb.freedesktop.org/XcbApi/
   OpenGL 2.1 The OpenGL® Graphics System: A Specification
   (Version 2.1)
   http://www.opengl.org/registry/doc/glspec21.20061201.pdf
   OpenGL ABI OpenGL® Application Binary Interface for Linux
   http://www.opengl.org/registry/ABI/
   OpenGL Extensions OpenGL® Graphics with the X Window System®
   (Version 1.3)
   http://opengl.org/documentation/specs/glx/glx1.3.pdf
   OpenGL Utilities The OpenGL Graphics System Utility Library
   (Version 1.3)
   http://www.opengl.org/documentation/specs/glu/glu1_3.pdf
   Pango 1.30.1 Reference Manual Pango 1.30.1 Reference Manual
   http://developer.gnome.org/pango/1.30/index.html
   POSIX 1003.1-2008 (ISO/IEC 9945-2009) Portable Operating System
   Interface (POSIX®) 2008 Edition / The Open Group Technical
   Standard Base Specifications, Issue 7
   http://www.unix.org/version4/
   QtCore 4.2.0 Qt 4.2.0 Reference Manual
   http://doc.qt.digia.com/4.2/qtcore.html
   QtGui 4.2.0 Qt 4.2.0 Reference Manual
   http://doc.qt.digia.com/4.2/qtgui.html
   QtNetwork 4.2.0 Qt 4.2.0 Reference Manual
   http://doc.qt.digia.com/4.2/qtnetwork.html
   QtOpenGL 4.2.0 Qt 4.2.0 Reference Manual
   http://doc.qt.digia.com/4.2/qtopengl.html
   QtSql 4.2.0 Qt 4.2.0 Reference Manual
   http://doc.qt.digia.com/4.2/qtsql.html
   QtSvg 4.2.0 Qt 4.2.0 Reference Manual
   http://doc.qt.digia.com/4.2/qtsvg.html
   QtXml 4.2.0 Qt 4.2.0 Reference Manual
   http://doc.qt.digia.com/4.2/qtxml.html
   The MIT Shared Memory Extension MIT-SHM - The MIT Shared Memory
   Extension - X version 11, Release 5
   http://refspecs.linux-foundation.org/X11/mit-shm.pdf
   X Display Power Management Signaling X Display Power Management
   Signaling (DPMS) Extension - Library Specificationi - Version
   1.0 http://refspecs.linux-foundation.org/X11/DPMSlib.pdf
   X Extended Visual Interface Extension Extended Visual
   Information Extension - Version 1.0
   http://refspecs.linux-foundation.org/X11/evi.pdf
   X Nonrectangular Window Shape Extension Library X
   Nonrectangular Window Shape Extension Library - Version 1.0
   http://refspecs.linux-foundation.org/X11/shapelib.pdf
   X Record Extension Library X Record Extension Library - Version
   1.13 http://refspecs.linux-foundation.org/X11/recordlib.pdf
   X Security Extension Specification Security Extension
   Specification - Version 7.1
   http://refspecs.linux-foundation.org/X11/security.pdf
   X Synchronization Extension Library X Synchronization Extension
   Library - Version 3.0
   http://refspecs.linux-foundation.org/X11/synclib.pdf
   X11 C Library Xlib - C Language X Interface - X Version 11
   Release 6.4 http://refspecs.linux-foundation.org/X11/xlib.pdf
   X11 Input Library X Input Device Extension Library - X Version
   11, Release 6.4
   http://refspecs.linux-foundation.org/X11/Xinput.pdf
   X11 Inter-Client Exchange Inter-Client Exchange Library -
   Version 1.0 http://refspecs.linux-foundation.org/X11/ICElib.pdf
   X11 Keyboard Extension X Keyboard Extension Library
   Specification - X Version 11, Release 6.4
   http://refspecs.linux-foundation.org/X11/XKBlib.pdf
   X11 Session Management X Session Management Library - Version
   1.0 http://refspecs.linux-foundation.org/X11/SMlib.pdf
   X11 Toolkit Intrinsics X Toolkit Intrinsics - C Language
   Interface - X Version 11, Release 6.4
   http://refspecs.linux-foundation.org/X11/intrinsics.pdf
   Xft Placeholder Xft Specification Placeholder
   Xrender Placeholder Xrender Specification Placeholder
   http://refspecs.linux-foundation.org/X11/XRenderProtocol.html
   XTEST Extension Library XTEST Extension Library - Version 2.2
   http://refspecs.linux-foundation.org/X11/xtestlib.pdf
     __________________________________________________________

2.2. Informative References/Bibliography

   In addition, the specifications listed below provide essential
   background information to implementors of this specification.
   These references are included for information only.

   Table 2-2. Other References
   Name Title URL
   A description on how to use and modify libpng A description on
   how to use and modify libpng
   http://www.libpng.org/pub/png/libpng-1.2.5-manual.html
   ALSA Library API Reference ALSA Library API Reference
   http://www.alsa-project.org/alsa-doc/alsa-lib/
   Base Directory Spec XDG Base Directory Specification Version
   0.6
   http://standards.freedesktop.org/basedir-spec/basedir-spec-0.6.
   html
   Cairo API Reference Cairo Vector Graphics API Specification for
   1.12.4 http://cairographics.org/manual-1.12.4
   Desktop Entry Spec Desktop Entry Specification Version 1.0
   http://standards.freedesktop.org/desktop-entry-spec/desktop-ent
   ry-spec-1.0.html
   Desktop Menu Spec Desktop Menu Specification Version 1.0
   http://standards.freedesktop.org/menu-spec/menu-spec-1.0.html
   FreeType 2.2 Reference FreeType 2.2.1 API Reference
   http://refspecs.linuxfoundation.org/freetype/freetype-doc-2.2.1
   /docs/reference/ft2-toc.html
   Icon Theme Spec Icon Theme Specification Version 0.11
   http://standards.freedesktop.org/icon-theme-spec/icon-theme-spe
   c-0.11.html
   Independent JPEG Group Independent JPEG Group
   http://www.ijg.org/
   xdg-utils reference Portland Project XDG Utilities Reference
   1.0 http://portland.freedesktop.org/xdg-utils-1.0/
     __________________________________________________________

Chapter 3. Requirements

3.1. Relevant Libraries

   The libraries listed in Table 3-1 shall be available on a Linux
   Standard Base - Desktop system, with the specified runtime
   names. This list may be supplemented or amended by the
   architecture-specific specification.

   Table 3-1. Standard Library Names
          Library                Runtime Name
   libQtCore              libQtCore.so.4
   libQtGui               libQtGui.so.4
   libQtNetwork           libQtNetwork.so.4
   libQtOpenGL            libQtOpenGL.so.4
   libQtSql               libQtSql.so.4
   libQtSvg               libQtSvg.so.4
   libQtXml               libQtXml.so.4
   libatk-1.0             libatk-1.0.so.0
   libgdk-x11-2.0         libgdk-x11-2.0.so.0
   libgdk_pixbuf-2.0      libgdk_pixbuf-2.0.so.0
   libgdk_pixbuf_xlib-2.0 libgdk_pixbuf_xlib-2.0.so.0
   libgio-2.0             libgio-2.0.so.0
   libglib-2.0            libglib-2.0.so.0
   libgmodule-2.0         libgmodule-2.0.so.0
   libgobject-2.0         libgobject-2.0.so.0
   libgthread-2.0         libgthread-2.0.so.0
   libgtk-x11-2.0         libgtk-x11-2.0.so.0
   libpango-1.0           libpango-1.0.so.0
   libpangocairo-1.0      libpangocairo-1.0.so.0
   libpangoft2-1.0        libpangoft2-1.0.so.0
   libpangoxft-1.0        libpangoxft-1.0.so.0

   These libraries will be in an implementation-defined directory
   which the dynamic linker shall search by default.
     __________________________________________________________

Chapter 4. Terms and Definitions

   For the purposes of this document, the terms given in ISO/IEC
   Directives, Part 2, Annex H and the following apply.

   archLSB
          Some LSB specification documents have both a generic,
          architecture-neutral part and an architecture-specific
          part. The latter describes elements whose definitions
          may be unique to a particular processor architecture.
          The term archLSB may be used in the generic part to
          refer to the corresponding section of the
          architecture-specific part.

   Binary Standard, ABI
          The total set of interfaces that are available to be
          used in the compiled binary code of a conforming
          application, including the run-time details such as
          calling conventions, binary format, C++ name mangling,
          etc.

   Implementation-defined
          Describes a value or behavior that is not defined by
          this document but is selected by an implementor. The
          value or behavior may vary among implementations that
          conform to this document. An application should not rely
          on the existence of the value or behavior. An
          application that relies on such a value or behavior
          cannot be assured to be portable across conforming
          implementations. The implementor shall document such a
          value or behavior so that it can be used correctly by an
          application.

   Shell Script
          A file that is read by an interpreter (e.g., awk). The
          first line of the shell script includes a reference to
          its interpreter binary.

   Source Standard, API
          The total set of interfaces that are available to be
          used in the source code of a conforming application. Due
          to translations, the Binary Standard and the Source
          Standard may contain some different interfaces.

   Undefined
          Describes the nature of a value or behavior not defined
          by this document which results from use of an invalid
          program construct or invalid data input. The value or
          behavior may vary among implementations that conform to
          this document. An application should not rely on the
          existence or validity of the value or behavior. An
          application that relies on any particular value or
          behavior cannot be assured to be portable across
          conforming implementations.

   Unspecified
          Describes the nature of a value or behavior not
          specified by this document which results from use of a
          valid program construct or valid data input. The value
          or behavior may vary among implementations that conform
          to this document. An application should not rely on the
          existence or validity of the value or behavior. An
          application that relies on any particular value or
          behavior cannot be assured to be portable across
          conforming implementations.

   In addition, for the portions of this specification which build
   on IEEE Std 1003.1-2001, the definitions given in IEEE Std
   1003.1-2001, Base Definitions, Chapter 3 apply.
     __________________________________________________________

Chapter 5. Documentation Conventions

   Throughout this document, the following typographic conventions
   are used:

   function()

   the name of a function
   command

   the name of a command or utility
   CONSTANT

   a constant value
   parameter

   a parameter
   variable

   a variable

   Throughout this specification, several tables of interfaces are
   presented. Each entry in these tables has the following format:

   name

   the name of the interface
   (symver)

   An optional symbol version identifier, if required.
   [refno]

   A reference number indexing the table of referenced
   specifications that follows this table.

   For example,

   forkpty(GLIBC_2.0) [SUSv4]

   refers to the interface named forkpty() with symbol version
   GLIBC_2.0 that is defined in the reference indicated by the tag
   SUSv4.

     Note: For symbols with versions which differ between
     architectures, the symbol versions are defined in the
     architecture specific parts of of this module specification
     only. In the generic part, they will appear without symbol
     versions.

II. GTK+ Stack Libraries

   Table of Contents
   6. Libraries

        6.1. Introduction
        6.2. Interfaces for libglib-2.0

              6.2.1. GTK General purpose utility library
              6.2.2. Glib Arrays
              6.2.3. Glib Asynchronous Queues
              6.2.4. Glib Atomic Operations
              6.2.5. Glib Automatic String Completion
              6.2.6. Glib Balanced Binary Trees
              6.2.7. Glib Byte Arrays
              6.2.8. Glib Caches
              6.2.9. Glib Character Set Conversion
              6.2.10. Glib Commandline Option Parser
              6.2.11. Glib Datasets
              6.2.12. Glib Date and Time Functions
              6.2.13. Glib Double-Ended Queues
              6.2.14. Glib Doubly-Linked Lists
              6.2.15. Glib Error Reporting
              6.2.16. Glib File Utilities
              6.2.17. Glib Glob-Style Pattern Matching
              6.2.18. Glib Hash Tables
              6.2.19. Glib Hook Functions
              6.2.20. Glib IO Channels
              6.2.21. Glib Internationalization
              6.2.22. Glib Key-Value File Parser
              6.2.23. Glib Keyed Data Lists
              6.2.24. Glib Lexical Scanner
              6.2.25. Glib Memory Allocation
              6.2.26. Glib Memory Allocators
              6.2.27. Glib Memory Chunks
              6.2.28. Glib Message Logging
              6.2.29. Glib Message Output and Debugging Functions
              6.2.30. Glib Miscellaneous Utility Functions
              6.2.31. Glib N-ary Trees
              6.2.32. Glib Pointer Arrays
              6.2.33. Glib Quarks
              6.2.34. Glib Random Numbers
              6.2.35. Glib Relations and Tuples
              6.2.36. Glib Shell-related Utilities
              6.2.37. Glib Simple XML Subset Parser
              6.2.38. Glib Singly-Linked Lists
              6.2.39. Glib Spawning Processes
              6.2.40. Glib String Chunks
              6.2.41. Glib String Utility Functions
              6.2.42. Glib Strings
              6.2.43. Glib - The Main Event Loop
              6.2.44. Glib Thread Pools
              6.2.45. Glib Threads
              6.2.46. Glib Timers
              6.2.47. Glib Trash Stacks
              6.2.48. Glib Unicode Manipulation
              6.2.49. Glib Version Information
              6.2.50. Glib Bookmark File Parser
              6.2.51. Glib Memory Slices
              6.2.52. Glib Base64 Encoding

        6.3. Data Definitions for libglib-2.0

              6.3.1. glib-2.0/glib.h
              6.3.2. glib-2.0/glib/gi18n.h
              6.3.3. glib-2.0/glib/gstdio.h

        6.4. Interfaces for libgmodule-2.0

              6.4.1. Glib-Dynamic loading of Modules

        6.5. Data Definitions for libgmodule-2.0

              6.5.1. glib-2.0/gmodule.h

        6.6. Interfaces for libgobject-2.0

              6.6.1. Gobject GTypeModule
              6.6.2. Gobject Enums and Flags
              6.6.3. Gobject Signals
              6.6.4. Gobject Value arrays
              6.6.5. Gobject Generic Values
              6.6.6. Gobject Parameters and Values
              6.6.7. Gobject GParamSpec
              6.6.8. Gobject GBoxed
              6.6.9. Gobject Closures
              6.6.10. Gobject Gobject
              6.6.11. Gobject GType
              6.6.12. Gobject GTypePlugin
              6.6.13. Gobject GBinding

        6.7. Data Definitions for libgobject-2.0

              6.7.1. glib-2.0/glib-object.h
              6.7.2. glib-2.0/gobject/gvaluecollector.h

        6.8. Interfaces for libgthread-2.0

              6.8.1. Glib thread abstraction

        6.9. Interfaces for libgio-2.0

              6.9.1. libgio-2.0 interfaces

        6.10. Data Definitions for libgio-2.0

              6.10.1. gio-unix-2.0/gio/gdesktopappinfo.h
              6.10.2. gio-unix-2.0/gio/gfiledescriptorbased.h
              6.10.3. gio-unix-2.0/gio/gunixconnection.h
              6.10.4. gio-unix-2.0/gio/gunixcredentialsmessage.h
              6.10.5. gio-unix-2.0/gio/gunixfdlist.h
              6.10.6. gio-unix-2.0/gio/gunixfdmessage.h
              6.10.7. gio-unix-2.0/gio/gunixinputstream.h
              6.10.8. gio-unix-2.0/gio/gunixmounts.h
              6.10.9. gio-unix-2.0/gio/gunixoutputstream.h
              6.10.10. gio-unix-2.0/gio/gunixsocketaddress.h
              6.10.11. glib-2.0/gio/gaction.h
              6.10.12. glib-2.0/gio/gactiongroup.h
              6.10.13. glib-2.0/gio/gactionmap.h
              6.10.14. glib-2.0/gio/gappinfo.h
              6.10.15. glib-2.0/gio/gapplication.h
              6.10.16. glib-2.0/gio/gapplicationcommandline.h
              6.10.17. glib-2.0/gio/gasyncinitable.h
              6.10.18. glib-2.0/gio/gasyncresult.h
              6.10.19. glib-2.0/gio/gbufferedinputstream.h
              6.10.20. glib-2.0/gio/gbufferedoutputstream.h
              6.10.21. glib-2.0/gio/gcancellable.h
              6.10.22. glib-2.0/gio/gcharsetconverter.h
              6.10.23. glib-2.0/gio/gconverter.h
              6.10.24. glib-2.0/gio/gconverterinputstream.h
              6.10.25. glib-2.0/gio/gconverteroutputstream.h
              6.10.26. glib-2.0/gio/gcredentials.h
              6.10.27. glib-2.0/gio/gdatainputstream.h
              6.10.28. glib-2.0/gio/gdataoutputstream.h
              6.10.29. glib-2.0/gio/gdbusactiongroup.h
              6.10.30. glib-2.0/gio/gdbusauthobserver.h
              6.10.31. glib-2.0/gio/gdbusconnection.h
              6.10.32. glib-2.0/gio/gdbuserror.h
              6.10.33. glib-2.0/gio/gdbusinterface.h
              6.10.34. glib-2.0/gio/gdbusinterfaceskeleton.h
              6.10.35. glib-2.0/gio/gdbusintrospection.h
              6.10.36. glib-2.0/gio/gdbusmenumodel.h
              6.10.37. glib-2.0/gio/gdbusmessage.h
              6.10.38. glib-2.0/gio/gdbusmethodinvocation.h
              6.10.39. glib-2.0/gio/gdbusnameowning.h
              6.10.40. glib-2.0/gio/gdbusnamewatching.h
              6.10.41. glib-2.0/gio/gdbusobject.h
              6.10.42. glib-2.0/gio/gdbusobjectmanager.h
              6.10.43. glib-2.0/gio/gdbusobjectmanagerclient.h
              6.10.44. glib-2.0/gio/gdbusobjectmanagerserver.h
              6.10.45. glib-2.0/gio/gdbusobjectproxy.h
              6.10.46. glib-2.0/gio/gdbusobjectskeleton.h
              6.10.47. glib-2.0/gio/gdbusproxy.h
              6.10.48. glib-2.0/gio/gdbusserver.h
              6.10.49. glib-2.0/gio/gdrive.h
              6.10.50. glib-2.0/gio/gemblem.h
              6.10.51. glib-2.0/gio/gemblemedicon.h
              6.10.52. glib-2.0/gio/gfile.h
              6.10.53. glib-2.0/gio/gfileattribute.h
              6.10.54. glib-2.0/gio/gfileenumerator.h
              6.10.55. glib-2.0/gio/gfileicon.h
              6.10.56. glib-2.0/gio/gfileinfo.h
              6.10.57. glib-2.0/gio/gfileinputstream.h
              6.10.58. glib-2.0/gio/gfileiostream.h
              6.10.59. glib-2.0/gio/gfilemonitor.h
              6.10.60. glib-2.0/gio/gfilenamecompleter.h
              6.10.61. glib-2.0/gio/gfileoutputstream.h
              6.10.62. glib-2.0/gio/gfilterinputstream.h
              6.10.63. glib-2.0/gio/gfilteroutputstream.h
              6.10.64. glib-2.0/gio/gicon.h
              6.10.65. glib-2.0/gio/ginetaddress.h
              6.10.66. glib-2.0/gio/ginetaddressmask.h
              6.10.67. glib-2.0/gio/ginetsocketaddress.h
              6.10.68. glib-2.0/gio/ginitable.h
              6.10.69. glib-2.0/gio/ginputstream.h
              6.10.70. glib-2.0/gio/gio.h
              6.10.71. glib-2.0/gio/gioenums.h
              6.10.72. glib-2.0/gio/gioenumtypes.h
              6.10.73. glib-2.0/gio/gioerror.h
              6.10.74. glib-2.0/gio/giomodule.h
              6.10.75. glib-2.0/gio/giostream.h
              6.10.76. glib-2.0/gio/giotypes.h
              6.10.77. glib-2.0/gio/gloadableicon.h
              6.10.78. glib-2.0/gio/gmemoryinputstream.h
              6.10.79. glib-2.0/gio/gmemoryoutputstream.h
              6.10.80. glib-2.0/gio/gmenu.h
              6.10.81. glib-2.0/gio/gmenumodel.h
              6.10.82. glib-2.0/gio/gmount.h
              6.10.83. glib-2.0/gio/gmountoperation.h
              6.10.84. glib-2.0/gio/gnativevolumemonitor.h
              6.10.85. glib-2.0/gio/gnetworkaddress.h
              6.10.86. glib-2.0/gio/gnetworkmonitor.h
              6.10.87. glib-2.0/gio/gnetworkservice.h
              6.10.88. glib-2.0/gio/goutputstream.h
              6.10.89. glib-2.0/gio/gpermission.h
              6.10.90. glib-2.0/gio/gpollableinputstream.h
              6.10.91. glib-2.0/gio/gpollableoutputstream.h
              6.10.92. glib-2.0/gio/gproxy.h
              6.10.93. glib-2.0/gio/gproxyaddress.h
              6.10.94. glib-2.0/gio/gproxyaddressenumerator.h
              6.10.95. glib-2.0/gio/gproxyresolver.h
              6.10.96. glib-2.0/gio/gremoteactiongroup.h
              6.10.97. glib-2.0/gio/gresolver.h
              6.10.98. glib-2.0/gio/gresource.h
              6.10.99. glib-2.0/gio/gseekable.h
              6.10.100. glib-2.0/gio/gsettings.h
              6.10.101. glib-2.0/gio/gsettingsbackend.h
              6.10.102. glib-2.0/gio/gsettingsschema.h
              6.10.103. glib-2.0/gio/gsimpleaction.h
              6.10.104. glib-2.0/gio/gsimpleactiongroup.h
              6.10.105. glib-2.0/gio/gsimpleasyncresult.h
              6.10.106. glib-2.0/gio/gsimplepermission.h
              6.10.107. glib-2.0/gio/gsocket.h
              6.10.108. glib-2.0/gio/gsocketaddress.h
              6.10.109. glib-2.0/gio/gsocketaddressenumerator.h
              6.10.110. glib-2.0/gio/gsocketclient.h
              6.10.111. glib-2.0/gio/gsocketconnectable.h
              6.10.112. glib-2.0/gio/gsocketconnection.h
              6.10.113. glib-2.0/gio/gsocketcontrolmessage.h
              6.10.114. glib-2.0/gio/gsocketlistener.h
              6.10.115. glib-2.0/gio/gsocketservice.h
              6.10.116. glib-2.0/gio/gsrvtarget.h
              6.10.117. glib-2.0/gio/gtcpconnection.h
              6.10.118. glib-2.0/gio/gtcpwrapperconnection.h
              6.10.119. glib-2.0/gio/gthemedicon.h
              6.10.120. glib-2.0/gio/gthreadedsocketservice.h
              6.10.121. glib-2.0/gio/gtlsbackend.h
              6.10.122. glib-2.0/gio/gtlscertificate.h
              6.10.123. glib-2.0/gio/gtlsclientconnection.h
              6.10.124. glib-2.0/gio/gtlsconnection.h
              6.10.125. glib-2.0/gio/gtlsdatabase.h
              6.10.126. glib-2.0/gio/gtlsfiledatabase.h
              6.10.127. glib-2.0/gio/gtlsinteraction.h
              6.10.128. glib-2.0/gio/gtlspassword.h
              6.10.129. glib-2.0/gio/gtlsserverconnection.h
              6.10.130. glib-2.0/gio/gvfs.h
              6.10.131. glib-2.0/gio/gvolume.h
              6.10.132. glib-2.0/gio/gvolumemonitor.h
              6.10.133. glib-2.0/gio/gzlibcompressor.h
              6.10.134. glib-2.0/gio/gzlibdecompressor.h

        6.11. Interfaces for libatk-1.0

              6.11.1. GTK Accessibility Toolkit

        6.12. Data Definitions for libatk-1.0

              6.12.1. atk-1.0/atk/atk-enum-types.h
              6.12.2. atk-1.0/atk/atk.h
              6.12.3. atk-1.0/atk/atkplug.h
              6.12.4. atk-1.0/atk/atksocket.h
              6.12.5. atk-1.0/atk/atkwindow.h

        6.13. Interfaces for libpango-1.0

              6.13.1. GTK Internationalized Text Layout and
                      Rendering library

        6.14. Data Definitions for libpango-1.0

              6.14.1. pango-1.0/pango/pango-bidi-type.h
              6.14.2. pango-1.0/pango/pango-utils.h
              6.14.3. pango-1.0/pango/pango.h

        6.15. Interfaces for libpangocairo-1.0

              6.15.1. Pango Cairo Rendering

        6.16. Data Definitions for libpangocairo-1.0

              6.16.1. pango-1.0/pango/pangocairo.h

        6.17. Interfaces for libpangoxft-1.0

              6.17.1. Pango Xft Fonts and Rendering library

        6.18. Data Definitions for libpangoxft-1.0

              6.18.1. pango-1.0/pango/pangoxft.h

        6.19. Interfaces for libpangoft2-1.0

              6.19.1. Pango Freetype Fonts and Rendering library

        6.20. Data Definitions for libpangoft2-1.0

              6.20.1. pango-1.0/pango/pangofc-decoder.h
              6.20.2. pango-1.0/pango/pangofc-fontmap.h
              6.20.3. pango-1.0/pango/pangoft2.h

        6.21. Interfaces for libgdk_pixbuf-2.0

              6.21.1. GDK pixbuf rendering on drawables library

        6.22. Data Definitions for libgdk_pixbuf-2.0

              6.22.1. gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf.h
              6.22.2. gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixdata.h

        6.23. Interfaces for libgdk_pixbuf_xlib-2.0

              6.23.1. GDK pixbuf rendering to an X drawable
                      library

        6.24. Data Definitions for libgdk_pixbuf_xlib-2.0

              6.24.1.
                      gdk-pixbuf-2.0/gdk-pixbuf-xlib/gdk-pixbuf-xli
                      b.h

        6.25. Interfaces for libgdk-x11-2.0

              6.25.1. GTK Drawing toolkit

        6.26. Data Definitions for libgdk-x11-2.0

              6.26.1. gtk-2.0/gdk/gdk.h
              6.26.2. gtk-2.0/gdk/gdkkeysyms.h
              6.26.3. gtk-2.0/gdk/gdkx.h

        6.27. Interfaces for libgtk-x11-2.0

              6.27.1. GTK main Widgets library

        6.28. Data Definitions for libgtk-x11-2.0

              6.28.1. gtk-2.0/gtk/gtk.h
              6.28.2. gtk-2.0/gtk/gtkenums.h
              6.28.3. gtk-2.0/gtk/gtkprintoperationpreview.h
              6.28.4. gtk-2.0/gtk/gtkrecentfilter.h
              6.28.5. gtk-2.0/gtk/gtkrecentmanager.h
              6.28.6. gtk-2.0/gtk/gtkstatusicon.h
              6.28.7. gtk-2.0/gtk/gtktextbufferrichtext.h
              6.28.8.
                      gtk-unix-print-2.0/gtk/gtkpagesetupunixdialog
                      .h

              6.28.9. gtk-unix-print-2.0/gtk/gtkprinter.h
              6.28.10. gtk-unix-print-2.0/gtk/gtkprintjob.h
              6.28.11. gtk-unix-print-2.0/gtk/gtkprintunixdialog.h
              6.28.12. gtk-unix-print-2.0/gtk/gtkunixprint.h
     __________________________________________________________

Chapter 6. Libraries

6.1. Introduction

   A conforming implementation shall support the following
   libraries from the GTK+ stack which provide interfaces for
   creating rich graphical user interface applications.

   GLib

   A general-purpose utility library, not specific to graphical
   user interfaces. Glib is implemented as several libraries,
   providing a type system, a signal system, data conversion
   routines, string utilities, a filesystem abstraction and file
   utility routines, threading support and a main loop
   abstraction.

   libglib-2.0

   libgmodule-2.0

   libgobject-2.0

   libgthread-2.0

   libgio-2.0
   ATK

   ATK is the Accessibility Toolkit. It provides a set of generic
   interfaces allowing accessibility technologies to interact with
   a graphical user interface. For example, a screen reader uses
   ATK to discover the text in an interface and read it to blind
   users. GTK+ widgets have built-in support for accessibility
   using the ATK framework.

   libatk-1.0
   Pango

   Pango is a library for laying out and rendering text. It
   centers around the PangoLayout object, representing a paragraph
   of text. Pango provides the engine for GtkTextView, GtkLabel,
   GtkEntry, and other widgets that display text.

   libpango-1.0

   libpangocairo-1.0

   libpangoxft-1.0

   libpangoft2-1.0
   GdkPixbuf

   This is a small library which allows you to create GdkPixbuf
   ("pixel buffer") objects from image data or image files. Use a
   GdkPixbuf in combination with GtkImage to display images.

   libgdk_pixbuf-2.0

   libgdk_pixbuf_xlib-2.0
   GDK

   GDK is the abstraction layer that allows GTK+ to support
   multiple windowing systems. GDK provides drawing and window
   system facilities on X11, Windows, and the Linux framebuffer
   device.

   libgdk-x11-2.0
   GTK+

   The GTK+ library contains widgets, that is, GUI components such
   as GtkButton or GtkTextView.

   libgtk-x11-2.0

   There are three main parts to the definition of each of these
   libraries.

   The "Interfaces" section defines the required library name and
   version, and the required public symbols (interfaces and global
   data), as well as symbol versions, if any.

   The "Interface Definitions" section provides complete or
   partial definitions of certain interfaces where either this
   specification is the source specification, or where there are
   variations from the source specification. If an interface
   definition requires one or more header files, one of those
   headers shall include the function prototype for the interface.

   For source definitions of interfaces which include a reference
   to a header file, the contents of such header files form a part
   of the specification. The "Data Definitions" section provides
   the binary-level details for the header files from the source
   specifications, such as values for macros and enumerated types,
   as well as structure layouts, sizes and padding, etc. These
   data definitions, although presented in the form of header
   files for convenience, should not be taken a representing
   complete header files, as they are a supplement to the source
   specifications. Application developers should follow the
   guidelines of the source specifications when determining which
   header files need to be included to completely resolve all
   references.

     Note: While the Data Definitions supplement the source
     specifications, this specification itself does not require
     conforming implementations to supply any header files.
     __________________________________________________________

6.2. Interfaces for libglib-2.0

   Table 6-1 defines the library name and shared object name for
   the libglib-2.0 library

   Table 6-1. libglib-2.0 Definition
   Library: libglib-2.0
   SONAME:  libglib-2.0.so.0
     __________________________________________________________

6.2.1. GTK General purpose utility library
     __________________________________________________________

6.2.1.1. Interfaces for GTK General purpose utility library

   No external functions are defined for libglib-2.0 - GTK General
   purpose utility library in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.2. Glib Arrays
     __________________________________________________________

6.2.2.1. Interfaces for Glib Arrays

   No external functions are defined for libglib-2.0 - Glib Arrays
   in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.3. Glib Asynchronous Queues
     __________________________________________________________

6.2.3.1. Interfaces for Glib Asynchronous Queues

   No external functions are defined for libglib-2.0 - Glib
   Asynchronous Queues in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.4. Glib Atomic Operations
     __________________________________________________________

6.2.4.1. Interfaces for Glib Atomic Operations

   No external functions are defined for libglib-2.0 - Glib Atomic
   Operations in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.5. Glib Automatic String Completion
     __________________________________________________________

6.2.5.1. Interfaces for Glib Automatic String Completion

   No external functions are defined for libglib-2.0 - Glib
   Automatic String Completion in this part of the specification.
   See also the generic specification.
     __________________________________________________________

6.2.6. Glib Balanced Binary Trees
     __________________________________________________________

6.2.6.1. Interfaces for Glib Balanced Binary Trees

   No external functions are defined for libglib-2.0 - Glib
   Balanced Binary Trees in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.7. Glib Byte Arrays
     __________________________________________________________

6.2.7.1. Interfaces for Glib Byte Arrays

   No external functions are defined for libglib-2.0 - Glib Byte
   Arrays in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.8. Glib Caches
     __________________________________________________________

6.2.8.1. Interfaces for Glib Caches

   No external functions are defined for libglib-2.0 - Glib Caches
   in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.9. Glib Character Set Conversion
     __________________________________________________________

6.2.9.1. Interfaces for Glib Character Set Conversion

   No external functions are defined for libglib-2.0 - Glib
   Character Set Conversion in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.10. Glib Commandline Option Parser
     __________________________________________________________

6.2.10.1. Interfaces for Glib Commandline Option Parser

   No external functions are defined for libglib-2.0 - Glib
   Commandline Option Parser in this part of the specification.
   See also the generic specification.
     __________________________________________________________

6.2.11. Glib Datasets
     __________________________________________________________

6.2.11.1. Interfaces for Glib Datasets

   No external functions are defined for libglib-2.0 - Glib
   Datasets in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.12. Glib Date and Time Functions
     __________________________________________________________

6.2.12.1. Interfaces for Glib Date and Time Functions

   No external functions are defined for libglib-2.0 - Glib Date
   and Time Functions in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.13. Glib Double-Ended Queues
     __________________________________________________________

6.2.13.1. Interfaces for Glib Double-Ended Queues

   No external functions are defined for libglib-2.0 - Glib
   Double-Ended Queues in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.14. Glib Doubly-Linked Lists
     __________________________________________________________

6.2.14.1. Interfaces for Glib Doubly-Linked Lists

   No external functions are defined for libglib-2.0 - Glib
   Doubly-Linked Lists in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.15. Glib Error Reporting
     __________________________________________________________

6.2.15.1. Interfaces for Glib Error Reporting

   No external functions are defined for libglib-2.0 - Glib Error
   Reporting in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.16. Glib File Utilities
     __________________________________________________________

6.2.16.1. Interfaces for Glib File Utilities

   No external functions are defined for libglib-2.0 - Glib File
   Utilities in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.17. Glib Glob-Style Pattern Matching
     __________________________________________________________

6.2.17.1. Interfaces for Glib Glob-Style Pattern Matching

   No external functions are defined for libglib-2.0 - Glib
   Glob-Style Pattern Matching in this part of the specification.
   See also the generic specification.
     __________________________________________________________

6.2.18. Glib Hash Tables
     __________________________________________________________

6.2.18.1. Interfaces for Glib Hash Tables

   No external functions are defined for libglib-2.0 - Glib Hash
   Tables in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.19. Glib Hook Functions
     __________________________________________________________

6.2.19.1. Interfaces for Glib Hook Functions

   No external functions are defined for libglib-2.0 - Glib Hook
   Functions in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.20. Glib IO Channels
     __________________________________________________________

6.2.20.1. Interfaces for Glib IO Channels

   No external functions are defined for libglib-2.0 - Glib IO
   Channels in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.21. Glib Internationalization
     __________________________________________________________

6.2.21.1. Interfaces for Glib Internationalization

   No external functions are defined for libglib-2.0 - Glib
   Internationalization in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.22. Glib Key-Value File Parser
     __________________________________________________________

6.2.22.1. Interfaces for Glib Key-Value File Parser

   No external functions are defined for libglib-2.0 - Glib
   Key-Value File Parser in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.23. Glib Keyed Data Lists
     __________________________________________________________

6.2.23.1. Interfaces for Glib Keyed Data Lists

   No external functions are defined for libglib-2.0 - Glib Keyed
   Data Lists in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.24. Glib Lexical Scanner
     __________________________________________________________

6.2.24.1. Interfaces for Glib Lexical Scanner

   No external functions are defined for libglib-2.0 - Glib
   Lexical Scanner in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.25. Glib Memory Allocation
     __________________________________________________________

6.2.25.1. Interfaces for Glib Memory Allocation

   No external functions are defined for libglib-2.0 - Glib Memory
   Allocation in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.26. Glib Memory Allocators
     __________________________________________________________

6.2.26.1. Interfaces for Glib Memory Allocators

   No external functions are defined for libglib-2.0 - Glib Memory
   Allocators in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.27. Glib Memory Chunks
     __________________________________________________________

6.2.27.1. Interfaces for Glib Memory Chunks

   No external functions are defined for libglib-2.0 - Glib Memory
   Chunks in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.28. Glib Message Logging
     __________________________________________________________

6.2.28.1. Interfaces for Glib Message Logging

   No external functions are defined for libglib-2.0 - Glib
   Message Logging in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.29. Glib Message Output and Debugging Functions
     __________________________________________________________

6.2.29.1. Interfaces for Glib Message Output and Debugging Functions

   No external functions are defined for libglib-2.0 - Glib
   Message Output and Debugging Functions in this part of the
   specification. See also the generic specification.
     __________________________________________________________

6.2.30. Glib Miscellaneous Utility Functions
     __________________________________________________________

6.2.30.1. Interfaces for Glib Miscellaneous Utility Functions

   No external functions are defined for libglib-2.0 - Glib
   Miscellaneous Utility Functions in this part of the
   specification. See also the generic specification.
     __________________________________________________________

6.2.31. Glib N-ary Trees
     __________________________________________________________

6.2.31.1. Interfaces for Glib N-ary Trees

   No external functions are defined for libglib-2.0 - Glib N-ary
   Trees in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.32. Glib Pointer Arrays
     __________________________________________________________

6.2.32.1. Interfaces for Glib Pointer Arrays

   No external functions are defined for libglib-2.0 - Glib
   Pointer Arrays in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.33. Glib Quarks
     __________________________________________________________

6.2.33.1. Interfaces for Glib Quarks

   No external functions are defined for libglib-2.0 - Glib Quarks
   in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.34. Glib Random Numbers
     __________________________________________________________

6.2.34.1. Interfaces for Glib Random Numbers

   No external functions are defined for libglib-2.0 - Glib Random
   Numbers in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.35. Glib Relations and Tuples
     __________________________________________________________

6.2.35.1. Interfaces for Glib Relations and Tuples

   No external functions are defined for libglib-2.0 - Glib
   Relations and Tuples in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.36. Glib Shell-related Utilities
     __________________________________________________________

6.2.36.1. Interfaces for Glib Shell-related Utilities

   No external functions are defined for libglib-2.0 - Glib
   Shell-related Utilities in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.37. Glib Simple XML Subset Parser
     __________________________________________________________

6.2.37.1. Interfaces for Glib Simple XML Subset Parser

   No external functions are defined for libglib-2.0 - Glib Simple
   XML Subset Parser in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.38. Glib Singly-Linked Lists
     __________________________________________________________

6.2.38.1. Interfaces for Glib Singly-Linked Lists

   No external functions are defined for libglib-2.0 - Glib
   Singly-Linked Lists in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.39. Glib Spawning Processes
     __________________________________________________________

6.2.39.1. Interfaces for Glib Spawning Processes

   No external functions are defined for libglib-2.0 - Glib
   Spawning Processes in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.40. Glib String Chunks
     __________________________________________________________

6.2.40.1. Interfaces for Glib String Chunks

   No external functions are defined for libglib-2.0 - Glib String
   Chunks in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.41. Glib String Utility Functions
     __________________________________________________________

6.2.41.1. Interfaces for Glib String Utility Functions

   No external functions are defined for libglib-2.0 - Glib String
   Utility Functions in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.42. Glib Strings
     __________________________________________________________

6.2.42.1. Interfaces for Glib Strings

   No external functions are defined for libglib-2.0 - Glib
   Strings in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.43. Glib - The Main Event Loop
     __________________________________________________________

6.2.43.1. Interfaces for Glib - The Main Event Loop

   No external functions are defined for libglib-2.0 - Glib - The
   Main Event Loop in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.2.44. Glib Thread Pools
     __________________________________________________________

6.2.44.1. Interfaces for Glib Thread Pools

   No external functions are defined for libglib-2.0 - Glib Thread
   Pools in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.45. Glib Threads
     __________________________________________________________

6.2.45.1. Interfaces for Glib Threads

   No external functions are defined for libglib-2.0 - Glib
   Threads in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.46. Glib Timers
     __________________________________________________________

6.2.46.1. Interfaces for Glib Timers

   No external functions are defined for libglib-2.0 - Glib Timers
   in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.47. Glib Trash Stacks
     __________________________________________________________

6.2.47.1. Interfaces for Glib Trash Stacks

   No external functions are defined for libglib-2.0 - Glib Trash
   Stacks in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.48. Glib Unicode Manipulation
     __________________________________________________________

6.2.48.1. Interfaces for Glib Unicode Manipulation

   No external functions are defined for libglib-2.0 - Glib
   Unicode Manipulation in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.49. Glib Version Information
     __________________________________________________________

6.2.49.1. Interfaces for Glib Version Information

   No external functions are defined for libglib-2.0 - Glib
   Version Information in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.2.50. Glib Bookmark File Parser
     __________________________________________________________

6.2.50.1. Interfaces for Glib Bookmark File Parser

   No external functions are defined for libglib-2.0 - Glib
   Bookmark File Parser in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.2.51. Glib Memory Slices
     __________________________________________________________

6.2.51.1. Interfaces for Glib Memory Slices

   No external functions are defined for libglib-2.0 - Glib Memory
   Slices in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.2.52. Glib Base64 Encoding
     __________________________________________________________

6.2.52.1. Interfaces for Glib Base64 Encoding

   No external functions are defined for libglib-2.0 - Glib Base64
   Encoding in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.3. Data Definitions for libglib-2.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libglib-2.0. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.3.1. glib-2.0/glib.h

#define G_GSIZE_MODIFIER        ""
#define GPOINTER_TO_INT(p)      ((gint) (p))
#define GLONG_TO_BE(val)        ((glong) GINT32_TO_BE (val))
#define GLONG_TO_LE(val)        ((glong) GINT32_TO_LE (val))
#define GINT_TO_POINTER(i)      ((gpointer) (i))
#define GUINT_TO_POINTER(u)     ((gpointer) (u))
#define GPOINTER_TO_UINT(p)     ((guint) (p))
#define GULONG_TO_BE(val)       ((gulong) GUINT32_TO_BE (val))
#define GULONG_TO_LE(val)       ((gulong) GUINT32_TO_LE (val))
#define G_GINT64_CONSTANT(val)  (G_GNUC_EXTENSION (val ##LL))
#define GLIB_LSB_PADDING_SIZE   24
#define GLIB_LSB_DATA_SIZE      4
#define GLIB_SIZEOF_LONG        4
#define GLIB_SIZEOF_SIZE_T      4
#define GLIB_SIZEOF_VOID_P      4
#define G_BYTE_ORDER    G_LITTLE_ENDIAN
#define G_MAXSIZE       G_MAXUINT
#define G_BREAKPOINT()  G_STMT_START{ __asm__ __volatile__ ("int $03");}G_STMT_END
#define G_GSSIZE_FORMAT "i"
#define G_GINT64_MODIFIER       "ll"
#define G_GINT64_FORMAT "lli"
#define G_GUINT64_FORMAT        "llu"
#define G_GSIZE_FORMAT  "u"

typedef int gssize;
typedef long long int gint64;
typedef long long unsigned int guint64;

typedef unsigned int gsize;
     __________________________________________________________

6.3.2. glib-2.0/glib/gi18n.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.3.3. glib-2.0/glib/gstdio.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.4. Interfaces for libgmodule-2.0

   Table 6-2 defines the library name and shared object name for
   the libgmodule-2.0 library

   Table 6-2. libgmodule-2.0 Definition
   Library: libgmodule-2.0
   SONAME:  libgmodule-2.0.so.0
     __________________________________________________________

6.4.1. Glib-Dynamic loading of Modules
     __________________________________________________________

6.4.1.1. Interfaces for Glib-Dynamic loading of Modules

   No external functions are defined for libgmodule-2.0 -
   Glib-Dynamic loading of Modules in this part of the
   specification. See also the generic specification.
     __________________________________________________________

6.5. Data Definitions for libgmodule-2.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libgmodule-2.0.
   These definitions are organized into groups that correspond to
   system headers. This convention is used as a convenience for
   the reader, and does not imply the existence of these headers,
   or their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.5.1. glib-2.0/gmodule.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.6. Interfaces for libgobject-2.0

   Table 6-3 defines the library name and shared object name for
   the libgobject-2.0 library

   Table 6-3. libgobject-2.0 Definition
   Library: libgobject-2.0
   SONAME:  libgobject-2.0.so.0
     __________________________________________________________

6.6.1. Gobject GTypeModule
     __________________________________________________________

6.6.1.1. Interfaces for Gobject GTypeModule

   No external functions are defined for libgobject-2.0 - Gobject
   GTypeModule in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.6.2. Gobject Enums and Flags
     __________________________________________________________

6.6.2.1. Interfaces for Gobject Enums and Flags

   No external functions are defined for libgobject-2.0 - Gobject
   Enums and Flags in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.6.3. Gobject Signals
     __________________________________________________________

6.6.3.1. Interfaces for Gobject Signals

   No external functions are defined for libgobject-2.0 - Gobject
   Signals in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.6.4. Gobject Value arrays
     __________________________________________________________

6.6.4.1. Interfaces for Gobject Value arrays

   No external functions are defined for libgobject-2.0 - Gobject
   Value arrays in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.6.5. Gobject Generic Values
     __________________________________________________________

6.6.5.1. Interfaces for Gobject Generic Values

   No external functions are defined for libgobject-2.0 - Gobject
   Generic Values in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.6.6. Gobject Parameters and Values
     __________________________________________________________

6.6.6.1. Interfaces for Gobject Parameters and Values

   No external functions are defined for libgobject-2.0 - Gobject
   Parameters and Values in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.6.7. Gobject GParamSpec
     __________________________________________________________

6.6.7.1. Interfaces for Gobject GParamSpec

   No external functions are defined for libgobject-2.0 - Gobject
   GParamSpec in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.6.8. Gobject GBoxed
     __________________________________________________________

6.6.8.1. Interfaces for Gobject GBoxed

   No external functions are defined for libgobject-2.0 - Gobject
   GBoxed in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.6.9. Gobject Closures
     __________________________________________________________

6.6.9.1. Interfaces for Gobject Closures

   No external functions are defined for libgobject-2.0 - Gobject
   Closures in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.6.10. Gobject Gobject
     __________________________________________________________

6.6.10.1. Interfaces for Gobject Gobject

   No external functions are defined for libgobject-2.0 - Gobject
   Gobject in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.6.11. Gobject GType
     __________________________________________________________

6.6.11.1. Interfaces for Gobject GType

   No external functions are defined for libgobject-2.0 - Gobject
   GType in this part of the specification. See also the generic
   specification.
     __________________________________________________________

6.6.12. Gobject GTypePlugin
     __________________________________________________________

6.6.12.1. Interfaces for Gobject GTypePlugin

   No external functions are defined for libgobject-2.0 - Gobject
   GTypePlugin in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.6.13. Gobject GBinding
     __________________________________________________________

6.6.13.1. Interfaces for Gobject GBinding

   No external functions are defined for libgobject-2.0 - Gobject
   GBinding in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.7. Data Definitions for libgobject-2.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libgobject-2.0.
   These definitions are organized into groups that correspond to
   system headers. This convention is used as a convenience for
   the reader, and does not imply the existence of these headers,
   or their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.7.1. glib-2.0/glib-object.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.7.2. glib-2.0/gobject/gvaluecollector.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.8. Interfaces for libgthread-2.0

   Table 6-4 defines the library name and shared object name for
   the libgthread-2.0 library

   Table 6-4. libgthread-2.0 Definition
   Library: libgthread-2.0
   SONAME:  libgthread-2.0.so.0
     __________________________________________________________

6.8.1. Glib thread abstraction
     __________________________________________________________

6.8.1.1. Interfaces for Glib thread abstraction

   No external functions are defined for libgthread-2.0 - Glib
   thread abstraction in this part of the specification. See also
   the generic specification.
     __________________________________________________________

6.9. Interfaces for libgio-2.0

   Table 6-5 defines the library name and shared object name for
   the libgio-2.0 library

   Table 6-5. libgio-2.0 Definition
   Library: libgio-2.0
   SONAME:  libgio-2.0.so.0
     __________________________________________________________

6.9.1. libgio-2.0 interfaces
     __________________________________________________________

6.9.1.1. Interfaces for libgio-2.0 interfaces

   No external functions are defined for libgio-2.0 - libgio-2.0
   interfaces in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.10. Data Definitions for libgio-2.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libgio-2.0. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.10.1. gio-unix-2.0/gio/gdesktopappinfo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.2. gio-unix-2.0/gio/gfiledescriptorbased.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.3. gio-unix-2.0/gio/gunixconnection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.4. gio-unix-2.0/gio/gunixcredentialsmessage.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.5. gio-unix-2.0/gio/gunixfdlist.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.6. gio-unix-2.0/gio/gunixfdmessage.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.7. gio-unix-2.0/gio/gunixinputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.8. gio-unix-2.0/gio/gunixmounts.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.9. gio-unix-2.0/gio/gunixoutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.10. gio-unix-2.0/gio/gunixsocketaddress.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.11. glib-2.0/gio/gaction.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.12. glib-2.0/gio/gactiongroup.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.13. glib-2.0/gio/gactionmap.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.14. glib-2.0/gio/gappinfo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.15. glib-2.0/gio/gapplication.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.16. glib-2.0/gio/gapplicationcommandline.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.17. glib-2.0/gio/gasyncinitable.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.18. glib-2.0/gio/gasyncresult.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.19. glib-2.0/gio/gbufferedinputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.20. glib-2.0/gio/gbufferedoutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.21. glib-2.0/gio/gcancellable.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.22. glib-2.0/gio/gcharsetconverter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.23. glib-2.0/gio/gconverter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.24. glib-2.0/gio/gconverterinputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.25. glib-2.0/gio/gconverteroutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.26. glib-2.0/gio/gcredentials.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.27. glib-2.0/gio/gdatainputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.28. glib-2.0/gio/gdataoutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.29. glib-2.0/gio/gdbusactiongroup.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.30. glib-2.0/gio/gdbusauthobserver.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.31. glib-2.0/gio/gdbusconnection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.32. glib-2.0/gio/gdbuserror.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.33. glib-2.0/gio/gdbusinterface.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.34. glib-2.0/gio/gdbusinterfaceskeleton.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.35. glib-2.0/gio/gdbusintrospection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.36. glib-2.0/gio/gdbusmenumodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.37. glib-2.0/gio/gdbusmessage.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.38. glib-2.0/gio/gdbusmethodinvocation.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.39. glib-2.0/gio/gdbusnameowning.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.40. glib-2.0/gio/gdbusnamewatching.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.41. glib-2.0/gio/gdbusobject.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.42. glib-2.0/gio/gdbusobjectmanager.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.43. glib-2.0/gio/gdbusobjectmanagerclient.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.44. glib-2.0/gio/gdbusobjectmanagerserver.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.45. glib-2.0/gio/gdbusobjectproxy.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.46. glib-2.0/gio/gdbusobjectskeleton.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.47. glib-2.0/gio/gdbusproxy.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.48. glib-2.0/gio/gdbusserver.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.49. glib-2.0/gio/gdrive.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.50. glib-2.0/gio/gemblem.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.51. glib-2.0/gio/gemblemedicon.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.52. glib-2.0/gio/gfile.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.53. glib-2.0/gio/gfileattribute.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.54. glib-2.0/gio/gfileenumerator.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.55. glib-2.0/gio/gfileicon.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.56. glib-2.0/gio/gfileinfo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.57. glib-2.0/gio/gfileinputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.58. glib-2.0/gio/gfileiostream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.59. glib-2.0/gio/gfilemonitor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.60. glib-2.0/gio/gfilenamecompleter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.61. glib-2.0/gio/gfileoutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.62. glib-2.0/gio/gfilterinputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.63. glib-2.0/gio/gfilteroutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.64. glib-2.0/gio/gicon.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.65. glib-2.0/gio/ginetaddress.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.66. glib-2.0/gio/ginetaddressmask.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.67. glib-2.0/gio/ginetsocketaddress.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.68. glib-2.0/gio/ginitable.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.69. glib-2.0/gio/ginputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.70. glib-2.0/gio/gio.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.71. glib-2.0/gio/gioenums.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.72. glib-2.0/gio/gioenumtypes.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.73. glib-2.0/gio/gioerror.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.74. glib-2.0/gio/giomodule.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.75. glib-2.0/gio/giostream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.76. glib-2.0/gio/giotypes.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.77. glib-2.0/gio/gloadableicon.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.78. glib-2.0/gio/gmemoryinputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.79. glib-2.0/gio/gmemoryoutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.80. glib-2.0/gio/gmenu.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.81. glib-2.0/gio/gmenumodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.82. glib-2.0/gio/gmount.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.83. glib-2.0/gio/gmountoperation.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.84. glib-2.0/gio/gnativevolumemonitor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.85. glib-2.0/gio/gnetworkaddress.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.86. glib-2.0/gio/gnetworkmonitor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.87. glib-2.0/gio/gnetworkservice.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.88. glib-2.0/gio/goutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.89. glib-2.0/gio/gpermission.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.90. glib-2.0/gio/gpollableinputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.91. glib-2.0/gio/gpollableoutputstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.92. glib-2.0/gio/gproxy.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.93. glib-2.0/gio/gproxyaddress.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.94. glib-2.0/gio/gproxyaddressenumerator.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.95. glib-2.0/gio/gproxyresolver.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.96. glib-2.0/gio/gremoteactiongroup.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.97. glib-2.0/gio/gresolver.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.98. glib-2.0/gio/gresource.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.99. glib-2.0/gio/gseekable.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.100. glib-2.0/gio/gsettings.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.101. glib-2.0/gio/gsettingsbackend.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.102. glib-2.0/gio/gsettingsschema.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.103. glib-2.0/gio/gsimpleaction.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.104. glib-2.0/gio/gsimpleactiongroup.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.105. glib-2.0/gio/gsimpleasyncresult.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.106. glib-2.0/gio/gsimplepermission.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.107. glib-2.0/gio/gsocket.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.108. glib-2.0/gio/gsocketaddress.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.109. glib-2.0/gio/gsocketaddressenumerator.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.110. glib-2.0/gio/gsocketclient.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.111. glib-2.0/gio/gsocketconnectable.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.112. glib-2.0/gio/gsocketconnection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.113. glib-2.0/gio/gsocketcontrolmessage.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.114. glib-2.0/gio/gsocketlistener.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.115. glib-2.0/gio/gsocketservice.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.116. glib-2.0/gio/gsrvtarget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.117. glib-2.0/gio/gtcpconnection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.118. glib-2.0/gio/gtcpwrapperconnection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.119. glib-2.0/gio/gthemedicon.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.120. glib-2.0/gio/gthreadedsocketservice.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.121. glib-2.0/gio/gtlsbackend.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.122. glib-2.0/gio/gtlscertificate.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.123. glib-2.0/gio/gtlsclientconnection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.124. glib-2.0/gio/gtlsconnection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.125. glib-2.0/gio/gtlsdatabase.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.126. glib-2.0/gio/gtlsfiledatabase.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.127. glib-2.0/gio/gtlsinteraction.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.128. glib-2.0/gio/gtlspassword.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.129. glib-2.0/gio/gtlsserverconnection.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.130. glib-2.0/gio/gvfs.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.131. glib-2.0/gio/gvolume.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.132. glib-2.0/gio/gvolumemonitor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.133. glib-2.0/gio/gzlibcompressor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.10.134. glib-2.0/gio/gzlibdecompressor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.11. Interfaces for libatk-1.0

   Table 6-6 defines the library name and shared object name for
   the libatk-1.0 library

   Table 6-6. libatk-1.0 Definition
   Library: libatk-1.0
   SONAME:  libatk-1.0.so.0
     __________________________________________________________

6.11.1. GTK Accessibility Toolkit
     __________________________________________________________

6.11.1.1. Interfaces for GTK Accessibility Toolkit

   No external functions are defined for libatk-1.0 - GTK
   Accessibility Toolkit in this part of the specification. See
   also the generic specification.
     __________________________________________________________

6.12. Data Definitions for libatk-1.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libatk-1.0. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.12.1. atk-1.0/atk/atk-enum-types.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.12.2. atk-1.0/atk/atk.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.12.3. atk-1.0/atk/atkplug.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.12.4. atk-1.0/atk/atksocket.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.12.5. atk-1.0/atk/atkwindow.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.13. Interfaces for libpango-1.0

   Table 6-7 defines the library name and shared object name for
   the libpango-1.0 library

   Table 6-7. libpango-1.0 Definition
   Library: libpango-1.0
   SONAME:  libpango-1.0.so.0
     __________________________________________________________

6.13.1. GTK Internationalized Text Layout and Rendering library
     __________________________________________________________

6.13.1.1. Interfaces for GTK Internationalized Text Layout and Rendering library

   No external functions are defined for libpango-1.0 - GTK
   Internationalized Text Layout and Rendering library in this
   part of the specification. See also the generic specification.
     __________________________________________________________

6.14. Data Definitions for libpango-1.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libpango-1.0. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.14.1. pango-1.0/pango/pango-bidi-type.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.14.2. pango-1.0/pango/pango-utils.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.14.3. pango-1.0/pango/pango.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.15. Interfaces for libpangocairo-1.0

   Table 6-8 defines the library name and shared object name for
   the libpangocairo-1.0 library

   Table 6-8. libpangocairo-1.0 Definition
   Library: libpangocairo-1.0
   SONAME:  libpangocairo-1.0.so.0
     __________________________________________________________

6.15.1. Pango Cairo Rendering
     __________________________________________________________

6.15.1.1. Interfaces for Pango Cairo Rendering

   No external functions are defined for libpangocairo-1.0 - Pango
   Cairo Rendering in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.16. Data Definitions for libpangocairo-1.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libpangocairo-1.0.
   These definitions are organized into groups that correspond to
   system headers. This convention is used as a convenience for
   the reader, and does not imply the existence of these headers,
   or their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.16.1. pango-1.0/pango/pangocairo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.17. Interfaces for libpangoxft-1.0

   Table 6-9 defines the library name and shared object name for
   the libpangoxft-1.0 library

   Table 6-9. libpangoxft-1.0 Definition
   Library: libpangoxft-1.0
   SONAME:  libpangoxft-1.0.so.0
     __________________________________________________________

6.17.1. Pango Xft Fonts and Rendering library
     __________________________________________________________

6.17.1.1. Interfaces for Pango Xft Fonts and Rendering library

   No external functions are defined for libpangoxft-1.0 - Pango
   Xft Fonts and Rendering library in this part of the
   specification. See also the generic specification.
     __________________________________________________________

6.18. Data Definitions for libpangoxft-1.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libpangoxft-1.0.
   These definitions are organized into groups that correspond to
   system headers. This convention is used as a convenience for
   the reader, and does not imply the existence of these headers,
   or their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.18.1. pango-1.0/pango/pangoxft.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.19. Interfaces for libpangoft2-1.0

   Table 6-10 defines the library name and shared object name for
   the libpangoft2-1.0 library

   Table 6-10. libpangoft2-1.0 Definition
   Library: libpangoft2-1.0
   SONAME:  libpangoft2-1.0.so.0
     __________________________________________________________

6.19.1. Pango Freetype Fonts and Rendering library
     __________________________________________________________

6.19.1.1. Interfaces for Pango Freetype Fonts and Rendering library

   No external functions are defined for libpangoft2-1.0 - Pango
   Freetype Fonts and Rendering library in this part of the
   specification. See also the generic specification.
     __________________________________________________________

6.20. Data Definitions for libpangoft2-1.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libpangoft2-1.0.
   These definitions are organized into groups that correspond to
   system headers. This convention is used as a convenience for
   the reader, and does not imply the existence of these headers,
   or their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.20.1. pango-1.0/pango/pangofc-decoder.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.20.2. pango-1.0/pango/pangofc-fontmap.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.20.3. pango-1.0/pango/pangoft2.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.21. Interfaces for libgdk_pixbuf-2.0

   Table 6-11 defines the library name and shared object name for
   the libgdk_pixbuf-2.0 library

   Table 6-11. libgdk_pixbuf-2.0 Definition
   Library: libgdk_pixbuf-2.0
   SONAME:  libgdk_pixbuf-2.0.so.0
     __________________________________________________________

6.21.1. GDK pixbuf rendering on drawables library
     __________________________________________________________

6.21.1.1. Interfaces for GDK pixbuf rendering on drawables library

   No external functions are defined for libgdk_pixbuf-2.0 - GDK
   pixbuf rendering on drawables library in this part of the
   specification. See also the generic specification.
     __________________________________________________________

6.22. Data Definitions for libgdk_pixbuf-2.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libgdk_pixbuf-2.0.
   These definitions are organized into groups that correspond to
   system headers. This convention is used as a convenience for
   the reader, and does not imply the existence of these headers,
   or their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.22.1. gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.22.2. gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixdata.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.23. Interfaces for libgdk_pixbuf_xlib-2.0

   Table 6-12 defines the library name and shared object name for
   the libgdk_pixbuf_xlib-2.0 library

   Table 6-12. libgdk_pixbuf_xlib-2.0 Definition
   Library: libgdk_pixbuf_xlib-2.0
   SONAME:  libgdk_pixbuf_xlib-2.0.so.0
     __________________________________________________________

6.23.1. GDK pixbuf rendering to an X drawable library
     __________________________________________________________

6.23.1.1. Interfaces for GDK pixbuf rendering to an X drawable library

   No external functions are defined for libgdk_pixbuf_xlib-2.0 -
   GDK pixbuf rendering to an X drawable library in this part of
   the specification. See also the generic specification.
     __________________________________________________________

6.24. Data Definitions for libgdk_pixbuf_xlib-2.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in
   libgdk_pixbuf_xlib-2.0. These definitions are organized into
   groups that correspond to system headers. This convention is
   used as a convenience for the reader, and does not imply the
   existence of these headers, or their content. Where an
   interface is defined as requiring a particular system header
   file all of the data definitions for that system header file
   presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.24.1. gdk-pixbuf-2.0/gdk-pixbuf-xlib/gdk-pixbuf-xlib.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.25. Interfaces for libgdk-x11-2.0

   Table 6-13 defines the library name and shared object name for
   the libgdk-x11-2.0 library

   Table 6-13. libgdk-x11-2.0 Definition
   Library: libgdk-x11-2.0
   SONAME:  libgdk-x11-2.0.so.0
     __________________________________________________________

6.25.1. GTK Drawing toolkit
     __________________________________________________________

6.25.1.1. Interfaces for GTK Drawing toolkit

   No external functions are defined for libgdk-x11-2.0 - GTK
   Drawing toolkit in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.26. Data Definitions for libgdk-x11-2.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libgdk-x11-2.0.
   These definitions are organized into groups that correspond to
   system headers. This convention is used as a convenience for
   the reader, and does not imply the existence of these headers,
   or their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.26.1. gtk-2.0/gdk/gdk.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.26.2. gtk-2.0/gdk/gdkkeysyms.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.26.3. gtk-2.0/gdk/gdkx.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.27. Interfaces for libgtk-x11-2.0

   Table 6-14 defines the library name and shared object name for
   the libgtk-x11-2.0 library

   Table 6-14. libgtk-x11-2.0 Definition
   Library: libgtk-x11-2.0
   SONAME:  libgtk-x11-2.0.so.0
     __________________________________________________________

6.27.1. GTK main Widgets library
     __________________________________________________________

6.27.1.1. Interfaces for GTK main Widgets library

   No external functions are defined for libgtk-x11-2.0 - GTK main
   Widgets library in this part of the specification. See also the
   generic specification.
     __________________________________________________________

6.28. Data Definitions for libgtk-x11-2.0

   This section defines global identifiers and their values that
   are associated with interfaces contained in libgtk-x11-2.0.
   These definitions are organized into groups that correspond to
   system headers. This convention is used as a convenience for
   the reader, and does not imply the existence of these headers,
   or their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

6.28.1. gtk-2.0/gtk/gtk.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.2. gtk-2.0/gtk/gtkenums.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.3. gtk-2.0/gtk/gtkprintoperationpreview.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.4. gtk-2.0/gtk/gtkrecentfilter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.5. gtk-2.0/gtk/gtkrecentmanager.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.6. gtk-2.0/gtk/gtkstatusicon.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.7. gtk-2.0/gtk/gtktextbufferrichtext.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.8. gtk-unix-print-2.0/gtk/gtkpagesetupunixdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.9. gtk-unix-print-2.0/gtk/gtkprinter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.10. gtk-unix-print-2.0/gtk/gtkprintjob.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.11. gtk-unix-print-2.0/gtk/gtkprintunixdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

6.28.12. gtk-unix-print-2.0/gtk/gtkunixprint.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */

III. Qt Libraries

   Table of Contents
   7. Libraries

        7.1. Introduction
        7.2. Interfaces for libQtCore

              7.2.1. Qt4 Core Functions
              7.2.2. Qt4 Models
              7.2.3. Qt4 Internationalization
              7.2.4. Qt4 Containers
              7.2.5. Qt4 Events
              7.2.6. Qt4 Arrays
              7.2.7. Qt4 Plugins
              7.2.8. Qt4 Date and Time
              7.2.9. Qt4 Miscellaneous
              7.2.10. Qt4 Text
              7.2.11. Qt4 Input/Output
              7.2.12. Qt4 Core Application
              7.2.13. Qt4 Object Model
              7.2.14. Qt4 Threading
              7.2.15. Qt4 2D Graphics
              7.2.16. Qt4 Internals

        7.3. Data Definitions for libQtCore

              7.3.1. QtCore/qabstracteventdispatcher.h
              7.3.2. QtCore/qabstractfileengine.h
              7.3.3. QtCore/qabstractitemmodel.h
              7.3.4. QtCore/qatomic.h
              7.3.5. QtCore/qbasictimer.h
              7.3.6. QtCore/qbitarray.h
              7.3.7. QtCore/qbuffer.h
              7.3.8. QtCore/qbytearray.h
              7.3.9. QtCore/qbytearraymatcher.h
              7.3.10. QtCore/qchar.h
              7.3.11. QtCore/qcoreapplication.h
              7.3.12. QtCore/qcoreevent.h
              7.3.13. QtCore/qdatastream.h
              7.3.14. QtCore/qdatetime.h
              7.3.15. QtCore/qdebug.h
              7.3.16. QtCore/qdir.h
              7.3.17. QtCore/qeventloop.h
              7.3.18. QtCore/qfactoryinterface.h
              7.3.19. QtCore/qfile.h
              7.3.20. QtCore/qfileinfo.h
              7.3.21. QtCore/qfsfileengine.h
              7.3.22. QtCore/qglobal.h
              7.3.23. QtCore/qhash.h
              7.3.24. QtCore/qiodevice.h
              7.3.25. QtCore/qlibrary.h
              7.3.26. QtCore/qlibraryinfo.h
              7.3.27. QtCore/qline.h
              7.3.28. QtCore/qlinkedlist.h
              7.3.29. QtCore/qlist.h
              7.3.30. QtCore/qlocale.h
              7.3.31. QtCore/qmap.h
              7.3.32. QtCore/qmetaobject.h
              7.3.33. QtCore/qmetatype.h
              7.3.34. QtCore/qmimedata.h
              7.3.35. QtCore/qmutex.h
              7.3.36. QtCore/qnamespace.h
              7.3.37. QtCore/qobject.h
              7.3.38. QtCore/qobjectcleanuphandler.h
              7.3.39. QtCore/qobjectdefs.h
              7.3.40. QtCore/qpair.h
              7.3.41. QtCore/qplugin.h
              7.3.42. QtCore/qpluginloader.h
              7.3.43. QtCore/qpoint.h
              7.3.44. QtCore/qprocess.h
              7.3.45. QtCore/qreadwritelock.h
              7.3.46. QtCore/qrect.h
              7.3.47. QtCore/qregexp.h
              7.3.48. QtCore/qsemaphore.h
              7.3.49. QtCore/qsettings.h
              7.3.50. QtCore/qshareddata.h
              7.3.51. QtCore/qsignalmapper.h
              7.3.52. QtCore/qsize.h
              7.3.53. QtCore/qsocketnotifier.h
              7.3.54. QtCore/qstring.h
              7.3.55. QtCore/qstringlist.h
              7.3.56. QtCore/qstringmatcher.h
              7.3.57. QtCore/qtemporaryfile.h
              7.3.58. QtCore/qtextcodec.h
              7.3.59. QtCore/qtextcodecplugin.h
              7.3.60. QtCore/qtextstream.h
              7.3.61. QtCore/qthread.h
              7.3.62. QtCore/qthreadstorage.h
              7.3.63. QtCore/qtimer.h
              7.3.64. QtCore/qtranslator.h
              7.3.65. QtCore/qurl.h
              7.3.66. QtCore/quuid.h
              7.3.67. QtCore/qvariant.h
              7.3.68. QtCore/qvector.h
              7.3.69. QtCore/qwaitcondition.h

        7.4. Interface Definitions for libQtCore

              _Z7qMallocj -- allocate memory block
              _Z7qMemSetPvij -- fill memory with a constant byte
              _Z8qMemCopyPvPKvj -- copy memory area
              _Z8qReallocPvj -- change the size of memory block

        7.5. Interfaces for libQtGui

              7.5.1. Qt4 GUI Functions
              7.5.2. Qt4 Organizers
              7.5.3. Qt4 Events
              7.5.4. Qt4 Fonts
              7.5.5. Qt4 Colors
              7.5.6. Qt4 Accessibility
              7.5.7. Qt4 Validators
              7.5.8. Qt4 Plugins
              7.5.9. Qt4 Models and Views
              7.5.10. Qt4 Dialogs
              7.5.11. Qt4 Date and Time
              7.5.12. Qt4 Miscellaneous
              7.5.13. Qt4 Paint Device
              7.5.14. Qt4 Multimedia
              7.5.15. Qt4 Layouts
              7.5.16. Qt4 Style
              7.5.17. Qt4 Text
              7.5.18. Qt4 Main Window and Application
              7.5.19. Qt4 Menus
              7.5.20. Qt4 Widgets
              7.5.21. Qt4 Drag and Drop
              7.5.22. Qt4 2D Graphics

        7.6. Data Definitions for libQtGui

              7.6.1. QtGui/qabstractbutton.h
              7.6.2. QtGui/qabstractitemdelegate.h
              7.6.3. QtGui/qabstractitemview.h
              7.6.4. QtGui/qabstractpagesetupdialog.h
              7.6.5. QtGui/qabstractprintdialog.h
              7.6.6. QtGui/qabstractproxymodel.h
              7.6.7. QtGui/qabstractscrollarea.h
              7.6.8. QtGui/qabstractslider.h
              7.6.9. QtGui/qabstractspinbox.h
              7.6.10. QtGui/qabstracttextdocumentlayout.h
              7.6.11. QtGui/qaccessible.h
              7.6.12. QtGui/qaccessiblebridge.h
              7.6.13. QtGui/qaccessibleobject.h
              7.6.14. QtGui/qaccessibleplugin.h
              7.6.15. QtGui/qaccessiblewidget.h
              7.6.16. QtGui/qaction.h
              7.6.17. QtGui/qactiongroup.h
              7.6.18. QtGui/qapplication.h
              7.6.19. QtGui/qbitmap.h
              7.6.20. QtGui/qboxlayout.h
              7.6.21. QtGui/qbrush.h
              7.6.22. QtGui/qbuttongroup.h
              7.6.23. QtGui/qcdestyle.h
              7.6.24. QtGui/qcheckbox.h
              7.6.25. QtGui/qclipboard.h
              7.6.26. QtGui/qcolor.h
              7.6.27. QtGui/qcolordialog.h
              7.6.28. QtGui/qcolormap.h
              7.6.29. QtGui/qcombobox.h
              7.6.30. QtGui/qcommonstyle.h
              7.6.31. QtGui/qcursor.h
              7.6.32. QtGui/qdatetimeedit.h
              7.6.33. QtGui/qdesktopwidget.h
              7.6.34. QtGui/qdial.h
              7.6.35. QtGui/qdialog.h
              7.6.36. QtGui/qdirmodel.h
              7.6.37. QtGui/qdockwidget.h
              7.6.38. QtGui/qdrag.h
              7.6.39. QtGui/qerrormessage.h
              7.6.40. QtGui/qevent.h
              7.6.41. QtGui/qfiledialog.h
              7.6.42. QtGui/qfocusframe.h
              7.6.43. QtGui/qfont.h
              7.6.44. QtGui/qfontdatabase.h
              7.6.45. QtGui/qfontdialog.h
              7.6.46. QtGui/qfontinfo.h
              7.6.47. QtGui/qfontmetrics.h
              7.6.48. QtGui/qframe.h
              7.6.49. QtGui/qgridlayout.h
              7.6.50. QtGui/qgroupbox.h
              7.6.51. QtGui/qheaderview.h
              7.6.52. QtGui/qicon.h
              7.6.53. QtGui/qiconengine.h
              7.6.54. QtGui/qiconengineplugin.h
              7.6.55. QtGui/qimage.h
              7.6.56. QtGui/qimageiohandler.h
              7.6.57. QtGui/qimagereader.h
              7.6.58. QtGui/qimagewriter.h
              7.6.59. QtGui/qinputcontext.h
              7.6.60. QtGui/qinputcontextfactory.h
              7.6.61. QtGui/qinputcontextplugin.h
              7.6.62. QtGui/qinputdialog.h
              7.6.63. QtGui/qitemdelegate.h
              7.6.64. QtGui/qitemeditorfactory.h
              7.6.65. QtGui/qitemselectionmodel.h
              7.6.66. QtGui/qkeysequence.h
              7.6.67. QtGui/qlabel.h
              7.6.68. QtGui/qlayout.h
              7.6.69. QtGui/qlayoutitem.h
              7.6.70. QtGui/qlcdnumber.h
              7.6.71. QtGui/qlineedit.h
              7.6.72. QtGui/qlistview.h
              7.6.73. QtGui/qlistwidget.h
              7.6.74. QtGui/qmainwindow.h
              7.6.75. QtGui/qmatrix.h
              7.6.76. QtGui/qmenu.h
              7.6.77. QtGui/qmenubar.h
              7.6.78. QtGui/qmenudata.h
              7.6.79. QtGui/qmessagebox.h
              7.6.80. QtGui/qmime.h
              7.6.81. QtGui/qmotifstyle.h
              7.6.82. QtGui/qmovie.h
              7.6.83. QtGui/qpagesetupdialog.h
              7.6.84. QtGui/qpaintdevice.h
              7.6.85. QtGui/qpaintengine.h
              7.6.86. QtGui/qpainter.h
              7.6.87. QtGui/qpainterpath.h
              7.6.88. QtGui/qpalette.h
              7.6.89. QtGui/qpen.h
              7.6.90. QtGui/qpicture.h
              7.6.91. QtGui/qpictureformatplugin.h
              7.6.92. QtGui/qpixmap.h
              7.6.93. QtGui/qpixmapcache.h
              7.6.94. QtGui/qplastiquestyle.h
              7.6.95. QtGui/qpolygon.h
              7.6.96. QtGui/qprintdialog.h
              7.6.97. QtGui/qprintengine.h
              7.6.98. QtGui/qprinter.h
              7.6.99. QtGui/qprogressbar.h
              7.6.100. QtGui/qprogressdialog.h
              7.6.101. QtGui/qproxymodel.h
              7.6.102. QtGui/qpushbutton.h
              7.6.103. QtGui/qradiobutton.h
              7.6.104. QtGui/qregion.h
              7.6.105. QtGui/qrgb.h
              7.6.106. QtGui/qrubberband.h
              7.6.107. QtGui/qscrollarea.h
              7.6.108. QtGui/qscrollbar.h
              7.6.109. QtGui/qsessionmanager.h
              7.6.110. QtGui/qshortcut.h
              7.6.111. QtGui/qsizegrip.h
              7.6.112. QtGui/qsizepolicy.h
              7.6.113. QtGui/qslider.h
              7.6.114. QtGui/qsortfilterproxymodel.h
              7.6.115. QtGui/qsound.h
              7.6.116. QtGui/qspinbox.h
              7.6.117. QtGui/qsplashscreen.h
              7.6.118. QtGui/qsplitter.h
              7.6.119. QtGui/qstackedlayout.h
              7.6.120. QtGui/qstackedwidget.h
              7.6.121. QtGui/qstandarditemmodel.h
              7.6.122. QtGui/qstatusbar.h
              7.6.123. QtGui/qstringlistmodel.h
              7.6.124. QtGui/qstyle.h
              7.6.125. QtGui/qstylefactory.h
              7.6.126. QtGui/qstyleoption.h
              7.6.127. QtGui/qstylepainter.h
              7.6.128. QtGui/qstyleplugin.h
              7.6.129. QtGui/qsyntaxhighlighter.h
              7.6.130. QtGui/qtabbar.h
              7.6.131. QtGui/qtableview.h
              7.6.132. QtGui/qtablewidget.h
              7.6.133. QtGui/qtabwidget.h
              7.6.134. QtGui/qtextbrowser.h
              7.6.135. QtGui/qtextcursor.h
              7.6.136. QtGui/qtextdocument.h
              7.6.137. QtGui/qtextdocumentfragment.h
              7.6.138. QtGui/qtextedit.h
              7.6.139. QtGui/qtextformat.h
              7.6.140. QtGui/qtextlayout.h
              7.6.141. QtGui/qtextlist.h
              7.6.142. QtGui/qtextobject.h
              7.6.143. QtGui/qtextoption.h
              7.6.144. QtGui/qtexttable.h
              7.6.145. QtGui/qtoolbar.h
              7.6.146. QtGui/qtoolbox.h
              7.6.147. QtGui/qtoolbutton.h
              7.6.148. QtGui/qtooltip.h
              7.6.149. QtGui/qtreeview.h
              7.6.150. QtGui/qtreewidget.h
              7.6.151. QtGui/qtreewidgetitemiterator.h
              7.6.152. QtGui/qvalidator.h
              7.6.153. QtGui/qvfbhdr.h
              7.6.154. QtGui/qwhatsthis.h
              7.6.155. QtGui/qwidget.h
              7.6.156. QtGui/qwindowdefs.h
              7.6.157. QtGui/qwindowsstyle.h
              7.6.158. QtGui/qwmatrix.h
              7.6.159. QtGui/qworkspace.h

        7.7. Interfaces for libQtXml

              7.7.1. Qt4 XML

        7.8. Data Definitions for libQtXml

              7.8.1. QtXml/qdom.h
              7.8.2. QtXml/qxml.h

        7.9. Interfaces for libQtOpenGL

              7.9.1. Qt4 OpenGL

        7.10. Data Definitions for libQtOpenGL

              7.10.1. QtOpenGL/qgl.h
              7.10.2. QtOpenGL/qglcolormap.h
              7.10.3. QtOpenGL/qglpixelbuffer.h

        7.11. Interfaces for libQtSql

              7.11.1. Qt4 SQL

        7.12. Data Definitions for libQtSql

              7.12.1. QtSql/qsql.h
              7.12.2. QtSql/qsqldatabase.h
              7.12.3. QtSql/qsqldriver.h
              7.12.4. QtSql/qsqldriverplugin.h
              7.12.5. QtSql/qsqlerror.h
              7.12.6. QtSql/qsqlfield.h
              7.12.7. QtSql/qsqlindex.h
              7.12.8. QtSql/qsqlquery.h
              7.12.9. QtSql/qsqlquerymodel.h
              7.12.10. QtSql/qsqlrecord.h
              7.12.11. QtSql/qsqlrelationaltablemodel.h
              7.12.12. QtSql/qsqlresult.h
              7.12.13. QtSql/qsqltablemodel.h

        7.13. Interfaces for libQtSvg

              7.13.1. Qt4 Svg

        7.14. Data Definitions for libQtSvg

              7.14.1. QtSvg/qsvgrenderer.h
              7.14.2. QtSvg/qsvgwidget.h

        7.15. Interfaces for libQtNetwork

              7.15.1. Qt4 Network

        7.16. Data Definitions for libQtNetwork

              7.16.1. QtNetwork/qabstractsocket.h
              7.16.2. QtNetwork/qftp.h
              7.16.3. QtNetwork/qhostaddress.h
              7.16.4. QtNetwork/qhostinfo.h
              7.16.5. QtNetwork/qhttp.h
              7.16.6. QtNetwork/qnetworkproxy.h
              7.16.7. QtNetwork/qtcpserver.h
              7.16.8. QtNetwork/qtcpsocket.h
              7.16.9. QtNetwork/qudpsocket.h
              7.16.10. QtNetwork/qurlinfo.h
     __________________________________________________________

Chapter 7. Libraries

7.1. Introduction

   An conforming implementation shall support the following Qt
   libraries which provide interfaces for creating rich user
   applications, either graphical or console.

   QtCore

   A general-purpose application development library, not specific
   to graphical user interfaces. QtCore provides a main loop,
   threading classes, tool classes, template container classes, IO
   classes, and so on.
   QtGui

   The GUI part of Qt, provides a paint engine, text rendering
   engine, widgets, printing, PDF generation, accessibility
   classes, and so on.
   QtXml

   The XML support for Qt, provides fast XML parsing and DOM
   classes to traverse the XML tree.
   QtOpenGL

   The OpenGL integration for Qt, provides OpenGL rendering and
   embedding.
   QtSql

   The database part of Qt, provides access to databases and
   models that connect databases into the model/view framework of
   QtGui.
   QtSvg

   Renders Svg files into any context, for displaying on the
   screen, printing or embedding in PDF.
   QtNetwork

   Provides network server and client classes, TCP/IP, UDP, Http,
   Ftp, Url parsing support, and so on.

   There are three main parts to the definition of each of these
   libraries.

   The "Interfaces" section defines the required library name and
   version, and the required public symbols (interfaces and global
   data), as well as symbol versions, if any.

   The "Interface Definitions" section provides complete or
   partial definitions of certain interfaces where either this
   specification is the source specification, or where there are
   variations from the source specification. If an interface
   definition requires one or more header files, one of those
   headers shall include the function prototype for the interface.

   For source definitions of interfaces which include a reference
   to a header file, the contents of such header files form a part
   of the specification. The "Data Definitions" section provides
   the binary-level details for the header files from the source
   specifications, such as values for macros and enumerated types,
   as well as structure layouts, sizes and padding, etc. These
   data definitions, although presented in the form of header
   files for convenience, should not be taken a representing
   complete header files, as they are a supplement to the source
   specifications. Application developers should follow the
   guidelines of the source specifications when determining which
   header files need to be included to completely resolve all
   references.

     Note: While the Data Definitions supplement the source
     specifications, this specification itself does not require
     conforming implementations to supply any header files.
     __________________________________________________________

7.2. Interfaces for libQtCore

   Table 7-1 defines the library name and shared object name for
   the libQtCore library

   Table 7-1. libQtCore Definition
   Library: libQtCore
   SONAME:  libQtCore.so.4

   The behavior of the interfaces in this library is specified by
   the following specifications:

   [CXXABI-1.86] Itanium(TM) C++ ABI
   [LSB] This Specification
   [QtCore] QtCore 4.2.0
     __________________________________________________________

7.2.1. Qt4 Core Functions
     __________________________________________________________

7.2.1.1. Class data for QDynamicPropertyChangeEvent

   The virtual table for the QDynamicPropertyChangeEvent class is
   described in the generic part of this specification.
     __________________________________________________________

7.2.1.2. Class data for QTimeLine

   The virtual table for the QTimeLine class is described in the
   generic part of this specification.
     __________________________________________________________

7.2.1.3. Interfaces for Qt4 Core Functions

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Core Functions specified in Table
   7-2, with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-2. libQtCore - Qt4 Core Functions Function Interfaces
   _Z10qvsnprintfPcjPKcS_ [QtCore] _Z7qMallocj [LSB]
   _Z7qMemSetPvij [LSB] _Z8qMemCopyPvPKvj [LSB]
   _Z8qReallocPvj [LSB] _Z9qsnprintfPcjPKcz [QtCore]
   _ZThn8_N16QTextCodecPlugin6createERK7QString [CXXABI-1.86]
   _ZThn8_NK16QTextCodecPlugin4keysEv [CXXABI-1.86]
     __________________________________________________________

7.2.2. Qt4 Models
     __________________________________________________________

7.2.2.1. Class data for QAbstractItemModel

   The virtual table for the QAbstractItemModel class is described
   in the generic part of this specification.

   The Run Time Type Information for the QAbstractItemModel class
   is described by Table 7-3

   Table 7-3. typeinfo for QAbstractItemModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractItemModel
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.2.2. Class data for QAbstractTableModel

   The virtual table for the QAbstractTableModel class is
   described in the generic part of this specification.

   The Run Time Type Information for the QAbstractTableModel class
   is described by Table 7-4

   Table 7-4. typeinfo for QAbstractTableModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractTableModel
   basetype:   typeinfo for QAbstractItemModel
     __________________________________________________________

7.2.2.3. Class data for QAbstractListModel

   The virtual table for the QAbstractListModel class is described
   in the generic part of this specification.

   The Run Time Type Information for the QAbstractListModel class
   is described by Table 7-5

   Table 7-5. typeinfo for QAbstractListModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractListModel
   basetype:   typeinfo for QAbstractItemModel
     __________________________________________________________

7.2.2.4. Interfaces for Qt4 Models

   No external functions are defined for libQtCore - Qt4 Models in
   this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.2.3. Qt4 Internationalization
     __________________________________________________________

7.2.3.1. Class data for QTextCodec

   The virtual table for the QTextCodec class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTextCodec class is
   described by Table 7-6

   Table 7-6. typeinfo for QTextCodec
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QTextCodec
     __________________________________________________________

7.2.3.2. Class data for QTextCodecFactoryInterface

   The virtual table for the QTextCodecFactoryInterface class is
   described in the generic part of this specification.

   The Run Time Type Information for the
   QTextCodecFactoryInterface class is described by Table 7-7

   Table 7-7. typeinfo for QTextCodecFactoryInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextCodecFactoryInterface
   basetype:   typeinfo for QFactoryInterface
     __________________________________________________________

7.2.3.3. Class data for QTranslator

   The virtual table for the QTranslator class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTranslator class is
   described by Table 7-8

   Table 7-8. typeinfo for QTranslator
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTranslator
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.3.4. Class data for QSystemLocale

   The virtual table for the QSystemLocale class is described in
   the generic part of this specification.
     __________________________________________________________

7.2.3.5. Interfaces for Qt4 Internationalization

   No external functions are defined for libQtCore - Qt4
   Internationalization in this part of the specification. See
   also the generic specification.
     __________________________________________________________

7.2.4. Qt4 Containers
     __________________________________________________________

7.2.4.1. Class data for QMimeData

   The virtual table for the QMimeData class is described in the
   generic part of this specification.

   The Run Time Type Information for the QMimeData class is
   described by Table 7-9

   Table 7-9. typeinfo for QMimeData
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMimeData
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.4.2. Interfaces for Qt4 Containers

   No external functions are defined for libQtCore - Qt4
   Containers in this part of the specification. See also the
   generic specification.
     __________________________________________________________

7.2.5. Qt4 Events
     __________________________________________________________

7.2.5.1. Class data for QEventLoop

   The virtual table for the QEventLoop class is described in the
   generic part of this specification.

   The Run Time Type Information for the QEventLoop class is
   described by Table 7-10

   Table 7-10. typeinfo for QEventLoop
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QEventLoop
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.5.2. Class data for QEvent

   The virtual table for the QEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QEvent class is described
   by Table 7-11

   Table 7-11. typeinfo for QEvent
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QEvent
     __________________________________________________________

7.2.5.3. Class data for QTimerEvent

   The virtual table for the QTimerEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTimerEvent class is
   described by Table 7-12

   Table 7-12. typeinfo for QTimerEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTimerEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.2.5.4. Class data for QChildEvent

   The virtual table for the QChildEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QChildEvent class is
   described by Table 7-13

   Table 7-13. typeinfo for QChildEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QChildEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.2.5.5. Class data for QCustomEvent

   The virtual table for the QCustomEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QCustomEvent class is
   described by Table 7-14

   Table 7-14. typeinfo for QCustomEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QCustomEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.2.5.6. Class data for QAbstractEventDispatcher

   The virtual table for the QAbstractEventDispatcher class is
   described in the generic part of this specification.

   The Run Time Type Information for the QAbstractEventDispatcher
   class is described by Table 7-15

   Table 7-15. typeinfo for QAbstractEventDispatcher
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractEventDispatcher
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.5.7. Interfaces for Qt4 Events

   No external functions are defined for libQtCore - Qt4 Events in
   this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.2.6. Qt4 Arrays
     __________________________________________________________

7.2.6.1. Interfaces for Qt4 Arrays

   No external functions are defined for libQtCore - Qt4 Arrays in
   this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.2.7. Qt4 Plugins
     __________________________________________________________

7.2.7.1. Class data for QTextCodecPlugin

   The virtual table for the QTextCodecPlugin class is described
   by Table 7-16

   Table 7-16. Primary vtable for QTextCodecPlugin
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTextCodecPlugin
   vfunc[0]: QTextCodecPlugin::metaObject() const
   vfunc[1]: QTextCodecPlugin::qt_metacast(char const*)
   vfunc[2]: QTextCodecPlugin::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QTextCodecPlugin::~QTextCodecPlugin()
   vfunc[4]: QTextCodecPlugin::~QTextCodecPlugin()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: __cxa_pure_virtual
   vfunc[13]: __cxa_pure_virtual
   vfunc[14]: __cxa_pure_virtual
   vfunc[15]: __cxa_pure_virtual
   vfunc[16]: __cxa_pure_virtual
   vfunc[17]: QTextCodecPlugin::keys() const
   vfunc[18]: QTextCodecPlugin::create(QString const&)

   Table 7-17. Secondary vtable for QTextCodecPlugin
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTextCodecPlugin
   vfunc[0]: non-virtual thunk to
   QTextCodecPlugin::~QTextCodecPlugin()
   vfunc[1]: non-virtual thunk to
   QTextCodecPlugin::~QTextCodecPlugin()
   vfunc[2]: non-virtual thunk to QTextCodecPlugin::keys() const
   vfunc[3]: non-virtual thunk to QTextCodecPlugin::create(QString
   const&)

   The Run Time Type Information for the QTextCodecPlugin class is
   described by Table 7-18

   Table 7-18. typeinfo for QTextCodecPlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QTextCodecPlugin
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QTextCodecFactoryInterface     2050
     __________________________________________________________

7.2.7.2. Class data for QPluginLoader

   The virtual table for the QPluginLoader class is described in
   the generic part of this specification.

   The Run Time Type Information for the QPluginLoader class is
   described by Table 7-19

   Table 7-19. typeinfo for QPluginLoader
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPluginLoader
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.7.3. Class data for QLibrary

   The virtual table for the QLibrary class is described in the
   generic part of this specification.

   The Run Time Type Information for the QLibrary class is
   described by Table 7-20

   Table 7-20. typeinfo for QLibrary
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QLibrary
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.7.4. Interfaces for Qt4 Plugins

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Plugins specified in Table 7-21,
   with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-21. libQtCore - Qt4 Plugins Function Interfaces
   _ZThn8_N16QTextCodecPluginD0Ev [CXXABI-1.86]
   _ZThn8_N16QTextCodecPluginD1Ev [CXXABI-1.86]
     __________________________________________________________

7.2.8. Qt4 Date and Time
     __________________________________________________________

7.2.8.1. Class data for QTimer

   The virtual table for the QTimer class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTimer class is described
   by Table 7-22

   Table 7-22. typeinfo for QTimer
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTimer
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.8.2. Interfaces for Qt4 Date and Time

   No external functions are defined for libQtCore - Qt4 Date and
   Time in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.2.9. Qt4 Miscellaneous
     __________________________________________________________

7.2.9.1. Class data for QFactoryInterface

   The virtual table for the QFactoryInterface class is described
   in the generic part of this specification.

   The Run Time Type Information for the QFactoryInterface class
   is described by Table 7-23

   Table 7-23. typeinfo for QFactoryInterface
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QFactoryInterface
     __________________________________________________________

7.2.9.2. Interfaces for Qt4 Miscellaneous

   No external functions are defined for libQtCore - Qt4
   Miscellaneous in this part of the specification. See also the
   generic specification.
     __________________________________________________________

7.2.10. Qt4 Text
     __________________________________________________________

7.2.10.1. Interfaces for Qt4 Text

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Text specified in Table 7-24, with
   the full mandatory functionality as described in the referenced
   underlying specification.

   Table 7-24. libQtCore - Qt4 Text Function Interfaces
   _ZN7QString8vsprintfEPKcPc [QtCore]
     __________________________________________________________

7.2.11. Qt4 Input/Output
     __________________________________________________________

7.2.11.1. Class data for QIODevice

   The virtual table for the QIODevice class is described in the
   generic part of this specification.

   The Run Time Type Information for the QIODevice class is
   described by Table 7-25

   Table 7-25. typeinfo for QIODevice
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QIODevice
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.11.2. Class data for QDataStream

   The virtual table for the QDataStream class is described in the
   generic part of this specification.

   The Run Time Type Information for the QDataStream class is
   described by Table 7-26

   Table 7-26. typeinfo for QDataStream
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QDataStream
     __________________________________________________________

7.2.11.3. Class data for QTextStream

   The virtual table for the QTextStream class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTextStream class is
   described by Table 7-27

   Table 7-27. typeinfo for QTextStream
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QTextStream
     __________________________________________________________

7.2.11.4. Class data for QFile

   The virtual table for the QFile class is described in the
   generic part of this specification.

   The Run Time Type Information for the QFile class is described
   by Table 7-28

   Table 7-28. typeinfo for QFile
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFile
   basetype:   typeinfo for QIODevice
     __________________________________________________________

7.2.11.5. Class data for QTemporaryFile

   The virtual table for the QTemporaryFile class is described in
   the generic part of this specification.

   The Run Time Type Information for the QTemporaryFile class is
   described by Table 7-29

   Table 7-29. typeinfo for QTemporaryFile
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTemporaryFile
   basetype:   typeinfo for QFile
     __________________________________________________________

7.2.11.6. Class data for QAbstractFileEngine

   The virtual table for the QAbstractFileEngine class is
   described in the generic part of this specification.

   The Run Time Type Information for the QAbstractFileEngine class
   is described by Table 7-30

   Table 7-30. typeinfo for QAbstractFileEngine
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QAbstractFileEngine
     __________________________________________________________

7.2.11.7. Class data for QAbstractFileEngineHandler

   The virtual table for the QAbstractFileEngineHandler class is
   described in the generic part of this specification.

   The Run Time Type Information for the
   QAbstractFileEngineHandler class is described by Table 7-31

   Table 7-31. typeinfo for QAbstractFileEngineHandler
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QAbstractFileEngineHandler
     __________________________________________________________

7.2.11.8. Class data for QFSFileEngine

   The virtual table for the QFSFileEngine class is described in
   the generic part of this specification.

   The Run Time Type Information for the QFSFileEngine class is
   described by Table 7-32

   Table 7-32. typeinfo for QFSFileEngine
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFSFileEngine
   basetype:   typeinfo for QAbstractFileEngine
     __________________________________________________________

7.2.11.9. Class data for QProcess

   The virtual table for the QProcess class is described in the
   generic part of this specification.

   The Run Time Type Information for the QProcess class is
   described by Table 7-33

   Table 7-33. typeinfo for QProcess
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QProcess
   basetype:   typeinfo for QIODevice
     __________________________________________________________

7.2.11.10. Class data for QBuffer

   The virtual table for the QBuffer class is described in the
   generic part of this specification.

   The Run Time Type Information for the QBuffer class is
   described by Table 7-34

   Table 7-34. typeinfo for QBuffer
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QBuffer
   basetype:   typeinfo for QIODevice
     __________________________________________________________

7.2.11.11. Class data for QSettings

   The virtual table for the QSettings class is described in the
   generic part of this specification.

   The Run Time Type Information for the QSettings class is
   described by Table 7-35

   Table 7-35. typeinfo for QSettings
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSettings
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.11.12. Class data for QSignalMapper

   The virtual table for the QSignalMapper class is described in
   the generic part of this specification.

   The Run Time Type Information for the QSignalMapper class is
   described by Table 7-36

   Table 7-36. typeinfo for QSignalMapper
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSignalMapper
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.11.13. Class data for QSocketNotifier

   The virtual table for the QSocketNotifier class is described in
   the generic part of this specification.

   The Run Time Type Information for the QSocketNotifier class is
   described by Table 7-37

   Table 7-37. typeinfo for QSocketNotifier
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSocketNotifier
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.11.14. Class data for QFileSystemWatcher

   The virtual table for the QFileSystemWatcher class is described
   in the generic part of this specification.
     __________________________________________________________

7.2.11.15. Interfaces for Qt4 Input/Output

   No external functions are defined for libQtCore - Qt4
   Input/Output in this part of the specification. See also the
   generic specification.
     __________________________________________________________

7.2.12. Qt4 Core Application
     __________________________________________________________

7.2.12.1. Class data for QCoreApplication

   The virtual table for the QCoreApplication class is described
   in the generic part of this specification.

   The Run Time Type Information for the QCoreApplication class is
   described by Table 7-38

   Table 7-38. typeinfo for QCoreApplication
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QCoreApplication
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.12.2. Interfaces for Qt4 Core Application

   No external functions are defined for libQtCore - Qt4 Core
   Application in this part of the specification. See also the
   generic specification.
     __________________________________________________________

7.2.13. Qt4 Object Model
     __________________________________________________________

7.2.13.1. Class data for QObject

   The virtual table for the QObject class is described in the
   generic part of this specification.

   The Run Time Type Information for the QObject class is
   described by Table 7-39

   Table 7-39. typeinfo for QObject
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QObject
     __________________________________________________________

7.2.13.2. Class data for QObjectUserData

   The virtual table for the QObjectUserData class is described in
   the generic part of this specification.

   The Run Time Type Information for the QObjectUserData class is
   described by Table 7-40

   Table 7-40. typeinfo for QObjectUserData
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QObjectUserData
     __________________________________________________________

7.2.13.3. Class data for QObjectCleanupHandler

   The virtual table for the QObjectCleanupHandler class is
   described in the generic part of this specification.

   The Run Time Type Information for the QObjectCleanupHandler
   class is described by Table 7-41

   Table 7-41. typeinfo for QObjectCleanupHandler
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QObjectCleanupHandler
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.13.4. Interfaces for Qt4 Object Model

   No external functions are defined for libQtCore - Qt4 Object
   Model in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.2.14. Qt4 Threading
     __________________________________________________________

7.2.14.1. Class data for QThread

   The virtual table for the QThread class is described in the
   generic part of this specification.

   The Run Time Type Information for the QThread class is
   described by Table 7-42

   Table 7-42. typeinfo for QThread
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QThread
   basetype:   typeinfo for QObject
     __________________________________________________________

7.2.14.2. Interfaces for Qt4 Threading

   No external functions are defined for libQtCore - Qt4 Threading
   in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.2.15. Qt4 2D Graphics
     __________________________________________________________

7.2.15.1. Interfaces for Qt4 2D Graphics

   No external functions are defined for libQtCore - Qt4 2D
   Graphics in this part of the specification. See also the
   generic specification.
     __________________________________________________________

7.2.16. Qt4 Internals
     __________________________________________________________

7.2.16.1. Interfaces for Qt4 Internals

   No external functions are defined for libQtCore - Qt4 Internals
   in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.3. Data Definitions for libQtCore

   This section defines global identifiers and their values that
   are associated with interfaces contained in libQtCore. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

7.3.1. QtCore/qabstracteventdispatcher.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.2. QtCore/qabstractfileengine.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.3. QtCore/qabstractitemmodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.4. QtCore/qatomic.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.5. QtCore/qbasictimer.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.6. QtCore/qbitarray.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.7. QtCore/qbuffer.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.8. QtCore/qbytearray.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.9. QtCore/qbytearraymatcher.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.10. QtCore/qchar.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.11. QtCore/qcoreapplication.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.12. QtCore/qcoreevent.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.13. QtCore/qdatastream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.14. QtCore/qdatetime.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.15. QtCore/qdebug.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.16. QtCore/qdir.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.17. QtCore/qeventloop.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.18. QtCore/qfactoryinterface.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.19. QtCore/qfile.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.20. QtCore/qfileinfo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.21. QtCore/qfsfileengine.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.22. QtCore/qglobal.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.23. QtCore/qhash.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.24. QtCore/qiodevice.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.25. QtCore/qlibrary.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.26. QtCore/qlibraryinfo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.27. QtCore/qline.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.28. QtCore/qlinkedlist.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.29. QtCore/qlist.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.30. QtCore/qlocale.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.31. QtCore/qmap.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.32. QtCore/qmetaobject.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.33. QtCore/qmetatype.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.34. QtCore/qmimedata.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.35. QtCore/qmutex.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.36. QtCore/qnamespace.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.37. QtCore/qobject.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.38. QtCore/qobjectcleanuphandler.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.39. QtCore/qobjectdefs.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.40. QtCore/qpair.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.41. QtCore/qplugin.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.42. QtCore/qpluginloader.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.43. QtCore/qpoint.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.44. QtCore/qprocess.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.45. QtCore/qreadwritelock.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.46. QtCore/qrect.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.47. QtCore/qregexp.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.48. QtCore/qsemaphore.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.49. QtCore/qsettings.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.50. QtCore/qshareddata.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.51. QtCore/qsignalmapper.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.52. QtCore/qsize.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.53. QtCore/qsocketnotifier.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.54. QtCore/qstring.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.55. QtCore/qstringlist.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.56. QtCore/qstringmatcher.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.57. QtCore/qtemporaryfile.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.58. QtCore/qtextcodec.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.59. QtCore/qtextcodecplugin.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.60. QtCore/qtextstream.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.61. QtCore/qthread.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.62. QtCore/qthreadstorage.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.63. QtCore/qtimer.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.64. QtCore/qtranslator.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.65. QtCore/qurl.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.66. QtCore/quuid.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.67. QtCore/qvariant.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.68. QtCore/qvector.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.3.69. QtCore/qwaitcondition.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.4. Interface Definitions for libQtCore

   Table of Contents
   _Z7qMallocj -- allocate memory block
   _Z7qMemSetPvij -- fill memory with a constant byte
   _Z8qMemCopyPvPKvj -- copy memory area
   _Z8qReallocPvj -- change the size of memory block

   The interfaces defined on the following pages are included in
   libQtCore and are defined by this specification. Unless
   otherwise noted, these interfaces shall be included in the
   source standard.

   Other interfaces listed in Section 7.2 shall behave as
   described in the referenced base document. For interfaces
   referencing LSB and not listed below, please see the generic
   part of the specification.

_Z7qMallocj

Name

   qMalloc -- allocate memory block

Synopsis

   #include <QtCore/qglobal.h>

   void * qMalloc (size_t size);

Description

   The qMalloc() function has the same behavior as the malloc()
   function described in POSIX 1003.1-2008 (ISO/IEC 9945-2009).

_Z7qMemSetPvij

Name

   qMemSet -- fill memory with a constant byte

Synopsis

   #include <QtCore/qglobal.h>

   void * qMemSet (void *dest, int c, size_t n);

Description

   The qMemSet() function has the same behavior as the memset()
   function described in POSIX 1003.1-2008 (ISO/IEC 9945-2009).

_Z8qMemCopyPvPKvj

Name

   qMemCopy -- copy memory area

Synopsis

   #include <QtCore/qglobal.h>

   void * qMemCopy (void *dest, const void *src, size_t n);

Description

   The qMemCopy() function has the same behavior as the memcpy()
   function described in POSIX 1003.1-2008 (ISO/IEC 9945-2009).

_Z8qReallocPvj

Name

   qRealloc -- change the size of memory block

Synopsis

   #include <QtCore/qglobal.h>

   void * qRealloc (void *ptr, size_t size);

Description

   The qRealloc() function has the same behavior as the realloc()
   function described in POSIX 1003.1-2008 (ISO/IEC 9945-2009).
     __________________________________________________________

7.5. Interfaces for libQtGui

   Table 7-43 defines the library name and shared object name for
   the libQtGui library

   Table 7-43. libQtGui Definition
   Library: libQtGui
   SONAME:  libQtGui.so.4

   The behavior of the interfaces in this library is specified by
   the following specifications:

   [CXXABI-1.86] Itanium(TM) C++ ABI
     __________________________________________________________

7.5.1. Qt4 GUI Functions
     __________________________________________________________

7.5.1.1. Interfaces for Qt4 GUI Functions

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 GUI Functions specified in Table
   7-44, with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-44. libQtGui - Qt4 GUI Functions Function Interfaces
   _ZThn12_NK10QDropEvent11encodedDataEPKc [CXXABI-1.86]
   _ZThn12_NK10QDropEvent6formatEi [CXXABI-1.86]
   _ZThn12_NK10QDropEvent8providesEPKc [CXXABI-1.86]
   _ZThn8_N10QBoxLayout10invalidateEv [CXXABI-1.86]
   _ZThn8_N10QBoxLayout11setGeometryERK5QRect [CXXABI-1.86]
   _ZThn8_N11QGridLayout10invalidateEv [CXXABI-1.86]
   _ZThn8_N11QGridLayout11setGeometryERK5QRect [CXXABI-1.86]
   _ZThn8_N14QStackedLayout11setGeometryERK5QRect [CXXABI-1.86]
   _ZThn8_N20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPic
   ture [CXXABI-1.86]
   _ZThn8_N20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPi
   cture [CXXABI-1.86]
   _ZThn8_N7QLayout10invalidateEv [CXXABI-1.86]
   _ZThn8_N7QLayout6layoutEv [CXXABI-1.86]
   _ZThn8_NK10QBoxLayout11maximumSizeEv [CXXABI-1.86]
   _ZThn8_NK10QBoxLayout11minimumSizeEv [CXXABI-1.86]
   _ZThn8_NK10QBoxLayout14heightForWidthEi [CXXABI-1.86]
   _ZThn8_NK10QBoxLayout17hasHeightForWidthEv [CXXABI-1.86]
   _ZThn8_NK10QBoxLayout19expandingDirectionsEv [CXXABI-1.86]
   _ZThn8_NK10QBoxLayout21minimumHeightForWidthEi [CXXABI-1.86]
   _ZThn8_NK10QBoxLayout8sizeHintEv [CXXABI-1.86]
   _ZThn8_NK11QGridLayout11maximumSizeEv [CXXABI-1.86]
   _ZThn8_NK11QGridLayout11minimumSizeEv [CXXABI-1.86]
   _ZThn8_NK11QGridLayout14heightForWidthEi [CXXABI-1.86]
   _ZThn8_NK11QGridLayout17hasHeightForWidthEv [CXXABI-1.86]
   _ZThn8_NK11QGridLayout19expandingDirectionsEv [CXXABI-1.86]
   _ZThn8_NK11QGridLayout21minimumHeightForWidthEi [CXXABI-1.86]
   _ZThn8_NK11QGridLayout8sizeHintEv [CXXABI-1.86]
   _ZThn8_NK14QStackedLayout11minimumSizeEv [CXXABI-1.86]
   _ZThn8_NK14QStackedLayout8sizeHintEv [CXXABI-1.86]
   _ZThn8_NK7QLayout11maximumSizeEv [CXXABI-1.86]
   _ZThn8_NK7QLayout11minimumSizeEv [CXXABI-1.86]
   _ZThn8_NK7QLayout19expandingDirectionsEv [CXXABI-1.86]
   _ZThn8_NK7QLayout7isEmptyEv [CXXABI-1.86]
   _ZThn8_NK7QLayout8geometryEv [CXXABI-1.86]
   _ZThn8_NK7QWidget11paintEngineEv [CXXABI-1.86]
   _ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE
   [CXXABI-1.86] _ZThn8_NK7QWidget7devTypeEv [CXXABI-1.86]
     __________________________________________________________

7.5.2. Qt4 Organizers
     __________________________________________________________

7.5.2.1. Class data for QButtonGroup

   The virtual table for the QButtonGroup class is described in
   the generic part of this specification.

   The Run Time Type Information for the QButtonGroup class is
   described by Table 7-45

   Table 7-45. typeinfo for QButtonGroup
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QButtonGroup
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.2.2. Class data for QGroupBox

   The virtual table for the QGroupBox class is described by Table
   7-46

   Table 7-46. Primary vtable for QGroupBox
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QGroupBox
   vfunc[0]: QGroupBox::metaObject() const
   vfunc[1]: QGroupBox::qt_metacast(char const*)
   vfunc[2]: QGroupBox::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QGroupBox::~QGroupBox()
   vfunc[4]: QGroupBox::~QGroupBox()
   vfunc[5]: QGroupBox::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QGroupBox::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QGroupBox::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QGroupBox::mousePressEvent(QMouseEvent*)
   vfunc[19]: QGroupBox::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QGroupBox::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QGroupBox::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QGroupBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QGroupBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QGroupBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-47. Secondary vtable for QGroupBox
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QGroupBox
   vfunc[0]: non-virtual thunk to QGroupBox::~QGroupBox()
   vfunc[1]: non-virtual thunk to QGroupBox::~QGroupBox()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QGroupBox class is
   described by Table 7-48

   Table 7-48. typeinfo for QGroupBox
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QGroupBox
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.2.3. Class data for QSplitter

   The virtual table for the QSplitter class is described by Table
   7-49

   Table 7-49. Primary vtable for QSplitter
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QSplitter
   vfunc[0]: QSplitter::metaObject() const
   vfunc[1]: QSplitter::qt_metacast(char const*)
   vfunc[2]: QSplitter::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QSplitter::~QSplitter()
   vfunc[4]: QSplitter::~QSplitter()
   vfunc[5]: QSplitter::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QSplitter::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QSplitter::sizeHint() const
   vfunc[15]: QSplitter::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QFrame::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QSplitter::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QSplitter::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QSplitter::createHandle()

   Table 7-50. Secondary vtable for QSplitter
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QSplitter
   vfunc[0]: non-virtual thunk to QSplitter::~QSplitter()
   vfunc[1]: non-virtual thunk to QSplitter::~QSplitter()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QSplitter class is
   described by Table 7-51

   Table 7-51. typeinfo for QSplitter
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSplitter
   basetype:   typeinfo for QFrame
     __________________________________________________________

7.5.2.4. Class data for QSplitterHandle

   The virtual table for the QSplitterHandle class is described by
   Table 7-52

   Table 7-52. Primary vtable for QSplitterHandle
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QSplitterHandle
   vfunc[0]: QSplitterHandle::metaObject() const
   vfunc[1]: QSplitterHandle::qt_metacast(char const*)
   vfunc[2]: QSplitterHandle::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: NULL or QSplitterHandle::~QSplitterHandle()
   vfunc[4]: NULL or QSplitterHandle::~QSplitterHandle()
   vfunc[5]: QSplitterHandle::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QSplitterHandle::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QSplitterHandle::mousePressEvent(QMouseEvent*)
   vfunc[19]: QSplitterHandle::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QSplitterHandle::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QSplitterHandle::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-53. Secondary vtable for QSplitterHandle
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QSplitterHandle
   vfunc[0]: NULL or non-virtual thunk to
   QSplitterHandle::~QSplitterHandle()
   vfunc[1]: NULL or non-virtual thunk to
   QSplitterHandle::~QSplitterHandle()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QSplitterHandle class is
   described by Table 7-54

   Table 7-54. typeinfo for QSplitterHandle
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSplitterHandle
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.2.5. Interfaces for Qt4 Organizers

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Organizers specified in Table 7-55,
   with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-55. libQtGui - Qt4 Organizers Function Interfaces
   _ZThn8_N9QGroupBoxD0Ev [CXXABI-1.86] _ZThn8_N9QGroupBoxD1Ev
   [CXXABI-1.86]
   _ZThn8_N9QSplitterD0Ev [CXXABI-1.86] _ZThn8_N9QSplitterD1Ev
   [CXXABI-1.86]
     __________________________________________________________

7.5.3. Qt4 Events
     __________________________________________________________

7.5.3.1. Class data for QInputEvent

   The virtual table for the QInputEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QInputEvent class is
   described by Table 7-56

   Table 7-56. typeinfo for QInputEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QInputEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.2. Class data for QMouseEvent

   The virtual table for the QMouseEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QMouseEvent class is
   described by Table 7-57

   Table 7-57. typeinfo for QMouseEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMouseEvent
   basetype:   typeinfo for QInputEvent
     __________________________________________________________

7.5.3.3. Class data for QHoverEvent

   The virtual table for the QHoverEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QHoverEvent class is
   described by Table 7-58

   Table 7-58. typeinfo for QHoverEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QHoverEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.4. Class data for QWheelEvent

   The virtual table for the QWheelEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QWheelEvent class is
   described by Table 7-59

   Table 7-59. typeinfo for QWheelEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QWheelEvent
   basetype:   typeinfo for QInputEvent
     __________________________________________________________

7.5.3.5. Class data for QTabletEvent

   The virtual table for the QTabletEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QTabletEvent class is
   described by Table 7-60

   Table 7-60. typeinfo for QTabletEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTabletEvent
   basetype:   typeinfo for QInputEvent
     __________________________________________________________

7.5.3.6. Class data for QKeyEvent

   The virtual table for the QKeyEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QKeyEvent class is
   described by Table 7-61

   Table 7-61. typeinfo for QKeyEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QKeyEvent
   basetype:   typeinfo for QInputEvent
     __________________________________________________________

7.5.3.7. Class data for QFocusEvent

   The virtual table for the QFocusEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QFocusEvent class is
   described by Table 7-62

   Table 7-62. typeinfo for QFocusEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFocusEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.8. Class data for QPaintEvent

   The virtual table for the QPaintEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QPaintEvent class is
   described by Table 7-63

   Table 7-63. typeinfo for QPaintEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPaintEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.9. Class data for QMoveEvent

   The virtual table for the QMoveEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QMoveEvent class is
   described by Table 7-64

   Table 7-64. typeinfo for QMoveEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMoveEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.10. Class data for QResizeEvent

   The virtual table for the QResizeEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QResizeEvent class is
   described by Table 7-65

   Table 7-65. typeinfo for QResizeEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QResizeEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.11. Class data for QCloseEvent

   The virtual table for the QCloseEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QCloseEvent class is
   described by Table 7-66

   Table 7-66. typeinfo for QCloseEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QCloseEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.12. Class data for QIconDragEvent

   The virtual table for the QIconDragEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QIconDragEvent class is
   described by Table 7-67

   Table 7-67. typeinfo for QIconDragEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QIconDragEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.13. Class data for QShowEvent

   The virtual table for the QShowEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QShowEvent class is
   described by Table 7-68

   Table 7-68. typeinfo for QShowEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QShowEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.14. Class data for QHideEvent

   The virtual table for the QHideEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QHideEvent class is
   described by Table 7-69

   Table 7-69. typeinfo for QHideEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QHideEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.15. Class data for QContextMenuEvent

   The virtual table for the QContextMenuEvent class is described
   in the generic part of this specification.

   The Run Time Type Information for the QContextMenuEvent class
   is described by Table 7-70

   Table 7-70. typeinfo for QContextMenuEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QContextMenuEvent
   basetype:   typeinfo for QInputEvent
     __________________________________________________________

7.5.3.16. Class data for QInputMethodEvent

   The virtual table for the QInputMethodEvent class is described
   in the generic part of this specification.

   The Run Time Type Information for the QInputMethodEvent class
   is described by Table 7-71

   Table 7-71. typeinfo for QInputMethodEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QInputMethodEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.17. Class data for QHelpEvent

   The virtual table for the QHelpEvent class is described in the
   generic part of this specification.

   The Run Time Type Information for the QHelpEvent class is
   described by Table 7-72

   Table 7-72. typeinfo for QHelpEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QHelpEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.18. Class data for QStatusTipEvent

   The virtual table for the QStatusTipEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QStatusTipEvent class is
   described by Table 7-73

   Table 7-73. typeinfo for QStatusTipEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QStatusTipEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.19. Class data for QWhatsThisClickedEvent

   The virtual table for the QWhatsThisClickedEvent class is
   described in the generic part of this specification.

   The Run Time Type Information for the QWhatsThisClickedEvent
   class is described by Table 7-74

   Table 7-74. typeinfo for QWhatsThisClickedEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QWhatsThisClickedEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.20. Class data for QActionEvent

   The virtual table for the QActionEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QActionEvent class is
   described by Table 7-75

   Table 7-75. typeinfo for QActionEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QActionEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.21. Class data for QFileOpenEvent

   The virtual table for the QFileOpenEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QFileOpenEvent class is
   described by Table 7-76

   Table 7-76. typeinfo for QFileOpenEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFileOpenEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.22. Class data for QToolBarChangeEvent

   The virtual table for the QToolBarChangeEvent class is
   described in the generic part of this specification.

   The Run Time Type Information for the QToolBarChangeEvent class
   is described by Table 7-77

   Table 7-77. typeinfo for QToolBarChangeEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QToolBarChangeEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.23. Class data for QShortcutEvent

   The virtual table for the QShortcutEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QShortcutEvent class is
   described by Table 7-78

   Table 7-78. typeinfo for QShortcutEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QShortcutEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.24. Class data for QClipboardEvent

   The virtual table for the QClipboardEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QClipboardEvent class is
   described by Table 7-79

   Table 7-79. typeinfo for QClipboardEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QClipboardEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.25. Class data for QWindowStateChangeEvent

   The virtual table for the QWindowStateChangeEvent class is
   described in the generic part of this specification.

   The Run Time Type Information for the QWindowStateChangeEvent
   class is described by Table 7-80

   Table 7-80. typeinfo for QWindowStateChangeEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QWindowStateChangeEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.26. Class data for QMenubarUpdatedEvent

   The virtual table for the QMenubarUpdatedEvent class is
   described in the generic part of this specification.

   The Run Time Type Information for the QMenubarUpdatedEvent
   class is described by Table 7-81

   Table 7-81. typeinfo for QMenubarUpdatedEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMenubarUpdatedEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.3.27. Interfaces for Qt4 Events

   No external functions are defined for libQtGui - Qt4 Events in
   this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.4. Qt4 Fonts
     __________________________________________________________

7.5.4.1. Interfaces for Qt4 Fonts

   No external functions are defined for libQtGui - Qt4 Fonts in
   this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.5. Qt4 Colors
     __________________________________________________________

7.5.5.1. Interfaces for Qt4 Colors

   No external functions are defined for libQtGui - Qt4 Colors in
   this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.6. Qt4 Accessibility
     __________________________________________________________

7.5.6.1. Class data for QAccessibleBridgeFactoryInterface

   The virtual table for the QAccessibleBridgeFactoryInterface
   class is described in the generic part of this specification.

   The Run Time Type Information for the
   QAccessibleBridgeFactoryInterface class is described by Table
   7-82

   Table 7-82. typeinfo for QAccessibleBridgeFactoryInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAccessibleBridgeFactoryInterface
   basetype:   typeinfo for QFactoryInterface
     __________________________________________________________

7.5.6.2. Class data for QAccessibleBridgePlugin

   The virtual table for the QAccessibleBridgePlugin class is
   described by Table 7-83

   Table 7-83. Primary vtable for QAccessibleBridgePlugin
 Base Offset         0
 Virtual Base Offset 0
 RTTI                typeinfo for QAccessibleBridgePlugin
 vfunc[0]:           QAccessibleBridgePlugin::metaObject() const
 vfunc[1]:           QAccessibleBridgePlugin::qt_metacast(char const*)
 vfunc[2]:
   QAccessibleBridgePlugin::qt_metacall(QMetaObject::Call, int,
   void**)
 vfunc[3]:           QAccessibleBridgePlugin::~QAccessibleBridgePlugin()
 vfunc[4]:           QAccessibleBridgePlugin::~QAccessibleBridgePlugin()
 vfunc[5]:           QObject::event(QEvent*)
 vfunc[6]:           QObject::eventFilter(QObject*, QEvent*)
 vfunc[7]:           QObject::timerEvent(QTimerEvent*)
 vfunc[8]:           QObject::childEvent(QChildEvent*)
 vfunc[9]:           QObject::customEvent(QEvent*)
 vfunc[10]:          QObject::connectNotify(char const*)
 vfunc[11]:          QObject::disconnectNotify(char const*)
 vfunc[12]:          __cxa_pure_virtual
 vfunc[13]:          __cxa_pure_virtual

   Table 7-84. Secondary vtable for QAccessibleBridgePlugin
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAccessibleBridgePlugin
   vfunc[0]: non-virtual thunk to
   QAccessibleBridgePlugin::~QAccessibleBridgePlugin()
   vfunc[1]: non-virtual thunk to
   QAccessibleBridgePlugin::~QAccessibleBridgePlugin()
   vfunc[2]: __cxa_pure_virtual
   vfunc[3]: __cxa_pure_virtual

   The Run Time Type Information for the QAccessibleBridgePlugin
   class is described by Table 7-85

   Table 7-85. typeinfo for QAccessibleBridgePlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QAccessibleBridgePlugin
   flags:      0
   basetype:   typeinfo for QObject                           2
   basetype:   typeinfo for QAccessibleBridgeFactoryInterface 2050
     __________________________________________________________

7.5.6.3. Class data for QAccessibleInterface

   The virtual table for the QAccessibleInterface class is
   described in the generic part of this specification.

   The Run Time Type Information for the QAccessibleInterface
   class is described by Table 7-86

   Table 7-86. typeinfo for QAccessibleInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAccessibleInterface
   basetype:   typeinfo for QAccessible
     __________________________________________________________

7.5.6.4. Class data for QAccessibleObject

   The virtual table for the QAccessibleObject class is described
   in the generic part of this specification.

   The Run Time Type Information for the QAccessibleObject class
   is described by Table 7-87

   Table 7-87. typeinfo for QAccessibleObject
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAccessibleObject
   basetype:   typeinfo for QAccessibleInterface
     __________________________________________________________

7.5.6.5. Class data for QAccessibleApplication

   The virtual table for the QAccessibleApplication class is
   described in the generic part of this specification.

   The Run Time Type Information for the QAccessibleApplication
   class is described by Table 7-88

   Table 7-88. typeinfo for QAccessibleApplication
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAccessibleApplication
   basetype:   typeinfo for QAccessibleObject
     __________________________________________________________

7.5.6.6. Class data for QAccessibleWidget

   The virtual table for the QAccessibleWidget class is described
   in the generic part of this specification.

   The Run Time Type Information for the QAccessibleWidget class
   is described by Table 7-89

   Table 7-89. typeinfo for QAccessibleWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAccessibleWidget
   basetype:   typeinfo for QAccessibleObject
     __________________________________________________________

7.5.6.7. Class data for QAccessibleFactoryInterface

   The virtual table for the QAccessibleFactoryInterface class is
   described in the generic part of this specification.

   The Run Time Type Information for the
   QAccessibleFactoryInterface class is described by Table 7-90

   Table 7-90. typeinfo for QAccessibleFactoryInterface
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QAccessibleFactoryInterface
   flags:      0
   basetype:   typeinfo for QAccessible                     2
   basetype:   typeinfo for QFactoryInterface               2
     __________________________________________________________

7.5.6.8. Class data for QAccessiblePlugin

   The virtual table for the QAccessiblePlugin class is described
   by Table 7-91

   Table 7-91. Primary vtable for QAccessiblePlugin
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QAccessiblePlugin
   vfunc[0]: QAccessiblePlugin::metaObject() const
   vfunc[1]: QAccessiblePlugin::qt_metacast(char const*)
   vfunc[2]: QAccessiblePlugin::qt_metacall(QMetaObject::Call,
   int, void**)
   vfunc[3]: QAccessiblePlugin::~QAccessiblePlugin()
   vfunc[4]: QAccessiblePlugin::~QAccessiblePlugin()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: __cxa_pure_virtual
   vfunc[13]: __cxa_pure_virtual

   Table 7-92. Secondary vtable for QAccessiblePlugin
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAccessiblePlugin
   vfunc[0]: non-virtual thunk to
   QAccessiblePlugin::~QAccessiblePlugin()
   vfunc[1]: non-virtual thunk to
   QAccessiblePlugin::~QAccessiblePlugin()
   vfunc[2]: __cxa_pure_virtual
   vfunc[3]: __cxa_pure_virtual

   The Run Time Type Information for the QAccessiblePlugin class
   is described by Table 7-93

   Table 7-93. typeinfo for QAccessiblePlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QAccessiblePlugin
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QAccessibleFactoryInterface    2050
     __________________________________________________________

7.5.6.9. Interfaces for Qt4 Accessibility

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Accessibility specified in Table
   7-94, with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-94. libQtGui - Qt4 Accessibility Function Interfaces
   _ZThn8_N17QAccessiblePluginD0Ev [CXXABI-1.86]
   _ZThn8_N17QAccessiblePluginD1Ev [CXXABI-1.86]
   _ZThn8_N23QAccessibleBridgePluginD0Ev [CXXABI-1.86]
   _ZThn8_N23QAccessibleBridgePluginD1Ev [CXXABI-1.86]
     __________________________________________________________

7.5.7. Qt4 Validators
     __________________________________________________________

7.5.7.1. Class data for QValidator

   The virtual table for the QValidator class is described in the
   generic part of this specification.

   The Run Time Type Information for the QValidator class is
   described by Table 7-95

   Table 7-95. typeinfo for QValidator
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QValidator
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.7.2. Class data for QIntValidator

   The virtual table for the QIntValidator class is described in
   the generic part of this specification.

   The Run Time Type Information for the QIntValidator class is
   described by Table 7-96

   Table 7-96. typeinfo for QIntValidator
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QIntValidator
   basetype:   typeinfo for QValidator
     __________________________________________________________

7.5.7.3. Class data for QDoubleValidator

   The virtual table for the QDoubleValidator class is described
   in the generic part of this specification.

   The Run Time Type Information for the QDoubleValidator class is
   described by Table 7-97

   Table 7-97. typeinfo for QDoubleValidator
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDoubleValidator
   basetype:   typeinfo for QValidator
     __________________________________________________________

7.5.7.4. Class data for QRegExpValidator

   The virtual table for the QRegExpValidator class is described
   in the generic part of this specification.

   The Run Time Type Information for the QRegExpValidator class is
   described by Table 7-98

   Table 7-98. typeinfo for QRegExpValidator
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QRegExpValidator
   basetype:   typeinfo for QValidator
     __________________________________________________________

7.5.7.5. Interfaces for Qt4 Validators

   No external functions are defined for libQtGui - Qt4 Validators
   in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.8. Qt4 Plugins
     __________________________________________________________

7.5.8.1. Class data for QImageIOPlugin

   The virtual table for the QImageIOPlugin class is described by
   Table 7-99

   Table 7-99. Primary vtable for QImageIOPlugin
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QImageIOPlugin
   vfunc[0]: QImageIOPlugin::metaObject() const
   vfunc[1]: QImageIOPlugin::qt_metacast(char const*)
   vfunc[2]: QImageIOPlugin::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QImageIOPlugin::~QImageIOPlugin()
   vfunc[4]: QImageIOPlugin::~QImageIOPlugin()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: __cxa_pure_virtual
   vfunc[13]: __cxa_pure_virtual
   vfunc[14]: __cxa_pure_virtual

   Table 7-100. Secondary vtable for QImageIOPlugin
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QImageIOPlugin
   vfunc[0]: non-virtual thunk to
   QImageIOPlugin::~QImageIOPlugin()
   vfunc[1]: non-virtual thunk to
   QImageIOPlugin::~QImageIOPlugin()
   vfunc[2]: __cxa_pure_virtual
   vfunc[3]: __cxa_pure_virtual

   The Run Time Type Information for the QImageIOPlugin class is
   described by Table 7-101

   Table 7-101. typeinfo for QImageIOPlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QImageIOPlugin
   flags:      0
   basetype:   typeinfo for QObject                         2
   basetype:   typeinfo for QImageIOHandlerFactoryInterface 2050
     __________________________________________________________

7.5.8.2. Class data for QIconEnginePlugin

   The virtual table for the QIconEnginePlugin class is described
   by Table 7-102

   Table 7-102. Primary vtable for QIconEnginePlugin
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QIconEnginePlugin
   vfunc[0]: QIconEnginePlugin::metaObject() const
   vfunc[1]: QIconEnginePlugin::qt_metacast(char const*)
   vfunc[2]: QIconEnginePlugin::qt_metacall(QMetaObject::Call,
   int, void**)
   vfunc[3]: QIconEnginePlugin::~QIconEnginePlugin()
   vfunc[4]: QIconEnginePlugin::~QIconEnginePlugin()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: __cxa_pure_virtual
   vfunc[13]: __cxa_pure_virtual

   Table 7-103. Secondary vtable for QIconEnginePlugin
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QIconEnginePlugin
   vfunc[0]: non-virtual thunk to
   QIconEnginePlugin::~QIconEnginePlugin()
   vfunc[1]: non-virtual thunk to
   QIconEnginePlugin::~QIconEnginePlugin()
   vfunc[2]: __cxa_pure_virtual
   vfunc[3]: __cxa_pure_virtual

   The Run Time Type Information for the QIconEnginePlugin class
   is described by Table 7-104

   Table 7-104. typeinfo for QIconEnginePlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QIconEnginePlugin
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QIconEngineFactoryInterface    2050
     __________________________________________________________

7.5.8.3. Class data for QPictureFormatPlugin

   The virtual table for the QPictureFormatPlugin class is
   described by Table 7-105

   Table 7-105. Primary vtable for QPictureFormatPlugin
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QPictureFormatPlugin
   vfunc[0]: QPictureFormatPlugin::metaObject() const
   vfunc[1]: QPictureFormatPlugin::qt_metacast(char const*)
   vfunc[2]: QPictureFormatPlugin::qt_metacall(QMetaObject::Call,
   int, void**)
   vfunc[3]: QPictureFormatPlugin::~QPictureFormatPlugin()
   vfunc[4]: QPictureFormatPlugin::~QPictureFormatPlugin()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: __cxa_pure_virtual
   vfunc[13]: QPictureFormatPlugin::loadPicture(QString const&,
   QString const&, QPicture*)
   vfunc[14]: QPictureFormatPlugin::savePicture(QString const&,
   QString const&, QPicture const&)
   vfunc[15]: __cxa_pure_virtual

   Table 7-106. Secondary vtable for QPictureFormatPlugin
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QPictureFormatPlugin
   vfunc[0]: non-virtual thunk to
   QPictureFormatPlugin::~QPictureFormatPlugin()
   vfunc[1]: non-virtual thunk to
   QPictureFormatPlugin::~QPictureFormatPlugin()
   vfunc[2]: __cxa_pure_virtual
   vfunc[3]: non-virtual thunk to
   QPictureFormatPlugin::loadPicture(QString const&, QString
   const&, QPicture*)
   vfunc[4]: non-virtual thunk to
   QPictureFormatPlugin::savePicture(QString const&, QString
   const&, QPicture const&)
   vfunc[5]: __cxa_pure_virtual

   The Run Time Type Information for the QPictureFormatPlugin
   class is described by Table 7-107

   Table 7-107. typeinfo for QPictureFormatPlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QPictureFormatPlugin
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QPictureFormatInterface        2050
     __________________________________________________________

7.5.8.4. Class data for QStylePlugin

   The virtual table for the QStylePlugin class is described by
   Table 7-108

   Table 7-108. Primary vtable for QStylePlugin
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QStylePlugin
   vfunc[0]: QStylePlugin::metaObject() const
   vfunc[1]: QStylePlugin::qt_metacast(char const*)
   vfunc[2]: QStylePlugin::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QStylePlugin::~QStylePlugin()
   vfunc[4]: QStylePlugin::~QStylePlugin()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: __cxa_pure_virtual
   vfunc[13]: __cxa_pure_virtual

   Table 7-109. Secondary vtable for QStylePlugin
  Base Offset         -8
  Virtual Base Offset 0
  RTTI                typeinfo for QStylePlugin
  vfunc[0]:           non-virtual thunk to QStylePlugin::~QStylePlugin()
  vfunc[1]:           non-virtual thunk to QStylePlugin::~QStylePlugin()
  vfunc[2]:           __cxa_pure_virtual
  vfunc[3]:           __cxa_pure_virtual

   The Run Time Type Information for the QStylePlugin class is
   described by Table 7-110

   Table 7-110. typeinfo for QStylePlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QStylePlugin
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QStyleFactoryInterface         2050
     __________________________________________________________

7.5.8.5. Class data for QInputContextPlugin

   The virtual table for the QInputContextPlugin class is
   described by Table 7-111

   Table 7-111. Primary vtable for QInputContextPlugin
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QInputContextPlugin
   vfunc[0]: QInputContextPlugin::metaObject() const
   vfunc[1]: QInputContextPlugin::qt_metacast(char const*)
   vfunc[2]: QInputContextPlugin::qt_metacall(QMetaObject::Call,
   int, void**)
   vfunc[3]: QInputContextPlugin::~QInputContextPlugin()
   vfunc[4]: QInputContextPlugin::~QInputContextPlugin()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: __cxa_pure_virtual
   vfunc[13]: __cxa_pure_virtual
   vfunc[14]: __cxa_pure_virtual
   vfunc[15]: __cxa_pure_virtual
   vfunc[16]: __cxa_pure_virtual

   Table 7-112. Secondary vtable for QInputContextPlugin
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QInputContextPlugin
   vfunc[0]: non-virtual thunk to
   QInputContextPlugin::~QInputContextPlugin()
   vfunc[1]: non-virtual thunk to
   QInputContextPlugin::~QInputContextPlugin()
   vfunc[2]: __cxa_pure_virtual
   vfunc[3]: __cxa_pure_virtual
   vfunc[4]: __cxa_pure_virtual
   vfunc[5]: __cxa_pure_virtual
   vfunc[6]: __cxa_pure_virtual

   The Run Time Type Information for the QInputContextPlugin class
   is described by Table 7-113

   Table 7-113. typeinfo for QInputContextPlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QInputContextPlugin
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QInputContextFactoryInterface  2050
     __________________________________________________________

7.5.8.6. Interfaces for Qt4 Plugins

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Plugins specified in Table 7-114,
   with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-114. libQtGui - Qt4 Plugins Function Interfaces
   _ZThn8_N12QStylePluginD0Ev [CXXABI-1.86]
   _ZThn8_N12QStylePluginD1Ev [CXXABI-1.86]
   _ZThn8_N14QImageIOPluginD0Ev [CXXABI-1.86]
   _ZThn8_N14QImageIOPluginD1Ev [CXXABI-1.86]
   _ZThn8_N17QIconEnginePluginD0Ev [CXXABI-1.86]
   _ZThn8_N17QIconEnginePluginD1Ev [CXXABI-1.86]
   _ZThn8_N19QInputContextPluginD0Ev [CXXABI-1.86]
   _ZThn8_N19QInputContextPluginD1Ev [CXXABI-1.86]
   _ZThn8_N20QPictureFormatPluginD0Ev [CXXABI-1.86]
   _ZThn8_N20QPictureFormatPluginD1Ev [CXXABI-1.86]
     __________________________________________________________

7.5.9. Qt4 Models and Views
     __________________________________________________________

7.5.9.1. Class data for QAbstractTextDocumentLayout

   The virtual table for the QAbstractTextDocumentLayout class is
   described in the generic part of this specification.

   The Run Time Type Information for the
   QAbstractTextDocumentLayout class is described by Table 7-115

   Table 7-115. typeinfo for QAbstractTextDocumentLayout
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractTextDocumentLayout
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.9.2. Class data for QAbstractPageSetupDialog

   The virtual table for the QAbstractPageSetupDialog class is
   described by Table 7-116

   Table 7-116. Primary vtable for QAbstractPageSetupDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractPageSetupDialog
   vfunc[0]: QDialog::metaObject() const
   vfunc[1]: QDialog::qt_metacast(char const*)
   vfunc[2]: QDialog::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: NULL or
   QAbstractPageSetupDialog::~QAbstractPageSetupDialog()
   vfunc[4]: NULL or
   QAbstractPageSetupDialog::~QAbstractPageSetupDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()
   vfunc[57]: __cxa_pure_virtual

   Table 7-117. Secondary vtable for QAbstractPageSetupDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractPageSetupDialog
   vfunc[0]: NULL or non-virtual thunk to
   QAbstractPageSetupDialog::~QAbstractPageSetupDialog()
   vfunc[1]: NULL or non-virtual thunk to
   QAbstractPageSetupDialog::~QAbstractPageSetupDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QAbstractPageSetupDialog
   class is described by Table 7-118

   Table 7-118. typeinfo for QAbstractPageSetupDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractPageSetupDialog
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.9.3. Class data for QAbstractPrintDialog

   The virtual table for the QAbstractPrintDialog class is
   described by Table 7-119

   Table 7-119. Primary vtable for QAbstractPrintDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractPrintDialog
   vfunc[0]: QDialog::metaObject() const
   vfunc[1]: QDialog::qt_metacast(char const*)
   vfunc[2]: QDialog::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: NULL or QAbstractPrintDialog::~QAbstractPrintDialog()
   vfunc[4]: NULL or QAbstractPrintDialog::~QAbstractPrintDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()
   vfunc[57]: __cxa_pure_virtual

   Table 7-120. Secondary vtable for QAbstractPrintDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractPrintDialog
   vfunc[0]: NULL or non-virtual thunk to
   QAbstractPrintDialog::~QAbstractPrintDialog()
   vfunc[1]: NULL or non-virtual thunk to
   QAbstractPrintDialog::~QAbstractPrintDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QAbstractPrintDialog
   class is described by Table 7-121

   Table 7-121. typeinfo for QAbstractPrintDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractPrintDialog
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.9.4. Class data for QItemSelectionModel

   The virtual table for the QItemSelectionModel class is
   described in the generic part of this specification.

   The Run Time Type Information for the QItemSelectionModel class
   is described by Table 7-122

   Table 7-122. typeinfo for QItemSelectionModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QItemSelectionModel
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.9.5. Class data for QAbstractScrollArea

   The virtual table for the QAbstractScrollArea class is
   described by Table 7-123

   Table 7-123. Primary vtable for QAbstractScrollArea
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractScrollArea
   vfunc[0]: QAbstractScrollArea::metaObject() const
   vfunc[1]: QAbstractScrollArea::qt_metacast(char const*)
   vfunc[2]: QAbstractScrollArea::qt_metacall(QMetaObject::Call,
   int, void**)
   vfunc[3]: QAbstractScrollArea::~QAbstractScrollArea()
   vfunc[4]: QAbstractScrollArea::~QAbstractScrollArea()
   vfunc[5]: QAbstractScrollArea::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractScrollArea::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]:
   QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractScrollArea::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractScrollArea::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractScrollArea::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]:
   QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]:
   QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QAbstractScrollArea::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractScrollArea::viewportEvent(QEvent*)
   vfunc[55]: QAbstractScrollArea::scrollContentsBy(int, int)

   Table 7-124. Secondary vtable for QAbstractScrollArea
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractScrollArea
   vfunc[0]: non-virtual thunk to
   QAbstractScrollArea::~QAbstractScrollArea()
   vfunc[1]: non-virtual thunk to
   QAbstractScrollArea::~QAbstractScrollArea()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QAbstractScrollArea class
   is described by Table 7-125

   Table 7-125. typeinfo for QAbstractScrollArea
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractScrollArea
   basetype:   typeinfo for QFrame
     __________________________________________________________

7.5.9.6. Class data for QAbstractSpinBox

   The virtual table for the QAbstractSpinBox class is described
   by Table 7-126

   Table 7-126. Primary vtable for QAbstractSpinBox
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractSpinBox
   vfunc[0]: QAbstractSpinBox::metaObject() const
   vfunc[1]: QAbstractSpinBox::qt_metacast(char const*)
   vfunc[2]: QAbstractSpinBox::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QAbstractSpinBox::~QAbstractSpinBox()
   vfunc[4]: QAbstractSpinBox::~QAbstractSpinBox()
   vfunc[5]: QAbstractSpinBox::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSpinBox::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractSpinBox::sizeHint() const
   vfunc[15]: QAbstractSpinBox::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractSpinBox::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractSpinBox::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractSpinBox::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractSpinBox::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractSpinBox::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractSpinBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractSpinBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QAbstractSpinBox::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QAbstractSpinBox::showEvent(QShowEvent*)
   vfunc[41]: QAbstractSpinBox::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSpinBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractSpinBox::validate(QString&, int&) const
   vfunc[55]: QAbstractSpinBox::fixup(QString&) const
   vfunc[56]: QAbstractSpinBox::stepBy(int)
   vfunc[57]: QAbstractSpinBox::clear()
   vfunc[58]: QAbstractSpinBox::stepEnabled() const

   Table 7-127. Secondary vtable for QAbstractSpinBox
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractSpinBox
   vfunc[0]: non-virtual thunk to
   QAbstractSpinBox::~QAbstractSpinBox()
   vfunc[1]: non-virtual thunk to
   QAbstractSpinBox::~QAbstractSpinBox()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QAbstractSpinBox class is
   described by Table 7-128

   Table 7-128. typeinfo for QAbstractSpinBox
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractSpinBox
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.9.7. Class data for QAbstractSlider

   The virtual table for the QAbstractSlider class is described by
   Table 7-129

   Table 7-129. Primary vtable for QAbstractSlider
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractSlider
   vfunc[0]: QAbstractSlider::metaObject() const
   vfunc[1]: QAbstractSlider::qt_metacast(char const*)
   vfunc[2]: QAbstractSlider::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QAbstractSlider::~QAbstractSlider()
   vfunc[4]: QAbstractSlider::~QAbstractSlider()
   vfunc[5]: QAbstractSlider::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSlider::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractSlider::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractSlider::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSlider::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]:
   QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)

   Table 7-130. Secondary vtable for QAbstractSlider
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractSlider
   vfunc[0]: non-virtual thunk to
   QAbstractSlider::~QAbstractSlider()
   vfunc[1]: non-virtual thunk to
   QAbstractSlider::~QAbstractSlider()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QAbstractSlider class is
   described by Table 7-131

   Table 7-131. typeinfo for QAbstractSlider
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractSlider
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.9.8. Class data for QAbstractItemDelegate

   The virtual table for the QAbstractItemDelegate class is
   described in the generic part of this specification.

   The Run Time Type Information for the QAbstractItemDelegate
   class is described by Table 7-132

   Table 7-132. typeinfo for QAbstractItemDelegate
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractItemDelegate
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.9.9. Class data for QAbstractItemView

   The virtual table for the QAbstractItemView class is described
   by Table 7-133

   Table 7-133. Primary vtable for QAbstractItemView
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractItemView
   vfunc[0]: QAbstractItemView::metaObject() const
   vfunc[1]: QAbstractItemView::qt_metacast(char const*)
   vfunc[2]: QAbstractItemView::qt_metacall(QMetaObject::Call,
   int, void**)
   vfunc[3]: QAbstractItemView::~QAbstractItemView()
   vfunc[4]: QAbstractItemView::~QAbstractItemView()
   vfunc[5]: QAbstractItemView::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractItemView::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractItemView::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractItemView::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]:
   QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractItemView::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractItemView::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractItemView::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractItemView::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractScrollArea::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractItemView::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QAbstractItemView::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QAbstractItemView::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QAbstractItemView::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractItemView::viewportEvent(QEvent*)
   vfunc[55]: QAbstractScrollArea::scrollContentsBy(int, int)
   vfunc[56]: QAbstractItemView::setModel(QAbstractItemModel*)
   vfunc[57]:
   QAbstractItemView::setSelectionModel(QItemSelectionModel*)
   vfunc[58]: QAbstractItemView::keyboardSearch(QString const&)
   vfunc[59]: __cxa_pure_virtual
   vfunc[60]: __cxa_pure_virtual
   vfunc[61]: __cxa_pure_virtual
   vfunc[62]: QAbstractItemView::sizeHintForRow(int) const
   vfunc[63]: QAbstractItemView::sizeHintForColumn(int) const
   vfunc[64]: QAbstractItemView::reset()
   vfunc[65]: QAbstractItemView::setRootIndex(QModelIndex const&)
   vfunc[66]: QAbstractItemView::doItemsLayout()
   vfunc[67]: QAbstractItemView::selectAll()
   vfunc[68]: QAbstractItemView::dataChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[69]: QAbstractItemView::rowsInserted(QModelIndex const&,
   int, int)
   vfunc[70]: QAbstractItemView::rowsAboutToBeRemoved(QModelIndex
   const&, int, int)
   vfunc[71]: QAbstractItemView::selectionChanged(QItemSelection
   const&, QItemSelection const&)
   vfunc[72]: QAbstractItemView::currentChanged(QModelIndex
   const&, QModelIndex const&)
   vfunc[73]: QAbstractItemView::updateEditorData()
   vfunc[74]: QAbstractItemView::updateEditorGeometries()
   vfunc[75]: QAbstractItemView::updateGeometries()
   vfunc[76]: QAbstractItemView::verticalScrollbarAction(int)
   vfunc[77]: QAbstractItemView::horizontalScrollbarAction(int)
   vfunc[78]:
   QAbstractItemView::verticalScrollbarValueChanged(int)
   vfunc[79]:
   QAbstractItemView::horizontalScrollbarValueChanged(int)
   vfunc[80]: QAbstractItemView::closeEditor(QWidget*,
   QAbstractItemDelegate::EndEditHint)
   vfunc[81]: QAbstractItemView::commitData(QWidget*)
   vfunc[82]: QAbstractItemView::editorDestroyed(QObject*)
   vfunc[83]: __cxa_pure_virtual
   vfunc[84]: __cxa_pure_virtual
   vfunc[85]: __cxa_pure_virtual
   vfunc[86]: __cxa_pure_virtual
   vfunc[87]: __cxa_pure_virtual
   vfunc[88]: __cxa_pure_virtual
   vfunc[89]: QAbstractItemView::selectedIndexes() const
   vfunc[90]: QAbstractItemView::edit(QModelIndex const&,
   QAbstractItemView::EditTrigger, QEvent*)
   vfunc[91]: QAbstractItemView::selectionCommand(QModelIndex
   const&, QEvent const*) const
   vfunc[92]: QAbstractItemView::startDrag(QFlags<Qt::DropAction>)
   vfunc[93]: QAbstractItemView::viewOptions() const

   Table 7-134. Secondary vtable for QAbstractItemView
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractItemView
   vfunc[0]: non-virtual thunk to
   QAbstractItemView::~QAbstractItemView()
   vfunc[1]: non-virtual thunk to
   QAbstractItemView::~QAbstractItemView()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QAbstractItemView class
   is described by Table 7-135

   Table 7-135. typeinfo for QAbstractItemView
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractItemView
   basetype:   typeinfo for QAbstractScrollArea
     __________________________________________________________

7.5.9.10. Class data for QStringListModel

   The virtual table for the QStringListModel class is described
   in the generic part of this specification.

   The Run Time Type Information for the QStringListModel class is
   described by Table 7-136

   Table 7-136. typeinfo for QStringListModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QStringListModel
   basetype:   typeinfo for QAbstractListModel
     __________________________________________________________

7.5.9.11. Class data for QDirModel

   The virtual table for the QDirModel class is described in the
   generic part of this specification.

   The Run Time Type Information for the QDirModel class is
   described by Table 7-137

   Table 7-137. typeinfo for QDirModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDirModel
   basetype:   typeinfo for QAbstractItemModel
     __________________________________________________________

7.5.9.12. Class data for QStandardItemModel

   The virtual table for the QStandardItemModel class is described
   in the generic part of this specification.

   The Run Time Type Information for the QStandardItemModel class
   is described by Table 7-138

   Table 7-138. typeinfo for QStandardItemModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QStandardItemModel
   basetype:   typeinfo for QAbstractItemModel
     __________________________________________________________

7.5.9.13. Class data for QAbstractProxyModel

   The virtual table for the QAbstractProxyModel class is
   described in the generic part of this specification.

   The Run Time Type Information for the QAbstractProxyModel class
   is described by Table 7-139

   Table 7-139. typeinfo for QAbstractProxyModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractProxyModel
   basetype:   typeinfo for QAbstractItemModel
     __________________________________________________________

7.5.9.14. Class data for QSortFilterProxyModel

   The virtual table for the QSortFilterProxyModel class is
   described in the generic part of this specification.

   The Run Time Type Information for the QSortFilterProxyModel
   class is described by Table 7-140

   Table 7-140. typeinfo for QSortFilterProxyModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSortFilterProxyModel
   basetype:   typeinfo for QAbstractProxyModel
     __________________________________________________________

7.5.9.15. Class data for QItemDelegate

   The virtual table for the QItemDelegate class is described in
   the generic part of this specification.

   The Run Time Type Information for the QItemDelegate class is
   described by Table 7-141

   Table 7-141. typeinfo for QItemDelegate
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QItemDelegate
   basetype:   typeinfo for QAbstractItemDelegate
     __________________________________________________________

7.5.9.16. Class data for QTableView

   The virtual table for the QTableView class is described by
   Table 7-142

   Table 7-142. Primary vtable for QTableView
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTableView
   vfunc[0]: QTableView::metaObject() const
   vfunc[1]: QTableView::qt_metacast(char const*)
   vfunc[2]: QTableView::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QTableView::~QTableView()
   vfunc[4]: QTableView::~QTableView()
   vfunc[5]: QAbstractItemView::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QTableView::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractItemView::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractItemView::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]:
   QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractItemView::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractItemView::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractItemView::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractItemView::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QTableView::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractItemView::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QAbstractItemView::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QAbstractItemView::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QAbstractItemView::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractItemView::viewportEvent(QEvent*)
   vfunc[55]: QTableView::scrollContentsBy(int, int)
   vfunc[56]: QTableView::setModel(QAbstractItemModel*)
   vfunc[57]: QTableView::setSelectionModel(QItemSelectionModel*)
   vfunc[58]: QAbstractItemView::keyboardSearch(QString const&)
   vfunc[59]: QTableView::visualRect(QModelIndex const&) const
   vfunc[60]: QTableView::scrollTo(QModelIndex const&,
   QAbstractItemView::ScrollHint)
   vfunc[61]: QTableView::indexAt(QPoint const&) const
   vfunc[62]: QTableView::sizeHintForRow(int) const
   vfunc[63]: QTableView::sizeHintForColumn(int) const
   vfunc[64]: QAbstractItemView::reset()
   vfunc[65]: QTableView::setRootIndex(QModelIndex const&)
   vfunc[66]: QAbstractItemView::doItemsLayout()
   vfunc[67]: QAbstractItemView::selectAll()
   vfunc[68]: QAbstractItemView::dataChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[69]: QAbstractItemView::rowsInserted(QModelIndex const&,
   int, int)
   vfunc[70]: QAbstractItemView::rowsAboutToBeRemoved(QModelIndex
   const&, int, int)
   vfunc[71]: QAbstractItemView::selectionChanged(QItemSelection
   const&, QItemSelection const&)
   vfunc[72]: QAbstractItemView::currentChanged(QModelIndex
   const&, QModelIndex const&)
   vfunc[73]: QAbstractItemView::updateEditorData()
   vfunc[74]: QAbstractItemView::updateEditorGeometries()
   vfunc[75]: QTableView::updateGeometries()
   vfunc[76]: QTableView::verticalScrollbarAction(int)
   vfunc[77]: QTableView::horizontalScrollbarAction(int)
   vfunc[78]:
   QAbstractItemView::verticalScrollbarValueChanged(int)
   vfunc[79]:
   QAbstractItemView::horizontalScrollbarValueChanged(int)
   vfunc[80]: QAbstractItemView::closeEditor(QWidget*,
   QAbstractItemDelegate::EndEditHint)
   vfunc[81]: QAbstractItemView::commitData(QWidget*)
   vfunc[82]: QAbstractItemView::editorDestroyed(QObject*)
   vfunc[83]:
   QTableView::moveCursor(QAbstractItemView::CursorAction,
   QFlags<Qt::KeyboardModifier>)
   vfunc[84]: QTableView::horizontalOffset() const
   vfunc[85]: QTableView::verticalOffset() const
   vfunc[86]: QTableView::isIndexHidden(QModelIndex const&) const
   vfunc[87]: QTableView::setSelection(QRect const&,
   QFlags<QItemSelectionModel::SelectionFlag>)
   vfunc[88]: QTableView::visualRegionForSelection(QItemSelection
   const&) const
   vfunc[89]: QTableView::selectedIndexes() const
   vfunc[90]: QAbstractItemView::edit(QModelIndex const&,
   QAbstractItemView::EditTrigger, QEvent*)
   vfunc[91]: QAbstractItemView::selectionCommand(QModelIndex
   const&, QEvent const*) const
   vfunc[92]: QAbstractItemView::startDrag(QFlags<Qt::DropAction>)
   vfunc[93]: QTableView::viewOptions() const

   Table 7-143. Secondary vtable for QTableView
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTableView
   vfunc[0]: non-virtual thunk to QTableView::~QTableView()
   vfunc[1]: non-virtual thunk to QTableView::~QTableView()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTableView class is
   described by Table 7-144

   Table 7-144. typeinfo for QTableView
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTableView
   basetype:   typeinfo for QAbstractItemView
     __________________________________________________________

7.5.9.17. Class data for QTableWidgetItem

   The virtual table for the QTableWidgetItem class is described
   in the generic part of this specification.

   The Run Time Type Information for the QTableWidgetItem class is
   described by Table 7-145

   Table 7-145. typeinfo for QTableWidgetItem
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QTableWidgetItem
     __________________________________________________________

7.5.9.18. Class data for QTableWidget

   The virtual table for the QTableWidget class is described by
   Table 7-146

   Table 7-146. Primary vtable for QTableWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTableWidget
   vfunc[0]: QTableWidget::metaObject() const
   vfunc[1]: QTableWidget::qt_metacast(char const*)
   vfunc[2]: QTableWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QTableWidget::~QTableWidget()
   vfunc[4]: QTableWidget::~QTableWidget()
   vfunc[5]: QTableWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QTableView::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractItemView::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractItemView::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]:
   QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractItemView::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractItemView::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractItemView::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractItemView::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QTableView::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractItemView::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QAbstractItemView::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QAbstractItemView::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QAbstractItemView::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractItemView::viewportEvent(QEvent*)
   vfunc[55]: QTableView::scrollContentsBy(int, int)
   vfunc[56]: QTableWidget::setModel(QAbstractItemModel*)
   vfunc[57]: QTableView::setSelectionModel(QItemSelectionModel*)
   vfunc[58]: QAbstractItemView::keyboardSearch(QString const&)
   vfunc[59]: QTableView::visualRect(QModelIndex const&) const
   vfunc[60]: QTableView::scrollTo(QModelIndex const&,
   QAbstractItemView::ScrollHint)
   vfunc[61]: QTableView::indexAt(QPoint const&) const
   vfunc[62]: QTableView::sizeHintForRow(int) const
   vfunc[63]: QTableView::sizeHintForColumn(int) const
   vfunc[64]: QAbstractItemView::reset()
   vfunc[65]: QTableView::setRootIndex(QModelIndex const&)
   vfunc[66]: QAbstractItemView::doItemsLayout()
   vfunc[67]: QAbstractItemView::selectAll()
   vfunc[68]: QAbstractItemView::dataChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[69]: QAbstractItemView::rowsInserted(QModelIndex const&,
   int, int)
   vfunc[70]: QAbstractItemView::rowsAboutToBeRemoved(QModelIndex
   const&, int, int)
   vfunc[71]: QAbstractItemView::selectionChanged(QItemSelection
   const&, QItemSelection const&)
   vfunc[72]: QAbstractItemView::currentChanged(QModelIndex
   const&, QModelIndex const&)
   vfunc[73]: QAbstractItemView::updateEditorData()
   vfunc[74]: QAbstractItemView::updateEditorGeometries()
   vfunc[75]: QTableView::updateGeometries()
   vfunc[76]: QTableView::verticalScrollbarAction(int)
   vfunc[77]: QTableView::horizontalScrollbarAction(int)
   vfunc[78]:
   QAbstractItemView::verticalScrollbarValueChanged(int)
   vfunc[79]:
   QAbstractItemView::horizontalScrollbarValueChanged(int)
   vfunc[80]: QAbstractItemView::closeEditor(QWidget*,
   QAbstractItemDelegate::EndEditHint)
   vfunc[81]: QAbstractItemView::commitData(QWidget*)
   vfunc[82]: QAbstractItemView::editorDestroyed(QObject*)
   vfunc[83]:
   QTableView::moveCursor(QAbstractItemView::CursorAction,
   QFlags<Qt::KeyboardModifier>)
   vfunc[84]: QTableView::horizontalOffset() const
   vfunc[85]: QTableView::verticalOffset() const
   vfunc[86]: QTableView::isIndexHidden(QModelIndex const&) const
   vfunc[87]: QTableView::setSelection(QRect const&,
   QFlags<QItemSelectionModel::SelectionFlag>)
   vfunc[88]: QTableView::visualRegionForSelection(QItemSelection
   const&) const
   vfunc[89]: QTableView::selectedIndexes() const
   vfunc[90]: QAbstractItemView::edit(QModelIndex const&,
   QAbstractItemView::EditTrigger, QEvent*)
   vfunc[91]: QAbstractItemView::selectionCommand(QModelIndex
   const&, QEvent const*) const
   vfunc[92]: QAbstractItemView::startDrag(QFlags<Qt::DropAction>)
   vfunc[93]: QTableView::viewOptions() const
   vfunc[94]: QTableWidget::mimeTypes() const
   vfunc[95]: QTableWidget::mimeData(QList<QTableWidgetItem*>)
   const
   vfunc[96]: QTableWidget::dropMimeData(int, int, QMimeData
   const*, Qt::DropAction)
   vfunc[97]: QTableWidget::supportedDropActions() const

   Table 7-147. Secondary vtable for QTableWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTableWidget
   vfunc[0]: non-virtual thunk to QTableWidget::~QTableWidget()
   vfunc[1]: non-virtual thunk to QTableWidget::~QTableWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTableWidget class is
   described by Table 7-148

   Table 7-148. typeinfo for QTableWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTableWidget
   basetype:   typeinfo for QTableView
     __________________________________________________________

7.5.9.19. Class data for QTreeView

   The virtual table for the QTreeView class is described by Table
   7-149

   Table 7-149. Primary vtable for QTreeView
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTreeView
   vfunc[0]: QTreeView::metaObject() const
   vfunc[1]: QTreeView::qt_metacast(char const*)
   vfunc[2]: QTreeView::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QTreeView::~QTreeView()
   vfunc[4]: QTreeView::~QTreeView()
   vfunc[5]: QAbstractItemView::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QTreeView::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QTreeView::mousePressEvent(QMouseEvent*)
   vfunc[19]: QTreeView::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QTreeView::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractItemView::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractItemView::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractItemView::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractItemView::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QTreeView::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractItemView::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QAbstractItemView::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QAbstractItemView::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QAbstractItemView::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractItemView::viewportEvent(QEvent*)
   vfunc[55]: QTreeView::scrollContentsBy(int, int)
   vfunc[56]: QTreeView::setModel(QAbstractItemModel*)
   vfunc[57]: QTreeView::setSelectionModel(QItemSelectionModel*)
   vfunc[58]: QTreeView::keyboardSearch(QString const&)
   vfunc[59]: QTreeView::visualRect(QModelIndex const&) const
   vfunc[60]: QTreeView::scrollTo(QModelIndex const&,
   QAbstractItemView::ScrollHint)
   vfunc[61]: QTreeView::indexAt(QPoint const&) const
   vfunc[62]: QAbstractItemView::sizeHintForRow(int) const
   vfunc[63]: QTreeView::sizeHintForColumn(int) const
   vfunc[64]: QTreeView::reset()
   vfunc[65]: QTreeView::setRootIndex(QModelIndex const&)
   vfunc[66]: QTreeView::doItemsLayout()
   vfunc[67]: QTreeView::selectAll()
   vfunc[68]: QTreeView::dataChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[69]: QTreeView::rowsInserted(QModelIndex const&, int,
   int)
   vfunc[70]: QTreeView::rowsAboutToBeRemoved(QModelIndex const&,
   int, int)
   vfunc[71]: QAbstractItemView::selectionChanged(QItemSelection
   const&, QItemSelection const&)
   vfunc[72]: QAbstractItemView::currentChanged(QModelIndex
   const&, QModelIndex const&)
   vfunc[73]: QAbstractItemView::updateEditorData()
   vfunc[74]: QAbstractItemView::updateEditorGeometries()
   vfunc[75]: QTreeView::updateGeometries()
   vfunc[76]: QAbstractItemView::verticalScrollbarAction(int)
   vfunc[77]: QTreeView::horizontalScrollbarAction(int)
   vfunc[78]:
   QAbstractItemView::verticalScrollbarValueChanged(int)
   vfunc[79]:
   QAbstractItemView::horizontalScrollbarValueChanged(int)
   vfunc[80]: QAbstractItemView::closeEditor(QWidget*,
   QAbstractItemDelegate::EndEditHint)
   vfunc[81]: QAbstractItemView::commitData(QWidget*)
   vfunc[82]: QAbstractItemView::editorDestroyed(QObject*)
   vfunc[83]:
   QTreeView::moveCursor(QAbstractItemView::CursorAction,
   QFlags<Qt::KeyboardModifier>)
   vfunc[84]: QTreeView::horizontalOffset() const
   vfunc[85]: QTreeView::verticalOffset() const
   vfunc[86]: QTreeView::isIndexHidden(QModelIndex const&) const
   vfunc[87]: QTreeView::setSelection(QRect const&,
   QFlags<QItemSelectionModel::SelectionFlag>)
   vfunc[88]: QTreeView::visualRegionForSelection(QItemSelection
   const&) const
   vfunc[89]: QTreeView::selectedIndexes() const
   vfunc[90]: QAbstractItemView::edit(QModelIndex const&,
   QAbstractItemView::EditTrigger, QEvent*)
   vfunc[91]: QAbstractItemView::selectionCommand(QModelIndex
   const&, QEvent const*) const
   vfunc[92]: QAbstractItemView::startDrag(QFlags<Qt::DropAction>)
   vfunc[93]: QAbstractItemView::viewOptions() const
   vfunc[94]: QTreeView::drawRow(QPainter*, QStyleOptionViewItem
   const&, QModelIndex const&) const
   vfunc[95]: QTreeView::drawBranches(QPainter*, QRect const&,
   QModelIndex const&) const

   Table 7-150. Secondary vtable for QTreeView
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTreeView
   vfunc[0]: non-virtual thunk to QTreeView::~QTreeView()
   vfunc[1]: non-virtual thunk to QTreeView::~QTreeView()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTreeView class is
   described by Table 7-151

   Table 7-151. typeinfo for QTreeView
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTreeView
   basetype:   typeinfo for QAbstractItemView
     __________________________________________________________

7.5.9.20. Class data for QProxyModel

   The virtual table for the QProxyModel class is described in the
   generic part of this specification.

   The Run Time Type Information for the QProxyModel class is
   described by Table 7-152

   Table 7-152. typeinfo for QProxyModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QProxyModel
   basetype:   typeinfo for QAbstractItemModel
     __________________________________________________________

7.5.9.21. Class data for QHeaderView

   The virtual table for the QHeaderView class is described by
   Table 7-153

   Table 7-153. Primary vtable for QHeaderView
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QHeaderView
   vfunc[0]: QHeaderView::metaObject() const
   vfunc[1]: QHeaderView::qt_metacast(char const*)
   vfunc[2]: QHeaderView::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QHeaderView::~QHeaderView()
   vfunc[4]: QHeaderView::~QHeaderView()
   vfunc[5]: QHeaderView::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractItemView::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QHeaderView::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QHeaderView::mousePressEvent(QMouseEvent*)
   vfunc[19]: QHeaderView::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QHeaderView::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QHeaderView::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractItemView::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractItemView::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractItemView::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QHeaderView::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractItemView::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QAbstractItemView::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QAbstractItemView::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QAbstractItemView::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QHeaderView::viewportEvent(QEvent*)
   vfunc[55]: QHeaderView::scrollContentsBy(int, int)
   vfunc[56]: QHeaderView::setModel(QAbstractItemModel*)
   vfunc[57]:
   QAbstractItemView::setSelectionModel(QItemSelectionModel*)
   vfunc[58]: QAbstractItemView::keyboardSearch(QString const&)
   vfunc[59]: QHeaderView::visualRect(QModelIndex const&) const
   vfunc[60]: QHeaderView::scrollTo(QModelIndex const&,
   QAbstractItemView::ScrollHint)
   vfunc[61]: QHeaderView::indexAt(QPoint const&) const
   vfunc[62]: QAbstractItemView::sizeHintForRow(int) const
   vfunc[63]: QAbstractItemView::sizeHintForColumn(int) const
   vfunc[64]: QAbstractItemView::reset()
   vfunc[65]: QAbstractItemView::setRootIndex(QModelIndex const&)
   vfunc[66]: QHeaderView::doItemsLayout()
   vfunc[67]: QAbstractItemView::selectAll()
   vfunc[68]: QHeaderView::dataChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[69]: QHeaderView::rowsInserted(QModelIndex const&, int,
   int)
   vfunc[70]: QAbstractItemView::rowsAboutToBeRemoved(QModelIndex
   const&, int, int)
   vfunc[71]: QAbstractItemView::selectionChanged(QItemSelection
   const&, QItemSelection const&)
   vfunc[72]: QHeaderView::currentChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[73]: QAbstractItemView::updateEditorData()
   vfunc[74]: QAbstractItemView::updateEditorGeometries()
   vfunc[75]: QHeaderView::updateGeometries()
   vfunc[76]: QAbstractItemView::verticalScrollbarAction(int)
   vfunc[77]: QAbstractItemView::horizontalScrollbarAction(int)
   vfunc[78]:
   QAbstractItemView::verticalScrollbarValueChanged(int)
   vfunc[79]:
   QAbstractItemView::horizontalScrollbarValueChanged(int)
   vfunc[80]: QAbstractItemView::closeEditor(QWidget*,
   QAbstractItemDelegate::EndEditHint)
   vfunc[81]: QAbstractItemView::commitData(QWidget*)
   vfunc[82]: QAbstractItemView::editorDestroyed(QObject*)
   vfunc[83]:
   QHeaderView::moveCursor(QAbstractItemView::CursorAction,
   QFlags<Qt::KeyboardModifier>)
   vfunc[84]: QHeaderView::horizontalOffset() const
   vfunc[85]: QHeaderView::verticalOffset() const
   vfunc[86]: QHeaderView::isIndexHidden(QModelIndex const&) const
   vfunc[87]: QHeaderView::setSelection(QRect const&,
   QFlags<QItemSelectionModel::SelectionFlag>)
   vfunc[88]: QHeaderView::visualRegionForSelection(QItemSelection
   const&) const
   vfunc[89]: QAbstractItemView::selectedIndexes() const
   vfunc[90]: QAbstractItemView::edit(QModelIndex const&,
   QAbstractItemView::EditTrigger, QEvent*)
   vfunc[91]: QAbstractItemView::selectionCommand(QModelIndex
   const&, QEvent const*) const
   vfunc[92]: QAbstractItemView::startDrag(QFlags<Qt::DropAction>)
   vfunc[93]: QAbstractItemView::viewOptions() const
   vfunc[94]: QHeaderView::paintSection(QPainter*, QRect const&,
   int) const
   vfunc[95]: QHeaderView::sectionSizeFromContents(int) const

   Table 7-154. Secondary vtable for QHeaderView
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QHeaderView
   vfunc[0]: non-virtual thunk to QHeaderView::~QHeaderView()
   vfunc[1]: non-virtual thunk to QHeaderView::~QHeaderView()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QHeaderView class is
   described by Table 7-155

   Table 7-155. typeinfo for QHeaderView
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QHeaderView
   basetype:   typeinfo for QAbstractItemView
     __________________________________________________________

7.5.9.22. Class data for QItemEditorFactory

   The virtual table for the QItemEditorFactory class is described
   in the generic part of this specification.

   The Run Time Type Information for the QItemEditorFactory class
   is described by Table 7-156

   Table 7-156. typeinfo for QItemEditorFactory
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QItemEditorFactory
     __________________________________________________________

7.5.9.23. Class data for QTreeWidgetItem

   The virtual table for the QTreeWidgetItem class is described in
   the generic part of this specification.

   The Run Time Type Information for the QTreeWidgetItem class is
   described by Table 7-157

   Table 7-157. typeinfo for QTreeWidgetItem
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QTreeWidgetItem
     __________________________________________________________

7.5.9.24. Class data for QTreeWidget

   The virtual table for the QTreeWidget class is described by
   Table 7-158

   Table 7-158. Primary vtable for QTreeWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTreeWidget
   vfunc[0]: QTreeWidget::metaObject() const
   vfunc[1]: QTreeWidget::qt_metacast(char const*)
   vfunc[2]: QTreeWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QTreeWidget::~QTreeWidget()
   vfunc[4]: QTreeWidget::~QTreeWidget()
   vfunc[5]: QTreeWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QTreeView::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QTreeView::mousePressEvent(QMouseEvent*)
   vfunc[19]: QTreeView::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QTreeView::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractItemView::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractItemView::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractItemView::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractItemView::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QTreeView::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractItemView::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QAbstractItemView::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QAbstractItemView::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QAbstractItemView::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractItemView::viewportEvent(QEvent*)
   vfunc[55]: QTreeView::scrollContentsBy(int, int)
   vfunc[56]: QTreeWidget::setModel(QAbstractItemModel*)
   vfunc[57]: QTreeView::setSelectionModel(QItemSelectionModel*)
   vfunc[58]: QTreeView::keyboardSearch(QString const&)
   vfunc[59]: QTreeView::visualRect(QModelIndex const&) const
   vfunc[60]: QTreeView::scrollTo(QModelIndex const&,
   QAbstractItemView::ScrollHint)
   vfunc[61]: QTreeView::indexAt(QPoint const&) const
   vfunc[62]: QAbstractItemView::sizeHintForRow(int) const
   vfunc[63]: QTreeView::sizeHintForColumn(int) const
   vfunc[64]: QTreeView::reset()
   vfunc[65]: QTreeView::setRootIndex(QModelIndex const&)
   vfunc[66]: QTreeView::doItemsLayout()
   vfunc[67]: QTreeView::selectAll()
   vfunc[68]: QTreeView::dataChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[69]: QTreeView::rowsInserted(QModelIndex const&, int,
   int)
   vfunc[70]: QTreeView::rowsAboutToBeRemoved(QModelIndex const&,
   int, int)
   vfunc[71]: QAbstractItemView::selectionChanged(QItemSelection
   const&, QItemSelection const&)
   vfunc[72]: QAbstractItemView::currentChanged(QModelIndex
   const&, QModelIndex const&)
   vfunc[73]: QAbstractItemView::updateEditorData()
   vfunc[74]: QAbstractItemView::updateEditorGeometries()
   vfunc[75]: QTreeView::updateGeometries()
   vfunc[76]: QAbstractItemView::verticalScrollbarAction(int)
   vfunc[77]: QTreeView::horizontalScrollbarAction(int)
   vfunc[78]:
   QAbstractItemView::verticalScrollbarValueChanged(int)
   vfunc[79]:
   QAbstractItemView::horizontalScrollbarValueChanged(int)
   vfunc[80]: QAbstractItemView::closeEditor(QWidget*,
   QAbstractItemDelegate::EndEditHint)
   vfunc[81]: QAbstractItemView::commitData(QWidget*)
   vfunc[82]: QAbstractItemView::editorDestroyed(QObject*)
   vfunc[83]:
   QTreeView::moveCursor(QAbstractItemView::CursorAction,
   QFlags<Qt::KeyboardModifier>)
   vfunc[84]: QTreeView::horizontalOffset() const
   vfunc[85]: QTreeView::verticalOffset() const
   vfunc[86]: QTreeView::isIndexHidden(QModelIndex const&) const
   vfunc[87]: QTreeView::setSelection(QRect const&,
   QFlags<QItemSelectionModel::SelectionFlag>)
   vfunc[88]: QTreeView::visualRegionForSelection(QItemSelection
   const&) const
   vfunc[89]: QTreeView::selectedIndexes() const
   vfunc[90]: QAbstractItemView::edit(QModelIndex const&,
   QAbstractItemView::EditTrigger, QEvent*)
   vfunc[91]: QAbstractItemView::selectionCommand(QModelIndex
   const&, QEvent const*) const
   vfunc[92]: QAbstractItemView::startDrag(QFlags<Qt::DropAction>)
   vfunc[93]: QAbstractItemView::viewOptions() const
   vfunc[94]: QTreeView::drawRow(QPainter*, QStyleOptionViewItem
   const&, QModelIndex const&) const
   vfunc[95]: QTreeView::drawBranches(QPainter*, QRect const&,
   QModelIndex const&) const
   vfunc[96]: QTreeWidget::mimeTypes() const
   vfunc[97]: QTreeWidget::mimeData(QList<QTreeWidgetItem*>) const
   vfunc[98]: QTreeWidget::dropMimeData(QTreeWidgetItem*, int,
   QMimeData const*, Qt::DropAction)
   vfunc[99]: QTreeWidget::supportedDropActions() const

   Table 7-159. Secondary vtable for QTreeWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTreeWidget
   vfunc[0]: non-virtual thunk to QTreeWidget::~QTreeWidget()
   vfunc[1]: non-virtual thunk to QTreeWidget::~QTreeWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTreeWidget class is
   described by Table 7-160

   Table 7-160. typeinfo for QTreeWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTreeWidget
   basetype:   typeinfo for QTreeView
     __________________________________________________________

7.5.9.25. Class data for QAbstractButton

   The virtual table for the QAbstractButton class is described by
   Table 7-161

   Table 7-161. Primary vtable for QAbstractButton
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractButton
   vfunc[0]: QAbstractButton::metaObject() const
   vfunc[1]: QAbstractButton::qt_metacast(char const*)
   vfunc[2]: QAbstractButton::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QAbstractButton::~QAbstractButton()
   vfunc[4]: QAbstractButton::~QAbstractButton()
   vfunc[5]: QAbstractButton::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractButton::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractButton::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractButton::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractButton::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractButton::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractButton::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractButton::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractButton::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: __cxa_pure_virtual
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractButton::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractButton::hitButton(QPoint const&) const
   vfunc[55]: QAbstractButton::checkStateSet()
   vfunc[56]: QAbstractButton::nextCheckState()

   Table 7-162. Secondary vtable for QAbstractButton
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QAbstractButton
   vfunc[0]: non-virtual thunk to
   QAbstractButton::~QAbstractButton()
   vfunc[1]: non-virtual thunk to
   QAbstractButton::~QAbstractButton()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QAbstractButton class is
   described by Table 7-163

   Table 7-163. typeinfo for QAbstractButton
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractButton
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.9.26. Class data for QAbstractGraphicsShapeItem

   The virtual table for the QAbstractGraphicsShapeItem class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.9.27. Class data for QCompleter

   The virtual table for the QCompleter class is described in the
   generic part of this specification.
     __________________________________________________________

7.5.9.28. Class data for QDataWidgetMapper

   The virtual table for the QDataWidgetMapper class is described
   in the generic part of this specification.
     __________________________________________________________

7.5.9.29. Class data for QStandardItem

   The virtual table for the QStandardItem class is described in
   the generic part of this specification.
     __________________________________________________________

7.5.9.30. Interfaces for Qt4 Models and Views

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Models and Views specified in Table
   7-164, with the full mandatory functionality as described in
   the referenced underlying specification.

   Table 7-164. libQtGui - Qt4 Models and Views Function
   Interfaces
   _ZThn8_N10QTableViewD0Ev [CXXABI-1.86] _ZThn8_N10QTableViewD1Ev
   [CXXABI-1.86]
   _ZThn8_N11QHeaderViewD0Ev [CXXABI-1.86]
   _ZThn8_N11QHeaderViewD1Ev [CXXABI-1.86]
   _ZThn8_N11QTreeWidgetD0Ev [CXXABI-1.86]
   _ZThn8_N11QTreeWidgetD1Ev [CXXABI-1.86]
   _ZThn8_N12QTableWidgetD0Ev [CXXABI-1.86]
   _ZThn8_N12QTableWidgetD1Ev [CXXABI-1.86]
   _ZThn8_N15QAbstractButtonD0Ev [CXXABI-1.86]
   _ZThn8_N15QAbstractButtonD1Ev [CXXABI-1.86]
   _ZThn8_N15QAbstractSliderD0Ev [CXXABI-1.86]
   _ZThn8_N15QAbstractSliderD1Ev [CXXABI-1.86]
   _ZThn8_N16QAbstractSpinBoxD0Ev [CXXABI-1.86]
   _ZThn8_N16QAbstractSpinBoxD1Ev [CXXABI-1.86]
   _ZThn8_N17QAbstractItemViewD0Ev [CXXABI-1.86]
   _ZThn8_N17QAbstractItemViewD1Ev [CXXABI-1.86]
   _ZThn8_N19QAbstractScrollAreaD0Ev [CXXABI-1.86]
   _ZThn8_N19QAbstractScrollAreaD1Ev [CXXABI-1.86]
   _ZThn8_N9QTreeViewD0Ev [CXXABI-1.86] _ZThn8_N9QTreeViewD1Ev
   [CXXABI-1.86]
     __________________________________________________________

7.5.10. Qt4 Dialogs
     __________________________________________________________

7.5.10.1. Class data for QDialog

   The virtual table for the QDialog class is described by Table
   7-165

   Table 7-165. Primary vtable for QDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QDialog
   vfunc[0]: QDialog::metaObject() const
   vfunc[1]: QDialog::qt_metacast(char const*)
   vfunc[2]: QDialog::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QDialog::~QDialog()
   vfunc[4]: QDialog::~QDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()

   Table 7-166. Secondary vtable for QDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QDialog
   vfunc[0]: non-virtual thunk to QDialog::~QDialog()
   vfunc[1]: non-virtual thunk to QDialog::~QDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QDialog class is
   described by Table 7-167

   Table 7-167. typeinfo for QDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDialog
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.10.2. Class data for QColorDialog

   The virtual table for the QColorDialog class is described by
   Table 7-168

   Table 7-168. Primary vtable for QColorDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QColorDialog
   vfunc[0]: QColorDialog::metaObject() const
   vfunc[1]: QColorDialog::qt_metacast(char const*)
   vfunc[2]: QColorDialog::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QColorDialog::~QColorDialog()
   vfunc[4]: QColorDialog::~QColorDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()

   Table 7-169. Secondary vtable for QColorDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QColorDialog
   vfunc[0]: non-virtual thunk to QColorDialog::~QColorDialog()
   vfunc[1]: non-virtual thunk to QColorDialog::~QColorDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QColorDialog class is
   described by Table 7-170

   Table 7-170. typeinfo for QColorDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QColorDialog
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.10.3. Class data for QFontDialog

   The virtual table for the QFontDialog class is described by
   Table 7-171

   Table 7-171. Primary vtable for QFontDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QFontDialog
   vfunc[0]: QFontDialog::metaObject() const
   vfunc[1]: QFontDialog::qt_metacast(char const*)
   vfunc[2]: QFontDialog::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QFontDialog::~QFontDialog()
   vfunc[4]: QFontDialog::~QFontDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QFontDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()

   Table 7-172. Secondary vtable for QFontDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QFontDialog
   vfunc[0]: non-virtual thunk to QFontDialog::~QFontDialog()
   vfunc[1]: non-virtual thunk to QFontDialog::~QFontDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QFontDialog class is
   described by Table 7-173

   Table 7-173. typeinfo for QFontDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFontDialog
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.10.4. Class data for QMessageBox

   The virtual table for the QMessageBox class is described by
   Table 7-174

   Table 7-174. Primary vtable for QMessageBox
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QMessageBox
   vfunc[0]: QMessageBox::metaObject() const
   vfunc[1]: QMessageBox::qt_metacast(char const*)
   vfunc[2]: QMessageBox::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QMessageBox::~QMessageBox()
   vfunc[4]: QMessageBox::~QMessageBox()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QMessageBox::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QMessageBox::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QMessageBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QMessageBox::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QMessageBox::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QMessageBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()

   Table 7-175. Secondary vtable for QMessageBox
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QMessageBox
   vfunc[0]: non-virtual thunk to QMessageBox::~QMessageBox()
   vfunc[1]: non-virtual thunk to QMessageBox::~QMessageBox()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QMessageBox class is
   described by Table 7-176

   Table 7-176. typeinfo for QMessageBox
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMessageBox
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.10.5. Class data for QProgressDialog

   The virtual table for the QProgressDialog class is described by
   Table 7-177

   Table 7-177. Primary vtable for QProgressDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QProgressDialog
   vfunc[0]: QProgressDialog::metaObject() const
   vfunc[1]: QProgressDialog::qt_metacast(char const*)
   vfunc[2]: QProgressDialog::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QProgressDialog::~QProgressDialog()
   vfunc[4]: QProgressDialog::~QProgressDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QProgressDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QProgressDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QProgressDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QProgressDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QProgressDialog::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()

   Table 7-178. Secondary vtable for QProgressDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QProgressDialog
   vfunc[0]: non-virtual thunk to
   QProgressDialog::~QProgressDialog()
   vfunc[1]: non-virtual thunk to
   QProgressDialog::~QProgressDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QProgressDialog class is
   described by Table 7-179

   Table 7-179. typeinfo for QProgressDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QProgressDialog
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.10.6. Class data for QErrorMessage

   The virtual table for the QErrorMessage class is described by
   Table 7-180

   Table 7-180. Primary vtable for QErrorMessage
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QErrorMessage
   vfunc[0]: QErrorMessage::metaObject() const
   vfunc[1]: QErrorMessage::qt_metacast(char const*)
   vfunc[2]: QErrorMessage::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QErrorMessage::~QErrorMessage()
   vfunc[4]: QErrorMessage::~QErrorMessage()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QErrorMessage::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()

   Table 7-181. Secondary vtable for QErrorMessage
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QErrorMessage
   vfunc[0]: non-virtual thunk to QErrorMessage::~QErrorMessage()
   vfunc[1]: non-virtual thunk to QErrorMessage::~QErrorMessage()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QErrorMessage class is
   described by Table 7-182

   Table 7-182. typeinfo for QErrorMessage
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QErrorMessage
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.10.7. Class data for QFileDialog

   The virtual table for the QFileDialog class is described by
   Table 7-183

   Table 7-183. Primary vtable for QFileDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QFileDialog
   vfunc[0]: QFileDialog::metaObject() const
   vfunc[1]: QFileDialog::qt_metacast(char const*)
   vfunc[2]: QFileDialog::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QFileDialog::~QFileDialog()
   vfunc[4]: QFileDialog::~QFileDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QFileDialog::done(int)
   vfunc[55]: QFileDialog::accept()
   vfunc[56]: QDialog::reject()

   Table 7-184. Secondary vtable for QFileDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QFileDialog
   vfunc[0]: non-virtual thunk to QFileDialog::~QFileDialog()
   vfunc[1]: non-virtual thunk to QFileDialog::~QFileDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QFileDialog class is
   described by Table 7-185

   Table 7-185. typeinfo for QFileDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFileDialog
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.10.8. Class data for QPrintDialog

   The virtual table for the QPrintDialog class is described by
   Table 7-186

   Table 7-186. Primary vtable for QPrintDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QPrintDialog
   vfunc[0]: QPrintDialog::metaObject() const
   vfunc[1]: QPrintDialog::qt_metacast(char const*)
   vfunc[2]: QPrintDialog::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QPrintDialog::~QPrintDialog()
   vfunc[4]: QPrintDialog::~QPrintDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()
   vfunc[57]: QPrintDialog::exec()

   Table 7-187. Secondary vtable for QPrintDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QPrintDialog
   vfunc[0]: non-virtual thunk to QPrintDialog::~QPrintDialog()
   vfunc[1]: non-virtual thunk to QPrintDialog::~QPrintDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QPrintDialog class is
   described by Table 7-188

   Table 7-188. typeinfo for QPrintDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPrintDialog
   basetype:   typeinfo for QAbstractPrintDialog
     __________________________________________________________

7.5.10.9. Class data for QPageSetupDialog

   The virtual table for the QPageSetupDialog class is described
   by Table 7-189

   Table 7-189. Primary vtable for QPageSetupDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QPageSetupDialog
   vfunc[0]: QDialog::metaObject() const
   vfunc[1]: QDialog::qt_metacast(char const*)
   vfunc[2]: QDialog::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: NULL or QPageSetupDialog::~QPageSetupDialog()
   vfunc[4]: NULL or QPageSetupDialog::~QPageSetupDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()
   vfunc[57]: QPageSetupDialog::exec()

   Table 7-190. Secondary vtable for QPageSetupDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QPageSetupDialog
   vfunc[0]: NULL or non-virtual thunk to
   QPageSetupDialog::~QPageSetupDialog()
   vfunc[1]: NULL or non-virtual thunk to
   QPageSetupDialog::~QPageSetupDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QPageSetupDialog class is
   described by Table 7-191

   Table 7-191. typeinfo for QPageSetupDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPageSetupDialog
   basetype:   typeinfo for QAbstractPageSetupDialog
     __________________________________________________________

7.5.10.10. Class data for QInputDialog

   The virtual table for the QInputDialog class is described by
   Table 7-192

   Table 7-192. Primary vtable for QInputDialog
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QInputDialog
   vfunc[0]: QInputDialog::metaObject() const
   vfunc[1]: QInputDialog::qt_metacast(char const*)
   vfunc[2]: QInputDialog::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QInputDialog::~QInputDialog()
   vfunc[4]: QInputDialog::~QInputDialog()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QDialog::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QDialog::setVisible(bool)
   vfunc[14]: QDialog::sizeHint() const
   vfunc[15]: QDialog::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QDialog::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDialog::resizeEvent(QResizeEvent*)
   vfunc[32]: QDialog::closeEvent(QCloseEvent*)
   vfunc[33]: QDialog::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QDialog::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDialog::done(int)
   vfunc[55]: QDialog::accept()
   vfunc[56]: QDialog::reject()

   Table 7-193. Secondary vtable for QInputDialog
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QInputDialog
   vfunc[0]: non-virtual thunk to QInputDialog::~QInputDialog()
   vfunc[1]: non-virtual thunk to QInputDialog::~QInputDialog()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QInputDialog class is
   described by Table 7-194

   Table 7-194. typeinfo for QInputDialog
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QInputDialog
   basetype:   typeinfo for QDialog
     __________________________________________________________

7.5.10.11. Class data for QFileIconProvider

   The virtual table for the QFileIconProvider class is described
   in the generic part of this specification.

   The Run Time Type Information for the QFileIconProvider class
   is described by Table 7-195

   Table 7-195. typeinfo for QFileIconProvider
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QFileIconProvider
     __________________________________________________________

7.5.10.12. Interfaces for Qt4 Dialogs

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Dialogs specified in Table 7-196,
   with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-196. libQtGui - Qt4 Dialogs Function Interfaces
   _ZThn8_N11QFileDialogD0Ev [CXXABI-1.86]
   _ZThn8_N11QFileDialogD1Ev [CXXABI-1.86]
   _ZThn8_N11QFontDialogD0Ev [CXXABI-1.86]
   _ZThn8_N11QFontDialogD1Ev [CXXABI-1.86]
   _ZThn8_N11QMessageBoxD0Ev [CXXABI-1.86]
   _ZThn8_N11QMessageBoxD1Ev [CXXABI-1.86]
   _ZThn8_N12QColorDialogD0Ev [CXXABI-1.86]
   _ZThn8_N12QColorDialogD1Ev [CXXABI-1.86]
   _ZThn8_N12QInputDialogD0Ev [CXXABI-1.86]
   _ZThn8_N12QInputDialogD1Ev [CXXABI-1.86]
   _ZThn8_N12QPrintDialogD0Ev [CXXABI-1.86]
   _ZThn8_N12QPrintDialogD1Ev [CXXABI-1.86]
   _ZThn8_N13QErrorMessageD0Ev [CXXABI-1.86]
   _ZThn8_N13QErrorMessageD1Ev [CXXABI-1.86]
   _ZThn8_N15QProgressDialogD0Ev [CXXABI-1.86]
   _ZThn8_N15QProgressDialogD1Ev [CXXABI-1.86]
   _ZThn8_N7QDialogD0Ev [CXXABI-1.86] _ZThn8_N7QDialogD1Ev
   [CXXABI-1.86]
     __________________________________________________________

7.5.11. Qt4 Date and Time
     __________________________________________________________

7.5.11.1. Class data for QDateTimeEdit

   The virtual table for the QDateTimeEdit class is described by
   Table 7-197

   Table 7-197. Primary vtable for QDateTimeEdit
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QDateTimeEdit
   vfunc[0]: QDateTimeEdit::metaObject() const
   vfunc[1]: QDateTimeEdit::qt_metacast(char const*)
   vfunc[2]: QDateTimeEdit::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: NULL or QDateTimeEdit::~QDateTimeEdit()
   vfunc[4]: NULL or QDateTimeEdit::~QDateTimeEdit()
   vfunc[5]: QDateTimeEdit::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSpinBox::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QDateTimeEdit::sizeHint() const
   vfunc[15]: QAbstractSpinBox::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractSpinBox::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QDateTimeEdit::wheelEvent(QWheelEvent*)
   vfunc[23]: QDateTimeEdit::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QDateTimeEdit::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractSpinBox::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractSpinBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractSpinBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QAbstractSpinBox::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QAbstractSpinBox::showEvent(QShowEvent*)
   vfunc[41]: QAbstractSpinBox::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSpinBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QDateTimeEdit::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDateTimeEdit::validate(QString&, int&) const
   vfunc[55]: QDateTimeEdit::fixup(QString&) const
   vfunc[56]: QDateTimeEdit::stepBy(int)
   vfunc[57]: QDateTimeEdit::clear()
   vfunc[58]: QDateTimeEdit::stepEnabled() const
   vfunc[59]: QDateTimeEdit::dateTimeFromText(QString const&)
   const
   vfunc[60]: QDateTimeEdit::textFromDateTime(QDateTime const&)
   const

   Table 7-198. Secondary vtable for QDateTimeEdit
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QDateTimeEdit
   vfunc[0]: NULL or non-virtual thunk to
   QDateTimeEdit::~QDateTimeEdit()
   vfunc[1]: NULL or non-virtual thunk to
   QDateTimeEdit::~QDateTimeEdit()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QDateTimeEdit class is
   described by Table 7-199

   Table 7-199. typeinfo for QDateTimeEdit
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDateTimeEdit
   basetype:   typeinfo for QAbstractSpinBox
     __________________________________________________________

7.5.11.2. Class data for QTimeEdit

   The virtual table for the QTimeEdit class is described by Table
   7-200

   Table 7-200. Primary vtable for QTimeEdit
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTimeEdit
   vfunc[0]: QTimeEdit::metaObject() const
   vfunc[1]: QTimeEdit::qt_metacast(char const*)
   vfunc[2]: QTimeEdit::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: NULL or QTimeEdit::~QTimeEdit()
   vfunc[4]: NULL or QTimeEdit::~QTimeEdit()
   vfunc[5]: QDateTimeEdit::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSpinBox::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QDateTimeEdit::sizeHint() const
   vfunc[15]: QAbstractSpinBox::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractSpinBox::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QDateTimeEdit::wheelEvent(QWheelEvent*)
   vfunc[23]: QDateTimeEdit::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QDateTimeEdit::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractSpinBox::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractSpinBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractSpinBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QAbstractSpinBox::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QAbstractSpinBox::showEvent(QShowEvent*)
   vfunc[41]: QAbstractSpinBox::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSpinBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QDateTimeEdit::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDateTimeEdit::validate(QString&, int&) const
   vfunc[55]: QDateTimeEdit::fixup(QString&) const
   vfunc[56]: QDateTimeEdit::stepBy(int)
   vfunc[57]: QDateTimeEdit::clear()
   vfunc[58]: QDateTimeEdit::stepEnabled() const
   vfunc[59]: QDateTimeEdit::dateTimeFromText(QString const&)
   const
   vfunc[60]: QDateTimeEdit::textFromDateTime(QDateTime const&)
   const

   Table 7-201. Secondary vtable for QTimeEdit
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTimeEdit
   vfunc[0]: NULL or non-virtual thunk to QTimeEdit::~QTimeEdit()
   vfunc[1]: NULL or non-virtual thunk to QTimeEdit::~QTimeEdit()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTimeEdit class is
   described by Table 7-202

   Table 7-202. typeinfo for QTimeEdit
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTimeEdit
   basetype:   typeinfo for QDateTimeEdit
     __________________________________________________________

7.5.11.3. Class data for QDateEdit

   The virtual table for the QDateEdit class is described by Table
   7-203

   Table 7-203. Primary vtable for QDateEdit
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QDateEdit
   vfunc[0]: QDateEdit::metaObject() const
   vfunc[1]: QDateEdit::qt_metacast(char const*)
   vfunc[2]: QDateEdit::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: NULL or QDateEdit::~QDateEdit()
   vfunc[4]: NULL or QDateEdit::~QDateEdit()
   vfunc[5]: QDateTimeEdit::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSpinBox::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QDateTimeEdit::sizeHint() const
   vfunc[15]: QAbstractSpinBox::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractSpinBox::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QDateTimeEdit::wheelEvent(QWheelEvent*)
   vfunc[23]: QDateTimeEdit::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QDateTimeEdit::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractSpinBox::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractSpinBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractSpinBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QAbstractSpinBox::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QAbstractSpinBox::showEvent(QShowEvent*)
   vfunc[41]: QAbstractSpinBox::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSpinBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QDateTimeEdit::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDateTimeEdit::validate(QString&, int&) const
   vfunc[55]: QDateTimeEdit::fixup(QString&) const
   vfunc[56]: QDateTimeEdit::stepBy(int)
   vfunc[57]: QDateTimeEdit::clear()
   vfunc[58]: QDateTimeEdit::stepEnabled() const
   vfunc[59]: QDateTimeEdit::dateTimeFromText(QString const&)
   const
   vfunc[60]: QDateTimeEdit::textFromDateTime(QDateTime const&)
   const

   Table 7-204. Secondary vtable for QDateEdit
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QDateEdit
   vfunc[0]: NULL or non-virtual thunk to QDateEdit::~QDateEdit()
   vfunc[1]: NULL or non-virtual thunk to QDateEdit::~QDateEdit()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QDateEdit class is
   described by Table 7-205

   Table 7-205. typeinfo for QDateEdit
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDateEdit
   basetype:   typeinfo for QDateTimeEdit
     __________________________________________________________

7.5.11.4. Interfaces for Qt4 Date and Time

   No external functions are defined for libQtGui - Qt4 Date and
   Time in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.12. Qt4 Miscellaneous
     __________________________________________________________

7.5.12.1. Class data for QRubberBand

   The virtual table for the QRubberBand class is described by
   Table 7-206

   Table 7-206. Primary vtable for QRubberBand
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QRubberBand
   vfunc[0]: QRubberBand::metaObject() const
   vfunc[1]: QRubberBand::qt_metacast(char const*)
   vfunc[2]: QRubberBand::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QRubberBand::~QRubberBand()
   vfunc[4]: QRubberBand::~QRubberBand()
   vfunc[5]: QRubberBand::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QRubberBand::paintEvent(QPaintEvent*)
   vfunc[30]: QRubberBand::moveEvent(QMoveEvent*)
   vfunc[31]: QRubberBand::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QRubberBand::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QRubberBand::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-207. Secondary vtable for QRubberBand
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QRubberBand
   vfunc[0]: non-virtual thunk to QRubberBand::~QRubberBand()
   vfunc[1]: non-virtual thunk to QRubberBand::~QRubberBand()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QRubberBand class is
   described by Table 7-208

   Table 7-208. typeinfo for QRubberBand
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QRubberBand
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.12.2. Class data for QShortcut

   The virtual table for the QShortcut class is described in the
   generic part of this specification.

   The Run Time Type Information for the QShortcut class is
   described by Table 7-209

   Table 7-209. typeinfo for QShortcut
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QShortcut
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.12.3. Class data for QSplashScreen

   The virtual table for the QSplashScreen class is described by
   Table 7-210

   Table 7-210. Primary vtable for QSplashScreen
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QSplashScreen
   vfunc[0]: QSplashScreen::metaObject() const
   vfunc[1]: QSplashScreen::qt_metacast(char const*)
   vfunc[2]: QSplashScreen::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QSplashScreen::~QSplashScreen()
   vfunc[4]: QSplashScreen::~QSplashScreen()
   vfunc[5]: QSplashScreen::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QSplashScreen::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QSplashScreen::drawContents(QPainter*)

   Table 7-211. Secondary vtable for QSplashScreen
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QSplashScreen
   vfunc[0]: non-virtual thunk to QSplashScreen::~QSplashScreen()
   vfunc[1]: non-virtual thunk to QSplashScreen::~QSplashScreen()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QSplashScreen class is
   described by Table 7-212

   Table 7-212. typeinfo for QSplashScreen
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSplashScreen
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.12.4. Class data for QUndoCommand

   The virtual table for the QUndoCommand class is described in
   the generic part of this specification.
     __________________________________________________________

7.5.12.5. Class data for QUndoStack

   The virtual table for the QUndoStack class is described in the
   generic part of this specification.
     __________________________________________________________

7.5.12.6. Interfaces for Qt4 Miscellaneous

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Miscellaneous specified in Table
   7-213, with the full mandatory functionality as described in
   the referenced underlying specification.

   Table 7-213. libQtGui - Qt4 Miscellaneous Function Interfaces
   _ZThn8_N11QRubberBandD0Ev [CXXABI-1.86]
   _ZThn8_N11QRubberBandD1Ev [CXXABI-1.86]
   _ZThn8_N13QSplashScreenD0Ev [CXXABI-1.86]
   _ZThn8_N13QSplashScreenD1Ev [CXXABI-1.86]
     __________________________________________________________

7.5.13. Qt4 Paint Device
     __________________________________________________________

7.5.13.1. Class data for QPaintDevice

   The virtual table for the QPaintDevice class is described in
   the generic part of this specification.

   The Run Time Type Information for the QPaintDevice class is
   described by Table 7-214

   Table 7-214. typeinfo for QPaintDevice
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QPaintDevice
     __________________________________________________________

7.5.13.2. Class data for QPixmap

   The virtual table for the QPixmap class is described in the
   generic part of this specification.

   The Run Time Type Information for the QPixmap class is
   described by Table 7-215

   Table 7-215. typeinfo for QPixmap
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPixmap
   basetype:   typeinfo for QPaintDevice
     __________________________________________________________

7.5.13.3. Class data for QPicture

   The virtual table for the QPicture class is described in the
   generic part of this specification.

   The Run Time Type Information for the QPicture class is
   described by Table 7-216

   Table 7-216. typeinfo for QPicture
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPicture
   basetype:   typeinfo for QPaintDevice
     __________________________________________________________

7.5.13.4. Class data for QBitmap

   The virtual table for the QBitmap class is described in the
   generic part of this specification.

   The Run Time Type Information for the QBitmap class is
   described by Table 7-217

   Table 7-217. typeinfo for QBitmap
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QBitmap
   basetype:   typeinfo for QPixmap
     __________________________________________________________

7.5.13.5. Class data for QPictureFormatInterface

   The virtual table for the QPictureFormatInterface class is
   described in the generic part of this specification.

   The Run Time Type Information for the QPictureFormatInterface
   class is described by Table 7-218

   Table 7-218. typeinfo for QPictureFormatInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPictureFormatInterface
   basetype:   typeinfo for QFactoryInterface
     __________________________________________________________

7.5.13.6. Class data for QPrinter

   The virtual table for the QPrinter class is described in the
   generic part of this specification.

   The Run Time Type Information for the QPrinter class is
   described by Table 7-219

   Table 7-219. typeinfo for QPrinter
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPrinter
   basetype:   typeinfo for QPaintDevice
     __________________________________________________________

7.5.13.7. Class data for QPrintEngine

   The virtual table for the QPrintEngine class is described in
   the generic part of this specification.

   The Run Time Type Information for the QPrintEngine class is
   described by Table 7-220

   Table 7-220. typeinfo for QPrintEngine
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QPrintEngine
     __________________________________________________________

7.5.13.8. Interfaces for Qt4 Paint Device

   No external functions are defined for libQtGui - Qt4 Paint
   Device in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.14. Qt4 Multimedia
     __________________________________________________________

7.5.14.1. Class data for QImage

   The virtual table for the QImage class is described in the
   generic part of this specification.

   The Run Time Type Information for the QImage class is described
   by Table 7-221

   Table 7-221. typeinfo for QImage
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QImage
   basetype:   typeinfo for QPaintDevice
     __________________________________________________________

7.5.14.2. Class data for QImageIOHandler

   The virtual table for the QImageIOHandler class is described in
   the generic part of this specification.

   The Run Time Type Information for the QImageIOHandler class is
   described by Table 7-222

   Table 7-222. typeinfo for QImageIOHandler
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QImageIOHandler
     __________________________________________________________

7.5.14.3. Class data for QImageIOHandlerFactoryInterface

   The virtual table for the QImageIOHandlerFactoryInterface class
   is described in the generic part of this specification.

   The Run Time Type Information for the
   QImageIOHandlerFactoryInterface class is described by Table
   7-223

   Table 7-223. typeinfo for QImageIOHandlerFactoryInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QImageIOHandlerFactoryInterface
   basetype:   typeinfo for QFactoryInterface
     __________________________________________________________

7.5.14.4. Class data for QMovie

   The virtual table for the QMovie class is described in the
   generic part of this specification.

   The Run Time Type Information for the QMovie class is described
   by Table 7-224

   Table 7-224. typeinfo for QMovie
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMovie
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.14.5. Class data for QSound

   The virtual table for the QSound class is described in the
   generic part of this specification.

   The Run Time Type Information for the QSound class is described
   by Table 7-225

   Table 7-225. typeinfo for QSound
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSound
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.14.6. Interfaces for Qt4 Multimedia

   No external functions are defined for libQtGui - Qt4 Multimedia
   in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.15. Qt4 Layouts
     __________________________________________________________

7.5.15.1. Class data for QLayoutItem

   The virtual table for the QLayoutItem class is described in the
   generic part of this specification.

   The Run Time Type Information for the QLayoutItem class is
   described by Table 7-226

   Table 7-226. typeinfo for QLayoutItem
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QLayoutItem
     __________________________________________________________

7.5.15.2. Class data for QSpacerItem

   The virtual table for the QSpacerItem class is described in the
   generic part of this specification.

   The Run Time Type Information for the QSpacerItem class is
   described by Table 7-227

   Table 7-227. typeinfo for QSpacerItem
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSpacerItem
   basetype:   typeinfo for QLayoutItem
     __________________________________________________________

7.5.15.3. Class data for QWidgetItem

   The virtual table for the QWidgetItem class is described in the
   generic part of this specification.

   The Run Time Type Information for the QWidgetItem class is
   described by Table 7-228

   Table 7-228. typeinfo for QWidgetItem
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QWidgetItem
   basetype:   typeinfo for QLayoutItem
     __________________________________________________________

7.5.15.4. Class data for QLayout

   The virtual table for the QLayout class is described by Table
   7-229

   Table 7-229. Primary vtable for QLayout
Base Offset         0
Virtual Base Offset 0
RTTI                typeinfo for QLayout
vfunc[0]:           QLayout::metaObject() const
vfunc[1]:           QLayout::qt_metacast(char const*)
vfunc[2]:           QLayout::qt_metacall(QMetaObject::Call, int, void**)
vfunc[3]:           QLayout::~QLayout()
vfunc[4]:           QLayout::~QLayout()
vfunc[5]:           QObject::event(QEvent*)
vfunc[6]:           QObject::eventFilter(QObject*, QEvent*)
vfunc[7]:           QObject::timerEvent(QTimerEvent*)
vfunc[8]:           QLayout::childEvent(QChildEvent*)
vfunc[9]:           QObject::customEvent(QEvent*)
vfunc[10]:          QObject::connectNotify(char const*)
vfunc[11]:          QObject::disconnectNotify(char const*)
vfunc[12]:          QLayout::invalidate()
vfunc[13]:          QLayout::geometry() const
vfunc[14]:          __cxa_pure_virtual
vfunc[15]:          QLayout::expandingDirections() const
vfunc[16]:          QLayout::minimumSize() const
vfunc[17]:          QLayout::maximumSize() const
vfunc[18]:          __cxa_pure_virtual
vfunc[19]:          __cxa_pure_virtual
vfunc[20]:          __cxa_pure_virtual
vfunc[21]:          QLayout::indexOf(QWidget*) const
vfunc[22]:          __cxa_pure_virtual
vfunc[23]:          QLayout::isEmpty() const
vfunc[24]:          QLayout::layout()

   Table 7-230. Secondary vtable for QLayout
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QLayout
   vfunc[0]: non-virtual thunk to QLayout::~QLayout()
   vfunc[1]: non-virtual thunk to QLayout::~QLayout()
   vfunc[2]: __cxa_pure_virtual
   vfunc[3]: non-virtual thunk to QLayout::minimumSize() const
   vfunc[4]: non-virtual thunk to QLayout::maximumSize() const
   vfunc[5]: non-virtual thunk to QLayout::expandingDirections()
   const
   vfunc[6]: __cxa_pure_virtual
   vfunc[7]: non-virtual thunk to QLayout::geometry() const
   vfunc[8]: non-virtual thunk to QLayout::isEmpty() const
   vfunc[9]: QLayoutItem::hasHeightForWidth() const
   vfunc[10]: QLayoutItem::heightForWidth(int) const
   vfunc[11]: QLayoutItem::minimumHeightForWidth(int) const
   vfunc[12]: non-virtual thunk to QLayout::invalidate()
   vfunc[13]: QLayoutItem::widget()
   vfunc[14]: non-virtual thunk to QLayout::layout()
   vfunc[15]: QLayoutItem::spacerItem()

   The Run Time Type Information for the QLayout class is
   described by Table 7-231

   Table 7-231. typeinfo for QLayout
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QLayout
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QLayoutItem                    2050
     __________________________________________________________

7.5.15.5. Class data for QGridLayout

   The virtual table for the QGridLayout class is described by
   Table 7-232

   Table 7-232. Primary vtable for QGridLayout
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QGridLayout
   vfunc[0]: QGridLayout::metaObject() const
   vfunc[1]: QGridLayout::qt_metacast(char const*)
   vfunc[2]: QGridLayout::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QGridLayout::~QGridLayout()
   vfunc[4]: QGridLayout::~QGridLayout()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QLayout::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QGridLayout::invalidate()
   vfunc[13]: QLayout::geometry() const
   vfunc[14]: QGridLayout::addItem(QLayoutItem*)
   vfunc[15]: QGridLayout::expandingDirections() const
   vfunc[16]: QGridLayout::minimumSize() const
   vfunc[17]: QGridLayout::maximumSize() const
   vfunc[18]: QGridLayout::setGeometry(QRect const&)
   vfunc[19]: QGridLayout::itemAt(int) const
   vfunc[20]: QGridLayout::takeAt(int)
   vfunc[21]: QLayout::indexOf(QWidget*) const
   vfunc[22]: QGridLayout::count() const
   vfunc[23]: QLayout::isEmpty() const
   vfunc[24]: QLayout::layout()
   vfunc[25]: QGridLayout::sizeHint() const
   vfunc[26]: QGridLayout::hasHeightForWidth() const
   vfunc[27]: QGridLayout::heightForWidth(int) const
   vfunc[28]: QGridLayout::minimumHeightForWidth(int) const

   Table 7-233. Secondary vtable for QGridLayout
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QGridLayout
   vfunc[0]: non-virtual thunk to QGridLayout::~QGridLayout()
   vfunc[1]: non-virtual thunk to QGridLayout::~QGridLayout()
   vfunc[2]: non-virtual thunk to QGridLayout::sizeHint() const
   vfunc[3]: non-virtual thunk to QGridLayout::minimumSize() const
   vfunc[4]: non-virtual thunk to QGridLayout::maximumSize() const
   vfunc[5]: non-virtual thunk to
   QGridLayout::expandingDirections() const
   vfunc[6]: non-virtual thunk to QGridLayout::setGeometry(QRect
   const&)
   vfunc[7]: non-virtual thunk to QLayout::geometry() const
   vfunc[8]: non-virtual thunk to QLayout::isEmpty() const
   vfunc[9]: non-virtual thunk to QGridLayout::hasHeightForWidth()
   const
   vfunc[10]: non-virtual thunk to
   QGridLayout::heightForWidth(int) const
   vfunc[11]: non-virtual thunk to
   QGridLayout::minimumHeightForWidth(int) const
   vfunc[12]: non-virtual thunk to QGridLayout::invalidate()
   vfunc[13]: QLayoutItem::widget()
   vfunc[14]: non-virtual thunk to QLayout::layout()
   vfunc[15]: QLayoutItem::spacerItem()

   The Run Time Type Information for the QGridLayout class is
   described by Table 7-234

   Table 7-234. typeinfo for QGridLayout
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QGridLayout
   basetype:   typeinfo for QLayout
     __________________________________________________________

7.5.15.6. Class data for QBoxLayout

   The virtual table for the QBoxLayout class is described by
   Table 7-235

   Table 7-235. Primary vtable for QBoxLayout
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QBoxLayout
   vfunc[0]: QBoxLayout::metaObject() const
   vfunc[1]: QBoxLayout::qt_metacast(char const*)
   vfunc[2]: QBoxLayout::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QBoxLayout::~QBoxLayout()
   vfunc[4]: QBoxLayout::~QBoxLayout()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QLayout::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QBoxLayout::invalidate()
   vfunc[13]: QLayout::geometry() const
   vfunc[14]: QBoxLayout::addItem(QLayoutItem*)
   vfunc[15]: QBoxLayout::expandingDirections() const
   vfunc[16]: QBoxLayout::minimumSize() const
   vfunc[17]: QBoxLayout::maximumSize() const
   vfunc[18]: QBoxLayout::setGeometry(QRect const&)
   vfunc[19]: QBoxLayout::itemAt(int) const
   vfunc[20]: QBoxLayout::takeAt(int)
   vfunc[21]: QLayout::indexOf(QWidget*) const
   vfunc[22]: QBoxLayout::count() const
   vfunc[23]: QLayout::isEmpty() const
   vfunc[24]: QLayout::layout()
   vfunc[25]: QBoxLayout::sizeHint() const
   vfunc[26]: QBoxLayout::hasHeightForWidth() const
   vfunc[27]: QBoxLayout::heightForWidth(int) const
   vfunc[28]: QBoxLayout::minimumHeightForWidth(int) const

   Table 7-236. Secondary vtable for QBoxLayout
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QBoxLayout
   vfunc[0]: non-virtual thunk to QBoxLayout::~QBoxLayout()
   vfunc[1]: non-virtual thunk to QBoxLayout::~QBoxLayout()
   vfunc[2]: non-virtual thunk to QBoxLayout::sizeHint() const
   vfunc[3]: non-virtual thunk to QBoxLayout::minimumSize() const
   vfunc[4]: non-virtual thunk to QBoxLayout::maximumSize() const
   vfunc[5]: non-virtual thunk to
   QBoxLayout::expandingDirections() const
   vfunc[6]: non-virtual thunk to QBoxLayout::setGeometry(QRect
   const&)
   vfunc[7]: non-virtual thunk to QLayout::geometry() const
   vfunc[8]: non-virtual thunk to QLayout::isEmpty() const
   vfunc[9]: non-virtual thunk to QBoxLayout::hasHeightForWidth()
   const
   vfunc[10]: non-virtual thunk to QBoxLayout::heightForWidth(int)
   const
   vfunc[11]: non-virtual thunk to
   QBoxLayout::minimumHeightForWidth(int) const
   vfunc[12]: non-virtual thunk to QBoxLayout::invalidate()
   vfunc[13]: QLayoutItem::widget()
   vfunc[14]: non-virtual thunk to QLayout::layout()
   vfunc[15]: QLayoutItem::spacerItem()

   The Run Time Type Information for the QBoxLayout class is
   described by Table 7-237

   Table 7-237. typeinfo for QBoxLayout
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QBoxLayout
   basetype:   typeinfo for QLayout
     __________________________________________________________

7.5.15.7. Class data for QHBoxLayout

   The virtual table for the QHBoxLayout class is described by
   Table 7-238

   Table 7-238. Primary vtable for QHBoxLayout
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QHBoxLayout
   vfunc[0]: QHBoxLayout::metaObject() const
   vfunc[1]: QHBoxLayout::qt_metacast(char const*)
   vfunc[2]: QHBoxLayout::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QHBoxLayout::~QHBoxLayout()
   vfunc[4]: QHBoxLayout::~QHBoxLayout()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QLayout::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QBoxLayout::invalidate()
   vfunc[13]: QLayout::geometry() const
   vfunc[14]: QBoxLayout::addItem(QLayoutItem*)
   vfunc[15]: QBoxLayout::expandingDirections() const
   vfunc[16]: QBoxLayout::minimumSize() const
   vfunc[17]: QBoxLayout::maximumSize() const
   vfunc[18]: QBoxLayout::setGeometry(QRect const&)
   vfunc[19]: QBoxLayout::itemAt(int) const
   vfunc[20]: QBoxLayout::takeAt(int)
   vfunc[21]: QLayout::indexOf(QWidget*) const
   vfunc[22]: QBoxLayout::count() const
   vfunc[23]: QLayout::isEmpty() const
   vfunc[24]: QLayout::layout()
   vfunc[25]: QBoxLayout::sizeHint() const
   vfunc[26]: QBoxLayout::hasHeightForWidth() const
   vfunc[27]: QBoxLayout::heightForWidth(int) const
   vfunc[28]: QBoxLayout::minimumHeightForWidth(int) const

   Table 7-239. Secondary vtable for QHBoxLayout
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QHBoxLayout
   vfunc[0]: non-virtual thunk to QHBoxLayout::~QHBoxLayout()
   vfunc[1]: non-virtual thunk to QHBoxLayout::~QHBoxLayout()
   vfunc[2]: non-virtual thunk to QBoxLayout::sizeHint() const
   vfunc[3]: non-virtual thunk to QBoxLayout::minimumSize() const
   vfunc[4]: non-virtual thunk to QBoxLayout::maximumSize() const
   vfunc[5]: non-virtual thunk to
   QBoxLayout::expandingDirections() const
   vfunc[6]: non-virtual thunk to QBoxLayout::setGeometry(QRect
   const&)
   vfunc[7]: non-virtual thunk to QLayout::geometry() const
   vfunc[8]: non-virtual thunk to QLayout::isEmpty() const
   vfunc[9]: non-virtual thunk to QBoxLayout::hasHeightForWidth()
   const
   vfunc[10]: non-virtual thunk to QBoxLayout::heightForWidth(int)
   const
   vfunc[11]: non-virtual thunk to
   QBoxLayout::minimumHeightForWidth(int) const
   vfunc[12]: non-virtual thunk to QBoxLayout::invalidate()
   vfunc[13]: QLayoutItem::widget()
   vfunc[14]: non-virtual thunk to QLayout::layout()
   vfunc[15]: QLayoutItem::spacerItem()

   The Run Time Type Information for the QHBoxLayout class is
   described by Table 7-240

   Table 7-240. typeinfo for QHBoxLayout
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QHBoxLayout
   basetype:   typeinfo for QBoxLayout
     __________________________________________________________

7.5.15.8. Class data for QVBoxLayout

   The virtual table for the QVBoxLayout class is described by
   Table 7-241

   Table 7-241. Primary vtable for QVBoxLayout
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QVBoxLayout
   vfunc[0]: QVBoxLayout::metaObject() const
   vfunc[1]: QVBoxLayout::qt_metacast(char const*)
   vfunc[2]: QVBoxLayout::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QVBoxLayout::~QVBoxLayout()
   vfunc[4]: QVBoxLayout::~QVBoxLayout()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QLayout::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QBoxLayout::invalidate()
   vfunc[13]: QLayout::geometry() const
   vfunc[14]: QBoxLayout::addItem(QLayoutItem*)
   vfunc[15]: QBoxLayout::expandingDirections() const
   vfunc[16]: QBoxLayout::minimumSize() const
   vfunc[17]: QBoxLayout::maximumSize() const
   vfunc[18]: QBoxLayout::setGeometry(QRect const&)
   vfunc[19]: QBoxLayout::itemAt(int) const
   vfunc[20]: QBoxLayout::takeAt(int)
   vfunc[21]: QLayout::indexOf(QWidget*) const
   vfunc[22]: QBoxLayout::count() const
   vfunc[23]: QLayout::isEmpty() const
   vfunc[24]: QLayout::layout()
   vfunc[25]: QBoxLayout::sizeHint() const
   vfunc[26]: QBoxLayout::hasHeightForWidth() const
   vfunc[27]: QBoxLayout::heightForWidth(int) const
   vfunc[28]: QBoxLayout::minimumHeightForWidth(int) const

   Table 7-242. Secondary vtable for QVBoxLayout
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QVBoxLayout
   vfunc[0]: non-virtual thunk to QVBoxLayout::~QVBoxLayout()
   vfunc[1]: non-virtual thunk to QVBoxLayout::~QVBoxLayout()
   vfunc[2]: non-virtual thunk to QBoxLayout::sizeHint() const
   vfunc[3]: non-virtual thunk to QBoxLayout::minimumSize() const
   vfunc[4]: non-virtual thunk to QBoxLayout::maximumSize() const
   vfunc[5]: non-virtual thunk to
   QBoxLayout::expandingDirections() const
   vfunc[6]: non-virtual thunk to QBoxLayout::setGeometry(QRect
   const&)
   vfunc[7]: non-virtual thunk to QLayout::geometry() const
   vfunc[8]: non-virtual thunk to QLayout::isEmpty() const
   vfunc[9]: non-virtual thunk to QBoxLayout::hasHeightForWidth()
   const
   vfunc[10]: non-virtual thunk to QBoxLayout::heightForWidth(int)
   const
   vfunc[11]: non-virtual thunk to
   QBoxLayout::minimumHeightForWidth(int) const
   vfunc[12]: non-virtual thunk to QBoxLayout::invalidate()
   vfunc[13]: QLayoutItem::widget()
   vfunc[14]: non-virtual thunk to QLayout::layout()
   vfunc[15]: QLayoutItem::spacerItem()

   The Run Time Type Information for the QVBoxLayout class is
   described by Table 7-243

   Table 7-243. typeinfo for QVBoxLayout
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QVBoxLayout
   basetype:   typeinfo for QBoxLayout
     __________________________________________________________

7.5.15.9. Class data for QStackedLayout

   The virtual table for the QStackedLayout class is described by
   Table 7-244

   Table 7-244. Primary vtable for QStackedLayout
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QStackedLayout
   vfunc[0]: QStackedLayout::metaObject() const
   vfunc[1]: QStackedLayout::qt_metacast(char const*)
   vfunc[2]: QStackedLayout::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QStackedLayout::~QStackedLayout()
   vfunc[4]: QStackedLayout::~QStackedLayout()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QLayout::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QLayout::invalidate()
   vfunc[13]: QLayout::geometry() const
   vfunc[14]: QStackedLayout::addItem(QLayoutItem*)
   vfunc[15]: QLayout::expandingDirections() const
   vfunc[16]: QStackedLayout::minimumSize() const
   vfunc[17]: QLayout::maximumSize() const
   vfunc[18]: QStackedLayout::setGeometry(QRect const&)
   vfunc[19]: QStackedLayout::itemAt(int) const
   vfunc[20]: QStackedLayout::takeAt(int)
   vfunc[21]: QLayout::indexOf(QWidget*) const
   vfunc[22]: QStackedLayout::count() const
   vfunc[23]: QLayout::isEmpty() const
   vfunc[24]: QLayout::layout()
   vfunc[25]: QStackedLayout::sizeHint() const

   Table 7-245. Secondary vtable for QStackedLayout
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QStackedLayout
   vfunc[0]: non-virtual thunk to
   QStackedLayout::~QStackedLayout()
   vfunc[1]: non-virtual thunk to
   QStackedLayout::~QStackedLayout()
   vfunc[2]: non-virtual thunk to QStackedLayout::sizeHint() const
   vfunc[3]: non-virtual thunk to QStackedLayout::minimumSize()
   const
   vfunc[4]: non-virtual thunk to QLayout::maximumSize() const
   vfunc[5]: non-virtual thunk to QLayout::expandingDirections()
   const
   vfunc[6]: non-virtual thunk to
   QStackedLayout::setGeometry(QRect const&)
   vfunc[7]: non-virtual thunk to QLayout::geometry() const
   vfunc[8]: non-virtual thunk to QLayout::isEmpty() const
   vfunc[9]: QLayoutItem::hasHeightForWidth() const
   vfunc[10]: QLayoutItem::heightForWidth(int) const
   vfunc[11]: QLayoutItem::minimumHeightForWidth(int) const
   vfunc[12]: non-virtual thunk to QLayout::invalidate()
   vfunc[13]: QLayoutItem::widget()
   vfunc[14]: non-virtual thunk to QLayout::layout()
   vfunc[15]: QLayoutItem::spacerItem()

   The Run Time Type Information for the QStackedLayout class is
   described by Table 7-246

   Table 7-246. typeinfo for QStackedLayout
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QStackedLayout
   basetype:   typeinfo for QLayout
     __________________________________________________________

7.5.15.10. Interfaces for Qt4 Layouts

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Layouts specified in Table 7-247,
   with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-247. libQtGui - Qt4 Layouts Function Interfaces
   _ZThn8_N10QBoxLayoutD0Ev [CXXABI-1.86] _ZThn8_N10QBoxLayoutD1Ev
   [CXXABI-1.86]
   _ZThn8_N11QGridLayoutD0Ev [CXXABI-1.86]
   _ZThn8_N11QGridLayoutD1Ev [CXXABI-1.86]
   _ZThn8_N11QHBoxLayoutD0Ev [CXXABI-1.86]
   _ZThn8_N11QHBoxLayoutD1Ev [CXXABI-1.86]
   _ZThn8_N11QVBoxLayoutD0Ev [CXXABI-1.86]
   _ZThn8_N11QVBoxLayoutD1Ev [CXXABI-1.86]
   _ZThn8_N14QStackedLayoutD0Ev [CXXABI-1.86]
   _ZThn8_N14QStackedLayoutD1Ev [CXXABI-1.86]
   _ZThn8_N7QLayoutD0Ev [CXXABI-1.86] _ZThn8_N7QLayoutD1Ev
   [CXXABI-1.86]
     __________________________________________________________

7.5.16. Qt4 Style
     __________________________________________________________

7.5.16.1. Class data for QStyle

   The virtual table for the QStyle class is described in the
   generic part of this specification.

   The Run Time Type Information for the QStyle class is described
   by Table 7-248

   Table 7-248. typeinfo for QStyle
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QStyle
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.16.2. Class data for QCommonStyle

   The virtual table for the QCommonStyle class is described in
   the generic part of this specification.

   The Run Time Type Information for the QCommonStyle class is
   described by Table 7-249

   Table 7-249. typeinfo for QCommonStyle
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QCommonStyle
   basetype:   typeinfo for QStyle
     __________________________________________________________

7.5.16.3. Class data for QMotifStyle

   The virtual table for the QMotifStyle class is described in the
   generic part of this specification.

   The Run Time Type Information for the QMotifStyle class is
   described by Table 7-250

   Table 7-250. typeinfo for QMotifStyle
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMotifStyle
   basetype:   typeinfo for QCommonStyle
     __________________________________________________________

7.5.16.4. Class data for QStyleFactoryInterface

   The virtual table for the QStyleFactoryInterface class is
   described in the generic part of this specification.

   The Run Time Type Information for the QStyleFactoryInterface
   class is described by Table 7-251

   Table 7-251. typeinfo for QStyleFactoryInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QStyleFactoryInterface
   basetype:   typeinfo for QFactoryInterface
     __________________________________________________________

7.5.16.5. Class data for QWindowsStyle

   The virtual table for the QWindowsStyle class is described in
   the generic part of this specification.

   The Run Time Type Information for the QWindowsStyle class is
   described by Table 7-252

   Table 7-252. typeinfo for QWindowsStyle
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QWindowsStyle
   basetype:   typeinfo for QCommonStyle
     __________________________________________________________

7.5.16.6. Class data for QCDEStyle

   The virtual table for the QCDEStyle class is described in the
   generic part of this specification.

   The Run Time Type Information for the QCDEStyle class is
   described by Table 7-253

   Table 7-253. typeinfo for QCDEStyle
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QCDEStyle
   basetype:   typeinfo for QMotifStyle
     __________________________________________________________

7.5.16.7. Class data for QPlastiqueStyle

   The virtual table for the QPlastiqueStyle class is described in
   the generic part of this specification.

   The Run Time Type Information for the QPlastiqueStyle class is
   described by Table 7-254

   Table 7-254. typeinfo for QPlastiqueStyle
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPlastiqueStyle
   basetype:   typeinfo for QWindowsStyle
     __________________________________________________________

7.5.16.8. Class data for QCleanlooksStyle

   The virtual table for the QCleanlooksStyle class is described
   in the generic part of this specification.
     __________________________________________________________

7.5.16.9. Interfaces for Qt4 Style

   No external functions are defined for libQtGui - Qt4 Style in
   this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.17. Qt4 Text
     __________________________________________________________

7.5.17.1. Class data for QTextObject

   The virtual table for the QTextObject class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTextObject class is
   described by Table 7-255

   Table 7-255. typeinfo for QTextObject
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextObject
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.17.2. Class data for QTextBlockGroup

   The virtual table for the QTextBlockGroup class is described in
   the generic part of this specification.

   The Run Time Type Information for the QTextBlockGroup class is
   described by Table 7-256

   Table 7-256. typeinfo for QTextBlockGroup
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextBlockGroup
   basetype:   typeinfo for QTextObject
     __________________________________________________________

7.5.17.3. Class data for QTextFrameLayoutData

   The virtual table for the QTextFrameLayoutData class is
   described in the generic part of this specification.

   The Run Time Type Information for the QTextFrameLayoutData
   class is described by Table 7-257

   Table 7-257. typeinfo for QTextFrameLayoutData
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QTextFrameLayoutData
     __________________________________________________________

7.5.17.4. Class data for QTextFrame

   The virtual table for the QTextFrame class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTextFrame class is
   described by Table 7-258

   Table 7-258. typeinfo for QTextFrame
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextFrame
   basetype:   typeinfo for QTextObject
     __________________________________________________________

7.5.17.5. Class data for QTextBlockUserData

   The virtual table for the QTextBlockUserData class is described
   in the generic part of this specification.

   The Run Time Type Information for the QTextBlockUserData class
   is described by Table 7-259

   Table 7-259. typeinfo for QTextBlockUserData
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QTextBlockUserData
     __________________________________________________________

7.5.17.6. Class data for QTextDocument

   The virtual table for the QTextDocument class is described in
   the generic part of this specification.

   The Run Time Type Information for the QTextDocument class is
   described by Table 7-260

   Table 7-260. typeinfo for QTextDocument
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextDocument
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.17.7. Class data for QTextTable

   The virtual table for the QTextTable class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTextTable class is
   described by Table 7-261

   Table 7-261. typeinfo for QTextTable
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextTable
   basetype:   typeinfo for QTextFrame
     __________________________________________________________

7.5.17.8. Class data for QTextList

   The virtual table for the QTextList class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTextList class is
   described by Table 7-262

   Table 7-262. typeinfo for QTextList
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextList
   basetype:   typeinfo for QTextBlockGroup
     __________________________________________________________

7.5.17.9. Class data for QTextObjectInterface

   The virtual table for the QTextObjectInterface class is
   described in the generic part of this specification.

   The Run Time Type Information for the QTextObjectInterface
   class is described by Table 7-263

   Table 7-263. typeinfo for QTextObjectInterface
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QTextObjectInterface
     __________________________________________________________

7.5.17.10. Class data for QSyntaxHighlighter

   The virtual table for the QSyntaxHighlighter class is described
   in the generic part of this specification.

   The Run Time Type Information for the QSyntaxHighlighter class
   is described by Table 7-264

   Table 7-264. typeinfo for QSyntaxHighlighter
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSyntaxHighlighter
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.17.11. Interfaces for Qt4 Text

   No external functions are defined for libQtGui - Qt4 Text in
   this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.5.18. Qt4 Main Window and Application
     __________________________________________________________

7.5.18.1. Class data for QClipboard

   The virtual table for the QClipboard class is described in the
   generic part of this specification.

   The Run Time Type Information for the QClipboard class is
   described by Table 7-265

   Table 7-265. typeinfo for QClipboard
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QClipboard
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.18.2. Class data for QSessionManager

   The virtual table for the QSessionManager class is described in
   the generic part of this specification.

   The Run Time Type Information for the QSessionManager class is
   described by Table 7-266

   Table 7-266. typeinfo for QSessionManager
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSessionManager
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.18.3. Class data for QApplication

   The virtual table for the QApplication class is described in
   the generic part of this specification.

   The Run Time Type Information for the QApplication class is
   described by Table 7-267

   Table 7-267. typeinfo for QApplication
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QApplication
   basetype:   typeinfo for QCoreApplication
     __________________________________________________________

7.5.18.4. Class data for QAction

   The virtual table for the QAction class is described in the
   generic part of this specification.

   The Run Time Type Information for the QAction class is
   described by Table 7-268

   Table 7-268. typeinfo for QAction
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAction
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.18.5. Class data for QActionGroup

   The virtual table for the QActionGroup class is described in
   the generic part of this specification.

   The Run Time Type Information for the QActionGroup class is
   described by Table 7-269

   Table 7-269. typeinfo for QActionGroup
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QActionGroup
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.18.6. Class data for QWorkspace

   The virtual table for the QWorkspace class is described by
   Table 7-270

   Table 7-270. Primary vtable for QWorkspace
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QWorkspace
   vfunc[0]: QWorkspace::metaObject() const
   vfunc[1]: QWorkspace::qt_metacast(char const*)
   vfunc[2]: QWorkspace::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QWorkspace::~QWorkspace()
   vfunc[4]: QWorkspace::~QWorkspace()
   vfunc[5]: QWorkspace::event(QEvent*)
   vfunc[6]: QWorkspace::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QWorkspace::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWorkspace::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWorkspace::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWorkspace::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWorkspace::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWorkspace::showEvent(QShowEvent*)
   vfunc[41]: QWorkspace::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWorkspace::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-271. Secondary vtable for QWorkspace
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QWorkspace
   vfunc[0]: non-virtual thunk to QWorkspace::~QWorkspace()
   vfunc[1]: non-virtual thunk to QWorkspace::~QWorkspace()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QWorkspace class is
   described by Table 7-272

   Table 7-272. typeinfo for QWorkspace
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QWorkspace
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.18.7. Class data for QSizeGrip

   The virtual table for the QSizeGrip class is described by Table
   7-273

   Table 7-273. Primary vtable for QSizeGrip
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QSizeGrip
   vfunc[0]: QSizeGrip::metaObject() const
   vfunc[1]: QSizeGrip::qt_metacast(char const*)
   vfunc[2]: QSizeGrip::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QSizeGrip::~QSizeGrip()
   vfunc[4]: QSizeGrip::~QSizeGrip()
   vfunc[5]: QSizeGrip::event(QEvent*)
   vfunc[6]: QSizeGrip::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QSizeGrip::setVisible(bool)
   vfunc[14]: QSizeGrip::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QSizeGrip::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QSizeGrip::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QSizeGrip::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-274. Secondary vtable for QSizeGrip
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QSizeGrip
   vfunc[0]: non-virtual thunk to QSizeGrip::~QSizeGrip()
   vfunc[1]: non-virtual thunk to QSizeGrip::~QSizeGrip()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QSizeGrip class is
   described by Table 7-275

   Table 7-275. typeinfo for QSizeGrip
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSizeGrip
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.18.8. Class data for QStatusBar

   The virtual table for the QStatusBar class is described by
   Table 7-276

   Table 7-276. Primary vtable for QStatusBar
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QStatusBar
   vfunc[0]: QStatusBar::metaObject() const
   vfunc[1]: QStatusBar::qt_metacast(char const*)
   vfunc[2]: QStatusBar::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QStatusBar::~QStatusBar()
   vfunc[4]: QStatusBar::~QStatusBar()
   vfunc[5]: QStatusBar::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QStatusBar::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QStatusBar::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-277. Secondary vtable for QStatusBar
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QStatusBar
   vfunc[0]: non-virtual thunk to QStatusBar::~QStatusBar()
   vfunc[1]: non-virtual thunk to QStatusBar::~QStatusBar()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QStatusBar class is
   described by Table 7-278

   Table 7-278. typeinfo for QStatusBar
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QStatusBar
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.18.9. Class data for QToolBar

   The virtual table for the QToolBar class is described by Table
   7-279

   Table 7-279. Primary vtable for QToolBar
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QToolBar
   vfunc[0]: QToolBar::metaObject() const
   vfunc[1]: QToolBar::qt_metacast(char const*)
   vfunc[2]: QToolBar::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QToolBar::~QToolBar()
   vfunc[4]: QToolBar::~QToolBar()
   vfunc[5]: QToolBar::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QToolBar::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QToolBar::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QToolBar::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QToolBar::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QToolBar::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-280. Secondary vtable for QToolBar
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QToolBar
   vfunc[0]: non-virtual thunk to QToolBar::~QToolBar()
   vfunc[1]: non-virtual thunk to QToolBar::~QToolBar()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QToolBar class is
   described by Table 7-281

   Table 7-281. typeinfo for QToolBar
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QToolBar
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.18.10. Class data for QWidgetAction

   The virtual table for the QWidgetAction class is described in
   the generic part of this specification.

   The Run Time Type Information for the QWidgetAction class is
   described by Table 7-282

   Table 7-282. typeinfo for QWidgetAction
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QWidgetAction
   basetype:   typeinfo for QAction
     __________________________________________________________

7.5.18.11. Interfaces for Qt4 Main Window and Application

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Main Window and Application
   specified in Table 7-283, with the full mandatory functionality
   as described in the referenced underlying specification.

   Table 7-283. libQtGui - Qt4 Main Window and Application
   Function Interfaces
   _ZThn8_N10QStatusBarD0Ev [CXXABI-1.86] _ZThn8_N10QStatusBarD1Ev
   [CXXABI-1.86]
   _ZThn8_N10QWorkspaceD0Ev [CXXABI-1.86] _ZThn8_N10QWorkspaceD1Ev
   [CXXABI-1.86]
   _ZThn8_N8QToolBarD0Ev [CXXABI-1.86] _ZThn8_N8QToolBarD1Ev
   [CXXABI-1.86]
   _ZThn8_N9QSizeGripD0Ev [CXXABI-1.86] _ZThn8_N9QSizeGripD1Ev
   [CXXABI-1.86]
     __________________________________________________________

7.5.19. Qt4 Menus
     __________________________________________________________

7.5.19.1. Class data for QMenu

   The virtual table for the QMenu class is described by Table
   7-284

   Table 7-284. Primary vtable for QMenu
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QMenu
   vfunc[0]: QMenu::metaObject() const
   vfunc[1]: QMenu::qt_metacast(char const*)
   vfunc[2]: QMenu::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QMenu::~QMenu()
   vfunc[4]: QMenu::~QMenu()
   vfunc[5]: QMenu::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QMenu::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QMenu::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QMenu::mousePressEvent(QMouseEvent*)
   vfunc[19]: QMenu::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QMenu::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QMenu::wheelEvent(QWheelEvent*)
   vfunc[23]: QMenu::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QMenu::enterEvent(QEvent*)
   vfunc[28]: QMenu::leaveEvent(QEvent*)
   vfunc[29]: QMenu::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QMenu::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QMenu::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QMenu::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-285. Secondary vtable for QMenu
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QMenu
   vfunc[0]: non-virtual thunk to QMenu::~QMenu()
   vfunc[1]: non-virtual thunk to QMenu::~QMenu()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QMenu class is described
   by Table 7-286

   Table 7-286. typeinfo for QMenu
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMenu
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.19.2. Class data for QMenuItem

   The virtual table for the QMenuItem class is described in the
   generic part of this specification.

   The Run Time Type Information for the QMenuItem class is
   described by Table 7-287

   Table 7-287. typeinfo for QMenuItem
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMenuItem
   basetype:   typeinfo for QAction
     __________________________________________________________

7.5.19.3. Class data for QMenuBar

   The virtual table for the QMenuBar class is described by Table
   7-288

   Table 7-288. Primary vtable for QMenuBar
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QMenuBar
   vfunc[0]: QMenuBar::metaObject() const
   vfunc[1]: QMenuBar::qt_metacast(char const*)
   vfunc[2]: QMenuBar::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QMenuBar::~QMenuBar()
   vfunc[4]: QMenuBar::~QMenuBar()
   vfunc[5]: QMenuBar::event(QEvent*)
   vfunc[6]: QMenuBar::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QMenuBar::sizeHint() const
   vfunc[15]: QMenuBar::minimumSizeHint() const
   vfunc[16]: QMenuBar::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QMenuBar::mousePressEvent(QMouseEvent*)
   vfunc[19]: QMenuBar::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QMenuBar::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QMenuBar::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QMenuBar::focusInEvent(QFocusEvent*)
   vfunc[26]: QMenuBar::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QMenuBar::leaveEvent(QEvent*)
   vfunc[29]: QMenuBar::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QMenuBar::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QMenuBar::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QMenuBar::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-289. Secondary vtable for QMenuBar
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QMenuBar
   vfunc[0]: non-virtual thunk to QMenuBar::~QMenuBar()
   vfunc[1]: non-virtual thunk to QMenuBar::~QMenuBar()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QMenuBar class is
   described by Table 7-290

   Table 7-290. typeinfo for QMenuBar
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMenuBar
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.19.4. Interfaces for Qt4 Menus

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Menus specified in Table 7-291, with
   the full mandatory functionality as described in the referenced
   underlying specification.

   Table 7-291. libQtGui - Qt4 Menus Function Interfaces
   _ZThn8_N5QMenuD0Ev [CXXABI-1.86] _ZThn8_N5QMenuD1Ev
   [CXXABI-1.86]
   _ZThn8_N8QMenuBarD0Ev [CXXABI-1.86] _ZThn8_N8QMenuBarD1Ev
   [CXXABI-1.86]
     __________________________________________________________

7.5.20. Qt4 Widgets
     __________________________________________________________

7.5.20.1. Class data for QWidget

   The virtual table for the QWidget class is described by Table
   7-292

   Table 7-292. Primary vtable for QWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QWidget
   vfunc[0]: QWidget::metaObject() const
   vfunc[1]: QWidget::qt_metacast(char const*)
   vfunc[2]: QWidget::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QWidget::~QWidget()
   vfunc[4]: QWidget::~QWidget()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-293. Secondary vtable for QWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QWidget
   vfunc[0]: non-virtual thunk to QWidget::~QWidget()
   vfunc[1]: non-virtual thunk to QWidget::~QWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QWidget class is
   described by Table 7-294

   Table 7-294. typeinfo for QWidget
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QWidget
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QPaintDevice                   2050
     __________________________________________________________

7.5.20.2. Class data for QFrame

   The virtual table for the QFrame class is described by Table
   7-295

   Table 7-295. Primary vtable for QFrame
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QFrame
   vfunc[0]: QFrame::metaObject() const
   vfunc[1]: QFrame::qt_metacast(char const*)
   vfunc[2]: QFrame::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QFrame::~QFrame()
   vfunc[4]: QFrame::~QFrame()
   vfunc[5]: QFrame::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QFrame::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QFrame::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-296. Secondary vtable for QFrame
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QFrame
   vfunc[0]: non-virtual thunk to QFrame::~QFrame()
   vfunc[1]: non-virtual thunk to QFrame::~QFrame()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QFrame class is described
   by Table 7-297

   Table 7-297. typeinfo for QFrame
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFrame
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.3. Class data for QLineEdit

   The virtual table for the QLineEdit class is described by Table
   7-298

   Table 7-298. Primary vtable for QLineEdit
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QLineEdit
   vfunc[0]: QLineEdit::metaObject() const
   vfunc[1]: QLineEdit::qt_metacast(char const*)
   vfunc[2]: QLineEdit::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QLineEdit::~QLineEdit()
   vfunc[4]: QLineEdit::~QLineEdit()
   vfunc[5]: QLineEdit::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QLineEdit::sizeHint() const
   vfunc[15]: QLineEdit::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QLineEdit::mousePressEvent(QMouseEvent*)
   vfunc[19]: QLineEdit::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QLineEdit::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QLineEdit::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QLineEdit::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QLineEdit::focusInEvent(QFocusEvent*)
   vfunc[26]: QLineEdit::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QLineEdit::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QLineEdit::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QLineEdit::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QLineEdit::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QLineEdit::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QLineEdit::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QLineEdit::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QLineEdit::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QLineEdit::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-299. Secondary vtable for QLineEdit
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QLineEdit
   vfunc[0]: non-virtual thunk to QLineEdit::~QLineEdit()
   vfunc[1]: non-virtual thunk to QLineEdit::~QLineEdit()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QLineEdit class is
   described by Table 7-300

   Table 7-300. typeinfo for QLineEdit
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QLineEdit
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.4. Class data for QSlider

   The virtual table for the QSlider class is described by Table
   7-301

   Table 7-301. Primary vtable for QSlider
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QSlider
   vfunc[0]: QSlider::metaObject() const
   vfunc[1]: QSlider::qt_metacast(char const*)
   vfunc[2]: QSlider::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QSlider::~QSlider()
   vfunc[4]: QSlider::~QSlider()
   vfunc[5]: QSlider::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSlider::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QSlider::sizeHint() const
   vfunc[15]: QSlider::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QSlider::mousePressEvent(QMouseEvent*)
   vfunc[19]: QSlider::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QSlider::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractSlider::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractSlider::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QSlider::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSlider::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]:
   QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)

   Table 7-302. Secondary vtable for QSlider
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QSlider
   vfunc[0]: non-virtual thunk to QSlider::~QSlider()
   vfunc[1]: non-virtual thunk to QSlider::~QSlider()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QSlider class is
   described by Table 7-303

   Table 7-303. typeinfo for QSlider
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSlider
   basetype:   typeinfo for QAbstractSlider
     __________________________________________________________

7.5.20.5. Class data for QTabBar

   The virtual table for the QTabBar class is described by Table
   7-304

   Table 7-304. Primary vtable for QTabBar
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTabBar
   vfunc[0]: QTabBar::metaObject() const
   vfunc[1]: QTabBar::qt_metacast(char const*)
   vfunc[2]: QTabBar::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QTabBar::~QTabBar()
   vfunc[4]: QTabBar::~QTabBar()
   vfunc[5]: QTabBar::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QTabBar::sizeHint() const
   vfunc[15]: QTabBar::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QTabBar::mousePressEvent(QMouseEvent*)
   vfunc[19]: QTabBar::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QTabBar::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QTabBar::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QTabBar::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QTabBar::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QTabBar::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QTabBar::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QTabBar::tabSizeHint(int) const
   vfunc[55]: QTabBar::tabInserted(int)
   vfunc[56]: QTabBar::tabRemoved(int)
   vfunc[57]: QTabBar::tabLayoutChange()

   Table 7-305. Secondary vtable for QTabBar
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTabBar
   vfunc[0]: non-virtual thunk to QTabBar::~QTabBar()
   vfunc[1]: non-virtual thunk to QTabBar::~QTabBar()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTabBar class is
   described by Table 7-306

   Table 7-306. typeinfo for QTabBar
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTabBar
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.6. Class data for QTabWidget

   The virtual table for the QTabWidget class is described by
   Table 7-307

   Table 7-307. Primary vtable for QTabWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTabWidget
   vfunc[0]: QTabWidget::metaObject() const
   vfunc[1]: QTabWidget::qt_metacast(char const*)
   vfunc[2]: QTabWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QTabWidget::~QTabWidget()
   vfunc[4]: QTabWidget::~QTabWidget()
   vfunc[5]: QTabWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QTabWidget::sizeHint() const
   vfunc[15]: QTabWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QTabWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QTabWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QTabWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QTabWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QTabWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QTabWidget::tabInserted(int)
   vfunc[55]: QTabWidget::tabRemoved(int)

   Table 7-308. Secondary vtable for QTabWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTabWidget
   vfunc[0]: non-virtual thunk to QTabWidget::~QTabWidget()
   vfunc[1]: non-virtual thunk to QTabWidget::~QTabWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTabWidget class is
   described by Table 7-309

   Table 7-309. typeinfo for QTabWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTabWidget
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.7. Class data for QListView

   The virtual table for the QListView class is described by Table
   7-310

   Table 7-310. Primary vtable for QListView
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QListView
   vfunc[0]: QListView::metaObject() const
   vfunc[1]: QListView::qt_metacast(char const*)
   vfunc[2]: QListView::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QListView::~QListView()
   vfunc[4]: QListView::~QListView()
   vfunc[5]: QListView::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QListView::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractItemView::mousePressEvent(QMouseEvent*)
   vfunc[19]: QListView::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]:
   QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QListView::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractItemView::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractItemView::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractItemView::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QListView::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QListView::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QAbstractItemView::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QListView::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QListView::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QListView::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractItemView::viewportEvent(QEvent*)
   vfunc[55]: QListView::scrollContentsBy(int, int)
   vfunc[56]: QAbstractItemView::setModel(QAbstractItemModel*)
   vfunc[57]:
   QAbstractItemView::setSelectionModel(QItemSelectionModel*)
   vfunc[58]: QAbstractItemView::keyboardSearch(QString const&)
   vfunc[59]: QListView::visualRect(QModelIndex const&) const
   vfunc[60]: QListView::scrollTo(QModelIndex const&,
   QAbstractItemView::ScrollHint)
   vfunc[61]: QListView::indexAt(QPoint const&) const
   vfunc[62]: QAbstractItemView::sizeHintForRow(int) const
   vfunc[63]: QAbstractItemView::sizeHintForColumn(int) const
   vfunc[64]: QListView::reset()
   vfunc[65]: QListView::setRootIndex(QModelIndex const&)
   vfunc[66]: QListView::doItemsLayout()
   vfunc[67]: QAbstractItemView::selectAll()
   vfunc[68]: QListView::dataChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[69]: QListView::rowsInserted(QModelIndex const&, int,
   int)
   vfunc[70]: QListView::rowsAboutToBeRemoved(QModelIndex const&,
   int, int)
   vfunc[71]: QAbstractItemView::selectionChanged(QItemSelection
   const&, QItemSelection const&)
   vfunc[72]: QAbstractItemView::currentChanged(QModelIndex
   const&, QModelIndex const&)
   vfunc[73]: QAbstractItemView::updateEditorData()
   vfunc[74]: QAbstractItemView::updateEditorGeometries()
   vfunc[75]: QListView::updateGeometries()
   vfunc[76]: QAbstractItemView::verticalScrollbarAction(int)
   vfunc[77]: QAbstractItemView::horizontalScrollbarAction(int)
   vfunc[78]:
   QAbstractItemView::verticalScrollbarValueChanged(int)
   vfunc[79]:
   QAbstractItemView::horizontalScrollbarValueChanged(int)
   vfunc[80]: QAbstractItemView::closeEditor(QWidget*,
   QAbstractItemDelegate::EndEditHint)
   vfunc[81]: QAbstractItemView::commitData(QWidget*)
   vfunc[82]: QAbstractItemView::editorDestroyed(QObject*)
   vfunc[83]:
   QListView::moveCursor(QAbstractItemView::CursorAction,
   QFlags<Qt::KeyboardModifier>)
   vfunc[84]: QListView::horizontalOffset() const
   vfunc[85]: QListView::verticalOffset() const
   vfunc[86]: QListView::isIndexHidden(QModelIndex const&) const
   vfunc[87]: QListView::setSelection(QRect const&,
   QFlags<QItemSelectionModel::SelectionFlag>)
   vfunc[88]: QListView::visualRegionForSelection(QItemSelection
   const&) const
   vfunc[89]: QListView::selectedIndexes() const
   vfunc[90]: QAbstractItemView::edit(QModelIndex const&,
   QAbstractItemView::EditTrigger, QEvent*)
   vfunc[91]: QAbstractItemView::selectionCommand(QModelIndex
   const&, QEvent const*) const
   vfunc[92]: QListView::startDrag(QFlags<Qt::DropAction>)
   vfunc[93]: QListView::viewOptions() const

   Table 7-311. Secondary vtable for QListView
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QListView
   vfunc[0]: non-virtual thunk to QListView::~QListView()
   vfunc[1]: non-virtual thunk to QListView::~QListView()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QListView class is
   described by Table 7-312

   Table 7-312. typeinfo for QListView
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QListView
   basetype:   typeinfo for QAbstractItemView
     __________________________________________________________

7.5.20.8. Class data for QListWidgetItem

   The virtual table for the QListWidgetItem class is described in
   the generic part of this specification.

   The Run Time Type Information for the QListWidgetItem class is
   described by Table 7-313

   Table 7-313. typeinfo for QListWidgetItem
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QListWidgetItem
     __________________________________________________________

7.5.20.9. Class data for QListWidget

   The virtual table for the QListWidget class is described by
   Table 7-314

   Table 7-314. Primary vtable for QListWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QListWidget
   vfunc[0]: QListWidget::metaObject() const
   vfunc[1]: QListWidget::qt_metacast(char const*)
   vfunc[2]: QListWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QListWidget::~QListWidget()
   vfunc[4]: QListWidget::~QListWidget()
   vfunc[5]: QListWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QListView::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractItemView::mousePressEvent(QMouseEvent*)
   vfunc[19]: QListView::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]:
   QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QListView::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractItemView::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractItemView::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractItemView::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QListView::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QListView::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QAbstractItemView::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QListView::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QListView::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QListView::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractItemView::viewportEvent(QEvent*)
   vfunc[55]: QListView::scrollContentsBy(int, int)
   vfunc[56]: QListWidget::setModel(QAbstractItemModel*)
   vfunc[57]:
   QAbstractItemView::setSelectionModel(QItemSelectionModel*)
   vfunc[58]: QAbstractItemView::keyboardSearch(QString const&)
   vfunc[59]: QListView::visualRect(QModelIndex const&) const
   vfunc[60]: QListView::scrollTo(QModelIndex const&,
   QAbstractItemView::ScrollHint)
   vfunc[61]: QListView::indexAt(QPoint const&) const
   vfunc[62]: QAbstractItemView::sizeHintForRow(int) const
   vfunc[63]: QAbstractItemView::sizeHintForColumn(int) const
   vfunc[64]: QListView::reset()
   vfunc[65]: QListView::setRootIndex(QModelIndex const&)
   vfunc[66]: QListView::doItemsLayout()
   vfunc[67]: QAbstractItemView::selectAll()
   vfunc[68]: QListView::dataChanged(QModelIndex const&,
   QModelIndex const&)
   vfunc[69]: QListView::rowsInserted(QModelIndex const&, int,
   int)
   vfunc[70]: QListView::rowsAboutToBeRemoved(QModelIndex const&,
   int, int)
   vfunc[71]: QAbstractItemView::selectionChanged(QItemSelection
   const&, QItemSelection const&)
   vfunc[72]: QAbstractItemView::currentChanged(QModelIndex
   const&, QModelIndex const&)
   vfunc[73]: QAbstractItemView::updateEditorData()
   vfunc[74]: QAbstractItemView::updateEditorGeometries()
   vfunc[75]: QListView::updateGeometries()
   vfunc[76]: QAbstractItemView::verticalScrollbarAction(int)
   vfunc[77]: QAbstractItemView::horizontalScrollbarAction(int)
   vfunc[78]:
   QAbstractItemView::verticalScrollbarValueChanged(int)
   vfunc[79]:
   QAbstractItemView::horizontalScrollbarValueChanged(int)
   vfunc[80]: QAbstractItemView::closeEditor(QWidget*,
   QAbstractItemDelegate::EndEditHint)
   vfunc[81]: QAbstractItemView::commitData(QWidget*)
   vfunc[82]: QAbstractItemView::editorDestroyed(QObject*)
   vfunc[83]:
   QListView::moveCursor(QAbstractItemView::CursorAction,
   QFlags<Qt::KeyboardModifier>)
   vfunc[84]: QListView::horizontalOffset() const
   vfunc[85]: QListView::verticalOffset() const
   vfunc[86]: QListView::isIndexHidden(QModelIndex const&) const
   vfunc[87]: QListView::setSelection(QRect const&,
   QFlags<QItemSelectionModel::SelectionFlag>)
   vfunc[88]: QListView::visualRegionForSelection(QItemSelection
   const&) const
   vfunc[89]: QListView::selectedIndexes() const
   vfunc[90]: QAbstractItemView::edit(QModelIndex const&,
   QAbstractItemView::EditTrigger, QEvent*)
   vfunc[91]: QAbstractItemView::selectionCommand(QModelIndex
   const&, QEvent const*) const
   vfunc[92]: QListView::startDrag(QFlags<Qt::DropAction>)
   vfunc[93]: QListView::viewOptions() const
   vfunc[94]: QListWidget::mimeTypes() const
   vfunc[95]: QListWidget::mimeData(QList<QListWidgetItem*>) const
   vfunc[96]: QListWidget::dropMimeData(int, QMimeData const*,
   Qt::DropAction)
   vfunc[97]: QListWidget::supportedDropActions() const

   Table 7-315. Secondary vtable for QListWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QListWidget
   vfunc[0]: non-virtual thunk to QListWidget::~QListWidget()
   vfunc[1]: non-virtual thunk to QListWidget::~QListWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QListWidget class is
   described by Table 7-316

   Table 7-316. typeinfo for QListWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QListWidget
   basetype:   typeinfo for QListView
     __________________________________________________________

7.5.20.10. Class data for QDesktopWidget

   The virtual table for the QDesktopWidget class is described by
   Table 7-317

   Table 7-317. Primary vtable for QDesktopWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QDesktopWidget
   vfunc[0]: QDesktopWidget::metaObject() const
   vfunc[1]: QDesktopWidget::qt_metacast(char const*)
   vfunc[2]: QDesktopWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QDesktopWidget::~QDesktopWidget()
   vfunc[4]: QDesktopWidget::~QDesktopWidget()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDesktopWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-318. Secondary vtable for QDesktopWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QDesktopWidget
   vfunc[0]: non-virtual thunk to
   QDesktopWidget::~QDesktopWidget()
   vfunc[1]: non-virtual thunk to
   QDesktopWidget::~QDesktopWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QDesktopWidget class is
   described by Table 7-319

   Table 7-319. typeinfo for QDesktopWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDesktopWidget
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.11. Class data for QInputContextFactoryInterface

   The virtual table for the QInputContextFactoryInterface class
   is described in the generic part of this specification.

   The Run Time Type Information for the
   QInputContextFactoryInterface class is described by Table 7-320

   Table 7-320. typeinfo for QInputContextFactoryInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QInputContextFactoryInterface
   basetype:   typeinfo for QFactoryInterface
     __________________________________________________________

7.5.20.12. Class data for QInputContext

   The virtual table for the QInputContext class is described in
   the generic part of this specification.

   The Run Time Type Information for the QInputContext class is
   described by Table 7-321

   Table 7-321. typeinfo for QInputContext
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QInputContext
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.20.13. Class data for QCheckBox

   The virtual table for the QCheckBox class is described by Table
   7-322

   Table 7-322. Primary vtable for QCheckBox
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QCheckBox
   vfunc[0]: QCheckBox::metaObject() const
   vfunc[1]: QCheckBox::qt_metacast(char const*)
   vfunc[2]: QCheckBox::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: NULL or QCheckBox::~QCheckBox()
   vfunc[4]: NULL or QCheckBox::~QCheckBox()
   vfunc[5]: QCheckBox::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractButton::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QCheckBox::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractButton::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractButton::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QCheckBox::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractButton::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractButton::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractButton::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractButton::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QCheckBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractButton::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QCheckBox::hitButton(QPoint const&) const
   vfunc[55]: QCheckBox::checkStateSet()
   vfunc[56]: QCheckBox::nextCheckState()

   Table 7-323. Secondary vtable for QCheckBox
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QCheckBox
   vfunc[0]: NULL or non-virtual thunk to QCheckBox::~QCheckBox()
   vfunc[1]: NULL or non-virtual thunk to QCheckBox::~QCheckBox()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QCheckBox class is
   described by Table 7-324

   Table 7-324. typeinfo for QCheckBox
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QCheckBox
   basetype:   typeinfo for QAbstractButton
     __________________________________________________________

7.5.20.14. Class data for QSpinBox

   The virtual table for the QSpinBox class is described by Table
   7-325

   Table 7-325. Primary vtable for QSpinBox
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QSpinBox
   vfunc[0]: QSpinBox::metaObject() const
   vfunc[1]: QSpinBox::qt_metacast(char const*)
   vfunc[2]: QSpinBox::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: NULL or QSpinBox::~QSpinBox()
   vfunc[4]: NULL or QSpinBox::~QSpinBox()
   vfunc[5]: QSpinBox::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSpinBox::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractSpinBox::sizeHint() const
   vfunc[15]: QAbstractSpinBox::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractSpinBox::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractSpinBox::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractSpinBox::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractSpinBox::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractSpinBox::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractSpinBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractSpinBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QAbstractSpinBox::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QAbstractSpinBox::showEvent(QShowEvent*)
   vfunc[41]: QAbstractSpinBox::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSpinBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QSpinBox::validate(QString&, int&) const
   vfunc[55]: QSpinBox::fixup(QString&) const
   vfunc[56]: QAbstractSpinBox::stepBy(int)
   vfunc[57]: QAbstractSpinBox::clear()
   vfunc[58]: QAbstractSpinBox::stepEnabled() const
   vfunc[59]: QSpinBox::valueFromText(QString const&) const
   vfunc[60]: QSpinBox::textFromValue(int) const

   Table 7-326. Secondary vtable for QSpinBox
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QSpinBox
   vfunc[0]: NULL or non-virtual thunk to QSpinBox::~QSpinBox()
   vfunc[1]: NULL or non-virtual thunk to QSpinBox::~QSpinBox()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QSpinBox class is
   described by Table 7-327

   Table 7-327. typeinfo for QSpinBox
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSpinBox
   basetype:   typeinfo for QAbstractSpinBox
     __________________________________________________________

7.5.20.15. Class data for QDoubleSpinBox

   The virtual table for the QDoubleSpinBox class is described by
   Table 7-328

   Table 7-328. Primary vtable for QDoubleSpinBox
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QDoubleSpinBox
   vfunc[0]: QDoubleSpinBox::metaObject() const
   vfunc[1]: QDoubleSpinBox::qt_metacast(char const*)
   vfunc[2]: QDoubleSpinBox::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: NULL or QDoubleSpinBox::~QDoubleSpinBox()
   vfunc[4]: NULL or QDoubleSpinBox::~QDoubleSpinBox()
   vfunc[5]: QAbstractSpinBox::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSpinBox::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractSpinBox::sizeHint() const
   vfunc[15]: QAbstractSpinBox::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractSpinBox::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractSpinBox::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractSpinBox::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractSpinBox::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractSpinBox::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractSpinBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QAbstractSpinBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QAbstractSpinBox::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QAbstractSpinBox::showEvent(QShowEvent*)
   vfunc[41]: QAbstractSpinBox::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSpinBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDoubleSpinBox::validate(QString&, int&) const
   vfunc[55]: QDoubleSpinBox::fixup(QString&) const
   vfunc[56]: QAbstractSpinBox::stepBy(int)
   vfunc[57]: QAbstractSpinBox::clear()
   vfunc[58]: QAbstractSpinBox::stepEnabled() const
   vfunc[59]: QDoubleSpinBox::valueFromText(QString const&) const
   vfunc[60]: QDoubleSpinBox::textFromValue(double) const

   Table 7-329. Secondary vtable for QDoubleSpinBox
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QDoubleSpinBox
   vfunc[0]: NULL or non-virtual thunk to
   QDoubleSpinBox::~QDoubleSpinBox()
   vfunc[1]: NULL or non-virtual thunk to
   QDoubleSpinBox::~QDoubleSpinBox()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QDoubleSpinBox class is
   described by Table 7-330

   Table 7-330. typeinfo for QDoubleSpinBox
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDoubleSpinBox
   basetype:   typeinfo for QAbstractSpinBox
     __________________________________________________________

7.5.20.16. Class data for QLCDNumber

   The virtual table for the QLCDNumber class is described by
   Table 7-331

   Table 7-331. Primary vtable for QLCDNumber
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QLCDNumber
   vfunc[0]: QLCDNumber::metaObject() const
   vfunc[1]: QLCDNumber::qt_metacast(char const*)
   vfunc[2]: QLCDNumber::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QLCDNumber::~QLCDNumber()
   vfunc[4]: QLCDNumber::~QLCDNumber()
   vfunc[5]: QLCDNumber::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QLCDNumber::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QLCDNumber::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-332. Secondary vtable for QLCDNumber
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QLCDNumber
   vfunc[0]: non-virtual thunk to QLCDNumber::~QLCDNumber()
   vfunc[1]: non-virtual thunk to QLCDNumber::~QLCDNumber()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QLCDNumber class is
   described by Table 7-333

   Table 7-333. typeinfo for QLCDNumber
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QLCDNumber
   basetype:   typeinfo for QFrame
     __________________________________________________________

7.5.20.17. Class data for QStackedWidget

   The virtual table for the QStackedWidget class is described by
   Table 7-334

   Table 7-334. Primary vtable for QStackedWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QStackedWidget
   vfunc[0]: QStackedWidget::metaObject() const
   vfunc[1]: QStackedWidget::qt_metacast(char const*)
   vfunc[2]: QStackedWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QStackedWidget::~QStackedWidget()
   vfunc[4]: QStackedWidget::~QStackedWidget()
   vfunc[5]: QStackedWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QFrame::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QFrame::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-335. Secondary vtable for QStackedWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QStackedWidget
   vfunc[0]: non-virtual thunk to
   QStackedWidget::~QStackedWidget()
   vfunc[1]: non-virtual thunk to
   QStackedWidget::~QStackedWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QStackedWidget class is
   described by Table 7-336

   Table 7-336. typeinfo for QStackedWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QStackedWidget
   basetype:   typeinfo for QFrame
     __________________________________________________________

7.5.20.18. Class data for QPushButton

   The virtual table for the QPushButton class is described by
   Table 7-337

   Table 7-337. Primary vtable for QPushButton
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QPushButton
   vfunc[0]: QPushButton::metaObject() const
   vfunc[1]: QPushButton::qt_metacast(char const*)
   vfunc[2]: QPushButton::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QPushButton::~QPushButton()
   vfunc[4]: QPushButton::~QPushButton()
   vfunc[5]: QPushButton::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractButton::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QPushButton::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractButton::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractButton::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractButton::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QPushButton::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractButton::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QPushButton::focusInEvent(QFocusEvent*)
   vfunc[26]: QPushButton::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QPushButton::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractButton::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractButton::hitButton(QPoint const&) const
   vfunc[55]: QAbstractButton::checkStateSet()
   vfunc[56]: QAbstractButton::nextCheckState()

   Table 7-338. Secondary vtable for QPushButton
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QPushButton
   vfunc[0]: non-virtual thunk to QPushButton::~QPushButton()
   vfunc[1]: non-virtual thunk to QPushButton::~QPushButton()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QPushButton class is
   described by Table 7-339

   Table 7-339. typeinfo for QPushButton
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QPushButton
   basetype:   typeinfo for QAbstractButton
     __________________________________________________________

7.5.20.19. Class data for QLabel

   The virtual table for the QLabel class is described by Table
   7-340

   Table 7-340. Primary vtable for QLabel
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QLabel
   vfunc[0]: QLabel::metaObject() const
   vfunc[1]: QLabel::qt_metacast(char const*)
   vfunc[2]: QLabel::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QLabel::~QLabel()
   vfunc[4]: QLabel::~QLabel()
   vfunc[5]: QLabel::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QLabel::sizeHint() const
   vfunc[15]: QLabel::minimumSizeHint() const
   vfunc[16]: QLabel::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QLabel::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QLabel::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-341. Secondary vtable for QLabel
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QLabel
   vfunc[0]: non-virtual thunk to QLabel::~QLabel()
   vfunc[1]: non-virtual thunk to QLabel::~QLabel()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QLabel class is described
   by Table 7-342

   Table 7-342. typeinfo for QLabel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QLabel
   basetype:   typeinfo for QFrame
     __________________________________________________________

7.5.20.20. Class data for QDockWidget

   The virtual table for the QDockWidget class is described by
   Table 7-343

   Table 7-343. Primary vtable for QDockWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QDockWidget
   vfunc[0]: QDockWidget::metaObject() const
   vfunc[1]: QDockWidget::qt_metacast(char const*)
   vfunc[2]: QDockWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QDockWidget::~QDockWidget()
   vfunc[4]: QDockWidget::~QDockWidget()
   vfunc[5]: QDockWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QDockWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QDockWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QDockWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-344. Secondary vtable for QDockWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QDockWidget
   vfunc[0]: non-virtual thunk to QDockWidget::~QDockWidget()
   vfunc[1]: non-virtual thunk to QDockWidget::~QDockWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QDockWidget class is
   described by Table 7-345

   Table 7-345. typeinfo for QDockWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDockWidget
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.21. Class data for QMainWindow

   The virtual table for the QMainWindow class is described by
   Table 7-346

   Table 7-346. Primary vtable for QMainWindow
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QMainWindow
   vfunc[0]: QMainWindow::metaObject() const
   vfunc[1]: QMainWindow::qt_metacast(char const*)
   vfunc[2]: QMainWindow::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QMainWindow::~QMainWindow()
   vfunc[4]: QMainWindow::~QMainWindow()
   vfunc[5]: QMainWindow::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QMainWindow::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QMainWindow::createPopupMenu()

   Table 7-347. Secondary vtable for QMainWindow
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QMainWindow
   vfunc[0]: non-virtual thunk to QMainWindow::~QMainWindow()
   vfunc[1]: non-virtual thunk to QMainWindow::~QMainWindow()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QMainWindow class is
   described by Table 7-348

   Table 7-348. typeinfo for QMainWindow
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QMainWindow
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.22. Class data for QTextEdit

   The virtual table for the QTextEdit class is described by Table
   7-349

   Table 7-349. Primary vtable for QTextEdit
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTextEdit
   vfunc[0]: QTextEdit::metaObject() const
   vfunc[1]: QTextEdit::qt_metacast(char const*)
   vfunc[2]: QTextEdit::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QTextEdit::~QTextEdit()
   vfunc[4]: QTextEdit::~QTextEdit()
   vfunc[5]: QTextEdit::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QTextEdit::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QTextEdit::mousePressEvent(QMouseEvent*)
   vfunc[19]: QTextEdit::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QTextEdit::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QTextEdit::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QTextEdit::wheelEvent(QWheelEvent*)
   vfunc[23]: QTextEdit::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QTextEdit::focusInEvent(QFocusEvent*)
   vfunc[26]: QTextEdit::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QTextEdit::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QTextEdit::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QTextEdit::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QTextEdit::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QTextEdit::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QTextEdit::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QTextEdit::dropEvent(QDropEvent*)
   vfunc[40]: QTextEdit::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QTextEdit::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QTextEdit::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QTextEdit::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QTextEdit::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractScrollArea::viewportEvent(QEvent*)
   vfunc[55]: QTextEdit::scrollContentsBy(int, int)
   vfunc[56]: QTextEdit::loadResource(int, QUrl const&)
   vfunc[57]: QTextEdit::createMimeDataFromSelection() const
   vfunc[58]: QTextEdit::canInsertFromMimeData(QMimeData const*)
   const
   vfunc[59]: QTextEdit::insertFromMimeData(QMimeData const*)

   Table 7-350. Secondary vtable for QTextEdit
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTextEdit
   vfunc[0]: non-virtual thunk to QTextEdit::~QTextEdit()
   vfunc[1]: non-virtual thunk to QTextEdit::~QTextEdit()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTextEdit class is
   described by Table 7-351

   Table 7-351. typeinfo for QTextEdit
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextEdit
   basetype:   typeinfo for QAbstractScrollArea
     __________________________________________________________

7.5.20.23. Class data for QProgressBar

   The virtual table for the QProgressBar class is described by
   Table 7-352

   Table 7-352. Primary vtable for QProgressBar
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QProgressBar
   vfunc[0]: QProgressBar::metaObject() const
   vfunc[1]: QProgressBar::qt_metacast(char const*)
   vfunc[2]: QProgressBar::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: NULL or QProgressBar::~QProgressBar()
   vfunc[4]: NULL or QProgressBar::~QProgressBar()
   vfunc[5]: QProgressBar::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QProgressBar::sizeHint() const
   vfunc[15]: QProgressBar::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QProgressBar::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QProgressBar::text() const

   Table 7-353. Secondary vtable for QProgressBar
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QProgressBar
   vfunc[0]: NULL or non-virtual thunk to
   QProgressBar::~QProgressBar()
   vfunc[1]: NULL or non-virtual thunk to
   QProgressBar::~QProgressBar()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QProgressBar class is
   described by Table 7-354

   Table 7-354. typeinfo for QProgressBar
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QProgressBar
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.24. Class data for QScrollBar

   The virtual table for the QScrollBar class is described by
   Table 7-355

   Table 7-355. Primary vtable for QScrollBar
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QScrollBar
   vfunc[0]: QScrollBar::metaObject() const
   vfunc[1]: QScrollBar::qt_metacast(char const*)
   vfunc[2]: QScrollBar::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QScrollBar::~QScrollBar()
   vfunc[4]: QScrollBar::~QScrollBar()
   vfunc[5]: QScrollBar::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSlider::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QScrollBar::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QScrollBar::mousePressEvent(QMouseEvent*)
   vfunc[19]: QScrollBar::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QScrollBar::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractSlider::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractSlider::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QScrollBar::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QScrollBar::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QScrollBar::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSlider::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]:
   QScrollBar::sliderChange(QAbstractSlider::SliderChange)

   Table 7-356. Secondary vtable for QScrollBar
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QScrollBar
   vfunc[0]: non-virtual thunk to QScrollBar::~QScrollBar()
   vfunc[1]: non-virtual thunk to QScrollBar::~QScrollBar()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QScrollBar class is
   described by Table 7-357

   Table 7-357. typeinfo for QScrollBar
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QScrollBar
   basetype:   typeinfo for QAbstractSlider
     __________________________________________________________

7.5.20.25. Class data for QTextBrowser

   The virtual table for the QTextBrowser class is described by
   Table 7-358

   Table 7-358. Primary vtable for QTextBrowser
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QTextBrowser
   vfunc[0]: QTextBrowser::metaObject() const
   vfunc[1]: QTextBrowser::qt_metacast(char const*)
   vfunc[2]: QTextBrowser::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QTextBrowser::~QTextBrowser()
   vfunc[4]: QTextBrowser::~QTextBrowser()
   vfunc[5]: QTextBrowser::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QTextEdit::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QAbstractScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QTextBrowser::mousePressEvent(QMouseEvent*)
   vfunc[19]: QTextBrowser::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QTextEdit::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QTextBrowser::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QTextEdit::wheelEvent(QWheelEvent*)
   vfunc[23]: QTextBrowser::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QTextEdit::focusInEvent(QFocusEvent*)
   vfunc[26]: QTextBrowser::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QTextBrowser::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QTextEdit::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QTextEdit::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QTextEdit::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QTextEdit::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QTextEdit::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QTextEdit::dropEvent(QDropEvent*)
   vfunc[40]: QTextEdit::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QTextEdit::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QTextEdit::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QTextEdit::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QTextBrowser::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractScrollArea::viewportEvent(QEvent*)
   vfunc[55]: QTextEdit::scrollContentsBy(int, int)
   vfunc[56]: QTextBrowser::loadResource(int, QUrl const&)
   vfunc[57]: QTextEdit::createMimeDataFromSelection() const
   vfunc[58]: QTextEdit::canInsertFromMimeData(QMimeData const*)
   const
   vfunc[59]: QTextEdit::insertFromMimeData(QMimeData const*)
   vfunc[60]: QTextBrowser::setSource(QUrl const&)
   vfunc[61]: QTextBrowser::backward()
   vfunc[62]: QTextBrowser::forward()
   vfunc[63]: QTextBrowser::home()
   vfunc[64]: QTextBrowser::reload()

   Table 7-359. Secondary vtable for QTextBrowser
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QTextBrowser
   vfunc[0]: non-virtual thunk to QTextBrowser::~QTextBrowser()
   vfunc[1]: non-virtual thunk to QTextBrowser::~QTextBrowser()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QTextBrowser class is
   described by Table 7-360

   Table 7-360. typeinfo for QTextBrowser
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTextBrowser
   basetype:   typeinfo for QTextEdit
     __________________________________________________________

7.5.20.26. Class data for QScrollArea

   The virtual table for the QScrollArea class is described by
   Table 7-361

   Table 7-361. Primary vtable for QScrollArea
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QScrollArea
   vfunc[0]: QScrollArea::metaObject() const
   vfunc[1]: QScrollArea::qt_metacast(char const*)
   vfunc[2]: QScrollArea::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QScrollArea::~QScrollArea()
   vfunc[4]: QScrollArea::~QScrollArea()
   vfunc[5]: QScrollArea::event(QEvent*)
   vfunc[6]: QScrollArea::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QScrollArea::sizeHint() const
   vfunc[15]: QAbstractScrollArea::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractScrollArea::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]:
   QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractScrollArea::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractScrollArea::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QAbstractScrollArea::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QScrollArea::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]:
   QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]:
   QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]:
   QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QAbstractScrollArea::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QFrame::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QScrollArea::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractScrollArea::viewportEvent(QEvent*)
   vfunc[55]: QScrollArea::scrollContentsBy(int, int)

   Table 7-362. Secondary vtable for QScrollArea
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QScrollArea
   vfunc[0]: non-virtual thunk to QScrollArea::~QScrollArea()
   vfunc[1]: non-virtual thunk to QScrollArea::~QScrollArea()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QScrollArea class is
   described by Table 7-363

   Table 7-363. typeinfo for QScrollArea
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QScrollArea
   basetype:   typeinfo for QAbstractScrollArea
     __________________________________________________________

7.5.20.27. Class data for QToolButton

   The virtual table for the QToolButton class is described by
   Table 7-364

   Table 7-364. Primary vtable for QToolButton
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QToolButton
   vfunc[0]: QToolButton::metaObject() const
   vfunc[1]: QToolButton::qt_metacast(char const*)
   vfunc[2]: QToolButton::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QToolButton::~QToolButton()
   vfunc[4]: QToolButton::~QToolButton()
   vfunc[5]: QToolButton::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QToolButton::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QToolButton::sizeHint() const
   vfunc[15]: QToolButton::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QToolButton::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractButton::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QAbstractButton::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractButton::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractButton::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractButton::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractButton::focusOutEvent(QFocusEvent*)
   vfunc[27]: QToolButton::enterEvent(QEvent*)
   vfunc[28]: QToolButton::leaveEvent(QEvent*)
   vfunc[29]: QToolButton::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QToolButton::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QToolButton::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QAbstractButton::hitButton(QPoint const&) const
   vfunc[55]: QAbstractButton::checkStateSet()
   vfunc[56]: QToolButton::nextCheckState()

   Table 7-365. Secondary vtable for QToolButton
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QToolButton
   vfunc[0]: non-virtual thunk to QToolButton::~QToolButton()
   vfunc[1]: non-virtual thunk to QToolButton::~QToolButton()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QToolButton class is
   described by Table 7-366

   Table 7-366. typeinfo for QToolButton
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QToolButton
   basetype:   typeinfo for QAbstractButton
     __________________________________________________________

7.5.20.28. Class data for QComboBox

   The virtual table for the QComboBox class is described by Table
   7-367

   Table 7-367. Primary vtable for QComboBox
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QComboBox
   vfunc[0]: QComboBox::metaObject() const
   vfunc[1]: QComboBox::qt_metacast(char const*)
   vfunc[2]: QComboBox::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QComboBox::~QComboBox()
   vfunc[4]: QComboBox::~QComboBox()
   vfunc[5]: QComboBox::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QComboBox::sizeHint() const
   vfunc[15]: QComboBox::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QComboBox::mousePressEvent(QMouseEvent*)
   vfunc[19]: QComboBox::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QComboBox::wheelEvent(QWheelEvent*)
   vfunc[23]: QComboBox::keyPressEvent(QKeyEvent*)
   vfunc[24]: QComboBox::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QComboBox::focusInEvent(QFocusEvent*)
   vfunc[26]: QComboBox::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QComboBox::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QComboBox::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QComboBox::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QComboBox::showEvent(QShowEvent*)
   vfunc[41]: QComboBox::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QComboBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QComboBox::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QComboBox::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QComboBox::showPopup()
   vfunc[55]: QComboBox::hidePopup()

   Table 7-368. Secondary vtable for QComboBox
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QComboBox
   vfunc[0]: non-virtual thunk to QComboBox::~QComboBox()
   vfunc[1]: non-virtual thunk to QComboBox::~QComboBox()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QComboBox class is
   described by Table 7-369

   Table 7-369. typeinfo for QComboBox
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QComboBox
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.29. Class data for QRadioButton

   The virtual table for the QRadioButton class is described by
   Table 7-370

   Table 7-370. Primary vtable for QRadioButton
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QRadioButton
   vfunc[0]: QRadioButton::metaObject() const
   vfunc[1]: QRadioButton::qt_metacast(char const*)
   vfunc[2]: QRadioButton::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: NULL or QRadioButton::~QRadioButton()
   vfunc[4]: NULL or QRadioButton::~QRadioButton()
   vfunc[5]: QRadioButton::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractButton::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QRadioButton::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QAbstractButton::mousePressEvent(QMouseEvent*)
   vfunc[19]: QAbstractButton::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QRadioButton::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractButton::keyPressEvent(QKeyEvent*)
   vfunc[24]: QAbstractButton::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QAbstractButton::focusInEvent(QFocusEvent*)
   vfunc[26]: QAbstractButton::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QRadioButton::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractButton::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QRadioButton::hitButton(QPoint const&) const
   vfunc[55]: QAbstractButton::checkStateSet()
   vfunc[56]: QAbstractButton::nextCheckState()

   Table 7-371. Secondary vtable for QRadioButton
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QRadioButton
   vfunc[0]: NULL or non-virtual thunk to
   QRadioButton::~QRadioButton()
   vfunc[1]: NULL or non-virtual thunk to
   QRadioButton::~QRadioButton()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QRadioButton class is
   described by Table 7-372

   Table 7-372. typeinfo for QRadioButton
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QRadioButton
   basetype:   typeinfo for QAbstractButton
     __________________________________________________________

7.5.20.30. Class data for QFocusFrame

   The virtual table for the QFocusFrame class is described by
   Table 7-373

   Table 7-373. Primary vtable for QFocusFrame
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QFocusFrame
   vfunc[0]: QFocusFrame::metaObject() const
   vfunc[1]: QFocusFrame::qt_metacast(char const*)
   vfunc[2]: QFocusFrame::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QFocusFrame::~QFocusFrame()
   vfunc[4]: QFocusFrame::~QFocusFrame()
   vfunc[5]: QFocusFrame::event(QEvent*)
   vfunc[6]: QFocusFrame::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QFocusFrame::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-374. Secondary vtable for QFocusFrame
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QFocusFrame
   vfunc[0]: non-virtual thunk to QFocusFrame::~QFocusFrame()
   vfunc[1]: non-virtual thunk to QFocusFrame::~QFocusFrame()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QFocusFrame class is
   described by Table 7-375

   Table 7-375. typeinfo for QFocusFrame
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFocusFrame
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.5.20.31. Class data for QToolBox

   The virtual table for the QToolBox class is described by Table
   7-376

   Table 7-376. Primary vtable for QToolBox
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QToolBox
   vfunc[0]: QToolBox::metaObject() const
   vfunc[1]: QToolBox::qt_metacast(char const*)
   vfunc[2]: QToolBox::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QToolBox::~QToolBox()
   vfunc[4]: QToolBox::~QToolBox()
   vfunc[5]: QToolBox::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QFrame::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QFrame::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QToolBox::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QToolBox::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QToolBox::itemInserted(int)
   vfunc[55]: QToolBox::itemRemoved(int)

   Table 7-377. Secondary vtable for QToolBox
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QToolBox
   vfunc[0]: non-virtual thunk to QToolBox::~QToolBox()
   vfunc[1]: non-virtual thunk to QToolBox::~QToolBox()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QToolBox class is
   described by Table 7-378

   Table 7-378. typeinfo for QToolBox
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QToolBox
   basetype:   typeinfo for QFrame
     __________________________________________________________

7.5.20.32. Class data for QDial

   The virtual table for the QDial class is described by Table
   7-379

   Table 7-379. Primary vtable for QDial
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QDial
   vfunc[0]: QDial::metaObject() const
   vfunc[1]: QDial::qt_metacast(char const*)
   vfunc[2]: QDial::qt_metacall(QMetaObject::Call, int, void**)
   vfunc[3]: QDial::~QDial()
   vfunc[4]: QDial::~QDial()
   vfunc[5]: QDial::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QAbstractSlider::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QDial::sizeHint() const
   vfunc[15]: QDial::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QDial::mousePressEvent(QMouseEvent*)
   vfunc[19]: QDial::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QDial::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QAbstractSlider::wheelEvent(QWheelEvent*)
   vfunc[23]: QAbstractSlider::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QDial::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QDial::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QAbstractSlider::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QDial::sliderChange(QAbstractSlider::SliderChange)

   Table 7-380. Secondary vtable for QDial
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QDial
   vfunc[0]: non-virtual thunk to QDial::~QDial()
   vfunc[1]: non-virtual thunk to QDial::~QDial()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QDial class is described
   by Table 7-381

   Table 7-381. typeinfo for QDial
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDial
   basetype:   typeinfo for QAbstractSlider
     __________________________________________________________

7.5.20.33. Class data for QSystemTrayIcon

   The virtual table for the QSystemTrayIcon class is described in
   the generic part of this specification.
     __________________________________________________________

7.5.20.34. Interfaces for Qt4 Widgets

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Widgets specified in Table 7-382,
   with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-382. libQtGui - Qt4 Widgets Function Interfaces
   _ZThn8_N10QLCDNumberD0Ev [CXXABI-1.86] _ZThn8_N10QLCDNumberD1Ev
   [CXXABI-1.86]
   _ZThn8_N10QScrollBarD0Ev [CXXABI-1.86] _ZThn8_N10QScrollBarD1Ev
   [CXXABI-1.86]
   _ZThn8_N10QTabWidgetD0Ev [CXXABI-1.86] _ZThn8_N10QTabWidgetD1Ev
   [CXXABI-1.86]
   _ZThn8_N11QDockWidgetD0Ev [CXXABI-1.86]
   _ZThn8_N11QDockWidgetD1Ev [CXXABI-1.86]
   _ZThn8_N11QFocusFrameD0Ev [CXXABI-1.86]
   _ZThn8_N11QFocusFrameD1Ev [CXXABI-1.86]
   _ZThn8_N11QListWidgetD0Ev [CXXABI-1.86]
   _ZThn8_N11QListWidgetD1Ev [CXXABI-1.86]
   _ZThn8_N11QMainWindowD0Ev [CXXABI-1.86]
   _ZThn8_N11QMainWindowD1Ev [CXXABI-1.86]
   _ZThn8_N11QPushButtonD0Ev [CXXABI-1.86]
   _ZThn8_N11QPushButtonD1Ev [CXXABI-1.86]
   _ZThn8_N11QScrollAreaD0Ev [CXXABI-1.86]
   _ZThn8_N11QScrollAreaD1Ev [CXXABI-1.86]
   _ZThn8_N11QToolButtonD0Ev [CXXABI-1.86]
   _ZThn8_N11QToolButtonD1Ev [CXXABI-1.86]
   _ZThn8_N12QTextBrowserD0Ev [CXXABI-1.86]
   _ZThn8_N12QTextBrowserD1Ev [CXXABI-1.86]
   _ZThn8_N14QDesktopWidgetD0Ev [CXXABI-1.86]
   _ZThn8_N14QDesktopWidgetD1Ev [CXXABI-1.86]
   _ZThn8_N14QStackedWidgetD0Ev [CXXABI-1.86]
   _ZThn8_N14QStackedWidgetD1Ev [CXXABI-1.86]
   _ZThn8_N15QX11EmbedWidgetD0Ev [CXXABI-1.86]
   _ZThn8_N15QX11EmbedWidgetD1Ev [CXXABI-1.86]
   _ZThn8_N18QX11EmbedContainerD0Ev [CXXABI-1.86]
   _ZThn8_N18QX11EmbedContainerD1Ev [CXXABI-1.86]
   _ZThn8_N5QDialD0Ev [CXXABI-1.86] _ZThn8_N5QDialD1Ev
   [CXXABI-1.86]
   _ZThn8_N6QFrameD0Ev [CXXABI-1.86] _ZThn8_N6QFrameD1Ev
   [CXXABI-1.86]
   _ZThn8_N6QLabelD0Ev [CXXABI-1.86] _ZThn8_N6QLabelD1Ev
   [CXXABI-1.86]
   _ZThn8_N7QSliderD0Ev [CXXABI-1.86] _ZThn8_N7QSliderD1Ev
   [CXXABI-1.86]
   _ZThn8_N7QTabBarD0Ev [CXXABI-1.86] _ZThn8_N7QTabBarD1Ev
   [CXXABI-1.86]
   _ZThn8_N7QWidgetD0Ev [CXXABI-1.86] _ZThn8_N7QWidgetD1Ev
   [CXXABI-1.86]
   _ZThn8_N8QToolBoxD0Ev [CXXABI-1.86] _ZThn8_N8QToolBoxD1Ev
   [CXXABI-1.86]
   _ZThn8_N9QComboBoxD0Ev [CXXABI-1.86] _ZThn8_N9QComboBoxD1Ev
   [CXXABI-1.86]
   _ZThn8_N9QLineEditD0Ev [CXXABI-1.86] _ZThn8_N9QLineEditD1Ev
   [CXXABI-1.86]
   _ZThn8_N9QListViewD0Ev [CXXABI-1.86] _ZThn8_N9QListViewD1Ev
   [CXXABI-1.86]
   _ZThn8_N9QTextEditD0Ev [CXXABI-1.86] _ZThn8_N9QTextEditD1Ev
   [CXXABI-1.86]
     __________________________________________________________

7.5.21. Qt4 Drag and Drop
     __________________________________________________________

7.5.21.1. Class data for QMimeSource

   The virtual table for the QMimeSource class is described in the
   generic part of this specification.

   The Run Time Type Information for the QMimeSource class is
   described by Table 7-383

   Table 7-383. typeinfo for QMimeSource
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QMimeSource
     __________________________________________________________

7.5.21.2. Class data for QDrag

   The virtual table for the QDrag class is described in the
   generic part of this specification.

   The Run Time Type Information for the QDrag class is described
   by Table 7-384

   Table 7-384. typeinfo for QDrag
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDrag
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.21.3. Class data for QDropEvent

   The virtual table for the QDropEvent class is described by
   Table 7-385

   Table 7-385. Primary vtable for QDropEvent
   Base Offset         0
   Virtual Base Offset 0
   RTTI                typeinfo for QDropEvent
   vfunc[0]:           QDropEvent::~QDropEvent()
   vfunc[1]:           QDropEvent::~QDropEvent()
   vfunc[2]:           QDropEvent::format(int) const
   vfunc[3]:           QDropEvent::encodedData(char const*) const
   vfunc[4]:           QDropEvent::provides(char const*) const

   Table 7-386. Secondary vtable for QDropEvent
   Base Offset -12
   Virtual Base Offset 0
   RTTI typeinfo for QDropEvent
   vfunc[0]: non-virtual thunk to QDropEvent::~QDropEvent()
   vfunc[1]: non-virtual thunk to QDropEvent::~QDropEvent()
   vfunc[2]: non-virtual thunk to QDropEvent::format(int) const
   vfunc[3]: non-virtual thunk to QDropEvent::provides(char
   const*) const
   vfunc[4]: non-virtual thunk to QDropEvent::encodedData(char
   const*) const

   The Run Time Type Information for the QDropEvent class is
   described by Table 7-387

   Table 7-387. typeinfo for QDropEvent
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QDropEvent
   flags:      0
   basetype:   typeinfo for QEvent                         2
   basetype:   typeinfo for QMimeSource                    3074
     __________________________________________________________

7.5.21.4. Class data for QDragMoveEvent

   The virtual table for the QDragMoveEvent class is described by
   Table 7-388

   Table 7-388. Primary vtable for QDragMoveEvent
   Base Offset         0
   Virtual Base Offset 0
   RTTI                typeinfo for QDragMoveEvent
   vfunc[0]:           QDragMoveEvent::~QDragMoveEvent()
   vfunc[1]:           QDragMoveEvent::~QDragMoveEvent()
   vfunc[2]:           QDropEvent::format(int) const
   vfunc[3]:           QDropEvent::encodedData(char const*) const
   vfunc[4]:           QDropEvent::provides(char const*) const

   Table 7-389. Secondary vtable for QDragMoveEvent
   Base Offset -12
   Virtual Base Offset 0
   RTTI typeinfo for QDragMoveEvent
   vfunc[0]: non-virtual thunk to
   QDragMoveEvent::~QDragMoveEvent()
   vfunc[1]: non-virtual thunk to
   QDragMoveEvent::~QDragMoveEvent()
   vfunc[2]: non-virtual thunk to QDropEvent::format(int) const
   vfunc[3]: non-virtual thunk to QDropEvent::provides(char
   const*) const
   vfunc[4]: non-virtual thunk to QDropEvent::encodedData(char
   const*) const

   The Run Time Type Information for the QDragMoveEvent class is
   described by Table 7-390

   Table 7-390. typeinfo for QDragMoveEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDragMoveEvent
   basetype:   typeinfo for QDropEvent
     __________________________________________________________

7.5.21.5. Class data for QDragEnterEvent

   The virtual table for the QDragEnterEvent class is described by
   Table 7-391

   Table 7-391. Primary vtable for QDragEnterEvent
   Base Offset         0
   Virtual Base Offset 0
   RTTI                typeinfo for QDragEnterEvent
   vfunc[0]:           QDragEnterEvent::~QDragEnterEvent()
   vfunc[1]:           QDragEnterEvent::~QDragEnterEvent()
   vfunc[2]:           QDropEvent::format(int) const
   vfunc[3]:           QDropEvent::encodedData(char const*) const
   vfunc[4]:           QDropEvent::provides(char const*) const

   Table 7-392. Secondary vtable for QDragEnterEvent
   Base Offset -12
   Virtual Base Offset 0
   RTTI typeinfo for QDragEnterEvent
   vfunc[0]: non-virtual thunk to
   QDragEnterEvent::~QDragEnterEvent()
   vfunc[1]: non-virtual thunk to
   QDragEnterEvent::~QDragEnterEvent()
   vfunc[2]: non-virtual thunk to QDropEvent::format(int) const
   vfunc[3]: non-virtual thunk to QDropEvent::provides(char
   const*) const
   vfunc[4]: non-virtual thunk to QDropEvent::encodedData(char
   const*) const

   The Run Time Type Information for the QDragEnterEvent class is
   described by Table 7-393

   Table 7-393. typeinfo for QDragEnterEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDragEnterEvent
   basetype:   typeinfo for QDragMoveEvent
     __________________________________________________________

7.5.21.6. Class data for QDragResponseEvent

   The virtual table for the QDragResponseEvent class is described
   in the generic part of this specification.

   The Run Time Type Information for the QDragResponseEvent class
   is described by Table 7-394

   Table 7-394. typeinfo for QDragResponseEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDragResponseEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.21.7. Class data for QDragLeaveEvent

   The virtual table for the QDragLeaveEvent class is described in
   the generic part of this specification.

   The Run Time Type Information for the QDragLeaveEvent class is
   described by Table 7-395

   Table 7-395. typeinfo for QDragLeaveEvent
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QDragLeaveEvent
   basetype:   typeinfo for QEvent
     __________________________________________________________

7.5.21.8. Interfaces for Qt4 Drag and Drop

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Drag and Drop specified in Table
   7-396, with the full mandatory functionality as described in
   the referenced underlying specification.

   Table 7-396. libQtGui - Qt4 Drag and Drop Function Interfaces
   _ZThn12_N10QDropEventD0Ev [CXXABI-1.86]
   _ZThn12_N10QDropEventD1Ev [CXXABI-1.86]
   _ZThn12_N14QDragMoveEventD0Ev [CXXABI-1.86]
   _ZThn12_N14QDragMoveEventD1Ev [CXXABI-1.86]
   _ZThn12_N15QDragEnterEventD0Ev [CXXABI-1.86]
   _ZThn12_N15QDragEnterEventD1Ev [CXXABI-1.86]
     __________________________________________________________

7.5.22. Qt4 2D Graphics
     __________________________________________________________

7.5.22.1. Class data for QIconEngineFactoryInterface

   The virtual table for the QIconEngineFactoryInterface class is
   described in the generic part of this specification.

   The Run Time Type Information for the
   QIconEngineFactoryInterface class is described by Table 7-397

   Table 7-397. typeinfo for QIconEngineFactoryInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QIconEngineFactoryInterface
   basetype:   typeinfo for QFactoryInterface
     __________________________________________________________

7.5.22.2. Class data for QIconEngine

   The virtual table for the QIconEngine class is described in the
   generic part of this specification.

   The Run Time Type Information for the QIconEngine class is
   described by Table 7-398

   Table 7-398. typeinfo for QIconEngine
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QIconEngine
     __________________________________________________________

7.5.22.3. Class data for QPaintEngine

   The virtual table for the QPaintEngine class is described in
   the generic part of this specification.

   The Run Time Type Information for the QPaintEngine class is
   described by Table 7-399

   Table 7-399. typeinfo for QPaintEngine
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QPaintEngine
     __________________________________________________________

7.5.22.4. Class data for QGraphicsEllipseItem

   The virtual table for the QGraphicsEllipseItem class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.5. Class data for QGraphicsItem

   The virtual table for the QGraphicsItem class is described in
   the generic part of this specification.
     __________________________________________________________

7.5.22.6. Class data for QGraphicsItemAnimation

   The virtual table for the QGraphicsItemAnimation class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.7. Class data for QGraphicsItemGroup

   The virtual table for the QGraphicsItemGroup class is described
   in the generic part of this specification.
     __________________________________________________________

7.5.22.8. Class data for QGraphicsLineItem

   The virtual table for the QGraphicsLineItem class is described
   in the generic part of this specification.
     __________________________________________________________

7.5.22.9. Class data for QGraphicsPathItem

   The virtual table for the QGraphicsPathItem class is described
   in the generic part of this specification.
     __________________________________________________________

7.5.22.10. Class data for QGraphicsPixmapItem

   The virtual table for the QGraphicsPixmapItem class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.11. Class data for QGraphicsPolygonItem

   The virtual table for the QGraphicsPolygonItem class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.12. Class data for QGraphicsRectItem

   The virtual table for the QGraphicsRectItem class is described
   in the generic part of this specification.
     __________________________________________________________

7.5.22.13. Class data for QGraphicsScene

   The virtual table for the QGraphicsScene class is described in
   the generic part of this specification.

   The Run Time Type Information for the QGraphicsScene class is
   described by Table 7-400

   Table 7-400. typeinfo for QGraphicsScene
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QGraphicsScene
   basetype:   typeinfo for QObject
     __________________________________________________________

7.5.22.14. Class data for QGraphicsSceneContextMenuEvent

   The virtual table for the QGraphicsSceneContextMenuEvent class
   is described in the generic part of this specification.
     __________________________________________________________

7.5.22.15. Class data for QGraphicsSceneDragDropEvent

   The virtual table for the QGraphicsSceneDragDropEvent class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.16. Class data for QGraphicsSceneEvent

   The virtual table for the QGraphicsSceneEvent class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.17. Class data for QGraphicsSceneHelpEvent

   The virtual table for the QGraphicsSceneHelpEvent class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.18. Class data for QGraphicsSceneHoverEvent

   The virtual table for the QGraphicsSceneHoverEvent class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.19. Class data for QGraphicsSceneMouseEvent

   The virtual table for the QGraphicsSceneMouseEvent class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.20. Class data for QGraphicsSceneWheelEvent

   The virtual table for the QGraphicsSceneWheelEvent class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.21. Class data for QGraphicsSimpleTextItem

   The virtual table for the QGraphicsSimpleTextItem class is
   described in the generic part of this specification.
     __________________________________________________________

7.5.22.22. Interfaces for Qt4 2D Graphics

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 2D Graphics specified in Table
   7-401, with the full mandatory functionality as described in
   the referenced underlying specification.

   Table 7-401. libQtGui - Qt4 2D Graphics Function Interfaces
   _ZThn8_N17QGraphicsTextItem10sceneEventEP6QEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem12focusInEventEP11QFocusEvent
   [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem12setExtensionEN13QGraphicsItem9Exte
   nsionERK8QVariant [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem13dragMoveEventEP27QGraphicsSceneDra
   gDropEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem13focusOutEventEP11QFocusEvent
   [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem13keyPressEventEP9QKeyEvent
   [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem14dragEnterEventEP27QGraphicsSceneDr
   agDropEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem14dragLeaveEventEP27QGraphicsSceneDr
   agDropEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem14hoverMoveEventEP24QGraphicsSceneHo
   verEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem14mouseMoveEventEP24QGraphicsSceneMo
   useEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem15hoverEnterEventEP24QGraphicsSceneH
   overEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem15hoverLeaveEventEP24QGraphicsSceneH
   overEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem15keyReleaseEventEP9QKeyEvent
   [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem15mousePressEventEP24QGraphicsSceneM
   ouseEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem16contextMenuEventEP30QGraphicsScene
   ContextMenuEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem16inputMethodEventEP17QInputMethodEv
   ent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem17mouseReleaseEventEP24QGraphicsScen
   eMouseEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem21mouseDoubleClickEventEP24QGraphics
   SceneMouseEvent [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem5paintEP8QPainterPK24QStyleOptionGra
   phicsItemP7QWidget [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem9dropEventEP27QGraphicsSceneDragDrop
   Event [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItemD0Ev [CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItemD1Ev [CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem10opaqueAreaEv [CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem12boundingRectEv [CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem12isObscuredByEPK13QGraphicsItem
   [CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem16inputMethodQueryEN2Qt16InputMetho
   dQueryE [CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem17supportsExtensionEN13QGraphicsIte
   m9ExtensionE [CXXABI-1.86] _ZThn8_NK17QGraphicsTextItem4typeEv
   [CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem5shapeEv [CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem8containsERK7QPointF [CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem9extensionERK8QVariant
   [CXXABI-1.86]
     __________________________________________________________

7.6. Data Definitions for libQtGui

   This section defines global identifiers and their values that
   are associated with interfaces contained in libQtGui. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

7.6.1. QtGui/qabstractbutton.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.2. QtGui/qabstractitemdelegate.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.3. QtGui/qabstractitemview.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.4. QtGui/qabstractpagesetupdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.5. QtGui/qabstractprintdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.6. QtGui/qabstractproxymodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.7. QtGui/qabstractscrollarea.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.8. QtGui/qabstractslider.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.9. QtGui/qabstractspinbox.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.10. QtGui/qabstracttextdocumentlayout.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.11. QtGui/qaccessible.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.12. QtGui/qaccessiblebridge.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.13. QtGui/qaccessibleobject.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.14. QtGui/qaccessibleplugin.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.15. QtGui/qaccessiblewidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.16. QtGui/qaction.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.17. QtGui/qactiongroup.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.18. QtGui/qapplication.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.19. QtGui/qbitmap.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.20. QtGui/qboxlayout.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.21. QtGui/qbrush.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.22. QtGui/qbuttongroup.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.23. QtGui/qcdestyle.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.24. QtGui/qcheckbox.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.25. QtGui/qclipboard.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.26. QtGui/qcolor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.27. QtGui/qcolordialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.28. QtGui/qcolormap.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.29. QtGui/qcombobox.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.30. QtGui/qcommonstyle.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.31. QtGui/qcursor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.32. QtGui/qdatetimeedit.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.33. QtGui/qdesktopwidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.34. QtGui/qdial.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.35. QtGui/qdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.36. QtGui/qdirmodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.37. QtGui/qdockwidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.38. QtGui/qdrag.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.39. QtGui/qerrormessage.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.40. QtGui/qevent.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.41. QtGui/qfiledialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.42. QtGui/qfocusframe.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.43. QtGui/qfont.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.44. QtGui/qfontdatabase.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.45. QtGui/qfontdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.46. QtGui/qfontinfo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.47. QtGui/qfontmetrics.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.48. QtGui/qframe.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.49. QtGui/qgridlayout.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.50. QtGui/qgroupbox.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.51. QtGui/qheaderview.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.52. QtGui/qicon.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.53. QtGui/qiconengine.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.54. QtGui/qiconengineplugin.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.55. QtGui/qimage.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.56. QtGui/qimageiohandler.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.57. QtGui/qimagereader.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.58. QtGui/qimagewriter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.59. QtGui/qinputcontext.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.60. QtGui/qinputcontextfactory.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.61. QtGui/qinputcontextplugin.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.62. QtGui/qinputdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.63. QtGui/qitemdelegate.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.64. QtGui/qitemeditorfactory.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.65. QtGui/qitemselectionmodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.66. QtGui/qkeysequence.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.67. QtGui/qlabel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.68. QtGui/qlayout.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.69. QtGui/qlayoutitem.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.70. QtGui/qlcdnumber.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.71. QtGui/qlineedit.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.72. QtGui/qlistview.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.73. QtGui/qlistwidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.74. QtGui/qmainwindow.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.75. QtGui/qmatrix.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.76. QtGui/qmenu.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.77. QtGui/qmenubar.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.78. QtGui/qmenudata.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.79. QtGui/qmessagebox.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.80. QtGui/qmime.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.81. QtGui/qmotifstyle.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.82. QtGui/qmovie.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.83. QtGui/qpagesetupdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.84. QtGui/qpaintdevice.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.85. QtGui/qpaintengine.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.86. QtGui/qpainter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.87. QtGui/qpainterpath.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.88. QtGui/qpalette.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.89. QtGui/qpen.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.90. QtGui/qpicture.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.91. QtGui/qpictureformatplugin.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.92. QtGui/qpixmap.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.93. QtGui/qpixmapcache.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.94. QtGui/qplastiquestyle.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.95. QtGui/qpolygon.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.96. QtGui/qprintdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.97. QtGui/qprintengine.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.98. QtGui/qprinter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.99. QtGui/qprogressbar.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.100. QtGui/qprogressdialog.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.101. QtGui/qproxymodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.102. QtGui/qpushbutton.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.103. QtGui/qradiobutton.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.104. QtGui/qregion.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.105. QtGui/qrgb.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.106. QtGui/qrubberband.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.107. QtGui/qscrollarea.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.108. QtGui/qscrollbar.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.109. QtGui/qsessionmanager.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.110. QtGui/qshortcut.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.111. QtGui/qsizegrip.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.112. QtGui/qsizepolicy.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.113. QtGui/qslider.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.114. QtGui/qsortfilterproxymodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.115. QtGui/qsound.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.116. QtGui/qspinbox.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.117. QtGui/qsplashscreen.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.118. QtGui/qsplitter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.119. QtGui/qstackedlayout.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.120. QtGui/qstackedwidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.121. QtGui/qstandarditemmodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.122. QtGui/qstatusbar.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.123. QtGui/qstringlistmodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.124. QtGui/qstyle.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.125. QtGui/qstylefactory.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.126. QtGui/qstyleoption.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.127. QtGui/qstylepainter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.128. QtGui/qstyleplugin.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.129. QtGui/qsyntaxhighlighter.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.130. QtGui/qtabbar.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.131. QtGui/qtableview.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.132. QtGui/qtablewidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.133. QtGui/qtabwidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.134. QtGui/qtextbrowser.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.135. QtGui/qtextcursor.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.136. QtGui/qtextdocument.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.137. QtGui/qtextdocumentfragment.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.138. QtGui/qtextedit.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.139. QtGui/qtextformat.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.140. QtGui/qtextlayout.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.141. QtGui/qtextlist.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.142. QtGui/qtextobject.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.143. QtGui/qtextoption.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.144. QtGui/qtexttable.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.145. QtGui/qtoolbar.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.146. QtGui/qtoolbox.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.147. QtGui/qtoolbutton.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.148. QtGui/qtooltip.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.149. QtGui/qtreeview.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.150. QtGui/qtreewidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.151. QtGui/qtreewidgetitemiterator.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.152. QtGui/qvalidator.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.153. QtGui/qvfbhdr.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.154. QtGui/qwhatsthis.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.155. QtGui/qwidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.156. QtGui/qwindowdefs.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.157. QtGui/qwindowsstyle.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.158. QtGui/qwmatrix.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.6.159. QtGui/qworkspace.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.7. Interfaces for libQtXml

   Table 7-402 defines the library name and shared object name for
   the libQtXml library

   Table 7-402. libQtXml Definition
   Library: libQtXml
   SONAME:  libQtXml.so.4

   The behavior of the interfaces in this library is specified by
   the following specifications:

   [CXXABI-1.86] Itanium(TM) C++ ABI
     __________________________________________________________

7.7.1. Qt4 XML
     __________________________________________________________

7.7.1.1. Class data for QXmlAttributes

   The virtual table for the QXmlAttributes class is described in
   the generic part of this specification.

   The Run Time Type Information for the QXmlAttributes class is
   described by Table 7-403

   Table 7-403. typeinfo for QXmlAttributes
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlAttributes
     __________________________________________________________

7.7.1.2. Class data for QXmlInputSource

   The virtual table for the QXmlInputSource class is described in
   the generic part of this specification.

   The Run Time Type Information for the QXmlInputSource class is
   described by Table 7-404

   Table 7-404. typeinfo for QXmlInputSource
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlInputSource
     __________________________________________________________

7.7.1.3. Class data for QXmlReader

   The virtual table for the QXmlReader class is described in the
   generic part of this specification.

   The Run Time Type Information for the QXmlReader class is
   described by Table 7-405

   Table 7-405. typeinfo for QXmlReader
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlReader
     __________________________________________________________

7.7.1.4. Class data for QXmlSimpleReader

   The virtual table for the QXmlSimpleReader class is described
   in the generic part of this specification.

   The Run Time Type Information for the QXmlSimpleReader class is
   described by Table 7-406

   Table 7-406. typeinfo for QXmlSimpleReader
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QXmlSimpleReader
   basetype:   typeinfo for QXmlReader
     __________________________________________________________

7.7.1.5. Class data for QXmlLocator

   The virtual table for the QXmlLocator class is described in the
   generic part of this specification.

   The Run Time Type Information for the QXmlLocator class is
   described by Table 7-407

   Table 7-407. typeinfo for QXmlLocator
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlLocator
     __________________________________________________________

7.7.1.6. Class data for QXmlContentHandler

   The virtual table for the QXmlContentHandler class is described
   in the generic part of this specification.

   The Run Time Type Information for the QXmlContentHandler class
   is described by Table 7-408

   Table 7-408. typeinfo for QXmlContentHandler
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlContentHandler
     __________________________________________________________

7.7.1.7. Class data for QXmlErrorHandler

   The virtual table for the QXmlErrorHandler class is described
   in the generic part of this specification.

   The Run Time Type Information for the QXmlErrorHandler class is
   described by Table 7-409

   Table 7-409. typeinfo for QXmlErrorHandler
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlErrorHandler
     __________________________________________________________

7.7.1.8. Class data for QXmlDTDHandler

   The virtual table for the QXmlDTDHandler class is described in
   the generic part of this specification.

   The Run Time Type Information for the QXmlDTDHandler class is
   described by Table 7-410

   Table 7-410. typeinfo for QXmlDTDHandler
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlDTDHandler
     __________________________________________________________

7.7.1.9. Class data for QXmlEntityResolver

   The virtual table for the QXmlEntityResolver class is described
   in the generic part of this specification.

   The Run Time Type Information for the QXmlEntityResolver class
   is described by Table 7-411

   Table 7-411. typeinfo for QXmlEntityResolver
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlEntityResolver
     __________________________________________________________

7.7.1.10. Class data for QXmlLexicalHandler

   The virtual table for the QXmlLexicalHandler class is described
   in the generic part of this specification.

   The Run Time Type Information for the QXmlLexicalHandler class
   is described by Table 7-412

   Table 7-412. typeinfo for QXmlLexicalHandler
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlLexicalHandler
     __________________________________________________________

7.7.1.11. Class data for QXmlDeclHandler

   The virtual table for the QXmlDeclHandler class is described in
   the generic part of this specification.

   The Run Time Type Information for the QXmlDeclHandler class is
   described by Table 7-413

   Table 7-413. typeinfo for QXmlDeclHandler
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QXmlDeclHandler
     __________________________________________________________

7.7.1.12. Class data for QXmlDefaultHandler

   The virtual table for the QXmlDefaultHandler class is described
   by Table 7-414

   Table 7-414. Primary vtable for QXmlDefaultHandler
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QXmlDefaultHandler
   vfunc[0]: NULL or QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[1]: NULL or QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[2]: QXmlDefaultHandler::setDocumentLocator(QXmlLocator*)
   vfunc[3]: QXmlDefaultHandler::startDocument()
   vfunc[4]: QXmlDefaultHandler::endDocument()
   vfunc[5]: QXmlDefaultHandler::startPrefixMapping(QString
   const&, QString const&)
   vfunc[6]: QXmlDefaultHandler::endPrefixMapping(QString const&)
   vfunc[7]: QXmlDefaultHandler::startElement(QString const&,
   QString const&, QString const&, QXmlAttributes const&)
   vfunc[8]: QXmlDefaultHandler::endElement(QString const&,
   QString const&, QString const&)
   vfunc[9]: QXmlDefaultHandler::characters(QString const&)
   vfunc[10]: QXmlDefaultHandler::ignorableWhitespace(QString
   const&)
   vfunc[11]: QXmlDefaultHandler::processingInstruction(QString
   const&, QString const&)
   vfunc[12]: QXmlDefaultHandler::skippedEntity(QString const&)
   vfunc[13]: QXmlDefaultHandler::errorString() const
   vfunc[14]: QXmlDefaultHandler::warning(QXmlParseException
   const&)
   vfunc[15]: QXmlDefaultHandler::error(QXmlParseException const&)
   vfunc[16]: QXmlDefaultHandler::fatalError(QXmlParseException
   const&)
   vfunc[17]: QXmlDefaultHandler::notationDecl(QString const&,
   QString const&, QString const&)
   vfunc[18]: QXmlDefaultHandler::unparsedEntityDecl(QString
   const&, QString const&, QString const&, QString const&)
   vfunc[19]: QXmlDefaultHandler::resolveEntity(QString const&,
   QString const&, QXmlInputSource*&)
   vfunc[20]: QXmlDefaultHandler::startDTD(QString const&, QString
   const&, QString const&)
   vfunc[21]: QXmlDefaultHandler::endDTD()
   vfunc[22]: QXmlDefaultHandler::startEntity(QString const&)
   vfunc[23]: QXmlDefaultHandler::endEntity(QString const&)
   vfunc[24]: QXmlDefaultHandler::startCDATA()
   vfunc[25]: QXmlDefaultHandler::endCDATA()
   vfunc[26]: QXmlDefaultHandler::comment(QString const&)
   vfunc[27]: QXmlDefaultHandler::attributeDecl(QString const&,
   QString const&, QString const&, QString const&, QString const&)
   vfunc[28]: QXmlDefaultHandler::internalEntityDecl(QString
   const&, QString const&)
   vfunc[29]: QXmlDefaultHandler::externalEntityDecl(QString
   const&, QString const&, QString const&)

   Table 7-415. Secondary vtable for QXmlDefaultHandler
   Base Offset -4
   Virtual Base Offset 0
   RTTI typeinfo for QXmlDefaultHandler
   vfunc[0]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[1]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[2]: non-virtual thunk to
   QXmlDefaultHandler::warning(QXmlParseException const&)
   vfunc[3]: non-virtual thunk to
   QXmlDefaultHandler::error(QXmlParseException const&)
   vfunc[4]: non-virtual thunk to
   QXmlDefaultHandler::fatalError(QXmlParseException const&)
   vfunc[5]: non-virtual thunk to
   QXmlDefaultHandler::errorString() const

   Table 7-416. Secondary vtable for QXmlDefaultHandler
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QXmlDefaultHandler
   vfunc[0]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[1]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[2]: non-virtual thunk to
   QXmlDefaultHandler::notationDecl(QString const&, QString
   const&, QString const&)
   vfunc[3]: non-virtual thunk to
   QXmlDefaultHandler::unparsedEntityDecl(QString const&, QString
   const&, QString const&, QString const&)
   vfunc[4]: non-virtual thunk to
   QXmlDefaultHandler::errorString() const

   Table 7-417. Secondary vtable for QXmlDefaultHandler
   Base Offset -12
   Virtual Base Offset 0
   RTTI typeinfo for QXmlDefaultHandler
   vfunc[0]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[1]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[2]: non-virtual thunk to
   QXmlDefaultHandler::resolveEntity(QString const&, QString
   const&, QXmlInputSource*&)
   vfunc[3]: non-virtual thunk to
   QXmlDefaultHandler::errorString() const

   Table 7-418. Secondary vtable for QXmlDefaultHandler
   Base Offset -16
   Virtual Base Offset 0
   RTTI typeinfo for QXmlDefaultHandler
   vfunc[0]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[1]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[2]: non-virtual thunk to
   QXmlDefaultHandler::startDTD(QString const&, QString const&,
   QString const&)
   vfunc[3]: non-virtual thunk to QXmlDefaultHandler::endDTD()
   vfunc[4]: non-virtual thunk to
   QXmlDefaultHandler::startEntity(QString const&)
   vfunc[5]: non-virtual thunk to
   QXmlDefaultHandler::endEntity(QString const&)
   vfunc[6]: non-virtual thunk to QXmlDefaultHandler::startCDATA()
   vfunc[7]: non-virtual thunk to QXmlDefaultHandler::endCDATA()
   vfunc[8]: non-virtual thunk to
   QXmlDefaultHandler::comment(QString const&)
   vfunc[9]: non-virtual thunk to
   QXmlDefaultHandler::errorString() const

   Table 7-419. Secondary vtable for QXmlDefaultHandler
   Base Offset -20
   Virtual Base Offset 0
   RTTI typeinfo for QXmlDefaultHandler
   vfunc[0]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[1]: NULL or non-virtual thunk to
   QXmlDefaultHandler::~QXmlDefaultHandler()
   vfunc[2]: non-virtual thunk to
   QXmlDefaultHandler::attributeDecl(QString const&, QString
   const&, QString const&, QString const&, QString const&)
   vfunc[3]: non-virtual thunk to
   QXmlDefaultHandler::internalEntityDecl(QString const&, QString
   const&)
   vfunc[4]: non-virtual thunk to
   QXmlDefaultHandler::externalEntityDecl(QString const&, QString
   const&, QString const&)
   vfunc[5]: non-virtual thunk to
   QXmlDefaultHandler::errorString() const

   The Run Time Type Information for the QXmlDefaultHandler class
   is described by Table 7-420

   Table 7-420. typeinfo for QXmlDefaultHandler
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QXmlDefaultHandler
   flags:      0
   basetype:   typeinfo for QXmlContentHandler             2
   basetype:   typeinfo for QXmlErrorHandler               1026
   basetype:   typeinfo for QXmlErrorHandler               2050
   basetype:   typeinfo for QXmlErrorHandler               1026
   basetype:   typeinfo for QXmlErrorHandler               2050
   basetype:   typeinfo for QXmlErrorHandler               1026
     __________________________________________________________

7.7.1.13. Interfaces for Qt4 XML

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 XML specified in Table 7-421, with
   the full mandatory functionality as described in the referenced
   underlying specification.

   Table 7-421. libQtXml - Qt4 XML Function Interfaces
   _ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15Q
   XmlInputSource [CXXABI-1.86]
   _ZThn12_NK18QXmlDefaultHandler11errorStringEv [CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler10startCDATAEv [CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler11startEntityERK7QString
   [CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler6endDTDEv [CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler7commentERK7QString [CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler8endCDATAEv [CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_
   [CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler9endEntityERK7QString
   [CXXABI-1.86] _ZThn16_NK18QXmlDefaultHandler11errorStringEv
   [CXXABI-1.86]
   _ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2
   _S2_ [CXXABI-1.86]
   _ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_
   S2_ [CXXABI-1.86]
   _ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
   [CXXABI-1.86] _ZThn20_NK18QXmlDefaultHandler11errorStringEv
   [CXXABI-1.86]
   _ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException
   [CXXABI-1.86]
   _ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException
   [CXXABI-1.86]
   _ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException
   [CXXABI-1.86] _ZThn4_NK18QXmlDefaultHandler11errorStringEv
   [CXXABI-1.86]
   _ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_
   [CXXABI-1.86]
   _ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S
   2_S2_ [CXXABI-1.86]
   _ZThn8_NK18QXmlDefaultHandler11errorStringEv [CXXABI-1.86]
     __________________________________________________________

7.8. Data Definitions for libQtXml

   This section defines global identifiers and their values that
   are associated with interfaces contained in libQtXml. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

7.8.1. QtXml/qdom.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.8.2. QtXml/qxml.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.9. Interfaces for libQtOpenGL

   Table 7-422 defines the library name and shared object name for
   the libQtOpenGL library

   Table 7-422. libQtOpenGL Definition
   Library: libQtOpenGL
   SONAME:  libQtOpenGL.so.4

   The behavior of the interfaces in this library is specified by
   the following specifications:

   [CXXABI-1.86] Itanium(TM) C++ ABI
     __________________________________________________________

7.9.1. Qt4 OpenGL
     __________________________________________________________

7.9.1.1. Class data for QGLContext

   The virtual table for the QGLContext class is described in the
   generic part of this specification.

   The Run Time Type Information for the QGLContext class is
   described by Table 7-423

   Table 7-423. typeinfo for QGLContext
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QGLContext
     __________________________________________________________

7.9.1.2. Class data for QGLWidget

   The virtual table for the QGLWidget class is described by Table
   7-424

   Table 7-424. Primary vtable for QGLWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QGLWidget
   vfunc[0]: QGLWidget::metaObject() const
   vfunc[1]: QGLWidget::qt_metacast(char const*)
   vfunc[2]: QGLWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QGLWidget::~QGLWidget()
   vfunc[4]: QGLWidget::~QGLWidget()
   vfunc[5]: QGLWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QGLWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QGLWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QGLWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()
   vfunc[54]: QGLWidget::updateGL()
   vfunc[55]: QGLWidget::updateOverlayGL()
   vfunc[56]: QGLWidget::initializeGL()
   vfunc[57]: QGLWidget::resizeGL(int, int)
   vfunc[58]: QGLWidget::paintGL()
   vfunc[59]: QGLWidget::initializeOverlayGL()
   vfunc[60]: QGLWidget::resizeOverlayGL(int, int)
   vfunc[61]: QGLWidget::paintOverlayGL()
   vfunc[62]: QGLWidget::glInit()
   vfunc[63]: QGLWidget::glDraw()

   Table 7-425. Secondary vtable for QGLWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QGLWidget
   vfunc[0]: non-virtual thunk to QGLWidget::~QGLWidget()
   vfunc[1]: non-virtual thunk to QGLWidget::~QGLWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QGLWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QGLWidget class is
   described by Table 7-426

   Table 7-426. typeinfo for QGLWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QGLWidget
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.9.1.3. Class data for QGLPixelBuffer

   The virtual table for the QGLPixelBuffer class is described in
   the generic part of this specification.

   The Run Time Type Information for the QGLPixelBuffer class is
   described by Table 7-427

   Table 7-427. typeinfo for QGLPixelBuffer
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QGLPixelBuffer
   basetype:   typeinfo for QPaintDevice
     __________________________________________________________

7.9.1.4. Class data for QGLFramebufferObject

   The virtual table for the QGLFramebufferObject class is
   described in the generic part of this specification.

   The Run Time Type Information for the QGLFramebufferObject
   class is described by Table 7-428

   Table 7-428. typeinfo for QGLFramebufferObject
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QGLFramebufferObject
   basetype:   typeinfo for QPaintDevice
     __________________________________________________________

7.9.1.5. Interfaces for Qt4 OpenGL

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 OpenGL specified in Table 7-429,
   with the full mandatory functionality as described in the
   referenced underlying specification.

   Table 7-429. libQtOpenGL - Qt4 OpenGL Function Interfaces
   _ZThn8_N9QGLWidgetD0Ev [CXXABI-1.86] _ZThn8_N9QGLWidgetD1Ev
   [CXXABI-1.86]
   _ZThn8_NK9QGLWidget11paintEngineEv [CXXABI-1.86]
     __________________________________________________________

7.10. Data Definitions for libQtOpenGL

   This section defines global identifiers and their values that
   are associated with interfaces contained in libQtOpenGL. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

7.10.1. QtOpenGL/qgl.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.10.2. QtOpenGL/qglcolormap.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.10.3. QtOpenGL/qglpixelbuffer.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.11. Interfaces for libQtSql

   Table 7-430 defines the library name and shared object name for
   the libQtSql library

   Table 7-430. libQtSql Definition
   Library: libQtSql
   SONAME:  libQtSql.so.4

   The behavior of the interfaces in this library is specified by
   the following specifications:

   [CXXABI-1.86] Itanium(TM) C++ ABI
     __________________________________________________________

7.11.1. Qt4 SQL
     __________________________________________________________

7.11.1.1. Class data for QSqlResult

   The virtual table for the QSqlResult class is described in the
   generic part of this specification.

   The Run Time Type Information for the QSqlResult class is
   described by Table 7-431

   Table 7-431. typeinfo for QSqlResult
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QSqlResult
     __________________________________________________________

7.11.1.2. Class data for QSqlDriverFactoryInterface

   The virtual table for the QSqlDriverFactoryInterface class is
   described in the generic part of this specification.

   The Run Time Type Information for the
   QSqlDriverFactoryInterface class is described by Table 7-432

   Table 7-432. typeinfo for QSqlDriverFactoryInterface
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSqlDriverFactoryInterface
   basetype:   typeinfo for QFactoryInterface
     __________________________________________________________

7.11.1.3. Class data for QSqlDriverPlugin

   The virtual table for the QSqlDriverPlugin class is described
   by Table 7-433

   Table 7-433. Primary vtable for QSqlDriverPlugin
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QSqlDriverPlugin
   vfunc[0]: QSqlDriverPlugin::metaObject() const
   vfunc[1]: QSqlDriverPlugin::qt_metacast(char const*)
   vfunc[2]: QSqlDriverPlugin::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QSqlDriverPlugin::~QSqlDriverPlugin()
   vfunc[4]: QSqlDriverPlugin::~QSqlDriverPlugin()
   vfunc[5]: QObject::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: __cxa_pure_virtual
   vfunc[13]: __cxa_pure_virtual

   Table 7-434. Secondary vtable for QSqlDriverPlugin
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QSqlDriverPlugin
   vfunc[0]: non-virtual thunk to
   QSqlDriverPlugin::~QSqlDriverPlugin()
   vfunc[1]: non-virtual thunk to
   QSqlDriverPlugin::~QSqlDriverPlugin()
   vfunc[2]: __cxa_pure_virtual
   vfunc[3]: __cxa_pure_virtual

   The Run Time Type Information for the QSqlDriverPlugin class is
   described by Table 7-435

   Table 7-435. typeinfo for QSqlDriverPlugin
   Base Vtable vtable for __cxxabiv1::__vmi_class_type_info
   Name        typeinfo name for QSqlDriverPlugin
   flags:      0
   basetype:   typeinfo for QObject                        2
   basetype:   typeinfo for QSqlDriverFactoryInterface     2050
     __________________________________________________________

7.11.1.4. Class data for QSqlDriver

   The virtual table for the QSqlDriver class is described in the
   generic part of this specification.

   The Run Time Type Information for the QSqlDriver class is
   described by Table 7-436

   Table 7-436. typeinfo for QSqlDriver
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSqlDriver
   basetype:   typeinfo for QObject
     __________________________________________________________

7.11.1.5. Class data for QSqlQueryModel

   The virtual table for the QSqlQueryModel class is described in
   the generic part of this specification.

   The Run Time Type Information for the QSqlQueryModel class is
   described by Table 7-437

   Table 7-437. typeinfo for QSqlQueryModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSqlQueryModel
   basetype:   typeinfo for QAbstractTableModel
     __________________________________________________________

7.11.1.6. Class data for QSqlTableModel

   The virtual table for the QSqlTableModel class is described in
   the generic part of this specification.

   The Run Time Type Information for the QSqlTableModel class is
   described by Table 7-438

   Table 7-438. typeinfo for QSqlTableModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSqlTableModel
   basetype:   typeinfo for QSqlQueryModel
     __________________________________________________________

7.11.1.7. Class data for QSqlRelationalTableModel

   The virtual table for the QSqlRelationalTableModel class is
   described in the generic part of this specification.

   The Run Time Type Information for the QSqlRelationalTableModel
   class is described by Table 7-439

   Table 7-439. typeinfo for QSqlRelationalTableModel
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSqlRelationalTableModel
   basetype:   typeinfo for QSqlTableModel
     __________________________________________________________

7.11.1.8. Interfaces for Qt4 SQL

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 SQL specified in Table 7-440, with
   the full mandatory functionality as described in the referenced
   underlying specification.

   Table 7-440. libQtSql - Qt4 SQL Function Interfaces
   _ZThn8_N16QSqlDriverPluginD0Ev [CXXABI-1.86]
   _ZThn8_N16QSqlDriverPluginD1Ev [CXXABI-1.86]
     __________________________________________________________

7.12. Data Definitions for libQtSql

   This section defines global identifiers and their values that
   are associated with interfaces contained in libQtSql. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

7.12.1. QtSql/qsql.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.2. QtSql/qsqldatabase.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.3. QtSql/qsqldriver.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.4. QtSql/qsqldriverplugin.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.5. QtSql/qsqlerror.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.6. QtSql/qsqlfield.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.7. QtSql/qsqlindex.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.8. QtSql/qsqlquery.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.9. QtSql/qsqlquerymodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.10. QtSql/qsqlrecord.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.11. QtSql/qsqlrelationaltablemodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.12. QtSql/qsqlresult.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.12.13. QtSql/qsqltablemodel.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.13. Interfaces for libQtSvg

   Table 7-441 defines the library name and shared object name for
   the libQtSvg library

   Table 7-441. libQtSvg Definition
   Library: libQtSvg
   SONAME:  libQtSvg.so.4

   The behavior of the interfaces in this library is specified by
   the following specifications:

   [CXXABI-1.86] Itanium(TM) C++ ABI
     __________________________________________________________

7.13.1. Qt4 Svg
     __________________________________________________________

7.13.1.1. Class data for QSvgRenderer

   The virtual table for the QSvgRenderer class is described in
   the generic part of this specification.

   The Run Time Type Information for the QSvgRenderer class is
   described by Table 7-442

   Table 7-442. typeinfo for QSvgRenderer
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSvgRenderer
   basetype:   typeinfo for QObject
     __________________________________________________________

7.13.1.2. Class data for QSvgWidget

   The virtual table for the QSvgWidget class is described by
   Table 7-443

   Table 7-443. Primary vtable for QSvgWidget
   Base Offset 0
   Virtual Base Offset 0
   RTTI typeinfo for QSvgWidget
   vfunc[0]: QSvgWidget::metaObject() const
   vfunc[1]: QSvgWidget::qt_metacast(char const*)
   vfunc[2]: QSvgWidget::qt_metacall(QMetaObject::Call, int,
   void**)
   vfunc[3]: QSvgWidget::~QSvgWidget()
   vfunc[4]: QSvgWidget::~QSvgWidget()
   vfunc[5]: QWidget::event(QEvent*)
   vfunc[6]: QObject::eventFilter(QObject*, QEvent*)
   vfunc[7]: QObject::timerEvent(QTimerEvent*)
   vfunc[8]: QObject::childEvent(QChildEvent*)
   vfunc[9]: QObject::customEvent(QEvent*)
   vfunc[10]: QObject::connectNotify(char const*)
   vfunc[11]: QObject::disconnectNotify(char const*)
   vfunc[12]: QWidget::devType() const
   vfunc[13]: QWidget::setVisible(bool)
   vfunc[14]: QSvgWidget::sizeHint() const
   vfunc[15]: QWidget::minimumSizeHint() const
   vfunc[16]: QWidget::heightForWidth(int) const
   vfunc[17]: QWidget::paintEngine() const
   vfunc[18]: QWidget::mousePressEvent(QMouseEvent*)
   vfunc[19]: QWidget::mouseReleaseEvent(QMouseEvent*)
   vfunc[20]: QWidget::mouseDoubleClickEvent(QMouseEvent*)
   vfunc[21]: QWidget::mouseMoveEvent(QMouseEvent*)
   vfunc[22]: QWidget::wheelEvent(QWheelEvent*)
   vfunc[23]: QWidget::keyPressEvent(QKeyEvent*)
   vfunc[24]: QWidget::keyReleaseEvent(QKeyEvent*)
   vfunc[25]: QWidget::focusInEvent(QFocusEvent*)
   vfunc[26]: QWidget::focusOutEvent(QFocusEvent*)
   vfunc[27]: QWidget::enterEvent(QEvent*)
   vfunc[28]: QWidget::leaveEvent(QEvent*)
   vfunc[29]: QSvgWidget::paintEvent(QPaintEvent*)
   vfunc[30]: QWidget::moveEvent(QMoveEvent*)
   vfunc[31]: QWidget::resizeEvent(QResizeEvent*)
   vfunc[32]: QWidget::closeEvent(QCloseEvent*)
   vfunc[33]: QWidget::contextMenuEvent(QContextMenuEvent*)
   vfunc[34]: QWidget::tabletEvent(QTabletEvent*)
   vfunc[35]: QWidget::actionEvent(QActionEvent*)
   vfunc[36]: QWidget::dragEnterEvent(QDragEnterEvent*)
   vfunc[37]: QWidget::dragMoveEvent(QDragMoveEvent*)
   vfunc[38]: QWidget::dragLeaveEvent(QDragLeaveEvent*)
   vfunc[39]: QWidget::dropEvent(QDropEvent*)
   vfunc[40]: QWidget::showEvent(QShowEvent*)
   vfunc[41]: QWidget::hideEvent(QHideEvent*)
   vfunc[42]: QWidget::x11Event(_XEvent*)
   vfunc[43]: QWidget::changeEvent(QEvent*)
   vfunc[44]: QWidget::metric(QPaintDevice::PaintDeviceMetric)
   const
   vfunc[45]: QWidget::inputMethodEvent(QInputMethodEvent*)
   vfunc[46]: QWidget::inputMethodQuery(Qt::InputMethodQuery)
   const
   vfunc[47]: QWidget::focusNextPrevChild(bool)
   vfunc[48]: QWidget::styleChange(QStyle&)
   vfunc[49]: QWidget::enabledChange(bool)
   vfunc[50]: QWidget::paletteChange(QPalette const&)
   vfunc[51]: QWidget::fontChange(QFont const&)
   vfunc[52]: QWidget::windowActivationChange(bool)
   vfunc[53]: QWidget::languageChange()

   Table 7-444. Secondary vtable for QSvgWidget
   Base Offset -8
   Virtual Base Offset 0
   RTTI typeinfo for QSvgWidget
   vfunc[0]: non-virtual thunk to QSvgWidget::~QSvgWidget()
   vfunc[1]: non-virtual thunk to QSvgWidget::~QSvgWidget()
   vfunc[2]: non-virtual thunk to QWidget::devType() const
   vfunc[3]: non-virtual thunk to QWidget::paintEngine() const
   vfunc[4]: non-virtual thunk to
   QWidget::metric(QPaintDevice::PaintDeviceMetric) const

   The Run Time Type Information for the QSvgWidget class is
   described by Table 7-445

   Table 7-445. typeinfo for QSvgWidget
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QSvgWidget
   basetype:   typeinfo for QWidget
     __________________________________________________________

7.13.1.3. Interfaces for Qt4 Svg

   An LSB conforming implementation shall provide the architecture
   specific functions for Qt4 Svg specified in Table 7-446, with
   the full mandatory functionality as described in the referenced
   underlying specification.

   Table 7-446. libQtSvg - Qt4 Svg Function Interfaces
   _ZThn8_N10QSvgWidgetD0Ev [CXXABI-1.86] _ZThn8_N10QSvgWidgetD1Ev
   [CXXABI-1.86]
   _ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGrap
   hicsItemP7QWidget [CXXABI-1.86]
   _ZThn8_NK16QGraphicsSvgItem12boundingRectEv [CXXABI-1.86]
   _ZThn8_NK16QGraphicsSvgItem4typeEv [CXXABI-1.86]
     __________________________________________________________

7.14. Data Definitions for libQtSvg

   This section defines global identifiers and their values that
   are associated with interfaces contained in libQtSvg. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

7.14.1. QtSvg/qsvgrenderer.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.14.2. QtSvg/qsvgwidget.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.15. Interfaces for libQtNetwork

   Table 7-447 defines the library name and shared object name for
   the libQtNetwork library

   Table 7-447. libQtNetwork Definition
   Library: libQtNetwork
   SONAME:  libQtNetwork.so.4
     __________________________________________________________

7.15.1. Qt4 Network
     __________________________________________________________

7.15.1.1. Class data for QHttpHeader

   The virtual table for the QHttpHeader class is described in the
   generic part of this specification.

   The Run Time Type Information for the QHttpHeader class is
   described by Table 7-448

   Table 7-448. typeinfo for QHttpHeader
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QHttpHeader
     __________________________________________________________

7.15.1.2. Class data for QHttpResponseHeader

   The virtual table for the QHttpResponseHeader class is
   described in the generic part of this specification.

   The Run Time Type Information for the QHttpResponseHeader class
   is described by Table 7-449

   Table 7-449. typeinfo for QHttpResponseHeader
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QHttpResponseHeader
   basetype:   typeinfo for QHttpHeader
     __________________________________________________________

7.15.1.3. Class data for QHttpRequestHeader

   The virtual table for the QHttpRequestHeader class is described
   in the generic part of this specification.

   The Run Time Type Information for the QHttpRequestHeader class
   is described by Table 7-450

   Table 7-450. typeinfo for QHttpRequestHeader
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QHttpRequestHeader
   basetype:   typeinfo for QHttpHeader
     __________________________________________________________

7.15.1.4. Class data for QHttp

   The virtual table for the QHttp class is described in the
   generic part of this specification.

   The Run Time Type Information for the QHttp class is described
   by Table 7-451

   Table 7-451. typeinfo for QHttp
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QHttp
   basetype:   typeinfo for QObject
     __________________________________________________________

7.15.1.5. Class data for QAbstractSocket

   The virtual table for the QAbstractSocket class is described in
   the generic part of this specification.

   The Run Time Type Information for the QAbstractSocket class is
   described by Table 7-452

   Table 7-452. typeinfo for QAbstractSocket
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QAbstractSocket
   basetype:   typeinfo for QIODevice
     __________________________________________________________

7.15.1.6. Class data for QUrlInfo

   The virtual table for the QUrlInfo class is described in the
   generic part of this specification.

   The Run Time Type Information for the QUrlInfo class is
   described by Table 7-453

   Table 7-453. typeinfo for QUrlInfo
   Base Vtable vtable for __cxxabiv1::__class_type_info
   Name        typeinfo name for QUrlInfo
     __________________________________________________________

7.15.1.7. Class data for QFtp

   The virtual table for the QFtp class is described in the
   generic part of this specification.

   The Run Time Type Information for the QFtp class is described
   by Table 7-454

   Table 7-454. typeinfo for QFtp
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QFtp
   basetype:   typeinfo for QObject
     __________________________________________________________

7.15.1.8. Class data for QTcpServer

   The virtual table for the QTcpServer class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTcpServer class is
   described by Table 7-455

   Table 7-455. typeinfo for QTcpServer
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTcpServer
   basetype:   typeinfo for QObject
     __________________________________________________________

7.15.1.9. Class data for QUdpSocket

   The virtual table for the QUdpSocket class is described in the
   generic part of this specification.

   The Run Time Type Information for the QUdpSocket class is
   described by Table 7-456

   Table 7-456. typeinfo for QUdpSocket
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QUdpSocket
   basetype:   typeinfo for QAbstractSocket
     __________________________________________________________

7.15.1.10. Class data for QTcpSocket

   The virtual table for the QTcpSocket class is described in the
   generic part of this specification.

   The Run Time Type Information for the QTcpSocket class is
   described by Table 7-457

   Table 7-457. typeinfo for QTcpSocket
   Base Vtable vtable for __cxxabiv1::__si_class_type_info
   Name        typeinfo name for QTcpSocket
   basetype:   typeinfo for QAbstractSocket
     __________________________________________________________

7.15.1.11. Interfaces for Qt4 Network

   No external functions are defined for libQtNetwork - Qt4
   Network in this part of the specification. See also the generic
   specification.
     __________________________________________________________

7.16. Data Definitions for libQtNetwork

   This section defines global identifiers and their values that
   are associated with interfaces contained in libQtNetwork. These
   definitions are organized into groups that correspond to system
   headers. This convention is used as a convenience for the
   reader, and does not imply the existence of these headers, or
   their content. Where an interface is defined as requiring a
   particular system header file all of the data definitions for
   that system header file presented here shall be in effect.

   This section gives data definitions to promote binary
   application portability, not to repeat source interface
   definitions available elsewhere. System providers and
   application developers should use this ABI to supplement - not
   to replace - source interface definition specifications.

   This specification uses the ISO C (1999) C Language as the
   reference programming language, and data definitions are
   specified in ISO C format. The C language is used here as a
   convenient notation. Using a C language description of these
   data objects does not preclude their use by other programming
   languages.
     __________________________________________________________

7.16.1. QtNetwork/qabstractsocket.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.2. QtNetwork/qftp.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.3. QtNetwork/qhostaddress.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.4. QtNetwork/qhostinfo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.5. QtNetwork/qhttp.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.6. QtNetwork/qnetworkproxy.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.7. QtNetwork/qtcpserver.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.8. QtNetwork/qtcpsocket.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.9. QtNetwork/qudpsocket.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
     __________________________________________________________

7.16.10. QtNetwork/qurlinfo.h

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */

IV. Package Format and Installation

   Table of Contents
   8. Software Installation

        8.1. Package Dependencies
     __________________________________________________________

Chapter 8. Software Installation

8.1. Package Dependencies

   The LSB runtime environment shall provide the following
   dependency.

   lsb-desktop-ia32

   This dependency is used to indicate that the application is
   dependent on features contained in the LSB Desktop module and
   contains architecture specific components dependent on this
   part of LSB Desktop.

   This dependency shall have a version of 5.0.
     __________________________________________________________

Appendix A. Alphabetical Listing of Interfaces by Library

A.1. libGL

   The behavior of the interfaces in this library is specified by
   the following Standards.

   OpenGL Extensions [GLX]
   OpenGL 2.1 [OGL 2.1]
   OpenGL ABI [OGL ABI]

   Table A-1. libGL Function Interfaces
   glAccum[OGL 2.1] glIndexMask[OGL 2.1] glSecondaryColor3uiv[OGL
   2.1]
   glActiveTexture[OGL 2.1] glIndexPointer[OGL 2.1]
   glSecondaryColor3us[OGL 2.1]
   glActiveTextureARB[OGL 2.1] glIndexd[OGL 2.1]
   glSecondaryColor3usv[OGL 2.1]
   glAlphaFunc[OGL 2.1] glIndexdv[OGL 2.1]
   glSecondaryColorPointer[OGL 2.1]
   glAreTexturesResident[OGL 2.1] glIndexf[OGL 2.1]
   glSelectBuffer[OGL 2.1]
   glArrayElement[OGL 2.1] glIndexfv[OGL 2.1]
   glSeparableFilter2D[OGL 2.1]
   glAttachShader[OGL 2.1] glIndexi[OGL 2.1] glShadeModel[OGL 2.1]
   glBegin[OGL 2.1] glIndexiv[OGL 2.1] glShaderSource[OGL 2.1]
   glBeginQuery[OGL 2.1] glIndexs[OGL 2.1] glStencilFunc[OGL 2.1]
   glBindAttribLocation[OGL 2.1] glIndexsv[OGL 2.1]
   glStencilFuncSeparate[OGL 2.1]
   glBindBuffer[OGL 2.1] glIndexub[OGL 2.1] glStencilMask[OGL 2.1]
   glBindTexture[OGL 2.1] glIndexubv[OGL 2.1]
   glStencilMaskSeparate[OGL 2.1]
   glBitmap[OGL 2.1] glInitNames[OGL 2.1] glStencilOp[OGL 2.1]
   glBlendColor[OGL 2.1] glInterleavedArrays[OGL 2.1]
   glStencilOpSeparate[OGL 2.1]
   glBlendEquation[OGL 2.1] glIsBuffer[OGL 2.1] glTexCoord1d[OGL
   2.1]
   glBlendEquationSeparate[OGL 2.1] glIsEnabled[OGL 2.1]
   glTexCoord1dv[OGL 2.1]
   glBlendFunc[OGL 2.1] glIsList[OGL 2.1] glTexCoord1f[OGL 2.1]
   glBlendFuncSeparate[OGL 2.1] glIsProgram[OGL 2.1]
   glTexCoord1fv[OGL 2.1]
   glBufferData[OGL 2.1] glIsQuery[OGL 2.1] glTexCoord1i[OGL 2.1]
   glBufferSubData[OGL 2.1] glIsShader[OGL 2.1] glTexCoord1iv[OGL
   2.1]
   glCallList[OGL 2.1] glIsTexture[OGL 2.1] glTexCoord1s[OGL 2.1]
   glCallLists[OGL 2.1] glLightModelf[OGL 2.1] glTexCoord1sv[OGL
   2.1]
   glClear[OGL 2.1] glLightModelfv[OGL 2.1] glTexCoord2d[OGL 2.1]
   glClearAccum[OGL 2.1] glLightModeli[OGL 2.1] glTexCoord2dv[OGL
   2.1]
   glClearColor[OGL 2.1] glLightModeliv[OGL 2.1] glTexCoord2f[OGL
   2.1]
   glClearDepth[OGL 2.1] glLightf[OGL 2.1] glTexCoord2fv[OGL 2.1]
   glClearIndex[OGL 2.1] glLightfv[OGL 2.1] glTexCoord2i[OGL 2.1]
   glClearStencil[OGL 2.1] glLighti[OGL 2.1] glTexCoord2iv[OGL
   2.1]
   glClientActiveTexture[OGL 2.1] glLightiv[OGL 2.1]
   glTexCoord2s[OGL 2.1]
   glClientActiveTextureARB[OGL 2.1] glLineStipple[OGL 2.1]
   glTexCoord2sv[OGL 2.1]
   glClipPlane[OGL 2.1] glLineWidth[OGL 2.1] glTexCoord3d[OGL 2.1]
   glColor3b[OGL 2.1] glLinkProgram[OGL 2.1] glTexCoord3dv[OGL
   2.1]
   glColor3bv[OGL 2.1] glListBase[OGL 2.1] glTexCoord3f[OGL 2.1]
   glColor3d[OGL 2.1] glLoadIdentity[OGL 2.1] glTexCoord3fv[OGL
   2.1]
   glColor3dv[OGL 2.1] glLoadMatrixd[OGL 2.1] glTexCoord3i[OGL
   2.1]
   glColor3f[OGL 2.1] glLoadMatrixf[OGL 2.1] glTexCoord3iv[OGL
   2.1]
   glColor3fv[OGL 2.1] glLoadName[OGL 2.1] glTexCoord3s[OGL 2.1]
   glColor3i[OGL 2.1] glLoadTransposeMatrixd[OGL 2.1]
   glTexCoord3sv[OGL 2.1]
   glColor3iv[OGL 2.1] glLoadTransposeMatrixf[OGL 2.1]
   glTexCoord4d[OGL 2.1]
   glColor3s[OGL 2.1] glLogicOp[OGL 2.1] glTexCoord4dv[OGL 2.1]
   glColor3sv[OGL 2.1] glMap1d[OGL 2.1] glTexCoord4f[OGL 2.1]
   glColor3ub[OGL 2.1] glMap1f[OGL 2.1] glTexCoord4fv[OGL 2.1]
   glColor3ubv[OGL 2.1] glMap2d[OGL 2.1] glTexCoord4i[OGL 2.1]
   glColor3ui[OGL 2.1] glMap2f[OGL 2.1] glTexCoord4iv[OGL 2.1]
   glColor3uiv[OGL 2.1] glMapBuffer[OGL 2.1] glTexCoord4s[OGL 2.1]
   glColor3us[OGL 2.1] glMapGrid1d[OGL 2.1] glTexCoord4sv[OGL 2.1]
   glColor3usv[OGL 2.1] glMapGrid1f[OGL 2.1] glTexCoordPointer[OGL
   2.1]
   glColor4b[OGL 2.1] glMapGrid2d[OGL 2.1] glTexEnvf[OGL 2.1]
   glColor4bv[OGL 2.1] glMapGrid2f[OGL 2.1] glTexEnvfv[OGL 2.1]
   glColor4d[OGL 2.1] glMaterialf[OGL 2.1] glTexEnvi[OGL 2.1]
   glColor4dv[OGL 2.1] glMaterialfv[OGL 2.1] glTexEnviv[OGL 2.1]
   glColor4f[OGL 2.1] glMateriali[OGL 2.1] glTexGend[OGL 2.1]
   glColor4fv[OGL 2.1] glMaterialiv[OGL 2.1] glTexGendv[OGL 2.1]
   glColor4i[OGL 2.1] glMatrixMode[OGL 2.1] glTexGenf[OGL 2.1]
   glColor4iv[OGL 2.1] glMinmax[OGL 2.1] glTexGenfv[OGL 2.1]
   glColor4s[OGL 2.1] glMultMatrixd[OGL 2.1] glTexGeni[OGL 2.1]
   glColor4sv[OGL 2.1] glMultMatrixf[OGL 2.1] glTexGeniv[OGL 2.1]
   glColor4ub[OGL 2.1] glMultTransposeMatrixd[OGL 2.1]
   glTexImage1D[OGL 2.1]
   glColor4ubv[OGL 2.1] glMultTransposeMatrixf[OGL 2.1]
   glTexImage2D[OGL 2.1]
   glColor4ui[OGL 2.1] glMultiDrawArrays[OGL 2.1] glTexImage3D[OGL
   2.1]
   glColor4uiv[OGL 2.1] glMultiDrawElements[OGL 2.1]
   glTexParameterf[OGL 2.1]
   glColor4us[OGL 2.1] glMultiTexCoord1d[OGL 2.1]
   glTexParameterfv[OGL 2.1]
   glColor4usv[OGL 2.1] glMultiTexCoord1dARB[OGL 2.1]
   glTexParameteri[OGL 2.1]
   glColorMask[OGL 2.1] glMultiTexCoord1dv[OGL 2.1]
   glTexParameteriv[OGL 2.1]
   glColorMaterial[OGL 2.1] glMultiTexCoord1dvARB[OGL 2.1]
   glTexSubImage1D[OGL 2.1]
   glColorPointer[OGL 2.1] glMultiTexCoord1f[OGL 2.1]
   glTexSubImage2D[OGL 2.1]
   glColorSubTable[OGL 2.1] glMultiTexCoord1fARB[OGL 2.1]
   glTexSubImage3D[OGL 2.1]
   glColorTable[OGL 2.1] glMultiTexCoord1fv[OGL 2.1]
   glTranslated[OGL 2.1]
   glColorTableParameterfv[OGL 2.1] glMultiTexCoord1fvARB[OGL 2.1]
   glTranslatef[OGL 2.1]
   glColorTableParameteriv[OGL 2.1] glMultiTexCoord1i[OGL 2.1]
   glUniform1f[OGL 2.1]
   glCompileShader[OGL 2.1] glMultiTexCoord1iARB[OGL 2.1]
   glUniform1fv[OGL 2.1]
   glCompressedTexImage1D[OGL 2.1] glMultiTexCoord1iv[OGL 2.1]
   glUniform1i[OGL 2.1]
   glCompressedTexImage2D[OGL 2.1] glMultiTexCoord1ivARB[OGL 2.1]
   glUniform1iv[OGL 2.1]
   glCompressedTexImage3D[OGL 2.1] glMultiTexCoord1s[OGL 2.1]
   glUniform2f[OGL 2.1]
   glCompressedTexSubImage1D[OGL 2.1] glMultiTexCoord1sARB[OGL
   2.1] glUniform2fv[OGL 2.1]
   glCompressedTexSubImage2D[OGL 2.1] glMultiTexCoord1sv[OGL 2.1]
   glUniform2i[OGL 2.1]
   glCompressedTexSubImage3D[OGL 2.1] glMultiTexCoord1svARB[OGL
   2.1] glUniform2iv[OGL 2.1]
   glConvolutionFilter1D[OGL 2.1] glMultiTexCoord2d[OGL 2.1]
   glUniform3f[OGL 2.1]
   glConvolutionFilter2D[OGL 2.1] glMultiTexCoord2dARB[OGL 2.1]
   glUniform3fv[OGL 2.1]
   glConvolutionParameterf[OGL 2.1] glMultiTexCoord2dv[OGL 2.1]
   glUniform3i[OGL 2.1]
   glConvolutionParameterfv[OGL 2.1] glMultiTexCoord2dvARB[OGL
   2.1] glUniform3iv[OGL 2.1]
   glConvolutionParameteri[OGL 2.1] glMultiTexCoord2f[OGL 2.1]
   glUniform4f[OGL 2.1]
   glConvolutionParameteriv[OGL 2.1] glMultiTexCoord2fARB[OGL 2.1]
   glUniform4fv[OGL 2.1]
   glCopyColorSubTable[OGL 2.1] glMultiTexCoord2fv[OGL 2.1]
   glUniform4i[OGL 2.1]
   glCopyColorTable[OGL 2.1] glMultiTexCoord2fvARB[OGL 2.1]
   glUniform4iv[OGL 2.1]
   glCopyConvolutionFilter1D[OGL 2.1] glMultiTexCoord2i[OGL 2.1]
   glUniformMatrix2fv[OGL 2.1]
   glCopyConvolutionFilter2D[OGL 2.1] glMultiTexCoord2iARB[OGL
   2.1] glUniformMatrix2x3fv[OGL 2.1]
   glCopyPixels[OGL 2.1] glMultiTexCoord2iv[OGL 2.1]
   glUniformMatrix2x4fv[OGL 2.1]
   glCopyTexImage1D[OGL 2.1] glMultiTexCoord2ivARB[OGL 2.1]
   glUniformMatrix3fv[OGL 2.1]
   glCopyTexImage2D[OGL 2.1] glMultiTexCoord2s[OGL 2.1]
   glUniformMatrix3x2fv[OGL 2.1]
   glCopyTexSubImage1D[OGL 2.1] glMultiTexCoord2sARB[OGL 2.1]
   glUniformMatrix3x4fv[OGL 2.1]
   glCopyTexSubImage2D[OGL 2.1] glMultiTexCoord2sv[OGL 2.1]
   glUniformMatrix4fv[OGL 2.1]
   glCopyTexSubImage3D[OGL 2.1] glMultiTexCoord2svARB[OGL 2.1]
   glUniformMatrix4x2fv[OGL 2.1]
   glCreateProgram[OGL 2.1] glMultiTexCoord3d[OGL 2.1]
   glUniformMatrix4x3fv[OGL 2.1]
   glCreateShader[OGL 2.1] glMultiTexCoord3dARB[OGL 2.1]
   glUnmapBuffer[OGL 2.1]
   glCullFace[OGL 2.1] glMultiTexCoord3dv[OGL 2.1]
   glUseProgram[OGL 2.1]
   glDeleteBuffers[OGL 2.1] glMultiTexCoord3dvARB[OGL 2.1]
   glValidateProgram[OGL 2.1]
   glDeleteLists[OGL 2.1] glMultiTexCoord3f[OGL 2.1]
   glVertex2d[OGL 2.1]
   glDeleteProgram[OGL 2.1] glMultiTexCoord3fARB[OGL 2.1]
   glVertex2dv[OGL 2.1]
   glDeleteQueries[OGL 2.1] glMultiTexCoord3fv[OGL 2.1]
   glVertex2f[OGL 2.1]
   glDeleteShader[OGL 2.1] glMultiTexCoord3fvARB[OGL 2.1]
   glVertex2fv[OGL 2.1]
   glDeleteTextures[OGL 2.1] glMultiTexCoord3i[OGL 2.1]
   glVertex2i[OGL 2.1]
   glDepthFunc[OGL 2.1] glMultiTexCoord3iARB[OGL 2.1]
   glVertex2iv[OGL 2.1]
   glDepthMask[OGL 2.1] glMultiTexCoord3iv[OGL 2.1] glVertex2s[OGL
   2.1]
   glDepthRange[OGL 2.1] glMultiTexCoord3ivARB[OGL 2.1]
   glVertex2sv[OGL 2.1]
   glDetachShader[OGL 2.1] glMultiTexCoord3s[OGL 2.1]
   glVertex3d[OGL 2.1]
   glDisable[OGL 2.1] glMultiTexCoord3sARB[OGL 2.1]
   glVertex3dv[OGL 2.1]
   glDisableClientState[OGL 2.1] glMultiTexCoord3sv[OGL 2.1]
   glVertex3f[OGL 2.1]
   glDisableVertexAttribArray[OGL 2.1] glMultiTexCoord3svARB[OGL
   2.1] glVertex3fv[OGL 2.1]
   glDrawArrays[OGL 2.1] glMultiTexCoord4d[OGL 2.1] glVertex3i[OGL
   2.1]
   glDrawBuffer[OGL 2.1] glMultiTexCoord4dARB[OGL 2.1]
   glVertex3iv[OGL 2.1]
   glDrawBuffers[OGL 2.1] glMultiTexCoord4dv[OGL 2.1]
   glVertex3s[OGL 2.1]
   glDrawElements[OGL 2.1] glMultiTexCoord4dvARB[OGL 2.1]
   glVertex3sv[OGL 2.1]
   glDrawPixels[OGL 2.1] glMultiTexCoord4f[OGL 2.1] glVertex4d[OGL
   2.1]
   glDrawRangeElements[OGL 2.1] glMultiTexCoord4fARB[OGL 2.1]
   glVertex4dv[OGL 2.1]
   glEdgeFlag[OGL 2.1] glMultiTexCoord4fv[OGL 2.1] glVertex4f[OGL
   2.1]
   glEdgeFlagPointer[OGL 2.1] glMultiTexCoord4fvARB[OGL 2.1]
   glVertex4fv[OGL 2.1]
   glEdgeFlagv[OGL 2.1] glMultiTexCoord4i[OGL 2.1] glVertex4i[OGL
   2.1]
   glEnable[OGL 2.1] glMultiTexCoord4iARB[OGL 2.1] glVertex4iv[OGL
   2.1]
   glEnableClientState[OGL 2.1] glMultiTexCoord4iv[OGL 2.1]
   glVertex4s[OGL 2.1]
   glEnableVertexAttribArray[OGL 2.1] glMultiTexCoord4ivARB[OGL
   2.1] glVertex4sv[OGL 2.1]
   glEnd[OGL 2.1] glMultiTexCoord4s[OGL 2.1] glVertexAttrib1d[OGL
   2.1]
   glEndList[OGL 2.1] glMultiTexCoord4sARB[OGL 2.1]
   glVertexAttrib1dv[OGL 2.1]
   glEvalCoord1d[OGL 2.1] glMultiTexCoord4sv[OGL 2.1]
   glVertexAttrib1f[OGL 2.1]
   glEvalCoord1dv[OGL 2.1] glMultiTexCoord4svARB[OGL 2.1]
   glVertexAttrib1fv[OGL 2.1]
   glEvalCoord1f[OGL 2.1] glNewList[OGL 2.1] glVertexAttrib1s[OGL
   2.1]
   glEvalCoord1fv[OGL 2.1] glNormal3b[OGL 2.1]
   glVertexAttrib1sv[OGL 2.1]
   glEvalCoord2d[OGL 2.1] glNormal3bv[OGL 2.1]
   glVertexAttrib2d[OGL 2.1]
   glEvalCoord2dv[OGL 2.1] glNormal3d[OGL 2.1]
   glVertexAttrib2dv[OGL 2.1]
   glEvalCoord2f[OGL 2.1] glNormal3dv[OGL 2.1]
   glVertexAttrib2f[OGL 2.1]
   glEvalCoord2fv[OGL 2.1] glNormal3f[OGL 2.1]
   glVertexAttrib2fv[OGL 2.1]
   glEvalMesh1[OGL 2.1] glNormal3fv[OGL 2.1] glVertexAttrib2s[OGL
   2.1]
   glEvalMesh2[OGL 2.1] glNormal3i[OGL 2.1] glVertexAttrib2sv[OGL
   2.1]
   glEvalPoint1[OGL 2.1] glNormal3iv[OGL 2.1] glVertexAttrib3d[OGL
   2.1]
   glEvalPoint2[OGL 2.1] glNormal3s[OGL 2.1] glVertexAttrib3dv[OGL
   2.1]
   glFeedbackBuffer[OGL 2.1] glNormal3sv[OGL 2.1]
   glVertexAttrib3f[OGL 2.1]
   glFinish[OGL 2.1] glNormalPointer[OGL 2.1]
   glVertexAttrib3fv[OGL 2.1]
   glFlush[OGL 2.1] glOrtho[OGL 2.1] glVertexAttrib3s[OGL 2.1]
   glFogCoordPointer[OGL 2.1] glPassThrough[OGL 2.1]
   glVertexAttrib3sv[OGL 2.1]
   glFogCoordd[OGL 2.1] glPixelMapfv[OGL 2.1]
   glVertexAttrib4Nbv[OGL 2.1]
   glFogCoorddv[OGL 2.1] glPixelMapuiv[OGL 2.1]
   glVertexAttrib4Niv[OGL 2.1]
   glFogCoordf[OGL 2.1] glPixelMapusv[OGL 2.1]
   glVertexAttrib4Nsv[OGL 2.1]
   glFogCoordfv[OGL 2.1] glPixelStoref[OGL 2.1]
   glVertexAttrib4Nub[OGL 2.1]
   glFogf[OGL 2.1] glPixelStorei[OGL 2.1] glVertexAttrib4Nubv[OGL
   2.1]
   glFogfv[OGL 2.1] glPixelTransferf[OGL 2.1]
   glVertexAttrib4Nuiv[OGL 2.1]
   glFogi[OGL 2.1] glPixelTransferi[OGL 2.1]
   glVertexAttrib4Nusv[OGL 2.1]
   glFogiv[OGL 2.1] glPixelZoom[OGL 2.1] glVertexAttrib4bv[OGL
   2.1]
   glFrontFace[OGL 2.1] glPointParameterf[OGL 2.1]
   glVertexAttrib4d[OGL 2.1]
   glFrustum[OGL 2.1] glPointParameterfv[OGL 2.1]
   glVertexAttrib4dv[OGL 2.1]
   glGenBuffers[OGL 2.1] glPointParameteri[OGL 2.1]
   glVertexAttrib4f[OGL 2.1]
   glGenLists[OGL 2.1] glPointParameteriv[OGL 2.1]
   glVertexAttrib4fv[OGL 2.1]
   glGenQueries[OGL 2.1] glPointSize[OGL 2.1]
   glVertexAttrib4iv[OGL 2.1]
   glGenTextures[OGL 2.1] glPolygonMode[OGL 2.1]
   glVertexAttrib4s[OGL 2.1]
   glGetActiveAttrib[OGL 2.1] glPolygonOffset[OGL 2.1]
   glVertexAttrib4sv[OGL 2.1]
   glGetActiveUniform[OGL 2.1] glPolygonStipple[OGL 2.1]
   glVertexAttrib4ubv[OGL 2.1]
   glGetAttachedShaders[OGL 2.1] glPopAttrib[OGL 2.1]
   glVertexAttrib4uiv[OGL 2.1]
   glGetAttribLocation[OGL 2.1] glPopClientAttrib[OGL 2.1]
   glVertexAttrib4usv[OGL 2.1]
   glGetBooleanv[OGL 2.1] glPopMatrix[OGL 2.1]
   glVertexAttribPointer[OGL 2.1]
   glGetBufferParameteriv[OGL 2.1] glPopName[OGL 2.1]
   glVertexPointer[OGL 2.1]
   glGetBufferPointerv[OGL 2.1] glPrioritizeTextures[OGL 2.1]
   glViewport[OGL 2.1]
   glGetBufferSubData[OGL 2.1] glPushAttrib[OGL 2.1]
   glWindowPos2d[OGL 2.1]
   glGetClipPlane[OGL 2.1] glPushClientAttrib[OGL 2.1]
   glWindowPos2dv[OGL 2.1]
   glGetColorTable[OGL 2.1] glPushMatrix[OGL 2.1]
   glWindowPos2f[OGL 2.1]
   glGetColorTableParameterfv[OGL 2.1] glPushName[OGL 2.1]
   glWindowPos2fv[OGL 2.1]
   glGetColorTableParameteriv[OGL 2.1] glRasterPos2d[OGL 2.1]
   glWindowPos2i[OGL 2.1]
   glGetCompressedTexImage[OGL 2.1] glRasterPos2dv[OGL 2.1]
   glWindowPos2iv[OGL 2.1]
   glGetConvolutionFilter[OGL 2.1] glRasterPos2f[OGL 2.1]
   glWindowPos2s[OGL 2.1]
   glGetConvolutionParameterfv[OGL 2.1] glRasterPos2fv[OGL 2.1]
   glWindowPos2sv[OGL 2.1]
   glGetConvolutionParameteriv[OGL 2.1] glRasterPos2i[OGL 2.1]
   glWindowPos3d[OGL 2.1]
   glGetDoublev[OGL 2.1] glRasterPos2iv[OGL 2.1]
   glWindowPos3dv[OGL 2.1]
   glGetError[OGL 2.1] glRasterPos2s[OGL 2.1] glWindowPos3f[OGL
   2.1]
   glGetFloatv[OGL 2.1] glRasterPos2sv[OGL 2.1] glWindowPos3fv[OGL
   2.1]
   glGetHistogram[OGL 2.1] glRasterPos3d[OGL 2.1]
   glWindowPos3i[OGL 2.1]
   glGetHistogramParameterfv[OGL 2.1] glRasterPos3dv[OGL 2.1]
   glWindowPos3iv[OGL 2.1]
   glGetHistogramParameteriv[OGL 2.1] glRasterPos3f[OGL 2.1]
   glWindowPos3s[OGL 2.1]
   glGetIntegerv[OGL 2.1] glRasterPos3fv[OGL 2.1]
   glWindowPos3sv[OGL 2.1]
   glGetLightfv[OGL 2.1] glRasterPos3i[OGL 2.1]
   glXChooseFBConfig[GLX]
   glGetLightiv[OGL 2.1] glRasterPos3iv[OGL 2.1]
   glXChooseVisual[GLX]
   glGetMapdv[OGL 2.1] glRasterPos3s[OGL 2.1] glXCopyContext[GLX]
   glGetMapfv[OGL 2.1] glRasterPos3sv[OGL 2.1]
   glXCreateContext[GLX]
   glGetMapiv[OGL 2.1] glRasterPos4d[OGL 2.1]
   glXCreateGLXPixmap[GLX]
   glGetMaterialfv[OGL 2.1] glRasterPos4dv[OGL 2.1]
   glXCreateNewContext[GLX]
   glGetMaterialiv[OGL 2.1] glRasterPos4f[OGL 2.1]
   glXCreatePbuffer[GLX]
   glGetMinmax[OGL 2.1] glRasterPos4fv[OGL 2.1]
   glXCreatePixmap[GLX]
   glGetMinmaxParameterfv[OGL 2.1] glRasterPos4i[OGL 2.1]
   glXCreateWindow[GLX]
   glGetMinmaxParameteriv[OGL 2.1] glRasterPos4iv[OGL 2.1]
   glXDestroyContext[GLX]
   glGetPixelMapfv[OGL 2.1] glRasterPos4s[OGL 2.1]
   glXDestroyGLXPixmap[GLX]
   glGetPixelMapuiv[OGL 2.1] glRasterPos4sv[OGL 2.1]
   glXDestroyPbuffer[GLX]
   glGetPixelMapusv[OGL 2.1] glReadBuffer[OGL 2.1]
   glXDestroyPixmap[GLX]
   glGetPointerv[OGL 2.1] glReadPixels[OGL 2.1]
   glXDestroyWindow[GLX]
   glGetPolygonStipple[OGL 2.1] glRectd[OGL 2.1]
   glXFreeContextEXT[GLX]
   glGetProgramInfoLog[OGL 2.1] glRectdv[OGL 2.1]
   glXGetClientString[GLX]
   glGetProgramiv[OGL 2.1] glRectf[OGL 2.1] glXGetConfig[GLX]
   glGetQueryObjectiv[OGL 2.1] glRectfv[OGL 2.1]
   glXGetContextIDEXT[GLX]
   glGetQueryObjectuiv[OGL 2.1] glRecti[OGL 2.1]
   glXGetCurrentContext[GLX]
   glGetQueryiv[OGL 2.1] glRectiv[OGL 2.1]
   glXGetCurrentDisplay[GLX]
   glGetSeparableFilter[OGL 2.1] glRects[OGL 2.1]
   glXGetCurrentDrawable[GLX]
   glGetShaderInfoLog[OGL 2.1] glRectsv[OGL 2.1]
   glXGetCurrentReadDrawable[GLX]
   glGetShaderSource[OGL 2.1] glRenderMode[OGL 2.1]
   glXGetFBConfigAttrib[GLX]
   glGetShaderiv[OGL 2.1] glResetHistogram[OGL 2.1]
   glXGetFBConfigs[GLX]
   glGetString[OGL 2.1] glResetMinmax[OGL 2.1]
   glXGetProcAddress[OGL 2.1]
   glGetTexEnvfv[OGL 2.1] glRotated[OGL 2.1]
   glXGetProcAddressARB[OGL ABI]
   glGetTexEnviv[OGL 2.1] glRotatef[OGL 2.1]
   glXGetSelectedEvent[GLX]
   glGetTexGendv[OGL 2.1] glSampleCoverage[OGL 2.1]
   glXGetVisualFromFBConfig[GLX]
   glGetTexGenfv[OGL 2.1] glScaled[OGL 2.1]
   glXImportContextEXT[GLX]
   glGetTexGeniv[OGL 2.1] glScalef[OGL 2.1] glXIsDirect[GLX]
   glGetTexImage[OGL 2.1] glScissor[OGL 2.1]
   glXMakeContextCurrent[GLX]
   glGetTexLevelParameterfv[OGL 2.1] glSecondaryColor3b[OGL 2.1]
   glXMakeCurrent[GLX]
   glGetTexLevelParameteriv[OGL 2.1] glSecondaryColor3bv[OGL 2.1]
   glXQueryContext[GLX]
   glGetTexParameterfv[OGL 2.1] glSecondaryColor3d[OGL 2.1]
   glXQueryContextInfoEXT[GLX]
   glGetTexParameteriv[OGL 2.1] glSecondaryColor3dv[OGL 2.1]
   glXQueryDrawable[GLX]
   glGetUniformLocation[OGL 2.1] glSecondaryColor3f[OGL 2.1]
   glXQueryExtension[GLX]
   glGetUniformfv[OGL 2.1] glSecondaryColor3fv[OGL 2.1]
   glXQueryExtensionsString[GLX]
   glGetUniformiv[OGL 2.1] glSecondaryColor3i[OGL 2.1]
   glXQueryServerString[GLX]
   glGetVertexAttribPointerv[OGL 2.1] glSecondaryColor3iv[OGL 2.1]
   glXQueryVersion[GLX]
   glGetVertexAttribdv[OGL 2.1] glSecondaryColor3s[OGL 2.1]
   glXSelectEvent[GLX]
   glGetVertexAttribfv[OGL 2.1] glSecondaryColor3sv[OGL 2.1]
   glXSwapBuffers[GLX]
   glGetVertexAttribiv[OGL 2.1] glSecondaryColor3ub[OGL 2.1]
   glXUseXFont[GLX]
   glHint[OGL 2.1] glSecondaryColor3ubv[OGL 2.1] glXWaitGL[GLX]
   glHistogram[OGL 2.1] glSecondaryColor3ui[OGL 2.1] glXWaitX[GLX]
     __________________________________________________________

A.2. libGLU

   The behavior of the interfaces in this library is specified by
   the following Standards.

   OpenGL Utilities [GLU]

   Table A-2. libGLU Function Interfaces
   gluBeginCurve[GLU] gluErrorString[GLU] gluProject[GLU]
   gluBeginPolygon[GLU] gluGetNurbsProperty[GLU] gluPwlCurve[GLU]
   gluBeginSurface[GLU] gluGetString[GLU] gluQuadricCallback[GLU]
   gluBeginTrim[GLU] gluGetTessProperty[GLU]
   gluQuadricDrawStyle[GLU]
   gluBuild1DMipmapLevels[GLU] gluLoadSamplingMatrices[GLU]
   gluQuadricNormals[GLU]
   gluBuild1DMipmaps[GLU] gluLookAt[GLU]
   gluQuadricOrientation[GLU]
   gluBuild2DMipmapLevels[GLU] gluNewNurbsRenderer[GLU]
   gluQuadricTexture[GLU]
   gluBuild2DMipmaps[GLU] gluNewQuadric[GLU] gluScaleImage[GLU]
   gluBuild3DMipmapLevels[GLU] gluNewTess[GLU] gluSphere[GLU]
   gluBuild3DMipmaps[GLU] gluNextContour[GLU]
   gluTessBeginContour[GLU]
   gluCheckExtension[GLU] gluNurbsCallback[GLU]
   gluTessBeginPolygon[GLU]
   gluCylinder[GLU] gluNurbsCallbackData[GLU] gluTessCallback[GLU]
   gluDeleteNurbsRenderer[GLU] gluNurbsCallbackDataEXT[GLU]
   gluTessEndContour[GLU]
   gluDeleteQuadric[GLU] gluNurbsCurve[GLU] gluTessEndPolygon[GLU]
   gluDeleteTess[GLU] gluNurbsProperty[GLU] gluTessNormal[GLU]
   gluDisk[GLU] gluNurbsSurface[GLU] gluTessProperty[GLU]
   gluEndCurve[GLU] gluOrtho2D[GLU] gluTessVertex[GLU]
   gluEndPolygon[GLU] gluPartialDisk[GLU] gluUnProject[GLU]
   gluEndSurface[GLU] gluPerspective[GLU] gluUnProject4[GLU]
   gluEndTrim[GLU] gluPickMatrix[GLU]
     __________________________________________________________

A.3. libICE

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]
   X11 Inter-Client Exchange [XICE]

   Table A-3. libICE Function Interfaces
   IceAcceptConnection[XICE] IceGetInBufSize[XICE]
   IceRegisterForProtocolReply[XICE]
   IceAddConnectionWatch[XICE] IceGetListenConnectionNumber[XICE]
   IceRegisterForProtocolSetup[XICE]
   IceAllocScratch[XICE] IceGetListenConnectionString[XICE]
   IceRelease[XICE]
   IceAppLockConn[XICE] IceGetOutBufSize[XICE]
   IceRemoveConnectionWatch[XICE]
   IceAppUnlockConn[XICE] IceInitThreads[XICE]
   IceSetErrorHandler[XICE]
   IceAuthFileName[XICE] IceLastReceivedSequenceNumber[XICE]
   IceSetHostBasedAuthProc[XICE]
   IceCheckShutdownNegotiation[XICE]
   IceLastSentSequenceNumber[XICE] IceSetIOErrorHandler[XICE]
   IceCloseConnection[XICE] IceListenForConnections[XICE]
   IceSetPaAuthData[XICE]
   IceComposeNetworkIdList[XICE]
   IceListenForWellKnownConnections[XICE]
   IceSetShutdownNegotiation[XICE]
   IceConnectionNumber[XICE] IceLockAuthFile[XICE]
   IceSwapping[XICE]
   IceConnectionStatus[XICE] IceOpenConnection[XICE]
   IceUnlockAuthFile[XICE]
   IceConnectionString[XICE] IcePing[XICE] IceVendor[XICE]
   IceFlush[XICE] IceProcessMessages[XICE]
   IceWriteAuthFileEntry[XICE]
   IceFreeAuthFileEntry[XICE] IceProtocolRevision[XICE]
   _IceRead[LSB]
   IceFreeListenObjs[XICE] IceProtocolSetup[XICE]
   _IceReadSkip[LSB]
   IceGenerateMagicCookie[XICE] IceProtocolShutdown[XICE]
   _IceWrite[LSB]
   IceGetAuthFileEntry[XICE] IceProtocolVersion[XICE]
   IceGetConnectionContext[XICE] IceReadAuthFileEntry[XICE]
     __________________________________________________________

A.4. libSM

   The behavior of the interfaces in this library is specified by
   the following Standards.

   X11 Session Management [XSM]

   Table A-4. libSM Function Interfaces
   SmFreeProperty[XSM] SmcRelease[XSM] SmsInitialize[XSM]
   SmFreeReasons[XSM] SmcRequestSaveYourself[XSM] SmsInteract[XSM]
   SmcClientID[XSM] SmcRequestSaveYourselfPhase2[XSM]
   SmsProtocolRevision[XSM]
   SmcCloseConnection[XSM] SmcSaveYourselfDone[XSM]
   SmsProtocolVersion[XSM]
   SmcDeleteProperties[XSM] SmcSetErrorHandler[XSM]
   SmsRegisterClientReply[XSM]
   SmcGetIceConnection[XSM] SmcSetProperties[XSM]
   SmsReturnProperties[XSM]
   SmcGetProperties[XSM] SmcVendor[XSM] SmsSaveComplete[XSM]
   SmcInteractDone[XSM] SmsCleanUp[XSM] SmsSaveYourself[XSM]
   SmcInteractRequest[XSM] SmsClientHostName[XSM]
   SmsSaveYourselfPhase2[XSM]
   SmcModifyCallbacks[XSM] SmsClientID[XSM]
   SmsSetErrorHandler[XSM]
   SmcOpenConnection[XSM] SmsDie[XSM] SmsShutdownCancelled[XSM]
   SmcProtocolRevision[XSM] SmsGenerateClientID[XSM]
   SmcProtocolVersion[XSM] SmsGetIceConnection[XSM]
     __________________________________________________________

A.5. libX11

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]
   X11 Keyboard Extension [XKBlib]
   X11 C Library [Xlib]

   Table A-5. libX11 Function Interfaces
   XActivateScreenSaver[Xlib] XImageByteOrder[Xlib]
   XcmsCIELabWhiteShiftColors[Xlib]
   XAddConnectionWatch[Xlib] XInitExtension[Xlib]
   XcmsCIELuvClipL[Xlib]
   XAddExtension[Xlib] XInitImage[Xlib] XcmsCIELuvClipLuv[Xlib]
   XAddHost[Xlib] XInitThreads[Xlib] XcmsCIELuvClipuv[Xlib]
   XAddHosts[Xlib] XInsertModifiermapEntry[Xlib]
   XcmsCIELuvQueryMaxC[Xlib]
   XAddPixel[Xlib] XInstallColormap[Xlib]
   XcmsCIELuvQueryMaxL[Xlib]
   XAddToExtensionList[Xlib] XInternAtom[Xlib]
   XcmsCIELuvQueryMaxLC[Xlib]
   XAddToSaveSet[Xlib] XInternAtoms[Xlib]
   XcmsCIELuvQueryMinL[Xlib]
   XAllPlanes[Xlib] XInternalConnectionNumbers[Xlib]
   XcmsCIELuvToCIEuvY[Xlib]
   XAllocClassHint[Xlib] XIntersectRegion[Xlib]
   XcmsCIELuvWhiteShiftColors[Xlib]
   XAllocColor[Xlib] XKeycodeToKeysym[Xlib]
   XcmsCIEXYZToCIELab[Xlib]
   XAllocColorCells[Xlib] XKeysymToKeycode[Xlib]
   XcmsCIEXYZToCIEuvY[Xlib]
   XAllocColorPlanes[Xlib] XKeysymToString[Xlib]
   XcmsCIEXYZToCIExyY[Xlib]
   XAllocIconSize[Xlib] XKillClient[Xlib] XcmsCIEXYZToRGBi[Xlib]
   XAllocNamedColor[Xlib] XLastKnownRequestProcessed[Xlib]
   XcmsCIEuvYToCIELuv[Xlib]
   XAllocSizeHints[Xlib] XListDepths[Xlib]
   XcmsCIEuvYToCIEXYZ[Xlib]
   XAllocStandardColormap[Xlib] XListExtensions[Xlib]
   XcmsCIEuvYToTekHVC[Xlib]
   XAllocWMHints[Xlib] XListFonts[Xlib] XcmsCIExyYToCIEXYZ[Xlib]
   XAllowEvents[Xlib] XListFontsWithInfo[Xlib]
   XcmsClientWhitePointOfCCC[Xlib]
   XAutoRepeatOff[Xlib] XListHosts[Xlib] XcmsConvertColors[Xlib]
   XAutoRepeatOn[Xlib] XListInstalledColormaps[Xlib]
   XcmsCreateCCC[Xlib]
   XBaseFontNameListOfFontSet[Xlib] XListPixmapFormats[Xlib]
   XcmsDefaultCCC[Xlib]
   XBell[Xlib] XListProperties[Xlib] XcmsDisplayOfCCC[Xlib]
   XBitmapBitOrder[Xlib] XLoadFont[Xlib] XcmsFormatOfPrefix[Xlib]
   XBitmapPad[Xlib] XLoadQueryFont[Xlib] XcmsFreeCCC[Xlib]
   XBitmapUnit[Xlib] XLocaleOfFontSet[Xlib] XcmsLookupColor[Xlib]
   XBlackPixel[Xlib] XLocaleOfIM[Xlib] XcmsPrefixOfFormat[Xlib]
   XBlackPixelOfScreen[Xlib] XLocaleOfOM[Xlib]
   XcmsQueryBlack[Xlib]
   XCellsOfScreen[Xlib] XLockDisplay[Xlib] XcmsQueryBlue[Xlib]
   XChangeActivePointerGrab[Xlib] XLookupColor[Xlib]
   XcmsQueryColor[Xlib]
   XChangeGC[Xlib] XLookupKeysym[Xlib] XcmsQueryColors[Xlib]
   XChangeKeyboardControl[Xlib] XLookupString[Xlib]
   XcmsQueryGreen[Xlib]
   XChangeKeyboardMapping[Xlib] XLowerWindow[Xlib]
   XcmsQueryRed[Xlib]
   XChangePointerControl[Xlib] XMapRaised[Xlib]
   XcmsQueryWhite[Xlib]
   XChangeProperty[Xlib] XMapSubwindows[Xlib] XcmsRGBToRGBi[Xlib]
   XChangeSaveSet[Xlib] XMapWindow[Xlib] XcmsRGBiToCIEXYZ[Xlib]
   XChangeWindowAttributes[Xlib] XMaskEvent[Xlib]
   XcmsRGBiToRGB[Xlib]
   XCheckIfEvent[Xlib] XMatchVisualInfo[Xlib]
   XcmsScreenNumberOfCCC[Xlib]
   XCheckMaskEvent[Xlib] XMaxCmapsOfScreen[Xlib]
   XcmsScreenWhitePointOfCCC[Xlib]
   XCheckTypedEvent[Xlib] XMaxRequestSize[Xlib]
   XcmsSetCCCOfColormap[Xlib]
   XCheckTypedWindowEvent[Xlib] XMinCmapsOfScreen[Xlib]
   XcmsSetCompressionProc[Xlib]
   XCheckWindowEvent[Xlib] XMoveResizeWindow[Xlib]
   XcmsSetWhiteAdjustProc[Xlib]
   XCirculateSubwindows[Xlib] XMoveWindow[Xlib]
   XcmsSetWhitePoint[Xlib]
   XCirculateSubwindowsDown[Xlib] XNewModifiermap[Xlib]
   XcmsStoreColor[Xlib]
   XCirculateSubwindowsUp[Xlib] XNextEvent[Xlib]
   XcmsStoreColors[Xlib]
   XClearArea[Xlib] XNextRequest[Xlib] XcmsTekHVCClipC[Xlib]
   XClearWindow[Xlib] XNoOp[Xlib] XcmsTekHVCClipV[Xlib]
   XClipBox[Xlib] XOMOfOC[Xlib] XcmsTekHVCClipVC[Xlib]
   XCloseDisplay[Xlib] XOffsetRegion[Xlib]
   XcmsTekHVCQueryMaxC[Xlib]
   XCloseIM[Xlib] XOpenDisplay[Xlib] XcmsTekHVCQueryMaxV[Xlib]
   XCloseOM[Xlib] XOpenIM[Xlib] XcmsTekHVCQueryMaxVC[Xlib]
   XConfigureWindow[Xlib] XOpenOM[Xlib]
   XcmsTekHVCQueryMaxVSamples[Xlib]
   XConnectionNumber[Xlib] XParseColor[Xlib]
   XcmsTekHVCQueryMinV[Xlib]
   XContextDependentDrawing[Xlib] XParseGeometry[Xlib]
   XcmsTekHVCToCIEuvY[Xlib]
   XContextualDrawing[Xlib] XPeekEvent[Xlib]
   XcmsTekHVCWhiteShiftColors[Xlib]
   XConvertCase[Xlib] XPeekIfEvent[Xlib] XcmsVisualOfCCC[Xlib]
   XConvertSelection[Xlib] XPending[Xlib]
   XkbAllocClientMap[XKBlib]
   XCopyArea[Xlib] XPlanesOfScreen[Xlib] XkbAllocCompatMap[XKBlib]
   XCopyColormapAndFree[Xlib] XPointInRegion[Xlib]
   XkbAllocControls[XKBlib]
   XCopyGC[Xlib] XPolygonRegion[Xlib] XkbAllocGeomColors[XKBlib]
   XCopyPlane[Xlib] XProcessInternalConnection[Xlib]
   XkbAllocGeomDoodads[XKBlib]
   XCreateBitmapFromData[Xlib] XProtocolRevision[Xlib]
   XkbAllocGeomKeyAliases[XKBlib]
   XCreateColormap[Xlib] XProtocolVersion[Xlib]
   XkbAllocGeomKeys[XKBlib]
   XCreateFontCursor[Xlib] XPutBackEvent[Xlib]
   XkbAllocGeomOutlines[XKBlib]
   XCreateFontSet[Xlib] XPutImage[Xlib]
   XkbAllocGeomOverlayKeys[XKBlib]
   XCreateGC[Xlib] XPutPixel[Xlib] XkbAllocGeomOverlayRows[XKBlib]
   XCreateGlyphCursor[Xlib] XQLength[Xlib]
   XkbAllocGeomOverlays[XKBlib]
   XCreateIC[Xlib] XQueryBestCursor[Xlib]
   XkbAllocGeomPoints[XKBlib]
   XCreateImage[Xlib] XQueryBestSize[Xlib]
   XkbAllocGeomProps[XKBlib]
   XCreateOC[Xlib] XQueryBestStipple[Xlib]
   XkbAllocGeomRows[XKBlib]
   XCreatePixmap[Xlib] XQueryBestTile[Xlib]
   XkbAllocGeomSectionDoodads[XKBlib]
   XCreatePixmapCursor[Xlib] XQueryColor[Xlib]
   XkbAllocGeomSections[XKBlib]
   XCreatePixmapFromBitmapData[Xlib] XQueryColors[Xlib]
   XkbAllocGeomShapes[XKBlib]
   XCreateRegion[Xlib] XQueryExtension[Xlib]
   XkbAllocGeometry[XKBlib]
   XCreateSimpleWindow[Xlib] XQueryFont[Xlib]
   XkbAllocIndicatorMaps[XKBlib]
   XCreateWindow[Xlib] XQueryKeymap[Xlib] XkbAllocKeyboard[XKBlib]
   XDefaultColormap[Xlib] XQueryPointer[Xlib]
   XkbAllocNames[XKBlib]
   XDefaultColormapOfScreen[Xlib] XQueryTextExtents[Xlib]
   XkbAllocServerMap[XKBlib]
   XDefaultDepth[Xlib] XQueryTextExtents16[Xlib]
   XkbApplyCompatMapToKey[XKBlib]
   XDefaultDepthOfScreen[Xlib] XQueryTree[Xlib] XkbBell[XKBlib]
   XDefaultGC[Xlib] XRaiseWindow[Xlib] XkbBellEvent[XKBlib]
   XDefaultGCOfScreen[Xlib] XReadBitmapFile[Xlib]
   XkbChangeEnabledControls[XKBlib]
   XDefaultRootWindow[Xlib] XReadBitmapFileData[Xlib]
   XkbChangeMap[XKBlib]
   XDefaultScreen[Xlib] XRebindKeysym[Xlib] XkbChangeNames[XKBlib]
   XDefaultScreenOfDisplay[Xlib] XRecolorCursor[Xlib]
   XkbChangeTypesOfKey[XKBlib]
   XDefaultString[Xlib] XReconfigureWMWindow[Xlib]
   XkbComputeEffectiveMap[XKBlib]
   XDefaultVisual[Xlib] XRectInRegion[Xlib]
   XkbComputeRowBounds[XKBlib]
   XDefaultVisualOfScreen[Xlib] XRefreshKeyboardMapping[Xlib]
   XkbComputeSectionBounds[XKBlib]
   XDefineCursor[Xlib] XRegisterIMInstantiateCallback[Xlib]
   XkbComputeShapeBounds[XKBlib]
   XDeleteContext[Xlib] XRemoveConnectionWatch[Xlib]
   XkbComputeShapeTop[XKBlib]
   XDeleteModifiermapEntry[Xlib] XRemoveFromSaveSet[Xlib]
   XkbCopyKeyType[XKBlib]
   XDeleteProperty[Xlib] XRemoveHost[Xlib] XkbCopyKeyTypes[XKBlib]
   XDestroyIC[Xlib] XRemoveHosts[Xlib]
   XkbFindOverlayForKey[XKBlib]
   XDestroyImage[Xlib] XReparentWindow[Xlib] XkbForceBell[XKBlib]
   XDestroyOC[Xlib] XResetScreenSaver[Xlib]
   XkbFreeClientMap[XKBlib]
   XDestroyRegion[Xlib] XResizeWindow[Xlib]
   XkbFreeCompatMap[XKBlib]
   XDestroySubwindows[Xlib] XResourceManagerString[Xlib]
   XkbFreeComponentList[XKBlib]
   XDestroyWindow[Xlib] XRestackWindows[Xlib]
   XkbFreeControls[XKBlib]
   XDirectionalDependentDrawing[Xlib] XRootWindow[Xlib]
   XkbFreeGeomColors[XKBlib]
   XDisableAccessControl[Xlib] XRootWindowOfScreen[Xlib]
   XkbFreeGeomDoodads[XKBlib]
   XDisplayCells[Xlib] XRotateBuffers[Xlib]
   XkbFreeGeomKeyAliases[XKBlib]
   XDisplayHeight[Xlib] XRotateWindowProperties[Xlib]
   XkbFreeGeomKeys[XKBlib]
   XDisplayHeightMM[Xlib] XSaveContext[Xlib]
   XkbFreeGeomOutlines[XKBlib]
   XDisplayKeycodes[Xlib] XScreenCount[Xlib]
   XkbFreeGeomOverlayKeys[XKBlib]
   XDisplayMotionBufferSize[Xlib] XScreenNumberOfScreen[Xlib]
   XkbFreeGeomOverlayRows[XKBlib]
   XDisplayName[Xlib] XScreenOfDisplay[Xlib]
   XkbFreeGeomOverlays[XKBlib]
   XDisplayOfIM[Xlib] XScreenResourceString[Xlib]
   XkbFreeGeomPoints[XKBlib]
   XDisplayOfOM[Xlib] XSelectInput[Xlib]
   XkbFreeGeomProperties[XKBlib]
   XDisplayOfScreen[Xlib] XSendEvent[Xlib] XkbFreeGeomRows[XKBlib]
   XDisplayPlanes[Xlib] XServerVendor[Xlib]
   XkbFreeGeomSections[XKBlib]
   XDisplayString[Xlib] XSetAccessControl[Xlib]
   XkbFreeGeomShapes[XKBlib]
   XDisplayWidth[Xlib] XSetAfterFunction[Xlib]
   XkbFreeGeometry[XKBlib]
   XDisplayWidthMM[Xlib] XSetArcMode[Xlib]
   XkbFreeIndicatorMaps[XKBlib]
   XDoesBackingStore[Xlib] XSetAuthorization[Xlib]
   XkbFreeKeyboard[XKBlib]
   XDoesSaveUnders[Xlib] XSetBackground[Xlib] XkbFreeNames[XKBlib]
   XDrawArc[Xlib] XSetClassHint[Xlib] XkbFreeServerMap[XKBlib]
   XDrawArcs[Xlib] XSetClipMask[Xlib] XkbGetAutoRepeatRate[XKBlib]
   XDrawImageString[Xlib] XSetClipOrigin[Xlib]
   XkbGetCompatMap[XKBlib]
   XDrawImageString16[Xlib] XSetClipRectangles[Xlib]
   XkbGetControls[XKBlib]
   XDrawLine[Xlib] XSetCloseDownMode[Xlib] XkbGetGeometry[XKBlib]
   XDrawLines[Xlib] XSetCommand[Xlib] XkbGetIndicatorMap[XKBlib]
   XDrawPoint[Xlib] XSetDashes[Xlib] XkbGetIndicatorState[XKBlib]
   XDrawPoints[Xlib] XSetErrorHandler[Xlib]
   XkbGetKeyActions[XKBlib]
   XDrawRectangle[Xlib] XSetFillRule[Xlib]
   XkbGetKeyBehaviors[XKBlib]
   XDrawRectangles[Xlib] XSetFillStyle[Xlib]
   XkbGetKeyExplicitComponents[XKBlib]
   XDrawSegments[Xlib] XSetFont[Xlib] XkbGetKeyModifierMap[XKBlib]
   XDrawString[Xlib] XSetFontPath[Xlib] XkbGetKeySyms[XKBlib]
   XDrawString16[Xlib] XSetForeground[Xlib] XkbGetKeyTypes[XKBlib]
   XDrawText[Xlib] XSetFunction[Xlib] XkbGetKeyboard[XKBlib]
   XDrawText16[Xlib] XSetGraphicsExposures[Xlib]
   XkbGetKeyboardByName[XKBlib]
   XEHeadOfExtensionList[Xlib] XSetICFocus[Xlib] XkbGetMap[XKBlib]
   XESetBeforeFlush[Xlib] XSetICValues[Xlib]
   XkbGetMapChanges[XKBlib]
   XESetCloseDisplay[Xlib] XSetIMValues[Xlib]
   XkbGetNamedGeometry[XKBlib]
   XESetCopyGC[Xlib] XSetIOErrorHandler[Xlib]
   XkbGetNamedIndicator[XKBlib]
   XESetCreateFont[Xlib] XSetIconName[Xlib] XkbGetNames[XKBlib]
   XESetCreateGC[Xlib] XSetIconSizes[Xlib]
   XkbGetPerClientControls[XKBlib]
   XESetError[Xlib] XSetInputFocus[Xlib] XkbGetState[XKBlib]
   XESetErrorString[Xlib] XSetLineAttributes[Xlib]
   XkbGetUpdatedMap[XKBlib]
   XESetEventToWire[Xlib] XSetLocaleModifiers[Xlib]
   XkbGetVirtualMods[XKBlib]
   XESetFlushGC[Xlib] XSetModifierMapping[Xlib]
   XkbGetXlibControls[XKBlib]
   XESetFreeFont[Xlib] XSetNormalHints[Xlib]
   XkbIgnoreExtension[XKBlib]
   XESetFreeGC[Xlib] XSetOCValues[Xlib]
   XkbInitCanonicalKeyTypes[XKBlib]
   XESetPrintErrorValues[Xlib] XSetOMValues[Xlib]
   XkbKeyTypesForCoreSymbols[XKBlib]
   XESetWireToError[Xlib] XSetPlaneMask[Xlib]
   XkbKeycodeToKeysym[XKBlib]
   XESetWireToEvent[Xlib] XSetPointerMapping[Xlib]
   XkbKeysymToModifiers[XKBlib]
   XEmptyRegion[Xlib] XSetRGBColormaps[Xlib] XkbLatchGroup[XKBlib]
   XEnableAccessControl[Xlib] XSetRegion[Xlib]
   XkbLatchModifiers[XKBlib]
   XEqualRegion[Xlib] XSetScreenSaver[Xlib]
   XkbLibraryVersion[XKBlib]
   XEventMaskOfScreen[Xlib] XSetSelectionOwner[Xlib]
   XkbListComponents[XKBlib]
   XEventsQueued[Xlib] XSetSizeHints[Xlib] XkbLockGroup[XKBlib]
   XExtendedMaxRequestSize[Xlib] XSetStandardColormap[Xlib]
   XkbLockModifiers[XKBlib]
   XExtentsOfFontSet[Xlib] XSetStandardProperties[Xlib]
   XkbLookupKeyBinding[XKBlib]
   XFetchBuffer[Xlib] XSetState[Xlib] XkbLookupKeySym[XKBlib]
   XFetchBytes[Xlib] XSetStipple[Xlib]
   XkbNoteControlsChanges[XKBlib]
   XFetchName[Xlib] XSetSubwindowMode[Xlib]
   XkbNoteMapChanges[XKBlib]
   XFillArc[Xlib] XSetTSOrigin[Xlib] XkbNoteNameChanges[XKBlib]
   XFillArcs[Xlib] XSetTextProperty[Xlib] XkbOpenDisplay[XKBlib]
   XFillPolygon[Xlib] XSetTile[Xlib] XkbQueryExtension[XKBlib]
   XFillRectangle[Xlib] XSetTransientForHint[Xlib]
   XkbRefreshKeyboardMapping[XKBlib]
   XFillRectangles[Xlib] XSetWMClientMachine[Xlib]
   XkbResizeKeyActions[XKBlib]
   XFilterEvent[Xlib] XSetWMColormapWindows[Xlib]
   XkbResizeKeySyms[XKBlib]
   XFindContext[Xlib] XSetWMHints[Xlib] XkbResizeKeyType[XKBlib]
   XFindOnExtensionList[Xlib] XSetWMIconName[Xlib]
   XkbSelectEventDetails[XKBlib]
   XFlush[Xlib] XSetWMName[Xlib] XkbSelectEvents[XKBlib]
   XFlushGC[Xlib] XSetWMNormalHints[Xlib] XkbSetAtomFuncs[XKBlib]
   XFontsOfFontSet[Xlib] XSetWMProperties[Xlib]
   XkbSetAutoRepeatRate[XKBlib]
   XForceScreenSaver[Xlib] XSetWMProtocols[Xlib]
   XkbSetAutoResetControls[XKBlib]
   XFree[Xlib] XSetWMSizeHints[Xlib] XkbSetCompatMap[XKBlib]
   XFreeColormap[Xlib] XSetWindowBackground[Xlib]
   XkbSetControls[XKBlib]
   XFreeColors[Xlib] XSetWindowBackgroundPixmap[Xlib]
   XkbSetDebuggingFlags[XKBlib]
   XFreeCursor[Xlib] XSetWindowBorder[Xlib]
   XkbSetDetectableAutoRepeat[XKBlib]
   XFreeExtensionList[Xlib] XSetWindowBorderPixmap[Xlib]
   XkbSetGeometry[XKBlib]
   XFreeFont[Xlib] XSetWindowBorderWidth[Xlib]
   XkbSetIgnoreLockMods[XKBlib]
   XFreeFontInfo[Xlib] XSetWindowColormap[Xlib]
   XkbSetIndicatorMap[XKBlib]
   XFreeFontNames[Xlib] XSetZoomHints[Xlib] XkbSetMap[XKBlib]
   XFreeFontPath[Xlib] XShrinkRegion[Xlib]
   XkbSetNamedIndicator[XKBlib]
   XFreeFontSet[Xlib] XStoreBuffer[Xlib] XkbSetNames[XKBlib]
   XFreeGC[Xlib] XStoreBytes[Xlib] XkbSetPerClientControls[XKBlib]
   XFreeModifiermap[Xlib] XStoreColor[Xlib]
   XkbSetServerInternalMods[XKBlib]
   XFreePixmap[Xlib] XStoreColors[Xlib] XkbSetXlibControls[XKBlib]
   XFreeStringList[Xlib] XStoreName[Xlib] XkbToControl[XKBlib]
   XGContextFromGC[Xlib] XStoreNamedColor[Xlib]
   XkbTranslateKeyCode[XKBlib]
   XGeometry[Xlib] XStringListToTextProperty[Xlib]
   XkbTranslateKeySym[XKBlib]
   XGetAtomName[Xlib] XStringToKeysym[Xlib]
   XkbUpdateMapFromCore[XKBlib]
   XGetAtomNames[Xlib] XSubImage[Xlib] XkbUseExtension[XKBlib]
   XGetClassHint[Xlib] XSubtractRegion[Xlib]
   XkbVirtualModsToReal[XKBlib]
   XGetCommand[Xlib] XSupportsLocale[Xlib]
   XmbDrawImageString[Xlib]
   XGetDefault[Xlib] XSync[Xlib] XmbDrawString[Xlib]
   XGetErrorDatabaseText[Xlib] XSynchronize[Xlib]
   XmbDrawText[Xlib]
   XGetErrorText[Xlib] XTextExtents[Xlib] XmbLookupString[Xlib]
   XGetFontPath[Xlib] XTextExtents16[Xlib] XmbResetIC[Xlib]
   XGetFontProperty[Xlib] XTextPropertyToStringList[Xlib]
   XmbSetWMProperties[Xlib]
   XGetGCValues[Xlib] XTextWidth[Xlib] XmbTextEscapement[Xlib]
   XGetGeometry[Xlib] XTextWidth16[Xlib] XmbTextExtents[Xlib]
   XGetICValues[Xlib] XTranslateCoordinates[Xlib]
   XmbTextListToTextProperty[Xlib]
   XGetIMValues[Xlib] XUndefineCursor[Xlib]
   XmbTextPerCharExtents[Xlib]
   XGetIconName[Xlib] XUngrabButton[Xlib]
   XmbTextPropertyToTextList[Xlib]
   XGetIconSizes[Xlib] XUngrabKey[Xlib] XrmCombineDatabase[Xlib]
   XGetImage[Xlib] XUngrabKeyboard[Xlib]
   XrmCombineFileDatabase[Xlib]
   XGetInputFocus[Xlib] XUngrabPointer[Xlib]
   XrmDestroyDatabase[Xlib]
   XGetKeyboardControl[Xlib] XUngrabServer[Xlib]
   XrmEnumerateDatabase[Xlib]
   XGetKeyboardMapping[Xlib] XUninstallColormap[Xlib]
   XrmGetDatabase[Xlib]
   XGetModifierMapping[Xlib] XUnionRectWithRegion[Xlib]
   XrmGetFileDatabase[Xlib]
   XGetMotionEvents[Xlib] XUnionRegion[Xlib] XrmGetResource[Xlib]
   XGetNormalHints[Xlib] XUnloadFont[Xlib]
   XrmGetStringDatabase[Xlib]
   XGetOCValues[Xlib] XUnlockDisplay[Xlib] XrmInitialize[Xlib]
   XGetOMValues[Xlib] XUnmapSubwindows[Xlib]
   XrmLocaleOfDatabase[Xlib]
   XGetPixel[Xlib] XUnmapWindow[Xlib] XrmMergeDatabases[Xlib]
   XGetPointerControl[Xlib] XUnregisterIMInstantiateCallback[Xlib]
   XrmParseCommand[Xlib]
   XGetPointerMapping[Xlib] XUnsetICFocus[Xlib]
   XrmPermStringToQuark[Xlib]
   XGetRGBColormaps[Xlib] XVaCreateNestedList[Xlib]
   XrmPutFileDatabase[Xlib]
   XGetScreenSaver[Xlib] XVendorRelease[Xlib]
   XrmPutLineResource[Xlib]
   XGetSelectionOwner[Xlib] XVisualIDFromVisual[Xlib]
   XrmPutResource[Xlib]
   XGetSizeHints[Xlib] XWMGeometry[Xlib]
   XrmPutStringResource[Xlib]
   XGetStandardColormap[Xlib] XWarpPointer[Xlib]
   XrmQGetResource[Xlib]
   XGetSubImage[Xlib] XWhitePixel[Xlib] XrmQGetSearchList[Xlib]
   XGetTextProperty[Xlib] XWhitePixelOfScreen[Xlib]
   XrmQGetSearchResource[Xlib]
   XGetTransientForHint[Xlib] XWidthMMOfScreen[Xlib]
   XrmQPutResource[Xlib]
   XGetVisualInfo[Xlib] XWidthOfScreen[Xlib]
   XrmQPutStringResource[Xlib]
   XGetWMClientMachine[Xlib] XWindowEvent[Xlib]
   XrmQuarkToString[Xlib]
   XGetWMColormapWindows[Xlib] XWithdrawWindow[Xlib]
   XrmSetDatabase[Xlib]
   XGetWMHints[Xlib] XWriteBitmapFile[Xlib]
   XrmStringToBindingQuarkList[Xlib]
   XGetWMIconName[Xlib] XXorRegion[Xlib] XrmStringToQuark[Xlib]
   XGetWMName[Xlib] XauDisposeAuth[Xlib]
   XrmStringToQuarkList[Xlib]
   XGetWMNormalHints[Xlib] XauFileName[Xlib] XrmUniqueQuark[Xlib]
   XGetWMProtocols[Xlib] XauGetBestAuthByAddr[Xlib]
   Xutf8TextListToTextProperty[LSB]
   XGetWMSizeHints[Xlib] XauReadAuth[Xlib]
   Xutf8TextPropertyToTextList[LSB]
   XGetWindowAttributes[Xlib] XcmsAddColorSpace[Xlib]
   XwcDrawImageString[Xlib]
   XGetWindowProperty[Xlib] XcmsAddFunctionSet[Xlib]
   XwcDrawString[Xlib]
   XGetZoomHints[Xlib] XcmsAllocColor[Xlib] XwcDrawText[Xlib]
   XGrabButton[Xlib] XcmsAllocNamedColor[Xlib]
   XwcFreeStringList[Xlib]
   XGrabKey[Xlib] XcmsCCCOfColormap[Xlib] XwcLookupString[Xlib]
   XGrabKeyboard[Xlib] XcmsCIELabClipL[Xlib] XwcResetIC[Xlib]
   XGrabPointer[Xlib] XcmsCIELabClipLab[Xlib]
   XwcTextEscapement[Xlib]
   XGrabServer[Xlib] XcmsCIELabClipab[Xlib] XwcTextExtents[Xlib]
   XHeightMMOfScreen[Xlib] XcmsCIELabQueryMaxC[Xlib]
   XwcTextListToTextProperty[Xlib]
   XHeightOfScreen[Xlib] XcmsCIELabQueryMaxL[Xlib]
   XwcTextPerCharExtents[Xlib]
   XIMOfIC[Xlib] XcmsCIELabQueryMaxLC[Xlib]
   XwcTextPropertyToTextList[Xlib]
   XIconifyWindow[Xlib] XcmsCIELabQueryMinL[Xlib]
   XIfEvent[Xlib] XcmsCIELabToCIEXYZ[Xlib]
     __________________________________________________________

A.6. libXext

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]
   Double Buffer Extension Library [X-dbe]
   X Display Power Management Signaling [X-DPMS]
   X Extended Visual Interface Extension [X-evi]
   X Security Extension Specification [X-security]
   X Nonrectangular Window Shape Extension Library [X-shape]
   The MIT Shared Memory Extension [X-shm]
   X Synchronization Extension Library [X-sync]

   Table A-6. libXext Function Interfaces
   DPMSCapable[X-DPMS] XShmCreatePixmap[X-shm]
   XSyncValueEqual[X-sync]
   DPMSDisable[X-DPMS] XShmDetach[X-shm]
   XSyncValueGreaterOrEqual[X-sync]
   DPMSEnable[X-DPMS] XShmGetEventBase[X-shm]
   XSyncValueGreaterThan[X-sync]
   DPMSForceLevel[X-DPMS] XShmGetImage[X-shm]
   XSyncValueHigh32[X-sync]
   DPMSGetTimeouts[X-DPMS] XShmPixmapFormat[X-shm]
   XSyncValueIsNegative[X-sync]
   DPMSGetVersion[X-DPMS] XShmPutImage[X-shm]
   XSyncValueIsPositive[X-sync]
   DPMSInfo[X-DPMS] XShmQueryExtension[X-shm]
   XSyncValueIsZero[X-sync]
   DPMSQueryExtension[X-DPMS] XShmQueryVersion[X-shm]
   XSyncValueLessOrEqual[X-sync]
   DPMSSetTimeouts[X-DPMS] XSyncAwait[X-sync]
   XSyncValueLessThan[X-sync]
   XMissingExtension[LSB] XSyncChangeAlarm[X-sync]
   XSyncValueLow32[X-sync]
   XSecurityAllocXauth[X-security] XSyncChangeCounter[X-sync]
   XSyncValueSubtract[X-sync]
   XSecurityFreeXauth[X-security] XSyncCreateAlarm[X-sync]
   XdbeAllocateBackBufferName[X-dbe]
   XSecurityGenerateAuthorization[X-security]
   XSyncCreateCounter[X-sync] XdbeBeginIdiom[X-dbe]
   XSecurityQueryExtension[X-security] XSyncDestroyAlarm[X-sync]
   XdbeDeallocateBackBufferName[X-dbe]
   XSecurityRevokeAuthorization[X-security]
   XSyncDestroyCounter[X-sync] XdbeEndIdiom[X-dbe]
   XSetExtensionErrorHandler[LSB]
   XSyncFreeSystemCounterList[X-sync] XdbeFreeVisualInfo[X-dbe]
   XShapeCombineMask[X-shape] XSyncGetPriority[X-sync]
   XdbeGetBackBufferAttributes[X-dbe]
   XShapeCombineRectangles[X-shape] XSyncInitialize[X-sync]
   XdbeGetVisualInfo[X-dbe]
   XShapeCombineRegion[X-shape] XSyncIntToValue[X-sync]
   XdbeQueryExtension[X-dbe]
   XShapeCombineShape[X-shape] XSyncIntsToValue[X-sync]
   XdbeSwapBuffers[X-dbe]
   XShapeGetRectangles[X-shape] XSyncListSystemCounters[X-sync]
   XeviGetVisualInfo[X-evi]
   XShapeInputSelected[X-shape] XSyncMaxValue[X-sync]
   XeviQueryExtension[X-evi]
   XShapeOffsetShape[X-shape] XSyncMinValue[X-sync]
   XeviQueryVersion[X-evi]
   XShapeQueryExtension[X-shape] XSyncQueryAlarm[X-sync]
   XextAddDisplay[LSB]
   XShapeQueryExtents[X-shape] XSyncQueryCounter[X-sync]
   XextCreateExtension[LSB]
   XShapeQueryVersion[X-shape] XSyncQueryExtension[X-sync]
   XextDestroyExtension[LSB]
   XShapeSelectInput[X-shape] XSyncSetCounter[X-sync]
   XextFindDisplay[LSB]
   XShmAttach[X-shm] XSyncSetPriority[X-sync]
   XextRemoveDisplay[LSB]
   XShmCreateImage[X-shm] XSyncValueAdd[X-sync]
     __________________________________________________________

A.7. libXft

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]

   Table A-7. libXft Function Interfaces
   XftCharExists[LSB] XftDrawSetClipRectangles[LSB]
   XftGlyphFontSpecRender[LSB]
   XftCharFontSpecRender[LSB] XftDrawSetSubwindowMode[LSB]
   XftGlyphRender[LSB]
   XftCharIndex[LSB] XftDrawSrcPicture[LSB]
   XftGlyphSpecRender[LSB]
   XftCharSpecRender[LSB] XftDrawString16[LSB] XftInit[LSB]
   XftColorAllocName[LSB] XftDrawString32[LSB]
   XftInitFtLibrary[LSB]
   XftColorAllocValue[LSB] XftDrawString8[LSB] XftListFonts[LSB]
   XftColorFree[LSB] XftDrawStringUtf16[LSB] XftLockFace[LSB]
   XftDefaultHasRender[LSB] XftDrawStringUtf8[LSB]
   XftNameParse[LSB]
   XftDefaultSet[LSB] XftDrawVisual[LSB] XftTextExtents16[LSB]
   XftDefaultSubstitute[LSB] XftFontCheckGlyph[LSB]
   XftTextExtents32[LSB]
   XftDrawChange[LSB] XftFontClose[LSB] XftTextExtents8[LSB]
   XftDrawCharFontSpec[LSB] XftFontCopy[LSB]
   XftTextExtentsUtf16[LSB]
   XftDrawCharSpec[LSB] XftFontInfoCreate[LSB]
   XftTextExtentsUtf8[LSB]
   XftDrawColormap[LSB] XftFontInfoDestroy[LSB]
   XftTextRender16[LSB]
   XftDrawCreate[LSB] XftFontInfoEqual[LSB] XftTextRender16BE[LSB]
   XftDrawCreateAlpha[LSB] XftFontInfoHash[LSB]
   XftTextRender16LE[LSB]
   XftDrawCreateBitmap[LSB] XftFontLoadGlyphs[LSB]
   XftTextRender32[LSB]
   XftDrawDestroy[LSB] XftFontMatch[LSB] XftTextRender32BE[LSB]
   XftDrawDisplay[LSB] XftFontOpen[LSB] XftTextRender32LE[LSB]
   XftDrawDrawable[LSB] XftFontOpenInfo[LSB] XftTextRender8[LSB]
   XftDrawGlyphFontSpec[LSB] XftFontOpenName[LSB]
   XftTextRenderUtf16[LSB]
   XftDrawGlyphSpec[LSB] XftFontOpenPattern[LSB]
   XftTextRenderUtf8[LSB]
   XftDrawGlyphs[LSB] XftFontOpenXlfd[LSB] XftUnlockFace[LSB]
   XftDrawPicture[LSB] XftFontUnloadGlyphs[LSB] XftXlfdParse[LSB]
   XftDrawRect[LSB] XftGetVersion[LSB]
   XftDrawSetClip[LSB] XftGlyphExtents[LSB]
     __________________________________________________________

A.8. libXi

   The behavior of the interfaces in this library is specified by
   the following Standards.

   X11 Input Library [XINPUT]

   Table A-8. libXi Function Interfaces
   XAllowDeviceEvents[XINPUT] XGetDeviceButtonMapping[XINPUT]
   XOpenDevice[XINPUT]
   XChangeDeviceControl[XINPUT] XGetDeviceControl[XINPUT]
   XQueryDeviceState[XINPUT]
   XChangeDeviceDontPropagateList[XINPUT]
   XGetDeviceDontPropagateList[XINPUT]
   XSelectExtensionEvent[XINPUT]
   XChangeDeviceKeyMapping[XINPUT] XGetDeviceFocus[XINPUT]
   XSendExtensionEvent[XINPUT]
   XChangeFeedbackControl[XINPUT] XGetDeviceKeyMapping[XINPUT]
   XSetDeviceButtonMapping[XINPUT]
   XChangeKeyboardDevice[XINPUT] XGetDeviceModifierMapping[XINPUT]
   XSetDeviceFocus[XINPUT]
   XChangePointerDevice[XINPUT] XGetDeviceMotionEvents[XINPUT]
   XSetDeviceMode[XINPUT]
   XCloseDevice[XINPUT] XGetExtensionVersion[XINPUT]
   XSetDeviceModifierMapping[XINPUT]
   XDeviceBell[XINPUT] XGetFeedbackControl[XINPUT]
   XSetDeviceValuators[XINPUT]
   XFreeDeviceControl[XINPUT] XGetSelectedExtensionEvents[XINPUT]
   XUngrabDevice[XINPUT]
   XFreeDeviceList[XINPUT] XGrabDevice[XINPUT]
   XUngrabDeviceButton[XINPUT]
   XFreeDeviceMotionEvents[XINPUT] XGrabDeviceButton[XINPUT]
   XUngrabDeviceKey[XINPUT]
   XFreeDeviceState[XINPUT] XGrabDeviceKey[XINPUT]
   XFreeFeedbackList[XINPUT] XListInputDevices[XINPUT]
     __________________________________________________________

A.9. libXrender

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]

   Table A-9. libXrender Function Interfaces
   XRenderAddGlyphs[LSB] XRenderCreateAnimCursor[LSB]
   XRenderFreePicture[LSB]
   XRenderAddTraps[LSB] XRenderCreateConicalGradient[LSB]
   XRenderParseColor[LSB]
   XRenderChangePicture[LSB] XRenderCreateCursor[LSB]
   XRenderQueryExtension[LSB]
   XRenderComposite[LSB] XRenderCreateGlyphSet[LSB]
   XRenderQueryFilters[LSB]
   XRenderCompositeDoublePoly[LSB]
   XRenderCreateLinearGradient[LSB] XRenderQueryFormats[LSB]
   XRenderCompositeString16[LSB] XRenderCreatePicture[LSB]
   XRenderQueryPictIndexValues[LSB]
   XRenderCompositeString32[LSB] XRenderCreateRadialGradient[LSB]
   XRenderQuerySubpixelOrder[LSB]
   XRenderCompositeString8[LSB] XRenderCreateSolidFill[LSB]
   XRenderQueryVersion[LSB]
   XRenderCompositeText16[LSB] XRenderFillRectangle[LSB]
   XRenderReferenceGlyphSet[LSB]
   XRenderCompositeText32[LSB] XRenderFillRectangles[LSB]
   XRenderSetPictureClipRectangles[LSB]
   XRenderCompositeText8[LSB] XRenderFindFormat[LSB]
   XRenderSetPictureClipRegion[LSB]
   XRenderCompositeTrapezoids[LSB] XRenderFindStandardFormat[LSB]
   XRenderSetPictureFilter[LSB]
   XRenderCompositeTriFan[LSB] XRenderFindVisualFormat[LSB]
   XRenderSetPictureTransform[LSB]
   XRenderCompositeTriStrip[LSB] XRenderFreeGlyphSet[LSB]
   XRenderSetSubpixelOrder[LSB]
   XRenderCompositeTriangles[LSB] XRenderFreeGlyphs[LSB]
     __________________________________________________________

A.10. libXt

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]
   X11 Toolkit Intrinsics [Xt]

   Table A-10. libXt Function Interfaces
   XtAddActions[Xt] XtCvtStringToInitialState[Xt]
   XtOwnSelectionIncremental[Xt]
   XtAddCallback[Xt] XtCvtStringToInt[Xt] XtParent[Xt]
   XtAddCallbacks[Xt] XtCvtStringToPixel[Xt]
   XtParseAcceleratorTable[Xt]
   XtAddConverter[Xt] XtCvtStringToRestartStyle[Xt]
   XtParseTranslationTable[Xt]
   XtAddEventHandler[Xt] XtCvtStringToShort[Xt] XtPeekEvent[Xt]
   XtAddExposureToRegion[Xt] XtCvtStringToTranslationTable[Xt]
   XtPending[Xt]
   XtAddGrab[Xt] XtCvtStringToUnsignedChar[Xt] XtPopdown[Xt]
   XtAddInput[Xt] XtCvtStringToVisual[Xt] XtPopup[Xt]
   XtAddRawEventHandler[Xt] XtDatabase[Xt] XtPopupSpringLoaded[Xt]
   XtAddSignal[Xt] XtDestroyApplicationContext[Xt]
   XtProcessEvent[Xt]
   XtAddTimeOut[Xt] XtDestroyGC[Xt] XtProcessLock[Xt]
   XtAddWorkProc[Xt] XtDestroyWidget[Xt] XtProcessUnlock[Xt]
   XtAllocateGC[Xt] XtDirectConvert[Xt] XtQueryGeometry[Xt]
   XtAppAddActionHook[Xt] XtDisownSelection[Xt]
   XtRealizeWidget[Xt]
   XtAppAddActions[Xt] XtDispatchEvent[Xt] XtRealloc[Xt]
   XtAppAddBlockHook[Xt] XtDispatchEventToWidget[Xt]
   XtRegisterCaseConverter[Xt]
   XtAppAddConverter[Xt] XtDisplay[Xt] XtRegisterDrawable[Xt]
   XtAppAddInput[Xt] XtDisplayInitialize[Xt]
   XtRegisterExtensionSelector[Xt]
   XtAppAddSignal[Xt] XtDisplayOfObject[Xt]
   XtRegisterGrabAction[Xt]
   XtAppAddTimeOut[Xt] XtDisplayStringConversionWarning[Xt]
   XtReleaseGC[Xt]
   XtAppAddWorkProc[Xt] XtDisplayToApplicationContext[Xt]
   XtReleasePropertyAtom[Xt]
   XtAppCreateShell[Xt] XtError[Xt] XtRemoveActionHook[Xt]
   XtAppError[Xt] XtErrorMsg[Xt] XtRemoveAllCallbacks[Xt]
   XtAppErrorMsg[Xt] XtFindFile[Xt] XtRemoveBlockHook[Xt]
   XtAppGetErrorDatabase[Xt] XtFree[Xt] XtRemoveCallback[Xt]
   XtAppGetErrorDatabaseText[Xt] XtGetActionKeysym[Xt]
   XtRemoveCallbacks[Xt]
   XtAppGetExitFlag[Xt] XtGetActionList[Xt]
   XtRemoveEventHandler[Xt]
   XtAppGetSelectionTimeout[Xt] XtGetApplicationNameAndClass[Xt]
   XtRemoveEventTypeHandler[Xt]
   XtAppInitialize[Xt] XtGetApplicationResources[Xt]
   XtRemoveGrab[Xt]
   XtAppLock[Xt] XtGetClassExtension[Xt] XtRemoveInput[Xt]
   XtAppMainLoop[Xt] XtGetConstraintResourceList[Xt]
   XtRemoveRawEventHandler[Xt]
   XtAppNextEvent[Xt] XtGetDisplays[Xt] XtRemoveSignal[Xt]
   XtAppPeekEvent[Xt] XtGetErrorDatabase[Xt] XtRemoveTimeOut[Xt]
   XtAppPending[Xt] XtGetErrorDatabaseText[Xt]
   XtRemoveWorkProc[Xt]
   XtAppProcessEvent[Xt] XtGetGC[Xt] XtReservePropertyAtom[Xt]
   XtAppReleaseCacheRefs[Xt] XtGetKeyboardFocusWidget[Xt]
   XtResizeWidget[Xt]
   XtAppSetErrorHandler[Xt] XtGetKeysymTable[Xt]
   XtResizeWindow[Xt]
   XtAppSetErrorMsgHandler[Xt] XtGetMultiClickTime[Xt]
   XtResolvePathname[Xt]
   XtAppSetExitFlag[Xt] XtGetResourceList[Xt] XtScreen[Xt]
   XtAppSetFallbackResources[Xt] XtGetSelectionParameters[Xt]
   XtScreenDatabase[Xt]
   XtAppSetSelectionTimeout[Xt] XtGetSelectionRequest[Xt]
   XtScreenOfObject[Xt]
   XtAppSetTypeConverter[Xt] XtGetSelectionTimeout[Xt]
   XtSendSelectionRequest[Xt]
   XtAppSetWarningHandler[Xt] XtGetSelectionValue[Xt]
   XtSessionGetToken[Xt]
   XtAppSetWarningMsgHandler[Xt]
   XtGetSelectionValueIncremental[Xt] XtSessionReturnToken[Xt]
   XtAppUnlock[Xt] XtGetSelectionValues[Xt] XtSetErrorHandler[Xt]
   XtAppWarning[Xt] XtGetSelectionValuesIncremental[Xt]
   XtSetErrorMsgHandler[Xt]
   XtAppWarningMsg[Xt] XtGetSubresources[Xt]
   XtSetEventDispatcher[Xt]
   XtAugmentTranslations[Xt] XtGetSubvalues[Xt]
   XtSetKeyTranslator[Xt]
   XtBuildEventMask[Xt] XtGetValues[Xt] XtSetKeyboardFocus[Xt]
   XtCallAcceptFocus[Xt] XtGrabButton[Xt] XtSetLanguageProc[Xt]
   XtCallActionProc[Xt] XtGrabKey[Xt] XtSetMappedWhenManaged[Xt]
   XtCallCallbackList[Xt] XtGrabKeyboard[Xt]
   XtSetMultiClickTime[Xt]
   XtCallCallbacks[Xt] XtGrabPointer[Xt]
   XtSetSelectionParameters[Xt]
   XtCallConverter[Xt] XtHasCallbacks[Xt]
   XtSetSelectionTimeout[Xt]
   XtCallbackExclusive[Xt] XtHooksOfDisplay[Xt] XtSetSensitive[Xt]
   XtCallbackNone[Xt] XtInitialize[Xt] XtSetSubvalues[Xt]
   XtCallbackNonexclusive[Xt] XtInitializeWidgetClass[Xt]
   XtSetTypeConverter[Xt]
   XtCallbackPopdown[Xt] XtInsertEventHandler[Xt] XtSetValues[Xt]
   XtCallbackReleaseCacheRef[Xt] XtInsertEventTypeHandler[Xt]
   XtSetWMColormapWindows[Xt]
   XtCallbackReleaseCacheRefList[Xt] XtInsertRawEventHandler[Xt]
   XtSetWarningHandler[Xt]
   XtCalloc[Xt] XtInstallAccelerators[Xt]
   XtSetWarningMsgHandler[Xt]
   XtCancelSelectionRequest[Xt] XtInstallAllAccelerators[Xt]
   XtStringConversionWarning[Xt]
   XtChangeManagedSet[Xt] XtIsApplicationShell[Xt]
   XtSuperclass[Xt]
   XtClass[Xt] XtIsComposite[Xt] XtToolkitInitialize[Xt]
   XtCloseDisplay[Xt] XtIsConstraint[Xt]
   XtToolkitThreadInitialize[Xt]
   XtConfigureWidget[Xt] XtIsManaged[Xt] XtTranslateCoords[Xt]
   XtConvert[Xt] XtIsObject[Xt] XtTranslateKey[Xt]
   XtConvertAndStore[Xt] XtIsOverrideShell[Xt]
   XtTranslateKeycode[Xt]
   XtConvertCase[Xt] XtIsRealized[Xt] XtUngrabButton[Xt]
   XtCreateApplicationContext[Xt] XtIsRectObj[Xt] XtUngrabKey[Xt]
   XtCreateApplicationShell[Xt] XtIsSensitive[Xt]
   XtUngrabKeyboard[Xt]
   XtCreateManagedWidget[Xt] XtIsSessionShell[Xt]
   XtUngrabPointer[Xt]
   XtCreatePopupShell[Xt] XtIsShell[Xt]
   XtUninstallTranslations[Xt]
   XtCreateSelectionRequest[Xt] XtIsSubclass[Xt]
   XtUnmanageChild[Xt]
   XtCreateWidget[Xt] XtIsTopLevelShell[Xt] XtUnmanageChildren[Xt]
   XtCreateWindow[Xt] XtIsTransientShell[Xt] XtUnmapWidget[Xt]
   XtCvtColorToPixel[Xt] XtIsVendorShell[Xt] XtUnrealizeWidget[Xt]
   XtCvtIntToBool[Xt] XtIsWMShell[Xt] XtUnregisterDrawable[Xt]
   XtCvtIntToBoolean[Xt] XtIsWidget[Xt] XtVaAppCreateShell[Xt]
   XtCvtIntToColor[Xt] XtKeysymToKeycodeList[Xt]
   XtVaAppInitialize[Xt]
   XtCvtIntToFloat[Xt] XtLastEventProcessed[Xt]
   XtVaCreateArgsList[Xt]
   XtCvtIntToFont[Xt] XtLastTimestampProcessed[Xt]
   XtVaCreateManagedWidget[Xt]
   XtCvtIntToPixel[Xt] XtMainLoop[Xt] XtVaCreatePopupShell[Xt]
   XtCvtIntToPixmap[Xt] XtMakeGeometryRequest[Xt]
   XtVaCreateWidget[Xt]
   XtCvtIntToShort[Xt] XtMakeResizeRequest[Xt]
   XtVaGetApplicationResources[Xt]
   XtCvtIntToUnsignedChar[Xt] XtMalloc[Xt] XtVaGetSubresources[Xt]
   XtCvtStringToAcceleratorTable[Xt] XtManageChild[Xt]
   XtVaGetSubvalues[Xt]
   XtCvtStringToAtom[Xt] XtManageChildren[Xt] XtVaGetValues[Xt]
   XtCvtStringToBool[Xt] XtMapWidget[Xt] XtVaOpenApplication[Xt]
   XtCvtStringToBoolean[Xt] XtMenuPopupAction[Xt]
   XtVaSetSubvalues[Xt]
   XtCvtStringToCommandArgArray[Xt] XtMergeArgLists[Xt]
   XtVaSetValues[Xt]
   XtCvtStringToCursor[Xt] XtMoveWidget[Xt] XtWarning[Xt]
   XtCvtStringToDimension[Xt] XtName[Xt] XtWarningMsg[Xt]
   XtCvtStringToDirectoryString[Xt] XtNameToWidget[Xt]
   XtWidgetToApplicationContext[Xt]
   XtCvtStringToDisplay[Xt] XtNewString[Xt] XtWindow[Xt]
   XtCvtStringToFile[Xt] XtNextEvent[Xt] XtWindowOfObject[Xt]
   XtCvtStringToFloat[Xt] XtNoticeSignal[Xt] XtWindowToWidget[Xt]
   XtCvtStringToFont[Xt] XtOpenApplication[Xt]
   _XtCheckSubclassFlag[Xt]
   XtCvtStringToFontSet[Xt] XtOpenDisplay[Xt] _XtCopyFromArg[LSB]
   XtCvtStringToFontStruct[Xt] XtOverrideTranslations[Xt]
   _XtInherit[LSB]
   XtCvtStringToGravity[Xt] XtOwnSelection[Xt]
   _XtIsSubclassOf[LSB]

   Table A-11. libXt Data Interfaces
   XtCXtToolkitError[Xt] constraintWidgetClass[Xt]
   shellWidgetClass[Xt]
   XtShellStrings[Xt] coreWidgetClass[Xt]
   topLevelShellClassRec[Xt]
   XtStrings[Xt] objectClass[Xt] topLevelShellWidgetClass[Xt]
   _XtInheritTranslations[LSB] objectClassRec[Xt]
   transientShellClassRec[Xt]
   applicationShellClassRec[Xt] overrideShellClassRec[Xt]
   transientShellWidgetClass[Xt]
   applicationShellWidgetClass[Xt] overrideShellWidgetClass[Xt]
   widgetClass[Xt]
   colorConvertArgs[Xt] rectObjClass[Xt] widgetClassRec[Xt]
   compositeClassRec[Xt] rectObjClassRec[Xt] wmShellClassRec[Xt]
   compositeWidgetClass[Xt] sessionShellClassRec[Xt]
   wmShellWidgetClass[Xt]
   constraintClassRec[Xt] sessionShellWidgetClass[Xt]
     __________________________________________________________

A.11. libXtst

   The behavior of the interfaces in this library is specified by
   the following Standards.

   XTEST Extension Library [X-test]

   Table A-12. libXtst Function Interfaces
   XTestCompareCurrentCursorWithWindow[X-test]
   XTestFakeDeviceKeyEvent[X-test]
   XTestFakeRelativeMotionEvent[X-test]
   XTestCompareCursorWithWindow[X-test]
   XTestFakeDeviceMotionEvent[X-test] XTestGrabControl[X-test]
   XTestDiscard[X-test] XTestFakeKeyEvent[X-test]
   XTestQueryExtension[X-test]
   XTestFakeButtonEvent[X-test] XTestFakeMotionEvent[X-test]
   XTestSetGContextOfGC[X-test]
   XTestFakeDeviceButtonEvent[X-test]
   XTestFakeProximityEvent[X-test]
   XTestSetVisualIDOfVisual[X-test]
     __________________________________________________________

A.12. libcairo

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Cairo API Reference [Cairo 1.12.4]
   This Specification [LSB]

   Table A-13. libcairo Function Interfaces
   cairo_append_path[Cairo 1.12.4]
   cairo_mesh_pattern_get_corner_color_rgba[Cairo 1.12.4]
   cairo_script_set_mode[Cairo 1.12.4]
   cairo_arc[Cairo 1.12.4]
   cairo_mesh_pattern_get_patch_count[Cairo 1.12.4]
   cairo_script_surface_create[Cairo 1.12.4]
   cairo_arc_negative[Cairo 1.12.4]
   cairo_mesh_pattern_get_path[Cairo 1.12.4]
   cairo_script_surface_create_for_target[Cairo 1.12.4]
   cairo_clip[Cairo 1.12.4] cairo_mesh_pattern_line_to[Cairo
   1.12.4] cairo_script_write_comment[Cairo 1.12.4]
   cairo_clip_preserve[Cairo 1.12.4]
   cairo_mesh_pattern_move_to[Cairo 1.12.4]
   cairo_select_font_face[Cairo 1.12.4]
   cairo_close_path[Cairo 1.12.4]
   cairo_mesh_pattern_set_control_point[Cairo 1.12.4]
   cairo_set_antialias[Cairo 1.12.4]
   cairo_copy_page[Cairo 1.12.4]
   cairo_mesh_pattern_set_corner_color_rgb[Cairo 1.12.4]
   cairo_set_dash[Cairo 1.12.4]
   cairo_copy_path[Cairo 1.12.4]
   cairo_mesh_pattern_set_corner_color_rgba[Cairo 1.12.4]
   cairo_set_fill_rule[Cairo 1.12.4]
   cairo_copy_path_flat[Cairo 1.12.4] cairo_move_to[Cairo 1.12.4]
   cairo_set_font_face[Cairo 1.12.4]
   cairo_create[Cairo 1.12.4] cairo_new_path[Cairo 1.12.4]
   cairo_set_font_matrix[Cairo 1.12.4]
   cairo_curve_to[Cairo 1.12.4] cairo_new_sub_path[Cairo 1.12.4]
   cairo_set_font_options[Cairo 1.12.4]
   cairo_destroy[Cairo 1.12.4] cairo_paint[Cairo 1.12.4]
   cairo_set_font_size[Cairo 1.12.4]
   cairo_device_acquire[Cairo 1.12.4] cairo_paint_with_alpha[Cairo
   1.12.4] cairo_set_line_cap[Cairo 1.12.4]
   cairo_device_destroy[Cairo 1.12.4] cairo_path_destroy[Cairo
   1.12.4] cairo_set_line_join[Cairo 1.12.4]
   cairo_device_finish[Cairo 1.12.4] cairo_path_extents[Cairo
   1.12.4] cairo_set_line_width[Cairo 1.12.4]
   cairo_device_flush[Cairo 1.12.4]
   cairo_pattern_add_color_stop_rgb[Cairo 1.12.4]
   cairo_set_matrix[Cairo 1.12.4]
   cairo_device_get_reference_count[Cairo 1.12.4]
   cairo_pattern_add_color_stop_rgba[Cairo 1.12.4]
   cairo_set_miter_limit[Cairo 1.12.4]
   cairo_device_get_type[Cairo 1.12.4]
   cairo_pattern_create_for_surface[Cairo 1.12.4]
   cairo_set_operator[Cairo 1.12.4]
   cairo_device_get_user_data[Cairo 1.12.4]
   cairo_pattern_create_linear[Cairo 1.12.4]
   cairo_set_scaled_font[Cairo 1.12.4]
   cairo_device_observer_elapsed[LSB]
   cairo_pattern_create_mesh[Cairo 1.12.4] cairo_set_source[Cairo
   1.12.4]
   cairo_device_observer_fill_elapsed[LSB]
   cairo_pattern_create_radial[Cairo 1.12.4]
   cairo_set_source_rgb[Cairo 1.12.4]
   cairo_device_observer_glyphs_elapsed[LSB]
   cairo_pattern_create_raster_source[Cairo 1.12.4]
   cairo_set_source_rgba[Cairo 1.12.4]
   cairo_device_observer_mask_elapsed[LSB]
   cairo_pattern_create_rgb[Cairo 1.12.4]
   cairo_set_source_surface[Cairo 1.12.4]
   cairo_device_observer_paint_elapsed[LSB]
   cairo_pattern_create_rgba[Cairo 1.12.4]
   cairo_set_tolerance[Cairo 1.12.4]
   cairo_device_observer_print[LSB] cairo_pattern_destroy[Cairo
   1.12.4] cairo_show_glyphs[Cairo 1.12.4]
   cairo_device_observer_stroke_elapsed[LSB]
   cairo_pattern_get_extend[Cairo 1.12.4] cairo_show_page[Cairo
   1.12.4]
   cairo_device_reference[Cairo 1.12.4]
   cairo_pattern_get_filter[Cairo 1.12.4] cairo_show_text[Cairo
   1.12.4]
   cairo_device_release[Cairo 1.12.4]
   cairo_pattern_get_matrix[Cairo 1.12.4]
   cairo_show_text_glyphs[Cairo 1.12.4]
   cairo_device_set_user_data[Cairo 1.12.4]
   cairo_pattern_get_type[Cairo 1.12.4] cairo_status[Cairo 1.12.4]
   cairo_device_status[Cairo 1.12.4] cairo_pattern_reference[Cairo
   1.12.4] cairo_status_to_string[Cairo 1.12.4]
   cairo_device_to_user[Cairo 1.12.4]
   cairo_pattern_set_extend[Cairo 1.12.4] cairo_stroke[Cairo
   1.12.4]
   cairo_device_to_user_distance[Cairo 1.12.4]
   cairo_pattern_set_filter[Cairo 1.12.4]
   cairo_stroke_extents[Cairo 1.12.4]
   cairo_fill[Cairo 1.12.4] cairo_pattern_set_matrix[Cairo 1.12.4]
   cairo_stroke_preserve[Cairo 1.12.4]
   cairo_fill_extents[Cairo 1.12.4] cairo_pattern_status[Cairo
   1.12.4] cairo_surface_copy_page[Cairo 1.12.4]
   cairo_fill_preserve[Cairo 1.12.4] cairo_pdf_get_versions[Cairo
   1.12.4] cairo_surface_create_for_rectangle[Cairo 1.12.4]
   cairo_font_extents[Cairo 1.12.4] cairo_pdf_surface_create[Cairo
   1.12.4] cairo_surface_create_observer[LSB]
   cairo_font_face_destroy[Cairo 1.12.4]
   cairo_pdf_surface_create_for_stream[Cairo 1.12.4]
   cairo_surface_create_similar[Cairo 1.12.4]
   cairo_font_face_get_type[Cairo 1.12.4]
   cairo_pdf_surface_restrict_to_version[Cairo 1.12.4]
   cairo_surface_create_similar_image[Cairo 1.12.4]
   cairo_font_face_get_user_data[Cairo 1.12.4]
   cairo_pdf_surface_set_size[Cairo 1.12.4]
   cairo_surface_destroy[Cairo 1.12.4]
   cairo_font_face_reference[Cairo 1.12.4]
   cairo_pdf_version_to_string[Cairo 1.12.4]
   cairo_surface_finish[Cairo 1.12.4]
   cairo_font_face_set_user_data[Cairo 1.12.4]
   cairo_pop_group[Cairo 1.12.4] cairo_surface_flush[Cairo 1.12.4]
   cairo_font_face_status[Cairo 1.12.4]
   cairo_pop_group_to_source[Cairo 1.12.4]
   cairo_surface_get_content[Cairo 1.12.4]
   cairo_font_options_copy[Cairo 1.12.4] cairo_ps_get_levels[Cairo
   1.12.4] cairo_surface_get_device[Cairo 1.12.4]
   cairo_font_options_create[Cairo 1.12.4]
   cairo_ps_level_to_string[Cairo 1.12.4]
   cairo_surface_get_device_offset[Cairo 1.12.4]
   cairo_font_options_destroy[Cairo 1.12.4]
   cairo_ps_surface_create[Cairo 1.12.4]
   cairo_surface_get_fallback_resolution[Cairo 1.12.4]
   cairo_font_options_equal[Cairo 1.12.4]
   cairo_ps_surface_create_for_stream[Cairo 1.12.4]
   cairo_surface_get_font_options[Cairo 1.12.4]
   cairo_font_options_get_antialias[Cairo 1.12.4]
   cairo_ps_surface_dsc_begin_page_setup[Cairo 1.12.4]
   cairo_surface_get_mime_data[Cairo 1.12.4]
   cairo_font_options_get_hint_metrics[Cairo 1.12.4]
   cairo_ps_surface_dsc_begin_setup[Cairo 1.12.4]
   cairo_surface_get_type[Cairo 1.12.4]
   cairo_font_options_get_hint_style[Cairo 1.12.4]
   cairo_ps_surface_dsc_comment[Cairo 1.12.4]
   cairo_surface_get_user_data[Cairo 1.12.4]
   cairo_font_options_get_subpixel_order[Cairo 1.12.4]
   cairo_ps_surface_get_eps[Cairo 1.12.4]
   cairo_surface_has_show_text_glyphs[Cairo 1.12.4]
   cairo_font_options_hash[Cairo 1.12.4]
   cairo_ps_surface_restrict_to_level[Cairo 1.12.4]
   cairo_surface_map_to_image[Cairo 1.12.4]
   cairo_font_options_merge[Cairo 1.12.4]
   cairo_ps_surface_set_eps[Cairo 1.12.4]
   cairo_surface_mark_dirty[Cairo 1.12.4]
   cairo_font_options_set_antialias[Cairo 1.12.4]
   cairo_ps_surface_set_size[Cairo 1.12.4]
   cairo_surface_mark_dirty_rectangle[Cairo 1.12.4]
   cairo_font_options_set_hint_metrics[Cairo 1.12.4]
   cairo_push_group[Cairo 1.12.4]
   cairo_surface_observer_add_fill_callback[LSB]
   cairo_font_options_set_hint_style[Cairo 1.12.4]
   cairo_push_group_with_content[Cairo 1.12.4]
   cairo_surface_observer_add_finish_callback[LSB]
   cairo_font_options_set_subpixel_order[Cairo 1.12.4]
   cairo_raster_source_pattern_get_acquire[Cairo 1.12.4]
   cairo_surface_observer_add_flush_callback[LSB]
   cairo_font_options_status[Cairo 1.12.4]
   cairo_raster_source_pattern_get_callback_data[Cairo 1.12.4]
   cairo_surface_observer_add_glyphs_callback[LSB]
   cairo_format_stride_for_width[Cairo 1.12.4]
   cairo_raster_source_pattern_get_copy[Cairo 1.12.4]
   cairo_surface_observer_add_mask_callback[LSB]
   cairo_ft_font_face_create_for_ft_face[Cairo 1.12.4]
   cairo_raster_source_pattern_get_finish[Cairo 1.12.4]
   cairo_surface_observer_add_paint_callback[LSB]
   cairo_ft_font_face_create_for_pattern[Cairo 1.12.4]
   cairo_raster_source_pattern_get_snapshot[Cairo 1.12.4]
   cairo_surface_observer_add_stroke_callback[LSB]
   cairo_ft_font_face_get_synthesize[Cairo 1.12.4]
   cairo_raster_source_pattern_set_acquire[Cairo 1.12.4]
   cairo_surface_observer_elapsed[LSB]
   cairo_ft_font_face_set_synthesize[Cairo 1.12.4]
   cairo_raster_source_pattern_set_callback_data[Cairo 1.12.4]
   cairo_surface_observer_print[LSB]
   cairo_ft_font_face_unset_synthesize[Cairo 1.12.4]
   cairo_raster_source_pattern_set_copy[Cairo 1.12.4]
   cairo_surface_reference[Cairo 1.12.4]
   cairo_ft_font_options_substitute[Cairo 1.12.4]
   cairo_raster_source_pattern_set_finish[Cairo 1.12.4]
   cairo_surface_set_device_offset[Cairo 1.12.4]
   cairo_ft_scaled_font_lock_face[Cairo 1.12.4]
   cairo_raster_source_pattern_set_snapshot[Cairo 1.12.4]
   cairo_surface_set_fallback_resolution[Cairo 1.12.4]
   cairo_ft_scaled_font_unlock_face[Cairo 1.12.4]
   cairo_recording_surface_create[Cairo 1.12.4]
   cairo_surface_set_mime_data[Cairo 1.12.4]
   cairo_get_antialias[Cairo 1.12.4]
   cairo_recording_surface_get_extents[Cairo 1.12.4]
   cairo_surface_set_user_data[Cairo 1.12.4]
   cairo_get_current_point[Cairo 1.12.4]
   cairo_recording_surface_ink_extents[Cairo 1.12.4]
   cairo_surface_show_page[Cairo 1.12.4]
   cairo_get_fill_rule[Cairo 1.12.4] cairo_rectangle[Cairo 1.12.4]
   cairo_surface_status[Cairo 1.12.4]
   cairo_get_font_face[Cairo 1.12.4] cairo_reference[Cairo 1.12.4]
   cairo_surface_supports_mime_type[Cairo 1.12.4]
   cairo_get_font_matrix[Cairo 1.12.4]
   cairo_region_contains_point[Cairo 1.12.4]
   cairo_surface_unmap_image[Cairo 1.12.4]
   cairo_get_font_options[Cairo 1.12.4]
   cairo_region_contains_rectangle[Cairo 1.12.4]
   cairo_surface_write_to_png[Cairo 1.12.4]
   cairo_get_group_target[Cairo 1.12.4] cairo_region_copy[Cairo
   1.12.4] cairo_surface_write_to_png_stream[Cairo 1.12.4]
   cairo_get_line_cap[Cairo 1.12.4] cairo_region_create[Cairo
   1.12.4] cairo_svg_get_versions[Cairo 1.12.4]
   cairo_get_line_join[Cairo 1.12.4]
   cairo_region_create_rectangle[Cairo 1.12.4]
   cairo_svg_surface_create[Cairo 1.12.4]
   cairo_get_line_width[Cairo 1.12.4]
   cairo_region_create_rectangles[Cairo 1.12.4]
   cairo_svg_surface_create_for_stream[Cairo 1.12.4]
   cairo_get_matrix[Cairo 1.12.4] cairo_region_destroy[Cairo
   1.12.4] cairo_svg_surface_restrict_to_version[Cairo 1.12.4]
   cairo_get_miter_limit[Cairo 1.12.4] cairo_region_equal[Cairo
   1.12.4] cairo_svg_version_to_string[Cairo 1.12.4]
   cairo_get_operator[Cairo 1.12.4] cairo_region_get_extents[Cairo
   1.12.4] cairo_text_cluster_allocate[Cairo 1.12.4]
   cairo_get_source[Cairo 1.12.4] cairo_region_get_rectangle[Cairo
   1.12.4] cairo_text_cluster_free[Cairo 1.12.4]
   cairo_get_target[Cairo 1.12.4] cairo_region_intersect[Cairo
   1.12.4] cairo_text_extents[Cairo 1.12.4]
   cairo_get_tolerance[Cairo 1.12.4]
   cairo_region_intersect_rectangle[Cairo 1.12.4]
   cairo_text_path[Cairo 1.12.4]
   cairo_glyph_allocate[Cairo 1.12.4] cairo_region_is_empty[Cairo
   1.12.4] cairo_toy_font_face_create[Cairo 1.12.4]
   cairo_glyph_extents[Cairo 1.12.4]
   cairo_region_num_rectangles[Cairo 1.12.4]
   cairo_toy_font_face_get_family[Cairo 1.12.4]
   cairo_glyph_free[Cairo 1.12.4] cairo_region_reference[Cairo
   1.12.4] cairo_toy_font_face_get_slant[Cairo 1.12.4]
   cairo_glyph_path[Cairo 1.12.4] cairo_region_status[Cairo
   1.12.4] cairo_toy_font_face_get_weight[Cairo 1.12.4]
   cairo_has_current_point[Cairo 1.12.4]
   cairo_region_subtract[Cairo 1.12.4] cairo_transform[Cairo
   1.12.4]
   cairo_identity_matrix[Cairo 1.12.4]
   cairo_region_subtract_rectangle[Cairo 1.12.4]
   cairo_translate[Cairo 1.12.4]
   cairo_image_surface_create[Cairo 1.12.4]
   cairo_region_translate[Cairo 1.12.4]
   cairo_user_font_face_create[Cairo 1.12.4]
   cairo_image_surface_create_for_data[Cairo 1.12.4]
   cairo_region_union[Cairo 1.12.4]
   cairo_user_font_face_get_init_func[Cairo 1.12.4]
   cairo_image_surface_create_from_png[Cairo 1.12.4]
   cairo_region_union_rectangle[Cairo 1.12.4]
   cairo_user_font_face_get_render_glyph_func[Cairo 1.12.4]
   cairo_image_surface_create_from_png_stream[Cairo 1.12.4]
   cairo_region_xor[Cairo 1.12.4]
   cairo_user_font_face_get_text_to_glyphs_func[Cairo 1.12.4]
   cairo_image_surface_get_data[Cairo 1.12.4]
   cairo_region_xor_rectangle[Cairo 1.12.4]
   cairo_user_font_face_get_unicode_to_glyph_func[Cairo 1.12.4]
   cairo_image_surface_get_format[Cairo 1.12.4]
   cairo_rel_curve_to[Cairo 1.12.4]
   cairo_user_font_face_set_init_func[Cairo 1.12.4]
   cairo_image_surface_get_height[Cairo 1.12.4]
   cairo_rel_line_to[Cairo 1.12.4]
   cairo_user_font_face_set_render_glyph_func[Cairo 1.12.4]
   cairo_image_surface_get_stride[Cairo 1.12.4]
   cairo_rel_move_to[Cairo 1.12.4]
   cairo_user_font_face_set_text_to_glyphs_func[Cairo 1.12.4]
   cairo_image_surface_get_width[Cairo 1.12.4]
   cairo_reset_clip[Cairo 1.12.4]
   cairo_user_font_face_set_unicode_to_glyph_func[Cairo 1.12.4]
   cairo_in_clip[Cairo 1.12.4] cairo_restore[Cairo 1.12.4]
   cairo_user_to_device[Cairo 1.12.4]
   cairo_in_fill[Cairo 1.12.4] cairo_rotate[Cairo 1.12.4]
   cairo_user_to_device_distance[Cairo 1.12.4]
   cairo_in_stroke[Cairo 1.12.4] cairo_save[Cairo 1.12.4]
   cairo_version[Cairo 1.12.4]
   cairo_line_to[Cairo 1.12.4] cairo_scale[Cairo 1.12.4]
   cairo_version_string[Cairo 1.12.4]
   cairo_mask[Cairo 1.12.4] cairo_scaled_font_create[Cairo 1.12.4]
   cairo_xcb_device_get_connection[Cairo 1.12.4]
   cairo_mask_surface[Cairo 1.12.4]
   cairo_scaled_font_destroy[Cairo 1.12.4]
   cairo_xcb_surface_create[Cairo 1.12.4]
   cairo_matrix_init[Cairo 1.12.4] cairo_scaled_font_extents[Cairo
   1.12.4] cairo_xcb_surface_create_for_bitmap[Cairo 1.12.4]
   cairo_matrix_init_identity[Cairo 1.12.4]
   cairo_scaled_font_get_ctm[Cairo 1.12.4]
   cairo_xcb_surface_set_drawable[Cairo 1.12.4]
   cairo_matrix_init_rotate[Cairo 1.12.4]
   cairo_scaled_font_get_font_face[Cairo 1.12.4]
   cairo_xcb_surface_set_size[Cairo 1.12.4]
   cairo_matrix_init_scale[Cairo 1.12.4]
   cairo_scaled_font_get_font_matrix[Cairo 1.12.4]
   cairo_xlib_surface_create[Cairo 1.12.4]
   cairo_matrix_init_translate[Cairo 1.12.4]
   cairo_scaled_font_get_font_options[Cairo 1.12.4]
   cairo_xlib_surface_create_for_bitmap[Cairo 1.12.4]
   cairo_matrix_invert[Cairo 1.12.4]
   cairo_scaled_font_get_scale_matrix[Cairo 1.12.4]
   cairo_xlib_surface_create_with_xrender_format[Cairo 1.12.4]
   cairo_matrix_multiply[Cairo 1.12.4]
   cairo_scaled_font_get_type[Cairo 1.12.4]
   cairo_xlib_surface_get_depth[Cairo 1.12.4]
   cairo_matrix_rotate[Cairo 1.12.4]
   cairo_scaled_font_glyph_extents[Cairo 1.12.4]
   cairo_xlib_surface_get_display[Cairo 1.12.4]
   cairo_matrix_scale[Cairo 1.12.4]
   cairo_scaled_font_reference[Cairo 1.12.4]
   cairo_xlib_surface_get_drawable[Cairo 1.12.4]
   cairo_matrix_transform_distance[Cairo 1.12.4]
   cairo_scaled_font_status[Cairo 1.12.4]
   cairo_xlib_surface_get_height[Cairo 1.12.4]
   cairo_matrix_transform_point[Cairo 1.12.4]
   cairo_scaled_font_text_extents[Cairo 1.12.4]
   cairo_xlib_surface_get_screen[Cairo 1.12.4]
   cairo_matrix_translate[Cairo 1.12.4]
   cairo_scaled_font_text_to_glyphs[Cairo 1.12.4]
   cairo_xlib_surface_get_visual[Cairo 1.12.4]
   cairo_mesh_pattern_begin_patch[Cairo 1.12.4]
   cairo_script_create[Cairo 1.12.4]
   cairo_xlib_surface_get_width[Cairo 1.12.4]
   cairo_mesh_pattern_curve_to[Cairo 1.12.4]
   cairo_script_create_for_stream[Cairo 1.12.4]
   cairo_xlib_surface_get_xrender_format[Cairo 1.12.4]
   cairo_mesh_pattern_end_patch[Cairo 1.12.4]
   cairo_script_from_recording_surface[Cairo 1.12.4]
   cairo_xlib_surface_set_drawable[Cairo 1.12.4]
   cairo_mesh_pattern_get_control_point[Cairo 1.12.4]
   cairo_script_get_mode[Cairo 1.12.4]
   cairo_xlib_surface_set_size[Cairo 1.12.4]
     __________________________________________________________

A.13. libcairo-gobject

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Gobject 2.32 Reference Manual [Gobject 2.32]

   Table A-14. libcairo-gobject Function Interfaces
   cairo_gobject_antialias_get_type[Gobject 2.32]
   cairo_gobject_font_type_get_type[Gobject 2.32]
   cairo_gobject_rectangle_get_type[Gobject 2.32]
   cairo_gobject_content_get_type[Gobject 2.32]
   cairo_gobject_font_weight_get_type[Gobject 2.32]
   cairo_gobject_rectangle_int_get_type[Gobject 2.32]
   cairo_gobject_context_get_type[Gobject 2.32]
   cairo_gobject_format_get_type[Gobject 2.32]
   cairo_gobject_region_get_type[Gobject 2.32]
   cairo_gobject_device_get_type[Gobject 2.32]
   cairo_gobject_hint_metrics_get_type[Gobject 2.32]
   cairo_gobject_region_overlap_get_type[Gobject 2.32]
   cairo_gobject_device_type_get_type[Gobject 2.32]
   cairo_gobject_hint_style_get_type[Gobject 2.32]
   cairo_gobject_scaled_font_get_type[Gobject 2.32]
   cairo_gobject_extend_get_type[Gobject 2.32]
   cairo_gobject_line_cap_get_type[Gobject 2.32]
   cairo_gobject_status_get_type[Gobject 2.32]
   cairo_gobject_fill_rule_get_type[Gobject 2.32]
   cairo_gobject_line_join_get_type[Gobject 2.32]
   cairo_gobject_subpixel_order_get_type[Gobject 2.32]
   cairo_gobject_filter_get_type[Gobject 2.32]
   cairo_gobject_operator_get_type[Gobject 2.32]
   cairo_gobject_surface_get_type[Gobject 2.32]
   cairo_gobject_font_face_get_type[Gobject 2.32]
   cairo_gobject_path_data_type_get_type[Gobject 2.32]
   cairo_gobject_surface_type_get_type[Gobject 2.32]
   cairo_gobject_font_options_get_type[Gobject 2.32]
   cairo_gobject_pattern_get_type[Gobject 2.32]
   cairo_gobject_text_cluster_flags_get_type[Gobject 2.32]
   cairo_gobject_font_slant_get_type[Gobject 2.32]
   cairo_gobject_pattern_type_get_type[Gobject 2.32]
     __________________________________________________________

A.14. libcairo-script-interpreter

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]

   Table A-15. libcairo-script-interpreter Function Interfaces
   cairo_script_interpreter_create[LSB]
   cairo_script_interpreter_finish[LSB]
   cairo_script_interpreter_run[LSB]
   cairo_script_interpreter_destroy[LSB]
   cairo_script_interpreter_get_line_number[LSB]
   cairo_script_interpreter_translate_stream[LSB]
   cairo_script_interpreter_feed_stream[LSB]
   cairo_script_interpreter_install_hooks[LSB]
   cairo_script_interpreter_feed_string[LSB]
   cairo_script_interpreter_reference[LSB]
     __________________________________________________________

A.15. libfontconfig

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Fontconfig Developers Reference [fontconfig]

   Table A-16. libfontconfig Function Interfaces
   FcAtomicCreate[fontconfig] FcFileScan[fontconfig]
   FcPatternAddCharSet[fontconfig]
   FcAtomicDeleteNew[fontconfig] FcFini[fontconfig]
   FcPatternAddDouble[fontconfig]
   FcAtomicDestroy[fontconfig] FcFontList[fontconfig]
   FcPatternAddFTFace[fontconfig]
   FcAtomicLock[fontconfig] FcFontMatch[fontconfig]
   FcPatternAddInteger[fontconfig]
   FcAtomicNewFile[fontconfig] FcFontRenderPrepare[fontconfig]
   FcPatternAddLangSet[fontconfig]
   FcAtomicOrigFile[fontconfig] FcFontSetAdd[fontconfig]
   FcPatternAddMatrix[fontconfig]
   FcAtomicReplaceOrig[fontconfig] FcFontSetCreate[fontconfig]
   FcPatternAddString[fontconfig]
   FcAtomicUnlock[fontconfig] FcFontSetDestroy[fontconfig]
   FcPatternAddWeak[fontconfig]
   FcBlanksAdd[fontconfig] FcFontSetList[fontconfig]
   FcPatternBuild[fontconfig]
   FcBlanksCreate[fontconfig] FcFontSetMatch[fontconfig]
   FcPatternCreate[fontconfig]
   FcBlanksDestroy[fontconfig] FcFontSetPrint[fontconfig]
   FcPatternDel[fontconfig]
   FcBlanksIsMember[fontconfig] FcFontSetSort[fontconfig]
   FcPatternDestroy[fontconfig]
   FcCharSetAddChar[fontconfig] FcFontSetSortDestroy[fontconfig]
   FcPatternDuplicate[fontconfig]
   FcCharSetCopy[fontconfig] FcFontSort[fontconfig]
   FcPatternEqual[fontconfig]
   FcCharSetCount[fontconfig] FcFreeTypeCharIndex[fontconfig]
   FcPatternEqualSubset[fontconfig]
   FcCharSetCreate[fontconfig] FcFreeTypeCharSet[fontconfig]
   FcPatternGet[fontconfig]
   FcCharSetDestroy[fontconfig]
   FcFreeTypeCharSetAndSpacing[fontconfig]
   FcPatternGetBool[fontconfig]
   FcCharSetEqual[fontconfig] FcFreeTypeQuery[fontconfig]
   FcPatternGetCharSet[fontconfig]
   FcCharSetFirstPage[fontconfig] FcGetVersion[fontconfig]
   FcPatternGetDouble[fontconfig]
   FcCharSetHasChar[fontconfig] FcInit[fontconfig]
   FcPatternGetFTFace[fontconfig]
   FcCharSetIntersect[fontconfig] FcInitBringUptoDate[fontconfig]
   FcPatternGetInteger[fontconfig]
   FcCharSetIntersectCount[fontconfig]
   FcInitLoadConfig[fontconfig] FcPatternGetLangSet[fontconfig]
   FcCharSetIsSubset[fontconfig]
   FcInitLoadConfigAndFonts[fontconfig]
   FcPatternGetMatrix[fontconfig]
   FcCharSetNextPage[fontconfig] FcInitReinitialize[fontconfig]
   FcPatternGetString[fontconfig]
   FcCharSetSubtract[fontconfig] FcLangSetAdd[fontconfig]
   FcPatternHash[fontconfig]
   FcCharSetSubtractCount[fontconfig] FcLangSetCompare[fontconfig]
   FcPatternPrint[fontconfig]
   FcCharSetUnion[fontconfig] FcLangSetContains[fontconfig]
   FcPatternReference[fontconfig]
   FcConfigAppFontAddDir[fontconfig] FcLangSetCopy[fontconfig]
   FcPatternVaBuild[fontconfig]
   FcConfigAppFontAddFile[fontconfig] FcLangSetCreate[fontconfig]
   FcStrBasename[fontconfig]
   FcConfigAppFontClear[fontconfig] FcLangSetDestroy[fontconfig]
   FcStrCmp[fontconfig]
   FcConfigBuildFonts[fontconfig] FcLangSetEqual[fontconfig]
   FcStrCmpIgnoreCase[fontconfig]
   FcConfigDestroy[fontconfig] FcLangSetHasLang[fontconfig]
   FcStrCopy[fontconfig]
   FcConfigEnableHome[fontconfig] FcLangSetHash[fontconfig]
   FcStrCopyFilename[fontconfig]
   FcConfigFilename[fontconfig] FcMatrixCopy[fontconfig]
   FcStrDirname[fontconfig]
   FcConfigGetBlanks[fontconfig] FcMatrixEqual[fontconfig]
   FcStrListCreate[fontconfig]
   FcConfigGetCache[fontconfig] FcMatrixMultiply[fontconfig]
   FcStrListDone[fontconfig]
   FcConfigGetConfigDirs[fontconfig] FcMatrixRotate[fontconfig]
   FcStrListNext[fontconfig]
   FcConfigGetConfigFiles[fontconfig] FcMatrixScale[fontconfig]
   FcStrSetAdd[fontconfig]
   FcConfigGetCurrent[fontconfig] FcMatrixShear[fontconfig]
   FcStrSetAddFilename[fontconfig]
   FcConfigGetFontDirs[fontconfig] FcNameConstant[fontconfig]
   FcStrSetCreate[fontconfig]
   FcConfigGetFonts[fontconfig] FcNameGetConstant[fontconfig]
   FcStrSetDel[fontconfig]
   FcConfigGetRescanInterval[fontconfig]
   FcNameGetObjectType[fontconfig] FcStrSetDestroy[fontconfig]
   FcConfigGetRescanInverval[fontconfig] FcNameParse[fontconfig]
   FcStrSetEqual[fontconfig]
   FcConfigHome[fontconfig] FcNameRegisterConstants[fontconfig]
   FcStrSetMember[fontconfig]
   FcConfigParseAndLoad[fontconfig]
   FcNameRegisterObjectTypes[fontconfig] FcUcs4ToUtf8[fontconfig]
   FcConfigSetCurrent[fontconfig] FcNameUnparse[fontconfig]
   FcUtf16Len[fontconfig]
   FcConfigSetRescanInterval[fontconfig]
   FcNameUnregisterConstants[fontconfig] FcUtf16ToUcs4[fontconfig]
   FcConfigSetRescanInverval[fontconfig]
   FcNameUnregisterObjectTypes[fontconfig] FcUtf8Len[fontconfig]
   FcConfigSubstitute[fontconfig] FcObjectSetAdd[fontconfig]
   FcUtf8ToUcs4[fontconfig]
   FcConfigSubstituteWithPat[fontconfig]
   FcObjectSetBuild[fontconfig] FcValueDestroy[fontconfig]
   FcConfigUptoDate[fontconfig] FcObjectSetCreate[fontconfig]
   FcValueEqual[fontconfig]
   FcDefaultSubstitute[fontconfig] FcObjectSetDestroy[fontconfig]
   FcValuePrint[fontconfig]
   FcDirCacheValid[fontconfig] FcObjectSetVaBuild[fontconfig]
   FcValueSave[fontconfig]
   FcDirSave[fontconfig] FcPatternAdd[fontconfig]
   FcDirScan[fontconfig] FcPatternAddBool[fontconfig]
     __________________________________________________________

A.16. libfreetype

   The behavior of the interfaces in this library is specified by
   the following Standards.

   FreeType 2.2 Reference [freetype 2.2]
   This Specification [LSB]

   Table A-17. libfreetype Function Interfaces
   FT_Activate_Size[freetype 2.2] FT_Get_Sfnt_Name_Count[freetype
   2.2] FT_Outline_Render[freetype 2.2]
   FT_Add_Default_Modules[freetype 2.2] FT_Get_Sfnt_Table[freetype
   2.2] FT_Outline_Reverse[freetype 2.2]
   FT_Add_Module[freetype 2.2] FT_Get_X11_Font_Format[LSB]
   FT_Outline_Transform[freetype 2.2]
   FT_Angle_Diff[freetype 2.2] FT_Glyph_Copy[freetype 2.2]
   FT_Outline_Translate[freetype 2.2]
   FT_Atan2[freetype 2.2] FT_Glyph_Get_CBox[freetype 2.2]
   FT_Remove_Module[freetype 2.2]
   FT_Attach_File[freetype 2.2] FT_Glyph_Stroke[freetype 2.2]
   FT_Render_Glyph[freetype 2.2]
   FT_Attach_Stream[freetype 2.2] FT_Glyph_StrokeBorder[freetype
   2.2] FT_RoundFix[freetype 2.2]
   FT_Bitmap_Convert[freetype 2.2] FT_Glyph_To_Bitmap[freetype
   2.2] FT_Select_Charmap[freetype 2.2]
   FT_Bitmap_Copy[freetype 2.2] FT_Glyph_Transform[freetype 2.2]
   FT_Set_Char_Size[freetype 2.2]
   FT_Bitmap_Done[freetype 2.2] FT_Has_PS_Glyph_Names[freetype
   2.2] FT_Set_Charmap[freetype 2.2]
   FT_Bitmap_Embolden[freetype 2.2] FT_Init_FreeType[freetype 2.2]
   FT_Set_Debug_Hook[freetype 2.2]
   FT_Bitmap_New[freetype 2.2] FT_Library_Version[freetype 2.2]
   FT_Set_MM_Blend_Coordinates[freetype 2.2]
   FT_CeilFix[freetype 2.2] FT_List_Add[freetype 2.2]
   FT_Set_MM_Design_Coordinates[freetype 2.2]
   FT_Cos[freetype 2.2] FT_List_Finalize[freetype 2.2]
   FT_Set_Pixel_Sizes[freetype 2.2]
   FT_DivFix[freetype 2.2] FT_List_Find[freetype 2.2]
   FT_Set_Renderer[freetype 2.2]
   FT_Done_Face[freetype 2.2] FT_List_Insert[freetype 2.2]
   FT_Set_Transform[freetype 2.2]
   FT_Done_FreeType[freetype 2.2] FT_List_Iterate[freetype 2.2]
   FT_Set_Var_Blend_Coordinates[freetype 2.2]
   FT_Done_Glyph[freetype 2.2] FT_List_Remove[freetype 2.2]
   FT_Set_Var_Design_Coordinates[freetype 2.2]
   FT_Done_Library[freetype 2.2] FT_List_Up[freetype 2.2]
   FT_Sfnt_Table_Info[freetype 2.2]
   FT_Done_Size[freetype 2.2] FT_Load_Char[freetype 2.2]
   FT_Sin[freetype 2.2]
   FT_FloorFix[freetype 2.2] FT_Load_Glyph[freetype 2.2]
   FT_Stroker_BeginSubPath[freetype 2.2]
   FT_Get_BDF_Charset_ID[freetype 2.2] FT_Load_Sfnt_Table[freetype
   2.2] FT_Stroker_ConicTo[freetype 2.2]
   FT_Get_BDF_Property[freetype 2.2] FT_Matrix_Invert[freetype
   2.2] FT_Stroker_CubicTo[freetype 2.2]
   FT_Get_CMap_Language_ID[freetype 2.2]
   FT_Matrix_Multiply[freetype 2.2] FT_Stroker_Done[freetype 2.2]
   FT_Get_Char_Index[freetype 2.2] FT_MulDiv[freetype 2.2]
   FT_Stroker_EndSubPath[freetype 2.2]
   FT_Get_Charmap_Index[freetype 2.2] FT_MulFix[freetype 2.2]
   FT_Stroker_Export[freetype 2.2]
   FT_Get_First_Char[freetype 2.2] FT_New_Face[freetype 2.2]
   FT_Stroker_ExportBorder[freetype 2.2]
   FT_Get_Glyph[freetype 2.2] FT_New_Library[freetype 2.2]
   FT_Stroker_GetBorderCounts[freetype 2.2]
   FT_Get_Glyph_Name[freetype 2.2] FT_New_Memory_Face[freetype
   2.2] FT_Stroker_GetCounts[freetype 2.2]
   FT_Get_Kerning[freetype 2.2] FT_New_Size[freetype 2.2]
   FT_Stroker_LineTo[freetype 2.2]
   FT_Get_MM_Var[freetype 2.2] FT_OpenType_Validate[freetype 2.2]
   FT_Stroker_New[freetype 2.2]
   FT_Get_Module[freetype 2.2] FT_Open_Face[freetype 2.2]
   FT_Stroker_ParseOutline[freetype 2.2]
   FT_Get_Multi_Master[freetype 2.2] FT_Outline_Check[freetype
   2.2] FT_Stroker_Rewind[freetype 2.2]
   FT_Get_Name_Index[freetype 2.2] FT_Outline_Copy[freetype 2.2]
   FT_Stroker_Set[freetype 2.2]
   FT_Get_Next_Char[freetype 2.2] FT_Outline_Decompose[freetype
   2.2] FT_Tan[freetype 2.2]
   FT_Get_PFR_Advance[freetype 2.2] FT_Outline_Done[freetype 2.2]
   FT_Vector_From_Polar[freetype 2.2]
   FT_Get_PFR_Kerning[freetype 2.2]
   FT_Outline_GetInsideBorder[freetype 2.2]
   FT_Vector_Length[freetype 2.2]
   FT_Get_PFR_Metrics[freetype 2.2]
   FT_Outline_GetOutsideBorder[freetype 2.2]
   FT_Vector_Polarize[freetype 2.2]
   FT_Get_PS_Font_Info[freetype 2.2] FT_Outline_Get_BBox[freetype
   2.2] FT_Vector_Rotate[freetype 2.2]
   FT_Get_PS_Font_Private[freetype 2.2]
   FT_Outline_Get_Bitmap[freetype 2.2]
   FT_Vector_Transform[freetype 2.2]
   FT_Get_Postscript_Name[freetype 2.2]
   FT_Outline_Get_CBox[freetype 2.2] FT_Vector_Unit[freetype 2.2]
   FT_Get_Renderer[freetype 2.2]
   FT_Outline_Get_Orientation[freetype 2.2]
   FT_Get_Sfnt_Name[freetype 2.2] FT_Outline_New[freetype 2.2]
     __________________________________________________________

A.17. libjpeg

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]

   Table A-18. libjpeg Function Interfaces
   jpeg_CreateCompress(LIBJPEG_6.2)[LSB]
   jpeg_finish_decompress(LIBJPEG_6.2)[LSB]
   jpeg_set_quality(LIBJPEG_6.2)[LSB]
   jpeg_CreateDecompress(LIBJPEG_6.2)[LSB]
   jpeg_finish_output(LIBJPEG_6.2)[LSB]
   jpeg_simple_progression(LIBJPEG_6.2)[LSB]
   jpeg_abort(LIBJPEG_6.2)[LSB]
   jpeg_has_multiple_scans(LIBJPEG_6.2)[LSB]
   jpeg_start_compress(LIBJPEG_6.2)[LSB]
   jpeg_abort_compress(LIBJPEG_6.2)[LSB]
   jpeg_input_complete(LIBJPEG_6.2)[LSB]
   jpeg_start_decompress(LIBJPEG_6.2)[LSB]
   jpeg_abort_decompress(LIBJPEG_6.2)[LSB]
   jpeg_new_colormap(LIBJPEG_6.2)[LSB]
   jpeg_start_output(LIBJPEG_6.2)[LSB]
   jpeg_add_quant_table(LIBJPEG_6.2)[LSB]
   jpeg_quality_scaling(LIBJPEG_6.2)[LSB]
   jpeg_std_error(LIBJPEG_6.2)[LSB]
   jpeg_alloc_huff_table(LIBJPEG_6.2)[LSB]
   jpeg_read_coefficients(LIBJPEG_6.2)[LSB]
   jpeg_stdio_dest(LIBJPEG_6.2)[LSB]
   jpeg_alloc_quant_table(LIBJPEG_6.2)[LSB]
   jpeg_read_header(LIBJPEG_6.2)[LSB]
   jpeg_stdio_src(LIBJPEG_6.2)[LSB]
   jpeg_calc_output_dimensions(LIBJPEG_6.2)[LSB]
   jpeg_read_raw_data(LIBJPEG_6.2)[LSB]
   jpeg_suppress_tables(LIBJPEG_6.2)[LSB]
   jpeg_consume_input(LIBJPEG_6.2)[LSB]
   jpeg_read_scanlines(LIBJPEG_6.2)[LSB]
   jpeg_write_coefficients(LIBJPEG_6.2)[LSB]
   jpeg_copy_critical_parameters(LIBJPEG_6.2)[LSB]
   jpeg_resync_to_restart(LIBJPEG_6.2)[LSB]
   jpeg_write_m_byte(LIBJPEG_6.2)[LSB]
   jpeg_default_colorspace(LIBJPEG_6.2)[LSB]
   jpeg_save_markers(LIBJPEG_6.2)[LSB]
   jpeg_write_m_header(LIBJPEG_6.2)[LSB]
   jpeg_destroy(LIBJPEG_6.2)[LSB]
   jpeg_set_colorspace(LIBJPEG_6.2)[LSB]
   jpeg_write_marker(LIBJPEG_6.2)[LSB]
   jpeg_destroy_compress(LIBJPEG_6.2)[LSB]
   jpeg_set_defaults(LIBJPEG_6.2)[LSB]
   jpeg_write_raw_data(LIBJPEG_6.2)[LSB]
   jpeg_destroy_decompress(LIBJPEG_6.2)[LSB]
   jpeg_set_linear_quality(LIBJPEG_6.2)[LSB]
   jpeg_write_scanlines(LIBJPEG_6.2)[LSB]
   jpeg_finish_compress(LIBJPEG_6.2)[LSB]
   jpeg_set_marker_processor(LIBJPEG_6.2)[LSB]
   jpeg_write_tables(LIBJPEG_6.2)[LSB]
     __________________________________________________________

A.18. libpng12

   The behavior of the interfaces in this library is specified by
   the following Standards.

   This Specification [LSB]

   Table A-19. libpng12 Function Interfaces
   png_access_version_number(PNG12_0)[LSB]
   png_get_user_chunk_ptr(PNG12_0)[LSB]
   png_set_invert_mono(PNG12_0)[LSB]
   png_check_sig(PNG12_0)[LSB] png_get_valid(PNG12_0)[LSB]
   png_set_keep_unknown_chunks(PNG12_0)[LSB]
   png_convert_from_struct_tm(PNG12_0)[LSB]
   png_get_x_offset_pixels(PNG12_0)[LSB]
   png_set_mem_fn(PNG12_0)[LSB]
   png_convert_from_time_t(PNG12_0)[LSB]
   png_get_x_pixels_per_meter(PNG12_0)[LSB]
   png_set_oFFs(PNG12_0)[LSB]
   png_create_info_struct(PNG12_0)[LSB]
   png_get_y_offset_pixels(PNG12_0)[LSB]
   png_set_pHYs(PNG12_0)[LSB]
   png_create_read_struct(PNG12_0)[LSB]
   png_get_y_pixels_per_meter(PNG12_0)[LSB]
   png_set_packing(PNG12_0)[LSB]
   png_create_read_struct_2(PNG12_0)[LSB]
   png_info_init_3(PNG12_0)[LSB] png_set_packswap(PNG12_0)[LSB]
   png_create_write_struct(PNG12_0)[LSB] png_init_io(PNG12_0)[LSB]
   png_set_palette_to_rgb(PNG12_0)[LSB]
   png_create_write_struct_2(PNG12_0)[LSB]
   png_malloc(PNG12_0)[LSB]
   png_set_progressive_read_fn(PNG12_0)[LSB]
   png_data_freer(PNG12_0)[LSB]
   png_permit_mng_features(PNG12_0)[LSB]
   png_set_read_fn(PNG12_0)[LSB]
   png_destroy_info_struct(PNG12_0)[LSB]
   png_process_data(PNG12_0)[LSB]
   png_set_read_user_chunk_fn(PNG12_0)[LSB]
   png_destroy_read_struct(PNG12_0)[LSB]
   png_progressive_combine_row(PNG12_0)[LSB]
   png_set_read_user_transform_fn(PNG12_0)[LSB]
   png_destroy_write_struct(PNG12_0)[LSB]
   png_read_end(PNG12_0)[LSB] png_set_rgb_to_gray(PNG12_0)[LSB]
   png_error(PNG12_0)[LSB] png_read_image(PNG12_0)[LSB]
   png_set_rows(PNG12_0)[LSB]
   png_free(PNG12_0)[LSB] png_read_info(PNG12_0)[LSB]
   png_set_sBIT(PNG12_0)[LSB]
   png_free_data(PNG12_0)[LSB] png_read_png(PNG12_0)[LSB]
   png_set_sRGB(PNG12_0)[LSB]
   png_get_IHDR(PNG12_0)[LSB] png_read_row(PNG12_0)[LSB]
   png_set_sRGB_gAMA_and_cHRM(PNG12_0)[LSB]
   png_get_PLTE(PNG12_0)[LSB] png_read_rows(PNG12_0)[LSB]
   png_set_shift(PNG12_0)[LSB]
   png_get_bKGD(PNG12_0)[LSB] png_read_update_info(PNG12_0)[LSB]
   png_set_sig_bytes(PNG12_0)[LSB]
   png_get_bit_depth(PNG12_0)[LSB] png_set_IHDR(PNG12_0)[LSB]
   png_set_strip_16(PNG12_0)[LSB]
   png_get_cHRM(PNG12_0)[LSB] png_set_PLTE(PNG12_0)[LSB]
   png_set_strip_alpha(PNG12_0)[LSB]
   png_get_channels(PNG12_0)[LSB] png_set_bKGD(PNG12_0)[LSB]
   png_set_swap(PNG12_0)[LSB]
   png_get_color_type(PNG12_0)[LSB]
   png_set_background(PNG12_0)[LSB]
   png_set_swap_alpha(PNG12_0)[LSB]
   png_get_error_ptr(PNG12_0)[LSB] png_set_bgr(PNG12_0)[LSB]
   png_set_tIME(PNG12_0)[LSB]
   png_get_gAMA(PNG12_0)[LSB] png_set_cHRM(PNG12_0)[LSB]
   png_set_tRNS(PNG12_0)[LSB]
   png_get_hIST(PNG12_0)[LSB]
   png_set_compression_buffer_size(PNG12_0)[LSB]
   png_set_tRNS_to_alpha(PNG12_0)[LSB]
   png_get_header_ver(PNG12_0)[LSB]
   png_set_compression_level(PNG12_0)[LSB]
   png_set_text(PNG12_0)[LSB]
   png_get_iCCP(PNG12_0)[LSB]
   png_set_compression_mem_level(PNG12_0)[LSB]
   png_set_unknown_chunk_location(PNG12_0)[LSB]
   png_get_image_height(PNG12_0)[LSB]
   png_set_compression_method(PNG12_0)[LSB]
   png_set_unknown_chunks(PNG12_0)[LSB]
   png_get_image_width(PNG12_0)[LSB]
   png_set_compression_strategy(PNG12_0)[LSB]
   png_set_write_fn(PNG12_0)[LSB]
   png_get_interlace_type(PNG12_0)[LSB]
   png_set_compression_window_bits(PNG12_0)[LSB]
   png_set_write_status_fn(PNG12_0)[LSB]
   png_get_io_ptr(PNG12_0)[LSB] png_set_dither(PNG12_0)[LSB]
   png_set_write_user_transform_fn(PNG12_0)[LSB]
   png_get_libpng_ver(PNG12_0)[LSB] png_set_error_fn(PNG12_0)[LSB]
   png_sig_cmp(PNG12_0)[LSB]
   png_get_oFFs(PNG12_0)[LSB] png_set_expand(PNG12_0)[LSB]
   png_start_read_image(PNG12_0)[LSB]
   png_get_pHYs(PNG12_0)[LSB] png_set_filler(PNG12_0)[LSB]
   png_warning(PNG12_0)[LSB]
   png_get_progressive_ptr(PNG12_0)[LSB]
   png_set_filter(PNG12_0)[LSB] png_write_chunk(PNG12_0)[LSB]
   png_get_rowbytes(PNG12_0)[LSB] png_set_gAMA(PNG12_0)[LSB]
   png_write_end(PNG12_0)[LSB]
   png_get_rows(PNG12_0)[LSB] png_set_gamma(PNG12_0)[LSB]
   png_write_flush(PNG12_0)[LSB]
   png_get_sBIT(PNG12_0)[LSB]
   png_set_gray_1_2_4_to_8(PNG12_0)[LSB]
   png_write_image(PNG12_0)[LSB]
   png_get_sRGB(PNG12_0)[LSB] png_set_gray_to_rgb(PNG12_0)[LSB]
   png_write_info(PNG12_0)[LSB]
   png_get_tIME(PNG12_0)[LSB] png_set_hIST(PNG12_0)[LSB]
   png_write_png(PNG12_0)[LSB]
   png_get_tRNS(PNG12_0)[LSB] png_set_iCCP(PNG12_0)[LSB]
   png_write_row(PNG12_0)[LSB]
   png_get_text(PNG12_0)[LSB]
   png_set_interlace_handling(PNG12_0)[LSB]
   png_write_rows(PNG12_0)[LSB]
   png_get_unknown_chunks(PNG12_0)[LSB]
   png_set_invert_alpha(PNG12_0)[LSB]

   Table A-20. libpng12 Data Interfaces
   png_libpng_ver[LSB]
     __________________________________________________________

A.19. libtiff

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Libtiff 4.0.2 Reference Manual [Libtiff 4.0.2]

   Table A-21. libtiff Function Interfaces
   TIFFAccessTagMethods[Libtiff 4.0.2] TIFFGetWriteProc[Libtiff
   4.0.2] TIFFSetSubDirectory[Libtiff 4.0.2]
   TIFFCIELabToRGBInit[Libtiff 4.0.2] TIFFIsBigEndian[Libtiff
   4.0.2] TIFFSetTagExtender[Libtiff 4.0.2]
   TIFFCIELabToXYZ[Libtiff 4.0.2] TIFFIsByteSwapped[Libtiff 4.0.2]
   TIFFSetWarningHandler[Libtiff 4.0.2]
   TIFFCheckTile[Libtiff 4.0.2] TIFFIsCODECConfigured[Libtiff
   4.0.2] TIFFSetWarningHandlerExt[Libtiff 4.0.2]
   TIFFCheckpointDirectory[Libtiff 4.0.2] TIFFIsMSB2LSB[Libtiff
   4.0.2] TIFFSetWriteOffset[Libtiff 4.0.2]
   TIFFCleanup[Libtiff 4.0.2] TIFFIsTiled[Libtiff 4.0.2]
   TIFFSetupStrips[Libtiff 4.0.2]
   TIFFClientOpen[Libtiff 4.0.2] TIFFIsUpSampled[Libtiff 4.0.2]
   TIFFStripSize[Libtiff 4.0.2]
   TIFFClientdata[Libtiff 4.0.2] TIFFLastDirectory[Libtiff 4.0.2]
   TIFFStripSize64[Libtiff 4.0.2]
   TIFFClose[Libtiff 4.0.2] TIFFNumberOfDirectories[Libtiff 4.0.2]
   TIFFSwabArrayOfDouble[Libtiff 4.0.2]
   TIFFComputeStrip[Libtiff 4.0.2] TIFFNumberOfStrips[Libtiff
   4.0.2] TIFFSwabArrayOfFloat[Libtiff 4.0.2]
   TIFFComputeTile[Libtiff 4.0.2] TIFFNumberOfTiles[Libtiff 4.0.2]
   TIFFSwabArrayOfLong[Libtiff 4.0.2]
   TIFFCreateCustomDirectory[Libtiff 4.0.2] TIFFOpen[Libtiff
   4.0.2] TIFFSwabArrayOfLong8[Libtiff 4.0.2]
   TIFFCreateDirectory[Libtiff 4.0.2] TIFFPrintDirectory[Libtiff
   4.0.2] TIFFSwabArrayOfShort[Libtiff 4.0.2]
   TIFFCreateEXIFDirectory[Libtiff 4.0.2]
   TIFFRGBAImageBegin[Libtiff 4.0.2]
   TIFFSwabArrayOfTriples[Libtiff 4.0.2]
   TIFFCurrentDirOffset[Libtiff 4.0.2] TIFFRGBAImageEnd[Libtiff
   4.0.2] TIFFSwabDouble[Libtiff 4.0.2]
   TIFFCurrentDirectory[Libtiff 4.0.2] TIFFRGBAImageGet[Libtiff
   4.0.2] TIFFSwabFloat[Libtiff 4.0.2]
   TIFFCurrentRow[Libtiff 4.0.2] TIFFRGBAImageOK[Libtiff 4.0.2]
   TIFFSwabLong[Libtiff 4.0.2]
   TIFFCurrentStrip[Libtiff 4.0.2] TIFFRasterScanlineSize[Libtiff
   4.0.2] TIFFSwabLong8[Libtiff 4.0.2]
   TIFFCurrentTile[Libtiff 4.0.2] TIFFRasterScanlineSize64[Libtiff
   4.0.2] TIFFSwabShort[Libtiff 4.0.2]
   TIFFDataWidth[Libtiff 4.0.2] TIFFRawStripSize[Libtiff 4.0.2]
   TIFFTileRowSize[Libtiff 4.0.2]
   TIFFDefaultStripSize[Libtiff 4.0.2] TIFFRawStripSize64[Libtiff
   4.0.2] TIFFTileRowSize64[Libtiff 4.0.2]
   TIFFDefaultTileSize[Libtiff 4.0.2] TIFFReadBufferSetup[Libtiff
   4.0.2] TIFFTileSize[Libtiff 4.0.2]
   TIFFError[Libtiff 4.0.2] TIFFReadCustomDirectory[Libtiff 4.0.2]
   TIFFTileSize64[Libtiff 4.0.2]
   TIFFErrorExt[Libtiff 4.0.2] TIFFReadDirectory[Libtiff 4.0.2]
   TIFFUnRegisterCODEC[Libtiff 4.0.2]
   TIFFFdOpen[Libtiff 4.0.2] TIFFReadEXIFDirectory[Libtiff 4.0.2]
   TIFFUnlinkDirectory[Libtiff 4.0.2]
   TIFFFieldWithName[Libtiff 4.0.2] TIFFReadEncodedStrip[Libtiff
   4.0.2] TIFFUnsetField[Libtiff 4.0.2]
   TIFFFieldWithTag[Libtiff 4.0.2] TIFFReadEncodedTile[Libtiff
   4.0.2] TIFFVGetField[Libtiff 4.0.2]
   TIFFFileName[Libtiff 4.0.2] TIFFReadRGBAImage[Libtiff 4.0.2]
   TIFFVGetFieldDefaulted[Libtiff 4.0.2]
   TIFFFileno[Libtiff 4.0.2] TIFFReadRGBAImageOriented[Libtiff
   4.0.2] TIFFVSetField[Libtiff 4.0.2]
   TIFFFindCODEC[Libtiff 4.0.2] TIFFReadRGBAStrip[Libtiff 4.0.2]
   TIFFVStripSize[Libtiff 4.0.2]
   TIFFFindField[Libtiff 4.0.2] TIFFReadRGBATile[Libtiff 4.0.2]
   TIFFVStripSize64[Libtiff 4.0.2]
   TIFFFlush[Libtiff 4.0.2] TIFFReadRawStrip[Libtiff 4.0.2]
   TIFFVTileSize[Libtiff 4.0.2]
   TIFFFlushData[Libtiff 4.0.2] TIFFReadRawTile[Libtiff 4.0.2]
   TIFFVTileSize64[Libtiff 4.0.2]
   TIFFFreeDirectory[Libtiff 4.0.2] TIFFReadScanline[Libtiff
   4.0.2] TIFFWarning[Libtiff 4.0.2]
   TIFFGetBitRevTable[Libtiff 4.0.2] TIFFReadTile[Libtiff 4.0.2]
   TIFFWarningExt[Libtiff 4.0.2]
   TIFFGetClientInfo[Libtiff 4.0.2] TIFFRegisterCODEC[Libtiff
   4.0.2] TIFFWriteBufferSetup[Libtiff 4.0.2]
   TIFFGetCloseProc[Libtiff 4.0.2] TIFFReverseBits[Libtiff 4.0.2]
   TIFFWriteCheck[Libtiff 4.0.2]
   TIFFGetConfiguredCODECs[Libtiff 4.0.2]
   TIFFRewriteDirectory[Libtiff 4.0.2]
   TIFFWriteCustomDirectory[Libtiff 4.0.2]
   TIFFGetField[Libtiff 4.0.2] TIFFScanlineSize[Libtiff 4.0.2]
   TIFFWriteDirectory[Libtiff 4.0.2]
   TIFFGetFieldDefaulted[Libtiff 4.0.2] TIFFScanlineSize64[Libtiff
   4.0.2] TIFFWriteEncodedStrip[Libtiff 4.0.2]
   TIFFGetMapFileProc[Libtiff 4.0.2] TIFFSetClientInfo[Libtiff
   4.0.2] TIFFWriteEncodedTile[Libtiff 4.0.2]
   TIFFGetMode[Libtiff 4.0.2] TIFFSetClientdata[Libtiff 4.0.2]
   TIFFWriteRawStrip[Libtiff 4.0.2]
   TIFFGetReadProc[Libtiff 4.0.2] TIFFSetDirectory[Libtiff 4.0.2]
   TIFFWriteRawTile[Libtiff 4.0.2]
   TIFFGetSeekProc[Libtiff 4.0.2] TIFFSetErrorHandler[Libtiff
   4.0.2] TIFFWriteScanline[Libtiff 4.0.2]
   TIFFGetSizeProc[Libtiff 4.0.2] TIFFSetErrorHandlerExt[Libtiff
   4.0.2] TIFFWriteTile[Libtiff 4.0.2]
   TIFFGetTagListCount[Libtiff 4.0.2] TIFFSetField[Libtiff 4.0.2]
   TIFFXYZToRGB[Libtiff 4.0.2]
   TIFFGetTagListEntry[Libtiff 4.0.2] TIFFSetFileName[Libtiff
   4.0.2] TIFFYCbCrToRGBInit[Libtiff 4.0.2]
   TIFFGetUnmapFileProc[Libtiff 4.0.2] TIFFSetFileno[Libtiff
   4.0.2] TIFFYCbCrtoRGB[Libtiff 4.0.2]
   TIFFGetVersion[Libtiff 4.0.2] TIFFSetMode[Libtiff 4.0.2]
     __________________________________________________________

A.20. libxcb

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Libxcb API [Libxcb 1.7]
   This Specification [LSB]

   Table A-22. libxcb Function Interfaces
   xcb_alloc_color[LSB] xcb_get_input_focus[LSB]
   xcb_query_best_size_unchecked[LSB]
   xcb_alloc_color_cells[LSB] xcb_get_input_focus_reply[LSB]
   xcb_query_colors[LSB]
   xcb_alloc_color_cells_masks[LSB]
   xcb_get_input_focus_unchecked[LSB] xcb_query_colors_colors[LSB]
   xcb_alloc_color_cells_masks_end[LSB]
   xcb_get_keyboard_control[LSB]
   xcb_query_colors_colors_iterator[LSB]
   xcb_alloc_color_cells_masks_length[LSB]
   xcb_get_keyboard_control_reply[LSB]
   xcb_query_colors_colors_length[LSB]
   xcb_alloc_color_cells_pixels[LSB]
   xcb_get_keyboard_control_unchecked[LSB]
   xcb_query_colors_reply[LSB]
   xcb_alloc_color_cells_pixels_end[LSB]
   xcb_get_keyboard_mapping[LSB] xcb_query_colors_unchecked[LSB]
   xcb_alloc_color_cells_pixels_length[LSB]
   xcb_get_keyboard_mapping_keysyms[LSB] xcb_query_extension[LSB]
   xcb_alloc_color_cells_reply[LSB]
   xcb_get_keyboard_mapping_keysyms_end[LSB]
   xcb_query_extension_reply[LSB]
   xcb_alloc_color_cells_unchecked[LSB]
   xcb_get_keyboard_mapping_keysyms_length[LSB]
   xcb_query_extension_unchecked[LSB]
   xcb_alloc_color_planes[LSB] xcb_get_keyboard_mapping_reply[LSB]
   xcb_query_font[LSB]
   xcb_alloc_color_planes_pixels[LSB]
   xcb_get_keyboard_mapping_unchecked[LSB]
   xcb_query_font_char_infos[LSB]
   xcb_alloc_color_planes_pixels_end[LSB]
   xcb_get_maximum_request_length[Libxcb 1.7]
   xcb_query_font_char_infos_iterator[LSB]
   xcb_alloc_color_planes_pixels_length[LSB]
   xcb_get_modifier_mapping[LSB]
   xcb_query_font_char_infos_length[LSB]
   xcb_alloc_color_planes_reply[LSB]
   xcb_get_modifier_mapping_keycodes[LSB]
   xcb_query_font_properties[LSB]
   xcb_alloc_color_planes_unchecked[LSB]
   xcb_get_modifier_mapping_keycodes_end[LSB]
   xcb_query_font_properties_iterator[LSB]
   xcb_alloc_color_reply[LSB]
   xcb_get_modifier_mapping_keycodes_length[LSB]
   xcb_query_font_properties_length[LSB]
   xcb_alloc_color_unchecked[LSB]
   xcb_get_modifier_mapping_reply[LSB] xcb_query_font_reply[LSB]
   xcb_alloc_named_color[LSB]
   xcb_get_modifier_mapping_unchecked[LSB]
   xcb_query_font_unchecked[LSB]
   xcb_alloc_named_color_reply[LSB] xcb_get_motion_events[LSB]
   xcb_query_keymap[LSB]
   xcb_alloc_named_color_unchecked[LSB]
   xcb_get_motion_events_events[LSB] xcb_query_keymap_reply[LSB]
   xcb_allow_events[LSB]
   xcb_get_motion_events_events_iterator[LSB]
   xcb_query_keymap_unchecked[LSB]
   xcb_allow_events_checked[LSB]
   xcb_get_motion_events_events_length[LSB] xcb_query_pointer[LSB]
   xcb_arc_end[LSB] xcb_get_motion_events_reply[LSB]
   xcb_query_pointer_reply[LSB]
   xcb_arc_next[LSB] xcb_get_motion_events_unchecked[LSB]
   xcb_query_pointer_unchecked[LSB]
   xcb_atom_end[LSB] xcb_get_pointer_control[LSB]
   xcb_query_text_extents[LSB]
   xcb_atom_next[LSB] xcb_get_pointer_control_reply[LSB]
   xcb_query_text_extents_reply[LSB]
   xcb_bell[LSB] xcb_get_pointer_control_unchecked[LSB]
   xcb_query_text_extents_unchecked[LSB]
   xcb_bell_checked[LSB] xcb_get_pointer_mapping[LSB]
   xcb_query_tree[LSB]
   xcb_big_requests_enable[LSB] xcb_get_pointer_mapping_map[LSB]
   xcb_query_tree_children[LSB]
   xcb_big_requests_enable_reply[LSB]
   xcb_get_pointer_mapping_map_end[LSB]
   xcb_query_tree_children_end[LSB]
   xcb_big_requests_enable_unchecked[LSB]
   xcb_get_pointer_mapping_map_length[LSB]
   xcb_query_tree_children_length[LSB]
   xcb_button_end[LSB] xcb_get_pointer_mapping_reply[LSB]
   xcb_query_tree_reply[LSB]
   xcb_button_next[LSB] xcb_get_pointer_mapping_unchecked[LSB]
   xcb_query_tree_unchecked[LSB]
   xcb_change_active_pointer_grab[LSB] xcb_get_property[LSB]
   xcb_recolor_cursor[LSB]
   xcb_change_active_pointer_grab_checked[LSB]
   xcb_get_property_reply[LSB] xcb_recolor_cursor_checked[LSB]
   xcb_change_gc[LSB] xcb_get_property_unchecked[LSB]
   xcb_rectangle_end[LSB]
   xcb_change_gc_checked[LSB] xcb_get_property_value[LSB]
   xcb_rectangle_next[LSB]
   xcb_change_hosts[LSB] xcb_get_property_value_end[LSB]
   xcb_reparent_window[LSB]
   xcb_change_hosts_checked[LSB]
   xcb_get_property_value_length[LSB]
   xcb_reparent_window_checked[LSB]
   xcb_change_keyboard_control[LSB] xcb_get_screen_saver[LSB]
   xcb_request_check[Libxcb 1.7]
   xcb_change_keyboard_control_checked[LSB]
   xcb_get_screen_saver_reply[LSB] xcb_rgb_end[LSB]
   xcb_change_keyboard_mapping[LSB]
   xcb_get_screen_saver_unchecked[LSB] xcb_rgb_next[LSB]
   xcb_change_keyboard_mapping_checked[LSB]
   xcb_get_selection_owner[LSB] xcb_rotate_properties[LSB]
   xcb_change_pointer_control[LSB]
   xcb_get_selection_owner_reply[LSB]
   xcb_rotate_properties_checked[LSB]
   xcb_change_pointer_control_checked[LSB]
   xcb_get_selection_owner_unchecked[LSB]
   xcb_screen_allowed_depths_iterator[LSB]
   xcb_change_property[LSB] xcb_get_setup[Libxcb 1.7]
   xcb_screen_allowed_depths_length[LSB]
   xcb_change_property_checked[LSB] xcb_get_window_attributes[LSB]
   xcb_screen_end[LSB]
   xcb_change_save_set[LSB] xcb_get_window_attributes_reply[LSB]
   xcb_screen_next[LSB]
   xcb_change_save_set_checked[LSB]
   xcb_get_window_attributes_unchecked[LSB] xcb_segment_end[LSB]
   xcb_change_window_attributes[LSB] xcb_grab_button[LSB]
   xcb_segment_next[LSB]
   xcb_change_window_attributes_checked[LSB]
   xcb_grab_button_checked[LSB] xcb_send_event[LSB]
   xcb_char2b_end[LSB] xcb_grab_key[LSB]
   xcb_send_event_checked[LSB]
   xcb_char2b_next[LSB] xcb_grab_key_checked[LSB]
   xcb_send_request[Libxcb 1.7]
   xcb_charinfo_end[LSB] xcb_grab_keyboard[LSB]
   xcb_set_access_control[LSB]
   xcb_charinfo_next[LSB] xcb_grab_keyboard_reply[LSB]
   xcb_set_access_control_checked[LSB]
   xcb_circulate_window[LSB] xcb_grab_keyboard_unchecked[LSB]
   xcb_set_clip_rectangles[LSB]
   xcb_circulate_window_checked[LSB] xcb_grab_pointer[LSB]
   xcb_set_clip_rectangles_checked[LSB]
   xcb_clear_area[LSB] xcb_grab_pointer_reply[LSB]
   xcb_set_close_down_mode[LSB]
   xcb_clear_area_checked[LSB] xcb_grab_pointer_unchecked[LSB]
   xcb_set_close_down_mode_checked[LSB]
   xcb_client_message_data_end[LSB] xcb_grab_server[LSB]
   xcb_set_dashes[LSB]
   xcb_client_message_data_next[LSB] xcb_grab_server_checked[LSB]
   xcb_set_dashes_checked[LSB]
   xcb_close_font[LSB] xcb_host_address[LSB]
   xcb_set_font_path[LSB]
   xcb_close_font_checked[LSB] xcb_host_address_end[LSB]
   xcb_set_font_path_checked[LSB]
   xcb_coloritem_end[LSB] xcb_host_address_length[LSB]
   xcb_set_input_focus[LSB]
   xcb_coloritem_next[LSB] xcb_host_end[LSB]
   xcb_set_input_focus_checked[LSB]
   xcb_colormap_end[LSB] xcb_host_next[LSB]
   xcb_set_modifier_mapping[LSB]
   xcb_colormap_next[LSB] xcb_image_text_16[LSB]
   xcb_set_modifier_mapping_reply[LSB]
   xcb_configure_window[LSB] xcb_image_text_16_checked[LSB]
   xcb_set_modifier_mapping_unchecked[LSB]
   xcb_configure_window_checked[LSB] xcb_image_text_8[LSB]
   xcb_set_pointer_mapping[LSB]
   xcb_connect[Libxcb 1.7] xcb_image_text_8_checked[LSB]
   xcb_set_pointer_mapping_reply[LSB]
   xcb_connect_to_display_with_auth_info[Libxcb 1.7]
   xcb_install_colormap[LSB]
   xcb_set_pointer_mapping_unchecked[LSB]
   xcb_connect_to_fd[Libxcb 1.7] xcb_install_colormap_checked[LSB]
   xcb_set_screen_saver[LSB]
   xcb_connection_has_error[Libxcb 1.7] xcb_intern_atom[LSB]
   xcb_set_screen_saver_checked[LSB]
   xcb_convert_selection[LSB] xcb_intern_atom_reply[LSB]
   xcb_set_selection_owner[LSB]
   xcb_convert_selection_checked[LSB]
   xcb_intern_atom_unchecked[LSB]
   xcb_set_selection_owner_checked[LSB]
   xcb_copy_area[LSB] xcb_keycode_end[LSB]
   xcb_setup_authenticate_end[LSB]
   xcb_copy_area_checked[LSB] xcb_keycode_next[LSB]
   xcb_setup_authenticate_next[LSB]
   xcb_copy_colormap_and_free[LSB] xcb_keysym_end[LSB]
   xcb_setup_authenticate_reason[LSB]
   xcb_copy_colormap_and_free_checked[LSB] xcb_keysym_next[LSB]
   xcb_setup_authenticate_reason_end[LSB]
   xcb_copy_gc[LSB] xcb_kill_client[LSB]
   xcb_setup_authenticate_reason_length[LSB]
   xcb_copy_gc_checked[LSB] xcb_kill_client_checked[LSB]
   xcb_setup_end[LSB]
   xcb_copy_plane[LSB] xcb_list_extensions[LSB]
   xcb_setup_failed_end[LSB]
   xcb_copy_plane_checked[LSB]
   xcb_list_extensions_names_iterator[LSB]
   xcb_setup_failed_next[LSB]
   xcb_create_colormap[LSB] xcb_list_extensions_names_length[LSB]
   xcb_setup_failed_reason[LSB]
   xcb_create_colormap_checked[LSB] xcb_list_extensions_reply[LSB]
   xcb_setup_failed_reason_end[LSB]
   xcb_create_cursor[LSB] xcb_list_extensions_unchecked[LSB]
   xcb_setup_failed_reason_length[LSB]
   xcb_create_cursor_checked[LSB] xcb_list_fonts[LSB]
   xcb_setup_next[LSB]
   xcb_create_gc[LSB] xcb_list_fonts_names_iterator[LSB]
   xcb_setup_pixmap_formats[LSB]
   xcb_create_gc_checked[LSB] xcb_list_fonts_names_length[LSB]
   xcb_setup_pixmap_formats_iterator[LSB]
   xcb_create_glyph_cursor[LSB] xcb_list_fonts_reply[LSB]
   xcb_setup_pixmap_formats_length[LSB]
   xcb_create_glyph_cursor_checked[LSB]
   xcb_list_fonts_unchecked[LSB]
   xcb_setup_request_authorization_protocol_data[LSB]
   xcb_create_pixmap[LSB] xcb_list_fonts_with_info[LSB]
   xcb_setup_request_authorization_protocol_data_end[LSB]
   xcb_create_pixmap_checked[LSB]
   xcb_list_fonts_with_info_name[LSB]
   xcb_setup_request_authorization_protocol_data_length[LSB]
   xcb_create_window[LSB] xcb_list_fonts_with_info_name_end[LSB]
   xcb_setup_request_authorization_protocol_name[LSB]
   xcb_create_window_checked[LSB]
   xcb_list_fonts_with_info_name_length[LSB]
   xcb_setup_request_authorization_protocol_name_end[LSB]
   xcb_cursor_end[LSB] xcb_list_fonts_with_info_properties[LSB]
   xcb_setup_request_authorization_protocol_name_length[LSB]
   xcb_cursor_next[LSB]
   xcb_list_fonts_with_info_properties_iterator[LSB]
   xcb_setup_request_end[LSB]
   xcb_delete_property[LSB]
   xcb_list_fonts_with_info_properties_length[LSB]
   xcb_setup_request_next[LSB]
   xcb_delete_property_checked[LSB]
   xcb_list_fonts_with_info_reply[LSB]
   xcb_setup_roots_iterator[LSB]
   xcb_depth_end[LSB] xcb_list_fonts_with_info_unchecked[LSB]
   xcb_setup_roots_length[LSB]
   xcb_depth_next[LSB] xcb_list_hosts[LSB] xcb_setup_vendor[LSB]
   xcb_depth_visuals[LSB] xcb_list_hosts_hosts_iterator[LSB]
   xcb_setup_vendor_end[LSB]
   xcb_depth_visuals_iterator[LSB]
   xcb_list_hosts_hosts_length[LSB] xcb_setup_vendor_length[LSB]
   xcb_depth_visuals_length[LSB] xcb_list_hosts_reply[LSB]
   xcb_store_colors[LSB]
   xcb_destroy_subwindows[LSB] xcb_list_hosts_unchecked[LSB]
   xcb_store_colors_checked[LSB]
   xcb_destroy_subwindows_checked[LSB]
   xcb_list_installed_colormaps[LSB] xcb_store_named_color[LSB]
   xcb_destroy_window[LSB] xcb_list_installed_colormaps_cmaps[LSB]
   xcb_store_named_color_checked[LSB]
   xcb_destroy_window_checked[LSB]
   xcb_list_installed_colormaps_cmaps_end[LSB] xcb_str_end[LSB]
   xcb_discard_reply[LSB]
   xcb_list_installed_colormaps_cmaps_length[LSB]
   xcb_str_name[LSB]
   xcb_disconnect[Libxcb 1.7]
   xcb_list_installed_colormaps_reply[LSB] xcb_str_name_end[LSB]
   xcb_drawable_end[LSB]
   xcb_list_installed_colormaps_unchecked[LSB]
   xcb_str_name_length[LSB]
   xcb_drawable_next[LSB] xcb_list_properties[LSB]
   xcb_str_next[LSB]
   xcb_fill_poly[LSB] xcb_list_properties_atoms[LSB]
   xcb_take_socket[LSB]
   xcb_fill_poly_checked[LSB] xcb_list_properties_atoms_end[LSB]
   xcb_timecoord_end[LSB]
   xcb_flush[Libxcb 1.7] xcb_list_properties_atoms_length[LSB]
   xcb_timecoord_next[LSB]
   xcb_font_end[LSB] xcb_list_properties_reply[LSB]
   xcb_timestamp_end[LSB]
   xcb_font_next[LSB] xcb_list_properties_unchecked[LSB]
   xcb_timestamp_next[LSB]
   xcb_fontable_end[LSB] xcb_lookup_color[LSB]
   xcb_translate_coordinates[LSB]
   xcb_fontable_next[LSB] xcb_lookup_color_reply[LSB]
   xcb_translate_coordinates_reply[LSB]
   xcb_fontprop_end[LSB] xcb_lookup_color_unchecked[LSB]
   xcb_translate_coordinates_unchecked[LSB]
   xcb_fontprop_next[LSB] xcb_map_subwindows[LSB]
   xcb_ungrab_button[LSB]
   xcb_force_screen_saver[LSB] xcb_map_subwindows_checked[LSB]
   xcb_ungrab_button_checked[LSB]
   xcb_force_screen_saver_checked[LSB] xcb_map_window[LSB]
   xcb_ungrab_key[LSB]
   xcb_format_end[LSB] xcb_map_window_checked[LSB]
   xcb_ungrab_key_checked[LSB]
   xcb_format_next[LSB] xcb_no_operation[LSB]
   xcb_ungrab_keyboard[LSB]
   xcb_free_colormap[LSB] xcb_no_operation_checked[LSB]
   xcb_ungrab_keyboard_checked[LSB]
   xcb_free_colormap_checked[LSB] xcb_open_font[LSB]
   xcb_ungrab_pointer[LSB]
   xcb_free_colors[LSB] xcb_open_font_checked[LSB]
   xcb_ungrab_pointer_checked[LSB]
   xcb_free_colors_checked[LSB] xcb_parse_display[Libxcb 1.7]
   xcb_ungrab_server[LSB]
   xcb_free_cursor[LSB] xcb_pixmap_end[LSB]
   xcb_ungrab_server_checked[LSB]
   xcb_free_cursor_checked[LSB] xcb_pixmap_next[LSB]
   xcb_uninstall_colormap[LSB]
   xcb_free_gc[LSB] xcb_point_end[LSB]
   xcb_uninstall_colormap_checked[LSB]
   xcb_free_gc_checked[LSB] xcb_point_next[LSB]
   xcb_unmap_subwindows[LSB]
   xcb_free_pixmap[LSB] xcb_poll_for_event[Libxcb 1.7]
   xcb_unmap_subwindows_checked[LSB]
   xcb_free_pixmap_checked[LSB] xcb_poll_for_reply[Libxcb 1.7]
   xcb_unmap_window[LSB]
   xcb_gcontext_end[LSB] xcb_poly_arc[LSB]
   xcb_unmap_window_checked[LSB]
   xcb_gcontext_next[LSB] xcb_poly_arc_checked[LSB]
   xcb_visualid_end[LSB]
   xcb_generate_id[Libxcb 1.7] xcb_poly_fill_arc[LSB]
   xcb_visualid_next[LSB]
   xcb_get_atom_name[LSB] xcb_poly_fill_arc_checked[LSB]
   xcb_visualtype_end[LSB]
   xcb_get_atom_name_name[LSB] xcb_poly_fill_rectangle[LSB]
   xcb_visualtype_next[LSB]
   xcb_get_atom_name_name_end[LSB]
   xcb_poly_fill_rectangle_checked[LSB] xcb_wait_for_event[Libxcb
   1.7]
   xcb_get_atom_name_name_length[LSB] xcb_poly_line[LSB]
   xcb_wait_for_reply[Libxcb 1.7]
   xcb_get_atom_name_reply[LSB] xcb_poly_line_checked[LSB]
   xcb_warp_pointer[LSB]
   xcb_get_atom_name_unchecked[LSB] xcb_poly_point[LSB]
   xcb_warp_pointer_checked[LSB]
   xcb_get_extension_data[Libxcb 1.7] xcb_poly_point_checked[LSB]
   xcb_window_end[LSB]
   xcb_get_file_descriptor[Libxcb 1.7] xcb_poly_rectangle[LSB]
   xcb_window_next[LSB]
   xcb_get_font_path[LSB] xcb_poly_rectangle_checked[LSB]
   xcb_writev[LSB]
   xcb_get_font_path_path_iterator[LSB] xcb_poly_segment[LSB]
   xcb_xc_misc_get_version[LSB]
   xcb_get_font_path_path_length[LSB]
   xcb_poly_segment_checked[LSB]
   xcb_xc_misc_get_version_reply[LSB]
   xcb_get_font_path_reply[LSB] xcb_poly_text_16[LSB]
   xcb_xc_misc_get_version_unchecked[LSB]
   xcb_get_font_path_unchecked[LSB] xcb_poly_text_16_checked[LSB]
   xcb_xc_misc_get_xid_list[LSB]
   xcb_get_geometry[LSB] xcb_poly_text_8[LSB]
   xcb_xc_misc_get_xid_list_ids[LSB]
   xcb_get_geometry_reply[LSB] xcb_poly_text_8_checked[LSB]
   xcb_xc_misc_get_xid_list_ids_end[LSB]
   xcb_get_geometry_unchecked[LSB] xcb_popcount[Libxcb 1.7]
   xcb_xc_misc_get_xid_list_ids_length[LSB]
   xcb_get_image[LSB] xcb_prefetch_extension_data[Libxcb 1.7]
   xcb_xc_misc_get_xid_list_reply[LSB]
   xcb_get_image_data[LSB]
   xcb_prefetch_maximum_request_length[LSB]
   xcb_xc_misc_get_xid_list_unchecked[LSB]
   xcb_get_image_data_end[LSB] xcb_put_image[LSB]
   xcb_xc_misc_get_xid_range[LSB]
   xcb_get_image_data_length[LSB] xcb_put_image_checked[LSB]
   xcb_xc_misc_get_xid_range_reply[LSB]
   xcb_get_image_reply[LSB] xcb_query_best_size[LSB]
   xcb_xc_misc_get_xid_range_unchecked[LSB]
   xcb_get_image_unchecked[LSB] xcb_query_best_size_reply[LSB]

   Table A-23. libxcb Data Interfaces
   xcb_big_requests_id[LSB] xcb_xc_misc_id[LSB]
     __________________________________________________________

A.21. libQtCore

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Itanium(TM) C++ ABI [CXXABI-1.86]
   This Specification [LSB]
   QtCore 4.2.0 [QtCore]

   Table A-24. libQtCore Function Interfaces
   _Z10qvsnprintfPcjPKcS_[QtCore] _Z8qReallocPvj[LSB]
   _ZThn8_N16QTextCodecPluginD0Ev[CXXABI-1.86]
   _Z7qMallocj[LSB] _Z9qsnprintfPcjPKcz[QtCore]
   _ZThn8_N16QTextCodecPluginD1Ev[CXXABI-1.86]
   _Z7qMemSetPvij[LSB] _ZN7QString8vsprintfEPKcPc[QtCore]
   _ZThn8_NK16QTextCodecPlugin4keysEv[CXXABI-1.86]
   _Z8qMemCopyPvPKvj[LSB]
   _ZThn8_N16QTextCodecPlugin6createERK7QString[CXXABI-1.86]
     __________________________________________________________

A.22. libQtGui

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Itanium(TM) C++ ABI [CXXABI-1.86]

   Table A-25. libQtGui Function Interfaces
   _ZThn12_N10QDropEventD0Ev[CXXABI-1.86]
   _ZThn8_N12QTextBrowserD1Ev[CXXABI-1.86]
   _ZThn8_N6QLabelD0Ev[CXXABI-1.86]
   _ZThn12_N10QDropEventD1Ev[CXXABI-1.86]
   _ZThn8_N13QErrorMessageD0Ev[CXXABI-1.86]
   _ZThn8_N6QLabelD1Ev[CXXABI-1.86]
   _ZThn12_N14QDragMoveEventD0Ev[CXXABI-1.86]
   _ZThn8_N13QErrorMessageD1Ev[CXXABI-1.86]
   _ZThn8_N7QDialogD0Ev[CXXABI-1.86]
   _ZThn12_N14QDragMoveEventD1Ev[CXXABI-1.86]
   _ZThn8_N13QSplashScreenD0Ev[CXXABI-1.86]
   _ZThn8_N7QDialogD1Ev[CXXABI-1.86]
   _ZThn12_N15QDragEnterEventD0Ev[CXXABI-1.86]
   _ZThn8_N13QSplashScreenD1Ev[CXXABI-1.86]
   _ZThn8_N7QLayout10invalidateEv[CXXABI-1.86]
   _ZThn12_N15QDragEnterEventD1Ev[CXXABI-1.86]
   _ZThn8_N14QDesktopWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N7QLayout6layoutEv[CXXABI-1.86]
   _ZThn12_NK10QDropEvent11encodedDataEPKc[CXXABI-1.86]
   _ZThn8_N14QDesktopWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N7QLayoutD0Ev[CXXABI-1.86]
   _ZThn12_NK10QDropEvent6formatEi[CXXABI-1.86]
   _ZThn8_N14QImageIOPluginD0Ev[CXXABI-1.86]
   _ZThn8_N7QLayoutD1Ev[CXXABI-1.86]
   _ZThn12_NK10QDropEvent8providesEPKc[CXXABI-1.86]
   _ZThn8_N14QImageIOPluginD1Ev[CXXABI-1.86]
   _ZThn8_N7QSliderD0Ev[CXXABI-1.86]
   _ZThn8_N10QBoxLayout10invalidateEv[CXXABI-1.86]
   _ZThn8_N14QStackedLayout11setGeometryERK5QRect[CXXABI-1.86]
   _ZThn8_N7QSliderD1Ev[CXXABI-1.86]
   _ZThn8_N10QBoxLayout11setGeometryERK5QRect[CXXABI-1.86]
   _ZThn8_N14QStackedLayoutD0Ev[CXXABI-1.86]
   _ZThn8_N7QTabBarD0Ev[CXXABI-1.86]
   _ZThn8_N10QBoxLayoutD0Ev[CXXABI-1.86]
   _ZThn8_N14QStackedLayoutD1Ev[CXXABI-1.86]
   _ZThn8_N7QTabBarD1Ev[CXXABI-1.86]
   _ZThn8_N10QBoxLayoutD1Ev[CXXABI-1.86]
   _ZThn8_N14QStackedWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N7QWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N10QLCDNumberD0Ev[CXXABI-1.86]
   _ZThn8_N14QStackedWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N7QWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N10QLCDNumberD1Ev[CXXABI-1.86]
   _ZThn8_N15QAbstractButtonD0Ev[CXXABI-1.86]
   _ZThn8_N8QMenuBarD0Ev[CXXABI-1.86]
   _ZThn8_N10QScrollBarD0Ev[CXXABI-1.86]
   _ZThn8_N15QAbstractButtonD1Ev[CXXABI-1.86]
   _ZThn8_N8QMenuBarD1Ev[CXXABI-1.86]
   _ZThn8_N10QScrollBarD1Ev[CXXABI-1.86]
   _ZThn8_N15QAbstractSliderD0Ev[CXXABI-1.86]
   _ZThn8_N8QToolBarD0Ev[CXXABI-1.86]
   _ZThn8_N10QStatusBarD0Ev[CXXABI-1.86]
   _ZThn8_N15QAbstractSliderD1Ev[CXXABI-1.86]
   _ZThn8_N8QToolBarD1Ev[CXXABI-1.86]
   _ZThn8_N10QStatusBarD1Ev[CXXABI-1.86]
   _ZThn8_N15QProgressDialogD0Ev[CXXABI-1.86]
   _ZThn8_N8QToolBoxD0Ev[CXXABI-1.86]
   _ZThn8_N10QTabWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N15QProgressDialogD1Ev[CXXABI-1.86]
   _ZThn8_N8QToolBoxD1Ev[CXXABI-1.86]
   _ZThn8_N10QTabWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N15QX11EmbedWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N9QComboBoxD0Ev[CXXABI-1.86]
   _ZThn8_N10QTableViewD0Ev[CXXABI-1.86]
   _ZThn8_N15QX11EmbedWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N9QComboBoxD1Ev[CXXABI-1.86]
   _ZThn8_N10QTableViewD1Ev[CXXABI-1.86]
   _ZThn8_N16QAbstractSpinBoxD0Ev[CXXABI-1.86]
   _ZThn8_N9QGroupBoxD0Ev[CXXABI-1.86]
   _ZThn8_N10QWorkspaceD0Ev[CXXABI-1.86]
   _ZThn8_N16QAbstractSpinBoxD1Ev[CXXABI-1.86]
   _ZThn8_N9QGroupBoxD1Ev[CXXABI-1.86]
   _ZThn8_N10QWorkspaceD1Ev[CXXABI-1.86]
   _ZThn8_N17QAbstractItemViewD0Ev[CXXABI-1.86]
   _ZThn8_N9QLineEditD0Ev[CXXABI-1.86]
   _ZThn8_N11QDockWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N17QAbstractItemViewD1Ev[CXXABI-1.86]
   _ZThn8_N9QLineEditD1Ev[CXXABI-1.86]
   _ZThn8_N11QDockWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N17QAccessiblePluginD0Ev[CXXABI-1.86]
   _ZThn8_N9QListViewD0Ev[CXXABI-1.86]
   _ZThn8_N11QFileDialogD0Ev[CXXABI-1.86]
   _ZThn8_N17QAccessiblePluginD1Ev[CXXABI-1.86]
   _ZThn8_N9QListViewD1Ev[CXXABI-1.86]
   _ZThn8_N11QFileDialogD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem10sceneEventEP6QEvent[CXXABI-1.86]
   _ZThn8_N9QSizeGripD0Ev[CXXABI-1.86]
   _ZThn8_N11QFocusFrameD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem12focusInEventEP11QFocusEvent[CXXABI
   -1.86] _ZThn8_N9QSizeGripD1Ev[CXXABI-1.86]
   _ZThn8_N11QFocusFrameD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem12setExtensionEN13QGraphicsItem9Exte
   nsionERK8QVariant[CXXABI-1.86]
   _ZThn8_N9QSplitterD0Ev[CXXABI-1.86]
   _ZThn8_N11QFontDialogD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem13dragMoveEventEP27QGraphicsSceneDra
   gDropEvent[CXXABI-1.86] _ZThn8_N9QSplitterD1Ev[CXXABI-1.86]
   _ZThn8_N11QFontDialogD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem13focusOutEventEP11QFocusEvent[CXXAB
   I-1.86] _ZThn8_N9QTextEditD0Ev[CXXABI-1.86]
   _ZThn8_N11QGridLayout10invalidateEv[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem13keyPressEventEP9QKeyEvent[CXXABI-1
   .86] _ZThn8_N9QTextEditD1Ev[CXXABI-1.86]
   _ZThn8_N11QGridLayout11setGeometryERK5QRect[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem14dragEnterEventEP27QGraphicsSceneDr
   agDropEvent[CXXABI-1.86] _ZThn8_N9QTreeViewD0Ev[CXXABI-1.86]
   _ZThn8_N11QGridLayoutD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem14dragLeaveEventEP27QGraphicsSceneDr
   agDropEvent[CXXABI-1.86] _ZThn8_N9QTreeViewD1Ev[CXXABI-1.86]
   _ZThn8_N11QGridLayoutD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem14hoverMoveEventEP24QGraphicsSceneHo
   verEvent[CXXABI-1.86]
   _ZThn8_NK10QBoxLayout11maximumSizeEv[CXXABI-1.86]
   _ZThn8_N11QHBoxLayoutD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem14mouseMoveEventEP24QGraphicsSceneMo
   useEvent[CXXABI-1.86]
   _ZThn8_NK10QBoxLayout11minimumSizeEv[CXXABI-1.86]
   _ZThn8_N11QHBoxLayoutD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem15hoverEnterEventEP24QGraphicsSceneH
   overEvent[CXXABI-1.86]
   _ZThn8_NK10QBoxLayout14heightForWidthEi[CXXABI-1.86]
   _ZThn8_N11QHeaderViewD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem15hoverLeaveEventEP24QGraphicsSceneH
   overEvent[CXXABI-1.86]
   _ZThn8_NK10QBoxLayout17hasHeightForWidthEv[CXXABI-1.86]
   _ZThn8_N11QHeaderViewD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem15keyReleaseEventEP9QKeyEvent[CXXABI
   -1.86]
   _ZThn8_NK10QBoxLayout19expandingDirectionsEv[CXXABI-1.86]
   _ZThn8_N11QListWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem15mousePressEventEP24QGraphicsSceneM
   ouseEvent[CXXABI-1.86]
   _ZThn8_NK10QBoxLayout21minimumHeightForWidthEi[CXXABI-1.86]
   _ZThn8_N11QListWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem16contextMenuEventEP30QGraphicsScene
   ContextMenuEvent[CXXABI-1.86]
   _ZThn8_NK10QBoxLayout8sizeHintEv[CXXABI-1.86]
   _ZThn8_N11QMainWindowD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem16inputMethodEventEP17QInputMethodEv
   ent[CXXABI-1.86]
   _ZThn8_NK11QGridLayout11maximumSizeEv[CXXABI-1.86]
   _ZThn8_N11QMainWindowD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem17mouseReleaseEventEP24QGraphicsScen
   eMouseEvent[CXXABI-1.86]
   _ZThn8_NK11QGridLayout11minimumSizeEv[CXXABI-1.86]
   _ZThn8_N11QMessageBoxD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem21mouseDoubleClickEventEP24QGraphics
   SceneMouseEvent[CXXABI-1.86]
   _ZThn8_NK11QGridLayout14heightForWidthEi[CXXABI-1.86]
   _ZThn8_N11QMessageBoxD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem5paintEP8QPainterPK24QStyleOptionGra
   phicsItemP7QWidget[CXXABI-1.86]
   _ZThn8_NK11QGridLayout17hasHeightForWidthEv[CXXABI-1.86]
   _ZThn8_N11QPushButtonD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItem9dropEventEP27QGraphicsSceneDragDrop
   Event[CXXABI-1.86]
   _ZThn8_NK11QGridLayout19expandingDirectionsEv[CXXABI-1.86]
   _ZThn8_N11QPushButtonD1Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItemD0Ev[CXXABI-1.86]
   _ZThn8_NK11QGridLayout21minimumHeightForWidthEi[CXXABI-1.86]
   _ZThn8_N11QRubberBandD0Ev[CXXABI-1.86]
   _ZThn8_N17QGraphicsTextItemD1Ev[CXXABI-1.86]
   _ZThn8_NK11QGridLayout8sizeHintEv[CXXABI-1.86]
   _ZThn8_N11QRubberBandD1Ev[CXXABI-1.86]
   _ZThn8_N17QIconEnginePluginD0Ev[CXXABI-1.86]
   _ZThn8_NK14QStackedLayout11minimumSizeEv[CXXABI-1.86]
   _ZThn8_N11QScrollAreaD0Ev[CXXABI-1.86]
   _ZThn8_N17QIconEnginePluginD1Ev[CXXABI-1.86]
   _ZThn8_NK14QStackedLayout8sizeHintEv[CXXABI-1.86]
   _ZThn8_N11QScrollAreaD1Ev[CXXABI-1.86]
   _ZThn8_N18QX11EmbedContainerD0Ev[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem10opaqueAreaEv[CXXABI-1.86]
   _ZThn8_N11QToolButtonD0Ev[CXXABI-1.86]
   _ZThn8_N18QX11EmbedContainerD1Ev[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem12boundingRectEv[CXXABI-1.86]
   _ZThn8_N11QToolButtonD1Ev[CXXABI-1.86]
   _ZThn8_N19QAbstractScrollAreaD0Ev[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem12isObscuredByEPK13QGraphicsItem[CX
   XABI-1.86]
   _ZThn8_N11QTreeWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N19QAbstractScrollAreaD1Ev[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem16inputMethodQueryEN2Qt16InputMetho
   dQueryE[CXXABI-1.86]
   _ZThn8_N11QTreeWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N19QInputContextPluginD0Ev[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem17supportsExtensionEN13QGraphicsIte
   m9ExtensionE[CXXABI-1.86]
   _ZThn8_N11QVBoxLayoutD0Ev[CXXABI-1.86]
   _ZThn8_N19QInputContextPluginD1Ev[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem4typeEv[CXXABI-1.86]
   _ZThn8_N11QVBoxLayoutD1Ev[CXXABI-1.86]
   _ZThn8_N20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPic
   ture[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem5shapeEv[CXXABI-1.86]
   _ZThn8_N12QColorDialogD0Ev[CXXABI-1.86]
   _ZThn8_N20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPi
   cture[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem8containsERK7QPointF[CXXABI-1.86]
   _ZThn8_N12QColorDialogD1Ev[CXXABI-1.86]
   _ZThn8_N20QPictureFormatPluginD0Ev[CXXABI-1.86]
   _ZThn8_NK17QGraphicsTextItem9extensionERK8QVariant[CXXABI-1.86]
   _ZThn8_N12QInputDialogD0Ev[CXXABI-1.86]
   _ZThn8_N20QPictureFormatPluginD1Ev[CXXABI-1.86]
   _ZThn8_NK7QLayout11maximumSizeEv[CXXABI-1.86]
   _ZThn8_N12QInputDialogD1Ev[CXXABI-1.86]
   _ZThn8_N23QAccessibleBridgePluginD0Ev[CXXABI-1.86]
   _ZThn8_NK7QLayout11minimumSizeEv[CXXABI-1.86]
   _ZThn8_N12QPrintDialogD0Ev[CXXABI-1.86]
   _ZThn8_N23QAccessibleBridgePluginD1Ev[CXXABI-1.86]
   _ZThn8_NK7QLayout19expandingDirectionsEv[CXXABI-1.86]
   _ZThn8_N12QPrintDialogD1Ev[CXXABI-1.86]
   _ZThn8_N5QDialD0Ev[CXXABI-1.86]
   _ZThn8_NK7QLayout7isEmptyEv[CXXABI-1.86]
   _ZThn8_N12QStylePluginD0Ev[CXXABI-1.86]
   _ZThn8_N5QDialD1Ev[CXXABI-1.86]
   _ZThn8_NK7QLayout8geometryEv[CXXABI-1.86]
   _ZThn8_N12QStylePluginD1Ev[CXXABI-1.86]
   _ZThn8_N5QMenuD0Ev[CXXABI-1.86]
   _ZThn8_NK7QWidget11paintEngineEv[CXXABI-1.86]
   _ZThn8_N12QTableWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N5QMenuD1Ev[CXXABI-1.86]
   _ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE[CX
   XABI-1.86]
   _ZThn8_N12QTableWidgetD1Ev[CXXABI-1.86]
   _ZThn8_N6QFrameD0Ev[CXXABI-1.86]
   _ZThn8_NK7QWidget7devTypeEv[CXXABI-1.86]
   _ZThn8_N12QTextBrowserD0Ev[CXXABI-1.86]
   _ZThn8_N6QFrameD1Ev[CXXABI-1.86]
     __________________________________________________________

A.23. libQtOpenGL

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Itanium(TM) C++ ABI [CXXABI-1.86]

   Table A-26. libQtOpenGL Function Interfaces
                                     _ZThn8_N9QGLWidgetD0Ev[CXXABI-1.86]
 _ZThn8_N9QGLWidgetD1Ev[CXXABI-1.86]
   _ZThn8_NK9QGLWidget11paintEngineEv[CXXABI-1.86]
     __________________________________________________________

A.24. libQtSql

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Itanium(TM) C++ ABI [CXXABI-1.86]

   Table A-27. libQtSql Function Interfaces
   _ZThn8_N16QSqlDriverPluginD0Ev[CXXABI-1.86]
   _ZThn8_N16QSqlDriverPluginD1Ev[CXXABI-1.86]
     __________________________________________________________

A.25. libQtSvg

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Itanium(TM) C++ ABI [CXXABI-1.86]

   Table A-28. libQtSvg Function Interfaces
   _ZThn8_N10QSvgWidgetD0Ev[CXXABI-1.86]
   _ZThn8_N16QGraphicsSvgItem5paintEP8QPainterPK24QStyleOptionGrap
   hicsItemP7QWidget[CXXABI-1.86]
   _ZThn8_NK16QGraphicsSvgItem4typeEv[CXXABI-1.86]
   _ZThn8_N10QSvgWidgetD1Ev[CXXABI-1.86]
   _ZThn8_NK16QGraphicsSvgItem12boundingRectEv[CXXABI-1.86]
     __________________________________________________________

A.26. libQtXml

   The behavior of the interfaces in this library is specified by
   the following Standards.

   Itanium(TM) C++ ABI [CXXABI-1.86]

   Table A-29. libQtXml Function Interfaces
   _ZThn12_N18QXmlDefaultHandler13resolveEntityERK7QStringS2_RP15Q
   XmlInputSource[CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler8startDTDERK7QStringS2_S2_[CXXABI-
   1.86]
   _ZThn4_N18QXmlDefaultHandler10fatalErrorERK18QXmlParseException
   [CXXABI-1.86]
   _ZThn12_NK18QXmlDefaultHandler11errorStringEv[CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler9endEntityERK7QString[CXXABI-1.86]
   _ZThn4_N18QXmlDefaultHandler5errorERK18QXmlParseException[CXXAB
   I-1.86]
   _ZThn16_N18QXmlDefaultHandler10startCDATAEv[CXXABI-1.86]
   _ZThn16_NK18QXmlDefaultHandler11errorStringEv[CXXABI-1.86]
   _ZThn4_N18QXmlDefaultHandler7warningERK18QXmlParseException[CXX
   ABI-1.86]
   _ZThn16_N18QXmlDefaultHandler11startEntityERK7QString[CXXABI-1.
   86]
   _ZThn20_N18QXmlDefaultHandler13attributeDeclERK7QStringS2_S2_S2
   _S2_[CXXABI-1.86]
   _ZThn4_NK18QXmlDefaultHandler11errorStringEv[CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler6endDTDEv[CXXABI-1.86]
   _ZThn20_N18QXmlDefaultHandler18externalEntityDeclERK7QStringS2_
   S2_[CXXABI-1.86]
   _ZThn8_N18QXmlDefaultHandler12notationDeclERK7QStringS2_S2_[CXX
   ABI-1.86]
   _ZThn16_N18QXmlDefaultHandler7commentERK7QString[CXXABI-1.86]
   _ZThn20_N18QXmlDefaultHandler18internalEntityDeclERK7QStringS2_
   [CXXABI-1.86]
   _ZThn8_N18QXmlDefaultHandler18unparsedEntityDeclERK7QStringS2_S
   2_S2_[CXXABI-1.86]
   _ZThn16_N18QXmlDefaultHandler8endCDATAEv[CXXABI-1.86]
   _ZThn20_NK18QXmlDefaultHandler11errorStringEv[CXXABI-1.86]
   _ZThn8_NK18QXmlDefaultHandler11errorStringEv[CXXABI-1.86]
     __________________________________________________________

A.27. libasound

   The behavior of the interfaces in this library is specified by
   the following Standards.

   ALSA Library API Reference [ALSA]

   Table A-30. libasound Function Interfaces
   snd_asoundlib_version(ALSA_0.9)[ALSA]
   snd_mixer_elem_prev(ALSA_0.9)[ALSA]
   snd_pcm_status_dump(ALSA_0.9)[ALSA]
   snd_async_add_ctl_handler(ALSA_0.9)[ALSA]
   snd_mixer_elem_set_callback(ALSA_0.9)[ALSA]
   snd_pcm_status_free(ALSA_0.9)[ALSA]
   snd_async_add_handler(ALSA_0.9)[ALSA]
   snd_mixer_elem_set_callback_private(ALSA_0.9)[ALSA]
   snd_pcm_status_get_avail(ALSA_0.9)[ALSA]
   snd_async_add_pcm_handler(ALSA_0.9)[ALSA]
   snd_mixer_find_selem(ALSA_0.9)[ALSA]
   snd_pcm_status_get_avail_max(ALSA_0.9)[ALSA]
   snd_async_del_handler(ALSA_0.9)[ALSA]
   snd_mixer_first_elem(ALSA_0.9)[ALSA]
   snd_pcm_status_get_delay(ALSA_0.9)[ALSA]
   snd_async_handler_get_callback_private(ALSA_0.9)[ALSA]
   snd_mixer_free(ALSA_0.9)[ALSA]
   snd_pcm_status_get_state(ALSA_0.9)[ALSA]
   snd_async_handler_get_ctl(ALSA_0.9)[ALSA]
   snd_mixer_get_callback_private(ALSA_0.9)[ALSA]
   snd_pcm_status_get_trigger_tstamp(ALSA_0.9)[ALSA]
   snd_async_handler_get_pcm(ALSA_0.9)[ALSA]
   snd_mixer_get_count(ALSA_0.9)[ALSA]
   snd_pcm_status_get_tstamp(ALSA_0.9)[ALSA]
   snd_card_get_index(ALSA_0.9)[ALSA]
   snd_mixer_handle_events(ALSA_0.9)[ALSA]
   snd_pcm_status_malloc(ALSA_0.9)[ALSA]
   snd_card_get_longname(ALSA_0.9)[ALSA]
   snd_mixer_last_elem(ALSA_0.9)[ALSA]
   snd_pcm_status_sizeof(ALSA_0.9)[ALSA]
   snd_card_get_name(ALSA_0.9)[ALSA]
   snd_mixer_load(ALSA_0.9)[ALSA] snd_pcm_stream(ALSA_0.9)[ALSA]
   snd_card_load(ALSA_0.9)[ALSA] snd_mixer_open(ALSA_0.9)[ALSA]
   snd_pcm_stream_name(ALSA_0.9)[ALSA]
   snd_card_next(ALSA_0.9)[ALSA]
   snd_mixer_poll_descriptors(ALSA_0.9)[ALSA]
   snd_pcm_sw_params(ALSA_0.9)[ALSA]
   snd_config_add(ALSA_0.9)[ALSA]
   snd_mixer_poll_descriptors_count(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_copy(ALSA_0.9)[ALSA]
   snd_config_copy(ALSA_0.9)[ALSA]
   snd_mixer_poll_descriptors_revents(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_current(ALSA_0.9)[ALSA]
   snd_config_delete(ALSA_0.9)[ALSA]
   snd_mixer_selem_channel_name(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_dump(ALSA_0.9)[ALSA]
   snd_config_get_ascii(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_capture_group(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_free(ALSA_0.9)[ALSA]
   snd_config_get_id(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_capture_switch(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_get_avail_min(ALSA_0.9.0rc4)[ALSA]
   snd_config_get_integer(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_capture_volume(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_get_boundary(ALSA_0.9)[ALSA]
   snd_config_get_integer64(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_capture_volume_range(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_get_silence_size(ALSA_0.9.0rc4)[ALSA]
   snd_config_get_string(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_enum_item(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_get_silence_threshold(ALSA_0.9.0rc4)[ALSA]
   snd_config_get_type(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_enum_item_name(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_get_start_threshold(ALSA_0.9.0rc4)[ALSA]
   snd_config_imake_integer(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_enum_items(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_get_stop_threshold(ALSA_0.9.0rc4)[ALSA]
   snd_config_imake_integer64(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_id(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_get_tstamp_mode(ALSA_0.9.0rc4)[ALSA]
   snd_config_imake_string(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_index(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_malloc(ALSA_0.9)[ALSA]
   snd_config_iterator_end(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_name(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_set_avail_min(ALSA_0.9)[ALSA]
   snd_config_iterator_entry(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_playback_switch(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_set_silence_size(ALSA_0.9)[ALSA]
   snd_config_iterator_first(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_playback_volume(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_set_silence_threshold(ALSA_0.9)[ALSA]
   snd_config_iterator_next(ALSA_0.9)[ALSA]
   snd_mixer_selem_get_playback_volume_range(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_set_start_threshold(ALSA_0.9)[ALSA]
   snd_config_load(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_capture_channel(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_set_stop_threshold(ALSA_0.9)[ALSA]
   snd_config_make_compound(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_capture_switch(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_set_tstamp_mode(ALSA_0.9)[ALSA]
   snd_config_make_integer(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_capture_switch_exclusive(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_set_xfer_align(ALSA_0.9)[ALSA]
   snd_config_make_integer64(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_capture_switch_joined(ALSA_0.9)[ALSA]
   snd_pcm_sw_params_sizeof(ALSA_0.9)[ALSA]
   snd_config_make_string(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_capture_volume(ALSA_0.9)[ALSA]
   snd_pcm_type(ALSA_0.9)[ALSA]
   snd_config_save(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_capture_volume_joined(ALSA_0.9)[ALSA]
   snd_pcm_type_name(ALSA_0.9.0)[ALSA]
   snd_config_search(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_common_switch(ALSA_0.9)[ALSA]
   snd_pcm_unlink(ALSA_0.9)[ALSA]
   snd_config_searchv(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_common_volume(ALSA_0.9)[ALSA]
   snd_pcm_wait(ALSA_0.9)[ALSA]
   snd_config_set_ascii(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_playback_channel(ALSA_0.9)[ALSA]
   snd_pcm_writei(ALSA_0.9)[ALSA]
   snd_config_set_integer(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_playback_switch(ALSA_0.9)[ALSA]
   snd_pcm_writen(ALSA_0.9)[ALSA]
   snd_config_set_integer64(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_playback_switch_joined(ALSA_0.9)[ALSA]
   snd_rawmidi_close(ALSA_0.9)[ALSA]
   snd_config_set_string(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_playback_volume(ALSA_0.9)[ALSA]
   snd_rawmidi_drain(ALSA_0.9)[ALSA]
   snd_config_top(ALSA_0.9)[ALSA]
   snd_mixer_selem_has_playback_volume_joined(ALSA_0.9)[ALSA]
   snd_rawmidi_drop(ALSA_0.9)[ALSA]
   snd_config_update(ALSA_0.9)[ALSA]
   snd_mixer_selem_id_copy(ALSA_0.9)[ALSA]
   snd_rawmidi_info(ALSA_0.9)[ALSA]
   snd_config_update_free_global(ALSA_0.9)[ALSA]
   snd_mixer_selem_id_free(ALSA_0.9)[ALSA]
   snd_rawmidi_info_copy(ALSA_0.9)[ALSA]
   snd_ctl_card_info(ALSA_0.9)[ALSA]
   snd_mixer_selem_id_get_index(ALSA_0.9)[ALSA]
   snd_rawmidi_info_free(ALSA_0.9)[ALSA]
   snd_ctl_card_info_clear(ALSA_0.9)[ALSA]
   snd_mixer_selem_id_get_name(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_card(ALSA_0.9)[ALSA]
   snd_ctl_card_info_copy(ALSA_0.9)[ALSA]
   snd_mixer_selem_id_malloc(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_device(ALSA_0.9)[ALSA]
   snd_ctl_card_info_free(ALSA_0.9)[ALSA]
   snd_mixer_selem_id_set_index(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_flags(ALSA_0.9)[ALSA]
   snd_ctl_card_info_get_components(ALSA_0.9)[ALSA]
   snd_mixer_selem_id_set_name(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_id(ALSA_0.9)[ALSA]
   snd_ctl_card_info_get_driver(ALSA_0.9)[ALSA]
   snd_mixer_selem_id_sizeof(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_name(ALSA_0.9)[ALSA]
   snd_ctl_card_info_get_id(ALSA_0.9)[ALSA]
   snd_mixer_selem_is_active(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_stream(ALSA_0.9)[ALSA]
   snd_ctl_card_info_get_longname(ALSA_0.9)[ALSA]
   snd_mixer_selem_is_capture_mono(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_subdevice(ALSA_0.9)[ALSA]
   snd_ctl_card_info_get_mixername(ALSA_0.9)[ALSA]
   snd_mixer_selem_is_enum_capture(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_subdevice_name(ALSA_0.9)[ALSA]
   snd_ctl_card_info_get_name(ALSA_0.9)[ALSA]
   snd_mixer_selem_is_enum_playback(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_subdevices_avail(ALSA_0.9)[ALSA]
   snd_ctl_card_info_malloc(ALSA_0.9)[ALSA]
   snd_mixer_selem_is_enumerated(ALSA_0.9)[ALSA]
   snd_rawmidi_info_get_subdevices_count(ALSA_0.9)[ALSA]
   snd_ctl_card_info_sizeof(ALSA_0.9)[ALSA]
   snd_mixer_selem_is_playback_mono(ALSA_0.9)[ALSA]
   snd_rawmidi_info_malloc(ALSA_0.9)[ALSA]
   snd_ctl_close(ALSA_0.9)[ALSA]
   snd_mixer_selem_register(ALSA_0.9)[ALSA]
   snd_rawmidi_info_set_device(ALSA_0.9)[ALSA]
   snd_ctl_elem_add_boolean(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_capture_switch(ALSA_0.9)[ALSA]
   snd_rawmidi_info_set_stream(ALSA_0.9)[ALSA]
   snd_ctl_elem_add_iec958(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_capture_switch_all(ALSA_0.9)[ALSA]
   snd_rawmidi_info_set_subdevice(ALSA_0.9)[ALSA]
   snd_ctl_elem_add_integer(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_capture_volume(ALSA_0.9)[ALSA]
   snd_rawmidi_info_sizeof(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_clear(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_capture_volume_all(ALSA_0.9)[ALSA]
   snd_rawmidi_nonblock(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_copy(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_capture_volume_range(ALSA_0.9)[ALSA]
   snd_rawmidi_open(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_free(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_enum_item(ALSA_0.9)[ALSA]
   snd_rawmidi_poll_descriptors(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_get_device(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_playback_switch(ALSA_0.9)[ALSA]
   snd_rawmidi_poll_descriptors_count(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_get_index(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_playback_switch_all(ALSA_0.9)[ALSA]
   snd_rawmidi_poll_descriptors_revents(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_get_interface(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_playback_volume(ALSA_0.9)[ALSA]
   snd_rawmidi_read(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_get_name(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_playback_volume_all(ALSA_0.9)[ALSA]
   snd_rawmidi_write(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_get_numid(ALSA_0.9)[ALSA]
   snd_mixer_selem_set_playback_volume_range(ALSA_0.9)[ALSA]
   snd_seq_alloc_named_queue(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_get_subdevice(ALSA_0.9)[ALSA]
   snd_mixer_set_callback(ALSA_0.9)[ALSA]
   snd_seq_alloc_queue(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_malloc(ALSA_0.9)[ALSA]
   snd_mixer_set_callback_private(ALSA_0.9)[ALSA]
   snd_seq_client_id(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_set_device(ALSA_0.9)[ALSA]
   snd_mixer_wait(ALSA_0.9)[ALSA]
   snd_seq_client_info_copy(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_set_index(ALSA_0.9)[ALSA]
   snd_output_buffer_open(ALSA_0.9)[ALSA]
   snd_seq_client_info_free(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_set_interface(ALSA_0.9)[ALSA]
   snd_output_buffer_string(ALSA_0.9)[ALSA]
   snd_seq_client_info_get_client(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_set_name(ALSA_0.9)[ALSA]
   snd_output_close(ALSA_0.9)[ALSA]
   snd_seq_client_info_get_name(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_set_numid(ALSA_0.9)[ALSA]
   snd_output_putc(ALSA_0.9)[ALSA]
   snd_seq_client_info_get_num_ports(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_set_subdevice(ALSA_0.9)[ALSA]
   snd_output_puts(ALSA_0.9)[ALSA]
   snd_seq_client_info_get_type(ALSA_0.9)[ALSA]
   snd_ctl_elem_id_sizeof(ALSA_0.9)[ALSA]
   snd_output_stdio_attach(ALSA_0.9)[ALSA]
   snd_seq_client_info_malloc(ALSA_0.9)[ALSA]
   snd_ctl_elem_iface_name(ALSA_0.9)[ALSA]
   snd_output_stdio_open(ALSA_0.9)[ALSA]
   snd_seq_client_info_set_client(ALSA_0.9)[ALSA]
   snd_ctl_elem_info(ALSA_0.9)[ALSA]
   snd_pcm_access_mask_any(ALSA_0.9)[ALSA]
   snd_seq_client_info_set_name(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_clear(ALSA_0.9)[ALSA]
   snd_pcm_access_mask_copy(ALSA_0.9)[ALSA]
   snd_seq_client_info_sizeof(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_copy(ALSA_0.9)[ALSA]
   snd_pcm_access_mask_free(ALSA_0.9)[ALSA]
   snd_seq_close(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_free(ALSA_0.9)[ALSA]
   snd_pcm_access_mask_malloc(ALSA_0.9)[ALSA]
   snd_seq_connect_from(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_count(ALSA_0.9)[ALSA]
   snd_pcm_access_mask_none(ALSA_0.9)[ALSA]
   snd_seq_connect_to(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_id(ALSA_0.9)[ALSA]
   snd_pcm_access_mask_set(ALSA_0.9)[ALSA]
   snd_seq_control_queue(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_item_name(ALSA_0.9)[ALSA]
   snd_pcm_access_mask_sizeof(ALSA_0.9)[ALSA]
   snd_seq_create_port(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_items(ALSA_0.9)[ALSA]
   snd_pcm_access_mask_test(ALSA_0.9)[ALSA]
   snd_seq_create_simple_port(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_max(ALSA_0.9)[ALSA]
   snd_pcm_access_name(ALSA_0.9)[ALSA]
   snd_seq_delete_port(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_max64(ALSA_0.9)[ALSA]
   snd_pcm_area_copy(ALSA_0.9)[ALSA]
   snd_seq_delete_simple_port(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_min(ALSA_0.9)[ALSA]
   snd_pcm_area_silence(ALSA_0.9)[ALSA]
   snd_seq_disconnect_from(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_min64(ALSA_0.9)[ALSA]
   snd_pcm_areas_copy(ALSA_0.9)[ALSA]
   snd_seq_disconnect_to(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_name(ALSA_0.9)[ALSA]
   snd_pcm_areas_silence(ALSA_0.9)[ALSA]
   snd_seq_drain_output(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_numid(ALSA_0.9)[ALSA]
   snd_pcm_avail_update(ALSA_0.9)[ALSA]
   snd_seq_drop_output(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_step(ALSA_0.9)[ALSA]
   snd_pcm_build_linear_format(ALSA_0.9)[ALSA]
   snd_seq_drop_output_buffer(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_step64(ALSA_0.9)[ALSA]
   snd_pcm_bytes_to_frames(ALSA_0.9)[ALSA]
   snd_seq_event_input(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_get_type(ALSA_0.9)[ALSA]
   snd_pcm_bytes_to_samples(ALSA_0.9)[ALSA]
   snd_seq_event_input_pending(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_is_inactive(ALSA_0.9)[ALSA]
   snd_pcm_close(ALSA_0.9)[ALSA]
   snd_seq_event_length(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_is_locked(ALSA_0.9)[ALSA]
   snd_pcm_delay(ALSA_0.9)[ALSA]
   snd_seq_event_output(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_is_readable(ALSA_0.9)[ALSA]
   snd_pcm_drain(ALSA_0.9)[ALSA]
   snd_seq_event_output_direct(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_is_user(ALSA_0.9)[ALSA]
   snd_pcm_drop(ALSA_0.9)[ALSA] snd_seq_free_event(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_is_volatile(ALSA_0.9)[ALSA]
   snd_pcm_dump(ALSA_0.9)[ALSA] snd_seq_free_queue(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_is_writable(ALSA_0.9)[ALSA]
   snd_pcm_format_big_endian(ALSA_0.9)[ALSA]
   snd_seq_get_any_client_info(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_malloc(ALSA_0.9)[ALSA]
   snd_pcm_format_cpu_endian(ALSA_0.9)[ALSA]
   snd_seq_get_any_port_info(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_set_id(ALSA_0.9)[ALSA]
   snd_pcm_format_description(ALSA_0.9)[ALSA]
   snd_seq_get_client_info(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_set_item(ALSA_0.9)[ALSA]
   snd_pcm_format_float(ALSA_0.9)[ALSA]
   snd_seq_get_input_buffer_size(ALSA_0.9)[ALSA]
   snd_ctl_elem_info_sizeof(ALSA_0.9)[ALSA]
   snd_pcm_format_linear(ALSA_0.9)[ALSA]
   snd_seq_get_output_buffer_size(ALSA_0.9)[ALSA]
   snd_ctl_elem_list(ALSA_0.9)[ALSA]
   snd_pcm_format_little_endian(ALSA_0.9)[ALSA]
   snd_seq_get_port_info(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_alloc_space(ALSA_0.9)[ALSA]
   snd_pcm_format_mask_any(ALSA_0.9)[ALSA]
   snd_seq_get_port_subscription(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_clear(ALSA_0.9)[ALSA]
   snd_pcm_format_mask_copy(ALSA_0.9)[ALSA]
   snd_seq_get_queue_status(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_copy(ALSA_0.9)[ALSA]
   snd_pcm_format_mask_free(ALSA_0.9)[ALSA]
   snd_seq_get_queue_tempo(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_free(ALSA_0.9)[ALSA]
   snd_pcm_format_mask_malloc(ALSA_0.9)[ALSA]
   snd_seq_nonblock(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_free_space(ALSA_0.9)[ALSA]
   snd_pcm_format_mask_none(ALSA_0.9)[ALSA]
   snd_seq_open(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_get_count(ALSA_0.9)[ALSA]
   snd_pcm_format_mask_set(ALSA_0.9)[ALSA]
   snd_seq_parse_address(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_get_id(ALSA_0.9)[ALSA]
   snd_pcm_format_mask_sizeof(ALSA_0.9)[ALSA]
   snd_seq_poll_descriptors(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_get_name(ALSA_0.9)[ALSA]
   snd_pcm_format_mask_test(ALSA_0.9)[ALSA]
   snd_seq_poll_descriptors_count(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_get_used(ALSA_0.9)[ALSA]
   snd_pcm_format_name(ALSA_0.9)[ALSA]
   snd_seq_poll_descriptors_revents(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_malloc(ALSA_0.9)[ALSA]
   snd_pcm_format_physical_width(ALSA_0.9)[ALSA]
   snd_seq_port_info_copy(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_set_offset(ALSA_0.9)[ALSA]
   snd_pcm_format_set_silence(ALSA_0.9)[ALSA]
   snd_seq_port_info_free(ALSA_0.9)[ALSA]
   snd_ctl_elem_list_sizeof(ALSA_0.9)[ALSA]
   snd_pcm_format_signed(ALSA_0.9)[ALSA]
   snd_seq_port_info_get_addr(ALSA_0.9)[ALSA]
   snd_ctl_elem_read(ALSA_0.9)[ALSA]
   snd_pcm_format_size(ALSA_0.9)[ALSA]
   snd_seq_port_info_get_capability(ALSA_0.9)[ALSA]
   snd_ctl_elem_remove(ALSA_0.9)[ALSA]
   snd_pcm_format_unsigned(ALSA_0.9)[ALSA]
   snd_seq_port_info_get_client(ALSA_0.9)[ALSA]
   snd_ctl_elem_type_name(ALSA_0.9)[ALSA]
   snd_pcm_format_value(ALSA_0.9)[ALSA]
   snd_seq_port_info_get_name(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_clear(ALSA_0.9)[ALSA]
   snd_pcm_format_width(ALSA_0.9)[ALSA]
   snd_seq_port_info_get_port(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_copy(ALSA_0.9)[ALSA]
   snd_pcm_forward(ALSA_0.9.0rc8)[ALSA]
   snd_seq_port_info_get_type(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_free(ALSA_0.9)[ALSA]
   snd_pcm_frames_to_bytes(ALSA_0.9)[ALSA]
   snd_seq_port_info_malloc(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_get_boolean(ALSA_0.9)[ALSA]
   snd_pcm_hw_free(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_capability(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_get_byte(ALSA_0.9)[ALSA]
   snd_pcm_hw_params(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_client(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_get_bytes(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_any(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_midi_channels(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_get_enumerated(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_can_mmap_sample_resolution(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_name(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_get_id(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_can_pause(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_port(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_get_iec958(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_can_resume(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_port_specified(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_get_integer(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_can_sync_start(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_timestamp_queue(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_get_integer64(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_copy(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_timestamp_real(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_malloc(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_current(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_timestamping(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_set_boolean(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_dump(ALSA_0.9)[ALSA]
   snd_seq_port_info_set_type(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_set_byte(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_free(ALSA_0.9)[ALSA]
   snd_seq_port_info_sizeof(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_set_enumerated(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_access(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_copy(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_set_id(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_access_mask(ALSA_0.9)[ALSA]
   snd_seq_port_subscribe_free(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_set_iec958(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_buffer_size(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_get_dest(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_set_integer(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_buffer_size_max(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_get_exclusive(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_set_integer64(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_buffer_size_min(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_get_queue(ALSA_0.9)[ALSA]
   snd_ctl_elem_value_sizeof(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_buffer_time(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_get_sender(ALSA_0.9)[ALSA]
   snd_ctl_elem_write(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_buffer_time_max(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_get_time_real(ALSA_0.9)[ALSA]
   snd_ctl_event_clear(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_buffer_time_min(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_get_time_update(ALSA_0.9)[ALSA]
   snd_ctl_event_copy(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_channels(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_malloc(ALSA_0.9)[ALSA]
   snd_ctl_event_elem_get_id(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_channels_max(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_set_dest(ALSA_0.9)[ALSA]
   snd_ctl_event_elem_get_mask(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_channels_min(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_set_exclusive(ALSA_0.9)[ALSA]
   snd_ctl_event_free(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_format(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_set_queue(ALSA_0.9)[ALSA]
   snd_ctl_event_malloc(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_format_mask(ALSA_0.9)[ALSA]
   snd_seq_port_subscribe_set_sender(ALSA_0.9)[ALSA]
   snd_ctl_event_sizeof(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_period_size(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_set_time_real(ALSA_0.9)[ALSA]
   snd_ctl_hwdep_info(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_period_size_max(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_set_time_update(ALSA_0.9)[ALSA]
   snd_ctl_hwdep_next_device(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_period_size_min(ALSA_0.9.0rc4)[ALSA]
   snd_seq_port_subscribe_sizeof(ALSA_0.9)[ALSA]
   snd_ctl_name(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_period_time(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_next_client(ALSA_0.9)[ALSA]
   snd_ctl_nonblock(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_period_time_max(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_next_port(ALSA_0.9)[ALSA]
   snd_ctl_open(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_period_time_min(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_port_subscribers(ALSA_0.9)[ALSA]
   snd_ctl_pcm_info(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_periods(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_subscribe_copy(ALSA_0.9)[ALSA]
   snd_ctl_pcm_next_device(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_periods_max(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_subscribe_free(ALSA_0.9)[ALSA]
   snd_ctl_poll_descriptors(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_periods_min(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_subscribe_get_addr(ALSA_0.9)[ALSA]
   snd_ctl_poll_descriptors_count(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_rate(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_subscribe_get_exclusive(ALSA_0.9)[ALSA]
   snd_ctl_rawmidi_info(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_rate_max(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_subscribe_get_index(ALSA_0.9)[ALSA]
   snd_ctl_rawmidi_next_device(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_rate_min(ALSA_0.9.0rc4)[ALSA]
   snd_seq_query_subscribe_get_queue(ALSA_0.9)[ALSA]
   snd_ctl_read(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_rate_numden(ALSA_0.9)[ALSA]
   snd_seq_query_subscribe_get_root(ALSA_0.9)[ALSA]
   snd_ctl_subscribe_events(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_rate_resample(ALSA_0.9)[ALSA]
   snd_seq_query_subscribe_get_time_real(ALSA_0.9)[ALSA]
   snd_hctl_close(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_get_sbits(ALSA_0.9)[ALSA]
   snd_seq_query_subscribe_get_time_update(ALSA_0.9)[ALSA]
   snd_hctl_elem_get_callback_private(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_is_double(ALSA_0.9)[ALSA]
   snd_seq_query_subscribe_malloc(ALSA_0.9)[ALSA]
   snd_hctl_elem_get_id(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_is_half_duplex(ALSA_0.9)[ALSA]
   snd_seq_query_subscribe_set_index(ALSA_0.9)[ALSA]
   snd_hctl_elem_info(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_is_joint_duplex(ALSA_0.9)[ALSA]
   snd_seq_query_subscribe_set_root(ALSA_0.9)[ALSA]
   snd_hctl_elem_next(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_malloc(ALSA_0.9)[ALSA]
   snd_seq_query_subscribe_set_type(ALSA_0.9)[ALSA]
   snd_hctl_elem_prev(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_access(ALSA_0.9)[ALSA]
   snd_seq_query_subscribe_sizeof(ALSA_0.9)[ALSA]
   snd_hctl_elem_read(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_access_mask(ALSA_0.9)[ALSA]
   snd_seq_queue_status_copy(ALSA_0.9)[ALSA]
   snd_hctl_elem_set_callback(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_buffer_size(ALSA_0.9)[ALSA]
   snd_seq_queue_status_free(ALSA_0.9)[ALSA]
   snd_hctl_elem_set_callback_private(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_buffer_size_near(ALSA_0.9.0rc4)[ALSA]
   snd_seq_queue_status_get_real_time(ALSA_0.9)[ALSA]
   snd_hctl_elem_write(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_buffer_time(ALSA_0.9)[ALSA]
   snd_seq_queue_status_get_tick_time(ALSA_0.9)[ALSA]
   snd_hctl_find_elem(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_buffer_time_near(ALSA_0.9.0rc4)[ALSA]
   snd_seq_queue_status_malloc(ALSA_0.9)[ALSA]
   snd_hctl_first_elem(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_channels(ALSA_0.9)[ALSA]
   snd_seq_queue_status_sizeof(ALSA_0.9)[ALSA]
   snd_hctl_free(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_channels_near(ALSA_0.9.0rc4)[ALSA]
   snd_seq_queue_tempo_copy(ALSA_0.9)[ALSA]
   snd_hctl_get_callback_private(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_format(ALSA_0.9)[ALSA]
   snd_seq_queue_tempo_free(ALSA_0.9)[ALSA]
   snd_hctl_get_count(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_format_mask(ALSA_0.9)[ALSA]
   snd_seq_queue_tempo_get_ppq(ALSA_0.9)[ALSA]
   snd_hctl_handle_events(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_period_size(ALSA_0.9)[ALSA]
   snd_seq_queue_tempo_get_tempo(ALSA_0.9)[ALSA]
   snd_hctl_last_elem(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_period_size_near(ALSA_0.9.0rc4)[ALSA]
   snd_seq_queue_tempo_malloc(ALSA_0.9)[ALSA]
   snd_hctl_load(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_period_time(ALSA_0.9)[ALSA]
   snd_seq_queue_tempo_set_ppq(ALSA_0.9)[ALSA]
   snd_hctl_nonblock(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_period_time_near(ALSA_0.9.0rc4)[ALSA]
   snd_seq_queue_tempo_set_tempo(ALSA_0.9)[ALSA]
   snd_hctl_open(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_periods(ALSA_0.9)[ALSA]
   snd_seq_queue_tempo_sizeof(ALSA_0.9)[ALSA]
   snd_hctl_set_callback(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_periods_integer(ALSA_0.9)[ALSA]
   snd_seq_set_client_info(ALSA_0.9)[ALSA]
   snd_hctl_set_callback_private(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_periods_near(ALSA_0.9.0rc4)[ALSA]
   snd_seq_set_client_name(ALSA_0.9)[ALSA]
   snd_hctl_wait(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_rate(ALSA_0.9)[ALSA]
   snd_seq_set_input_buffer_size(ALSA_0.9)[ALSA]
   snd_hwdep_close(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_rate_near(ALSA_0.9.0rc4)[ALSA]
   snd_seq_set_output_buffer_size(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_copy(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_set_rate_resample(ALSA_0.9)[ALSA]
   snd_seq_set_port_info(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_free(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_sizeof(ALSA_0.9)[ALSA]
   snd_seq_set_queue_tempo(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_get_image(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_access(ALSA_0.9)[ALSA]
   snd_seq_subscribe_port(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_get_index(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_buffer_size(ALSA_0.9)[ALSA]
   snd_seq_sync_output_queue(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_get_length(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_buffer_time(ALSA_0.9)[ALSA]
   snd_seq_system_info(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_get_name(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_channels(ALSA_0.9)[ALSA]
   snd_seq_system_info_copy(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_malloc(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_format(ALSA_0.9)[ALSA]
   snd_seq_system_info_free(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_set_image(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_period_size(ALSA_0.9)[ALSA]
   snd_seq_system_info_get_clients(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_set_index(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_period_time(ALSA_0.9)[ALSA]
   snd_seq_system_info_get_ports(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_set_length(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_periods(ALSA_0.9)[ALSA]
   snd_seq_system_info_get_queues(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_set_name(ALSA_0.9)[ALSA]
   snd_pcm_hw_params_test_rate(ALSA_0.9)[ALSA]
   snd_seq_system_info_malloc(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_image_sizeof(ALSA_0.9)[ALSA]
   snd_pcm_hwsync(ALSA_0.9)[ALSA]
   snd_seq_system_info_sizeof(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_load(ALSA_0.9)[ALSA] snd_pcm_info(ALSA_0.9)[ALSA]
   snd_seq_unsubscribe_port(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status(ALSA_0.9)[ALSA]
   snd_pcm_info_copy(ALSA_0.9)[ALSA] snd_strerror(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_copy(ALSA_0.9)[ALSA]
   snd_pcm_info_free(ALSA_0.9)[ALSA]
   snd_timer_close(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_free(ALSA_0.9)[ALSA]
   snd_pcm_info_get_card(ALSA_0.9)[ALSA]
   snd_timer_continue(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_get_chip_ready(ALSA_0.9)[ALSA]
   snd_pcm_info_get_class(ALSA_0.9)[ALSA]
   snd_timer_id_copy(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_get_dsp_loaded(ALSA_0.9)[ALSA]
   snd_pcm_info_get_device(ALSA_0.9)[ALSA]
   snd_timer_id_free(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_get_id(ALSA_0.9)[ALSA]
   snd_pcm_info_get_id(ALSA_0.9)[ALSA]
   snd_timer_id_get_card(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_get_num_dsps(ALSA_0.9)[ALSA]
   snd_pcm_info_get_name(ALSA_0.9)[ALSA]
   snd_timer_id_get_class(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_get_version(ALSA_0.9)[ALSA]
   snd_pcm_info_get_stream(ALSA_0.9)[ALSA]
   snd_timer_id_get_device(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_malloc(ALSA_0.9)[ALSA]
   snd_pcm_info_get_subdevice(ALSA_0.9)[ALSA]
   snd_timer_id_get_sclass(ALSA_0.9)[ALSA]
   snd_hwdep_dsp_status_sizeof(ALSA_0.9)[ALSA]
   snd_pcm_info_get_subdevice_name(ALSA_0.9)[ALSA]
   snd_timer_id_get_subdevice(ALSA_0.9)[ALSA]
   snd_hwdep_info(ALSA_0.9)[ALSA]
   snd_pcm_info_get_subdevices_avail(ALSA_0.9)[ALSA]
   snd_timer_id_malloc(ALSA_0.9)[ALSA]
   snd_hwdep_info_copy(ALSA_0.9)[ALSA]
   snd_pcm_info_get_subdevices_count(ALSA_0.9)[ALSA]
   snd_timer_id_set_card(ALSA_0.9)[ALSA]
   snd_hwdep_info_free(ALSA_0.9)[ALSA]
   snd_pcm_info_malloc(ALSA_0.9)[ALSA]
   snd_timer_id_set_class(ALSA_0.9)[ALSA]
   snd_hwdep_info_get_card(ALSA_0.9)[ALSA]
   snd_pcm_info_set_device(ALSA_0.9)[ALSA]
   snd_timer_id_set_device(ALSA_0.9)[ALSA]
   snd_hwdep_info_get_device(ALSA_0.9)[ALSA]
   snd_pcm_info_set_stream(ALSA_0.9)[ALSA]
   snd_timer_id_set_sclass(ALSA_0.9)[ALSA]
   snd_hwdep_info_get_id(ALSA_0.9)[ALSA]
   snd_pcm_info_set_subdevice(ALSA_0.9)[ALSA]
   snd_timer_id_set_subdevice(ALSA_0.9)[ALSA]
   snd_hwdep_info_get_iface(ALSA_0.9)[ALSA]
   snd_pcm_info_sizeof(ALSA_0.9)[ALSA]
   snd_timer_id_sizeof(ALSA_0.9)[ALSA]
   snd_hwdep_info_get_name(ALSA_0.9)[ALSA]
   snd_pcm_link(ALSA_0.9)[ALSA] snd_timer_info(ALSA_0.9)[ALSA]
   snd_hwdep_info_malloc(ALSA_0.9)[ALSA]
   snd_pcm_mmap_begin(ALSA_0.9)[ALSA]
   snd_timer_info_copy(ALSA_0.9)[ALSA]
   snd_hwdep_info_set_device(ALSA_0.9)[ALSA]
   snd_pcm_mmap_commit(ALSA_0.9)[ALSA]
   snd_timer_info_free(ALSA_0.9)[ALSA]
   snd_hwdep_info_sizeof(ALSA_0.9)[ALSA]
   snd_pcm_mmap_readi(ALSA_0.9)[ALSA]
   snd_timer_info_get_card(ALSA_0.9)[ALSA]
   snd_hwdep_ioctl(ALSA_0.9)[ALSA]
   snd_pcm_mmap_readn(ALSA_0.9)[ALSA]
   snd_timer_info_get_id(ALSA_0.9)[ALSA]
   snd_hwdep_open(ALSA_0.9)[ALSA]
   snd_pcm_mmap_writei(ALSA_0.9)[ALSA]
   snd_timer_info_get_name(ALSA_0.9)[ALSA]
   snd_hwdep_poll_descriptors(ALSA_0.9)[ALSA]
   snd_pcm_mmap_writen(ALSA_0.9)[ALSA]
   snd_timer_info_get_resolution(ALSA_0.9)[ALSA]
   snd_hwdep_read(ALSA_0.9)[ALSA] snd_pcm_name(ALSA_0.9)[ALSA]
   snd_timer_info_malloc(ALSA_0.9)[ALSA]
   snd_hwdep_write(ALSA_0.9)[ALSA]
   snd_pcm_nonblock(ALSA_0.9)[ALSA]
   snd_timer_info_sizeof(ALSA_0.9)[ALSA]
   snd_input_buffer_open(ALSA_0.9)[ALSA]
   snd_pcm_open(ALSA_0.9)[ALSA] snd_timer_open(ALSA_0.9)[ALSA]
   snd_input_close(ALSA_0.9)[ALSA]
   snd_pcm_open_lconf(ALSA_0.9)[ALSA]
   snd_timer_params(ALSA_0.9)[ALSA]
   snd_input_stdio_attach(ALSA_0.9)[ALSA]
   snd_pcm_pause(ALSA_0.9)[ALSA]
   snd_timer_params_get_ticks(ALSA_0.9)[ALSA]
   snd_input_stdio_open(ALSA_0.9)[ALSA]
   snd_pcm_poll_descriptors(ALSA_0.9)[ALSA]
   snd_timer_params_malloc(ALSA_0.9)[ALSA]
   snd_lib_error_set_handler(ALSA_0.9)[ALSA]
   snd_pcm_poll_descriptors_count(ALSA_0.9)[ALSA]
   snd_timer_params_set_auto_start(ALSA_0.9)[ALSA]
   snd_midi_event_decode(ALSA_0.9)[ALSA]
   snd_pcm_poll_descriptors_revents(ALSA_0.9)[ALSA]
   snd_timer_params_set_ticks(ALSA_0.9)[ALSA]
   snd_midi_event_encode(ALSA_0.9)[ALSA]
   snd_pcm_prepare(ALSA_0.9)[ALSA]
   snd_timer_poll_descriptors(ALSA_0.9)[ALSA]
   snd_midi_event_encode_byte(ALSA_0.9)[ALSA]
   snd_pcm_readi(ALSA_0.9)[ALSA]
   snd_timer_poll_descriptors_count(ALSA_0.9)[ALSA]
   snd_midi_event_free(ALSA_0.9)[ALSA]
   snd_pcm_readn(ALSA_0.9)[ALSA] snd_timer_read(ALSA_0.9)[ALSA]
   snd_midi_event_init(ALSA_0.9)[ALSA]
   snd_pcm_recover(ALSA_0.9)[ALSA] snd_timer_start(ALSA_0.9)[ALSA]
   snd_midi_event_new(ALSA_0.9)[ALSA]
   snd_pcm_reset(ALSA_0.9)[ALSA] snd_timer_status(ALSA_0.9)[ALSA]
   snd_midi_event_reset_decode(ALSA_0.9)[ALSA]
   snd_pcm_resume(ALSA_0.9)[ALSA]
   snd_timer_status_free(ALSA_0.9)[ALSA]
   snd_midi_event_reset_encode(ALSA_0.9)[ALSA]
   snd_pcm_rewind(ALSA_0.9)[ALSA]
   snd_timer_status_get_lost(ALSA_0.9)[ALSA]
   snd_mixer_attach(ALSA_0.9)[ALSA]
   snd_pcm_samples_to_bytes(ALSA_0.9)[ALSA]
   snd_timer_status_get_overrun(ALSA_0.9)[ALSA]
   snd_mixer_close(ALSA_0.9)[ALSA] snd_pcm_start(ALSA_0.9)[ALSA]
   snd_timer_status_get_queue(ALSA_0.9)[ALSA]
   snd_mixer_detach(ALSA_0.9)[ALSA] snd_pcm_state(ALSA_0.9)[ALSA]
   snd_timer_status_get_resolution(ALSA_0.9)[ALSA]
   snd_mixer_elem_get_callback_private(ALSA_0.9)[ALSA]
   snd_pcm_state_name(ALSA_0.9)[ALSA]
   snd_timer_status_malloc(ALSA_0.9)[ALSA]
   snd_mixer_elem_get_type(ALSA_0.9)[ALSA]
   snd_pcm_status(ALSA_0.9)[ALSA] snd_timer_stop(ALSA_0.9)[ALSA]
   snd_mixer_elem_next(ALSA_0.9)[ALSA]
   snd_pcm_status_copy(ALSA_0.9)[ALSA]

   Table A-31. libasound Data Interfaces
   snd_config[ALSA] snd_seq_event_types[ALSA]
     __________________________________________________________

Appendix B. GNU Free Documentation License (Informative)

   This specification is published under the terms of the GNU Free
   Documentation License, Version 1.1, March 2000

     Copyright (C) 2000 Free Software Foundation, Inc. 59 Temple
     Place, Suite 330, Boston, MA 02111-1307 USA Everyone is
     permitted to copy and distribute verbatim copies of this
     license document, but changing it is not allowed.
     __________________________________________________________

B.1. PREAMBLE

   The purpose of this License is to make a manual, textbook, or
   other written document "free" in the sense of freedom: to
   assure everyone the effective freedom to copy and redistribute
   it, with or without modifying it, either commercially or
   noncommercially. Secondarily, this License preserves for the
   author and publisher a way to get credit for their work, while
   not being considered responsible for modifications made by
   others.

   This License is a kind of "copyleft", which means that
   derivative works of the document must themselves be free in the
   same sense. It complements the GNU General Public License,
   which is a copyleft license designed for free software.

   We have designed this License in order to use it for manuals
   for free software, because free software needs free
   documentation: a free program should come with manuals
   providing the same freedoms that the software does. But this
   License is not limited to software manuals; it can be used for
   any textual work, regardless of subject matter or whether it is
   published as a printed book. We recommend this License
   principally for works whose purpose is instruction or
   reference.
     __________________________________________________________

B.2. APPLICABILITY AND DEFINITIONS

   This License applies to any manual or other work that contains
   a notice placed by the copyright holder saying it can be
   distributed under the terms of this License. The "Document",
   below, refers to any such manual or work. Any member of the
   public is a licensee, and is addressed as "you".

   A "Modified Version" of the Document means any work containing
   the Document or a portion of it, either copied verbatim, or
   with modifications and/or translated into another language.

   A "Secondary Section" is a named appendix or a front-matter
   section of the Document that deals exclusively with the
   relationship of the publishers or authors of the Document to
   the Document's overall subject (or to related matters) and
   contains nothing that could fall directly within that overall
   subject. (For example, if the Document is in part a textbook of
   mathematics, a Secondary Section may not explain any
   mathematics.) The relationship could be a matter of historical
   connection with the subject or with related matters, or of
   legal, commercial, philosophical, ethical or political position
   regarding them.

   The "Invariant Sections" are certain Secondary Sections whose
   titles are designated, as being those of Invariant Sections, in
   the notice that says that the Document is released under this
   License.

   The "Cover Texts" are certain short passages of text that are
   listed, as Front-Cover Texts or Back-Cover Texts, in the notice
   that says that the Document is released under this License.

   A "Transparent" copy of the Document means a machine-readable
   copy, represented in a format whose specification is available
   to the general public, whose contents can be viewed and edited
   directly and straightforwardly with generic text editors or
   (for images composed of pixels) generic paint programs or (for
   drawings) some widely available drawing editor, and that is
   suitable for input to text formatters or for automatic
   translation to a variety of formats suitable for input to text
   formatters. A copy made in an otherwise Transparent file format
   whose markup has been designed to thwart or discourage
   subsequent modification by readers is not Transparent. A copy
   that is not "Transparent" is called "Opaque".

   Examples of suitable formats for Transparent copies include
   plain ASCII without markup, Texinfo input format, LaTeX input
   format, SGML or XML using a publicly available DTD, and
   standard-conforming simple HTML designed for human
   modification. Opaque formats include PostScript, PDF,
   proprietary formats that can be read and edited only by
   proprietary word processors, SGML or XML for which the DTD
   and/or processing tools are not generally available, and the
   machine-generated HTML produced by some word processors for
   output purposes only.

   The "Title Page" means, for a printed book, the title page
   itself, plus such following pages as are needed to hold,
   legibly, the material this License requires to appear in the
   title page. For works in formats which do not have any title
   page as such, "Title Page" means the text near the most
   prominent appearance of the work's title, preceding the
   beginning of the body of the text.
     __________________________________________________________

B.3. VERBATIM COPYING

   You may copy and distribute the Document in any medium, either
   commercially or noncommercially, provided that this License,
   the copyright notices, and the license notice saying this
   License applies to the Document are reproduced in all copies,
   and that you add no other conditions whatsoever to those of
   this License. You may not use technical measures to obstruct or
   control the reading or further copying of the copies you make
   or distribute. However, you may accept compensation in exchange
   for copies. If you distribute a large enough number of copies
   you must also follow the conditions in section 3.

   You may also lend copies, under the same conditions stated
   above, and you may publicly display copies.
     __________________________________________________________

B.4. COPYING IN QUANTITY

   If you publish printed copies of the Document numbering more
   than 100, and the Document's license notice requires Cover
   Texts, you must enclose the copies in covers that carry,
   clearly and legibly, all these Cover Texts: Front-Cover Texts
   on the front cover, and Back-Cover Texts on the back cover.
   Both covers must also clearly and legibly identify you as the
   publisher of these copies. The front cover must present the
   full title with all words of the title equally prominent and
   visible. You may add other material on the covers in addition.
   Copying with changes limited to the covers, as long as they
   preserve the title of the Document and satisfy these
   conditions, can be treated as verbatim copying in other
   respects.

   If the required texts for either cover are too voluminous to
   fit legibly, you should put the first ones listed (as many as
   fit reasonably) on the actual cover, and continue the rest onto
   adjacent pages.

   If you publish or distribute Opaque copies of the Document
   numbering more than 100, you must either include a
   machine-readable Transparent copy along with each Opaque copy,
   or state in or with each Opaque copy a publicly-accessible
   computer-network location containing a complete Transparent
   copy of the Document, free of added material, which the general
   network-using public has access to download anonymously at no
   charge using public-standard network protocols. If you use the
   latter option, you must take reasonably prudent steps, when you
   begin distribution of Opaque copies in quantity, to ensure that
   this Transparent copy will remain thus accessible at the stated
   location until at least one year after the last time you
   distribute an Opaque copy (directly or through your agents or
   retailers) of that edition to the public.

   It is requested, but not required, that you contact the authors
   of the Document well before redistributing any large number of
   copies, to give them a chance to provide you with an updated
   version of the Document.
     __________________________________________________________

B.5. MODIFICATIONS

   You may copy and distribute a Modified Version of the Document
   under the conditions of sections 2 and 3 above, provided that
   you release the Modified Version under precisely this License,
   with the Modified Version filling the role of the Document,
   thus licensing distribution and modification of the Modified
   Version to whoever possesses a copy of it. In addition, you
   must do these things in the Modified Version:

    A. Use in the Title Page (and on the covers, if any) a title
       distinct from that of the Document, and from those of
       previous versions (which should, if there were any, be
       listed in the History section of the Document). You may use
       the same title as a previous version if the original
       publisher of that version gives permission.
    B. List on the Title Page, as authors, one or more persons or
       entities responsible for authorship of the modifications in
       the Modified Version, together with at least five of the
       principal authors of the Document (all of its principal
       authors, if it has less than five).
    C. State on the Title page the name of the publisher of the
       Modified Version, as the publisher.
    D. Preserve all the copyright notices of the Document.
    E. Add an appropriate copyright notice for your modifications
       adjacent to the other copyright notices.
    F. Include, immediately after the copyright notices, a license
       notice giving the public permission to use the Modified
       Version under the terms of this License, in the form shown
       in the Addendum below.
    G. Preserve in that license notice the full lists of Invariant
       Sections and required Cover Texts given in the Document's
       license notice.
    H. Include an unaltered copy of this License.
    I. Preserve the section entitled "History", and its title, and
       add to it an item stating at least the title, year, new
       authors, and publisher of the Modified Version as given on
       the Title Page. If there is no section entitled "History"
       in the Document, create one stating the title, year,
       authors, and publisher of the Document as given on its
       Title Page, then add an item describing the Modified
       Version as stated in the previous sentence.
    J. Preserve the network location, if any, given in the
       Document for public access to a Transparent copy of the
       Document, and likewise the network locations given in the
       Document for previous versions it was based on. These may
       be placed in the "History" section. You may omit a network
       location for a work that was published at least four years
       before the Document itself, or if the original publisher of
       the version it refers to gives permission.
    K. In any section entitled "Acknowledgements" or
       "Dedications", preserve the section's title, and preserve
       in the section all the substance and tone of each of the
       contributor acknowledgements and/or dedications given
       therein.
    L. Preserve all the Invariant Sections of the Document,
       unaltered in their text and in their titles. Section
       numbers or the equivalent are not considered part of the
       section titles.
    M. Delete any section entitled "Endorsements". Such a section
       may not be included in the Modified Version.
    N. Do not retitle any existing section as "Endorsements" or to
       conflict in title with any Invariant Section.

   If the Modified Version includes new front-matter sections or
   appendices that qualify as Secondary Sections and contain no
   material copied from the Document, you may at your option
   designate some or all of these sections as invariant. To do
   this, add their titles to the list of Invariant Sections in the
   Modified Version's license notice. These titles must be
   distinct from any other section titles.

   You may add a section entitled "Endorsements", provided it
   contains nothing but endorsements of your Modified Version by
   various parties--for example, statements of peer review or that
   the text has been approved by an organization as the
   authoritative definition of a standard.

   You may add a passage of up to five words as a Front-Cover
   Text, and a passage of up to 25 words as a Back-Cover Text, to
   the end of the list of Cover Texts in the Modified Version.
   Only one passage of Front-Cover Text and one of Back-Cover Text
   may be added by (or through arrangements made by) any one
   entity. If the Document already includes a cover text for the
   same cover, previously added by you or by arrangement made by
   the same entity you are acting on behalf of, you may not add
   another; but you may replace the old one, on explicit
   permission from the previous publisher that added the old one.

   The author(s) and publisher(s) of the Document do not by this
   License give permission to use their names for publicity for or
   to assert or imply endorsement of any Modified Version.
     __________________________________________________________

B.6. COMBINING DOCUMENTS

   You may combine the Document with other documents released
   under this License, under the terms defined in section 4 above
   for modified versions, provided that you include in the
   combination all of the Invariant Sections of all of the
   original documents, unmodified, and list them all as Invariant
   Sections of your combined work in its license notice.

   The combined work need only contain one copy of this License,
   and multiple identical Invariant Sections may be replaced with
   a single copy. If there are multiple Invariant Sections with
   the same name but different contents, make the title of each
   such section unique by adding at the end of it, in parentheses,
   the name of the original author or publisher of that section if
   known, or else a unique number. Make the same adjustment to the
   section titles in the list of Invariant Sections in the license
   notice of the combined work.

   In the combination, you must combine any sections entitled
   "History" in the various original documents, forming one
   section entitled "History"; likewise combine any sections
   entitled "Acknowledgements", and any sections entitled
   "Dedications". You must delete all sections entitled
   "Endorsements."
     __________________________________________________________

B.7. COLLECTIONS OF DOCUMENTS

   You may make a collection consisting of the Document and other
   documents released under this License, and replace the
   individual copies of this License in the various documents with
   a single copy that is included in the collection, provided that
   you follow the rules of this License for verbatim copying of
   each of the documents in all other respects.

   You may extract a single document from such a collection, and
   distribute it individually under this License, provided you
   insert a copy of this License into the extracted document, and
   follow this License in all other respects regarding verbatim
   copying of that document.
     __________________________________________________________

B.8. AGGREGATION WITH INDEPENDENT WORKS

   A compilation of the Document or its derivatives with other
   separate and independent documents or works, in or on a volume
   of a storage or distribution medium, does not as a whole count
   as a Modified Version of the Document, provided no compilation
   copyright is claimed for the compilation. Such a compilation is
   called an "aggregate", and this License does not apply to the
   other self-contained works thus compiled with the Document, on
   account of their being thus compiled, if they are not
   themselves derivative works of the Document.

   If the Cover Text requirement of section 3 is applicable to
   these copies of the Document, then if the Document is less than
   one quarter of the entire aggregate, the Document's Cover Texts
   may be placed on covers that surround only the Document within
   the aggregate. Otherwise they must appear on covers around the
   whole aggregate.
     __________________________________________________________

B.9. TRANSLATION

   Translation is considered a kind of modification, so you may
   distribute translations of the Document under the terms of
   section 4. Replacing Invariant Sections with translations
   requires special permission from their copyright holders, but
   you may include translations of some or all Invariant Sections
   in addition to the original versions of these Invariant
   Sections. You may include a translation of this License
   provided that you also include the original English version of
   this License. In case of a disagreement between the translation
   and the original English version of this License, the original
   English version will prevail.
     __________________________________________________________

B.10. TERMINATION

   You may not copy, modify, sublicense, or distribute the
   Document except as expressly provided for under this License.
   Any other attempt to copy, modify, sublicense or distribute the
   Document is void, and will automatically terminate your rights
   under this License. However, parties who have received copies,
   or rights, from you under this License will not have their
   licenses terminated so long as such parties remain in full
   compliance.
     __________________________________________________________

B.11. FUTURE REVISIONS OF THIS LICENSE

   The Free Software Foundation may publish new, revised versions
   of the GNU Free Documentation License from time to time. Such
   new versions will be similar in spirit to the present version,
   but may differ in detail to address new problems or concerns.
   See http://www.gnu.org/copyleft/.

   Each version of the License is given a distinguishing version
   number. If the Document specifies that a particular numbered
   version of this License "or any later version" applies to it,
   you have the option of following the terms and conditions
   either of that specified version or of any later version that
   has been published (not as a draft) by the Free Software
   Foundation. If the Document does not specify a version number
   of this License, you may choose any version ever published (not
   as a draft) by the Free Software Foundation.
     __________________________________________________________

B.12. How to use this License for your documents

   To use this License in a document you have written, include a
   copy of the License in the document and put the following
   copyright and license notices just after the title page:

     Copyright (c) YEAR YOUR NAME. Permission is granted to copy,
     distribute and/or modify this document under the terms of
     the GNU Free Documentation License, Version 1.1 or any later
     version published by the Free Software Foundation; with the
     Invariant Sections being LIST THEIR TITLES, with the
     Front-Cover Texts being LIST, and with the Back-Cover Texts
     being LIST. A copy of the license is included in the section
     entitled "GNU Free Documentation License".

   If you have no Invariant Sections, write "with no Invariant
   Sections" instead of saying which ones are invariant. If you
   have no Front-Cover Texts, write "no Front-Cover Texts" instead
   of "Front-Cover Texts being LIST"; likewise for Back-Cover
   Texts.

   If your document contains nontrivial examples of program code,
   we recommend releasing these examples in parallel under your
   choice of free software license, such as the GNU General Public
   License, to permit their use in free software.
